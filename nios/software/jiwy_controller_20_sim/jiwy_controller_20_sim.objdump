
jiwy_controller_20_sim.elf:     file format elf32-littlenios2
jiwy_controller_20_sim.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x00007654 memsz 0x00007654 flags r-x
    LOAD off    0x00008674 vaddr 0x00017674 paddr 0x00017be4 align 2**12
         filesz 0x00000570 memsz 0x00000570 flags rw-
    LOAD off    0x00009154 vaddr 0x00018154 paddr 0x00018154 align 2**12
         filesz 0x00000000 memsz 0x00000188 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00006ae4  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000a10  00016c64  00016c64  00007c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000570  00017674  00017be4  00008674  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000188  00018154  00018154  00009154  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  000182dc  000182dc  00008be4  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00008be4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000b50  00000000  00000000  00008c18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00020e50  00000000  00000000  00009768  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000b978  00000000  00000000  0002a5b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0000f483  00000000  00000000  00035f30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00001bc0  00000000  00000000  000453b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00009c58  00000000  00000000  00046f74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000a95a  00000000  00000000  00050bcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000010  00000000  00000000  0005b528  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001e50  00000000  00000000  0005b538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  00064523  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00064526  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00064529  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006452a  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006452b  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006452f  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00064533  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00064537  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00064540  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00064549  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000013  00000000  00000000  00064552  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002a  00000000  00000000  00064565  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
00016c64 l    d  .rodata	00000000 .rodata
00017674 l    d  .rwdata	00000000 .rwdata
00018154 l    d  .bss	00000000 .bss
000182dc l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/gteho/Repositories/EMSYS-LAB/nios/software/jiwy_controller_20_sim_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 xxinteg.cpp
00000000 l    df *ABS*	00000000 PositionControllerPan.cpp
00010248 l     F .text	000000f0 .LTHUNK2
00010588 l     F .text	000004e4 _ZN21PositionControllerPanC4Ev
00010a84 l     F .text	00000198 _ZN21PositionControllerPanD4Ev
00010c28 l     F .text	0000000c .LTHUNK0
00010c4c l     F .text	0000002c .LTHUNK1
00000000 l    df *ABS*	00000000 PositionControllerTilt.cpp
00010ecc l     F .text	00000104 .LTHUNK2
00011218 l     F .text	000004e4 _ZN22PositionControllerTiltC4Ev
00011714 l     F .text	00000198 _ZN22PositionControllerTiltD4Ev
000118b8 l     F .text	0000000c .LTHUNK0
000118dc l     F .text	0000002c .LTHUNK1
00000000 l    df *ABS*	00000000 main.cpp
00011c94 l     F .text	0000011c _GLOBAL__sub_I_uart
00000000 l    df *ABS*	00000000 encoder.cpp
00000000 l    df *ABS*	00000000 motor.cpp
00000000 l    df *ABS*	00000000 uart.cpp
0001218c l     F .text	0000000c _GLOBAL__sub_I__ZN6Serial4UART10uart_readyE
00012198 l     F .text	0000000c _GLOBAL__sub_D__ZN6Serial4UART10uart_readyE
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 del_opv.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
00012450 l     F .text	00000090 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
000124e0 l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
000126c8 l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
00012738 l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00012864 l     F .text	00000110 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
000132e8 l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 function_type_info.cc
00000000 l    df *ABS*	00000000 new_opv.cc
00000000 l    df *ABS*	00000000 pointer_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 functional.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
00014380 l     F .text	000000cc _ZN12_GLOBAL__N_14pool4freeEPv.constprop.0
000181cc l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
0001444c l     F .text	00000090 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.0
000145fc l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
00018164 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 fundamental_type_info.cc
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 pbase_type_info.cc
00017ba8 l     O .rwdata	00000008 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE3pmf
00017ba4 l     O .rwdata	00000004 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE2pm
00000000 l    df *ABS*	00000000 pmem_type_info.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_aux_runtime.cc
00000000 l    df *ABS*	00000000 new_handler.cc
0001816c l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 bad_array_new.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 unwind-sjlj.c
00014f48 l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
00018170 l     O .bss	00000004 fc_static
0001505c l     F .text	000000d8 _Unwind_RaiseException_Phase2
00015134 l     F .text	0000002c uw_install_context.constprop.0.isra.0
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 fvwrite_small_dev.c
00000000 l    df *ABS*	00000000 impure.c
00017674 l     O .rwdata	000000e4 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_kill.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00017bc0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00015f24 l     F .text	00000014 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00017784 l     O .rwdata	0000002c jtag_uart
00017758 l     O .rwdata	0000002c uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000160d8 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00016330 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000164a8 l     F .text	00000078 alt_open_fd.constprop.0
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00018190 g     O .bss	00000004 alt_instruction_exception_handler
00010398 g     F .text	00000140 _ZN21PositionControllerPan5ResetEf
00014564 g     F .text	00000028 __cxa_free_exception
000138ac g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
00016d50  w    O .rodata	00000018 _ZTI22PositionControllerTilt
000173e0  w    O .rodata	00000010 _ZTIPKDs
00013274 g     F .text	00000014 _ZSt10unexpectedv
00011f38 g     F .text	00000098 _ZN6Serial4UART10uart_0_isrEPv
00017b8c  w    O .rwdata	00000008 _ZTIw
00017b6c  w    O .rwdata	00000008 _ZTIc
00015e70 g     F .text	00000060 alt_main
0001572c g     F .text	00000080 _puts_r
000181dc g     O .bss	00000100 alt_irq
00014898 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
00017b64  w    O .rwdata	00000008 _ZTIa
000134e8 g     F .text	00000004 _Znaj
00010ebc  w    F .text	00000004 _ZN13Submodel20sim16CalculateDynamicEv
00010234 g     F .text	00000014 _ZN8DiscreteC2Ev
000111dc g     F .text	00000004 _ZN22PositionControllerTilt14CalculateFinalEv
000151e0 g     F .text	00000020 .hidden _Unwind_GetIPInfo
00017be4 g       *ABS*	00000000 __flash_rwdata_start
00017270  w    O .rodata	00000010 _ZTIPy
00017a08  w    O .rwdata	00000002 _ZTSa
00017030  w    O .rodata	00000014 _ZTVSt17bad_function_call
00013414 g     F .text	00000084 __cxa_rethrow
00016cbc  w    O .rodata	00000018 _ZTS21PositionControllerPan
00010234 g     F .text	00000014 _ZN8DiscreteC1Ev
00015178 g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
000132b8 g     F .text	00000024 _ZSt14set_unexpectedPFvvE
00017300  w    O .rodata	00000010 _ZTIPKi
000151d0 g     F .text	00000010 .hidden _Unwind_GetIP
000182dc g       *ABS*	00000000 __alt_heap_start
00017a48  w    O .rwdata	00000003 _ZTSPj
00015a50 g     F .text	00000044 _kill_r
00014d48 g     F .text	00000010 _ZNSt9bad_allocD2Ev
00011f24 g     F .text	00000014 _ZN5Plant5MotorC2Emm
00015854 g     F .text	00000078 _signal_r
00017a6c  w    O .rwdata	00000003 _ZTSPx
00017b74  w    O .rwdata	00000008 _ZTIDi
00017acc  w    O .rwdata	00000005 _ZTSPKDd
00017a60  w    O .rwdata	00000003 _ZTSPm
00010ec4  w    F .text	00000008 _ZN13Submodel20simD0Ev
000145d0 g     F .text	0000002c __cxa_free_dependent_exception
00011ef8 g     F .text	00000018 _ZN5Plant5Motor13setSecondWordEm
000135e0 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
00016f08  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
00010ecc g     F .text	00000104 _ZN22PositionControllerTilt16CalculateDynamicEv
00015ed4 g     F .text	00000004 __malloc_unlock
000179d4  w    O .rwdata	00000005 _ZTSPKDu
00017510  w    O .rodata	00000024 _ZTVN10__cxxabiv129__pointer_to_member_type_infoE
00014898 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
00014094 g     F .text	00000264 _ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
0001482c g     F .text	00000020 _ZSt18uncaught_exceptionv
00011b4c g     F .text	000000a0 _Z17handleUartMessageRN6Serial10rx_messageE
0001212c g     F .text	00000010 _ZN6Serial4UART14convertToArrayENS_10tx_messageE
00010524 g     F .text	00000004 _ZN21PositionControllerPan14CalculateInputEv
00014d30 g     F .text	0000000c __cxa_deleted_virtual
000171f0  w    O .rodata	00000010 _ZTIPDn
00017a44  w    O .rwdata	00000002 _ZTSj
00014868 g     F .text	00000004 _ZNSt9exceptionD2Ev
00016eb4  w    O .rodata	00000024 _ZTSN10__cxxabiv119__pointer_type_infoE
000134f4 g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD1Ev
000175e8  w    O .rodata	0000000c _ZTISt8bad_cast
000170f0  w    O .rodata	00000014 _ZTVSt13bad_exception
000167f4 g     F .text	00000008 altera_nios2_gen2_irq_init
000179f0  w    O .rwdata	00000004 _ZTSPDi
00016c64  w    O .rodata	00000014 _ZTS17IntegrationMethod
00014e58 g     F .text	00000010 _ZNSt20bad_array_new_lengthD1Ev
000179b4  w    O .rwdata	00000002 _ZTSb
00010000 g     F .entry	0000000c __reset
00017a04  w    O .rwdata	00000004 _ZTSPKc
0001521c g     F .text	00000008 .hidden _Unwind_GetRegionStart
00017a7c  w    O .rwdata	00000004 _ZTSPKy
000179bc  w    O .rwdata	00000004 _ZTSPKb
00010020 g       *ABS*	00000000 __flash_exceptions_start
00017320  w    O .rodata	00000010 _ZTIPKt
00017a0c  w    O .rwdata	00000003 _ZTSPa
0001817c g     O .bss	00000004 errno
0001815e g     O .bss	00000004 _ZN6Serial4UART7rx_dataE
000179b0  w    O .rwdata	00000004 _ZTSPKv
00016d68  w    O .rodata	00000034 _ZTV22PositionControllerTilt
000153e4 g     F .text	00000088 .hidden _Unwind_Backtrace
00017440  w    O .rodata	00000010 _ZTIPKb
00018188 g     O .bss	00000004 alt_argv
0001f958 g       *ABS*	00000000 _gp
00014f10 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
000148d0 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD1Ev
0001819c g     O .bss	00000010 pan_motor
00014ebc g     F .text	00000038 _ZNSt8bad_castD0Ev
00015bfc g     F .text	00000008 getpid
0001300c g     F .text	0000017c __cxa_call_unexpected
000146b8 g     F .text	00000008 __cxa_get_exception_ptr
00017a58  w    O .rwdata	00000004 _ZTSPKl
000177b0 g     O .rwdata	00000180 alt_fd_list
000149b0 g     F .text	00000038 _ZN10__cxxabiv117__pbase_type_infoD0Ev
000172d0  w    O .rodata	00000010 _ZTIPl
00015304 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
000151a0 g     F .text	00000018 .hidden _Unwind_GetCFA
00017b4c  w    O .rwdata	00000008 _ZTIt
00013288 g     F .text	00000024 _ZSt13set_terminatePFvvE
000167fc g     F .text	00000070 alt_find_dev
0001549c g     F .text	00000028 memcpy
000179ac  w    O .rwdata	00000003 _ZTSPv
0001458c g     F .text	00000044 __cxa_allocate_dependent_exception
00011a50 g     F .text	000000fc _ZN22PositionControllerTilt9CalculateEPfS0_
000181bc g     O .bss	00000010 _ZN6Serial4UART8callbackE
0001221c g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
00016520 g     F .text	00000064 alt_io_redirect
00016c64 g       *ABS*	00000000 __DTOR_END__
00011c24  w    F .text	0000000c _ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_
000174d4  w    O .rodata	0000002e _ZTSN10__cxxabiv129__pointer_to_member_type_infoE
00017470  w    O .rodata	00000010 _ZTIPv
00012234 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
000157ac g     F .text	0000000c puts
00017b94  w    O .rwdata	00000008 _ZTIb
00016fc0  w    O .rodata	0000000c _ZTIN10__cxxabiv121__vmi_class_type_infoE
000174a4  w    O .rodata	0000000c _ZTIN10__cxxabiv117__pbase_type_infoE
00016438 g     F .text	00000070 alt_exception_cause_generated_bad_addr
000179f4  w    O .rwdata	00000005 _ZTSPKDi
000172c0  w    O .rodata	00000010 _ZTIPKl
00013504 g     F .text	00000038 _ZN10__cxxabiv119__pointer_type_infoD0Ev
00014e58 g     F .text	00000010 _ZNSt20bad_array_new_lengthD2Ev
00016050 g     F .text	00000058 altera_avalon_jtag_uart_read
00015484 g     F .text	0000000c malloc
00017590  w    O .rodata	00000019 _ZTSSt20bad_array_new_length
00011908 g     F .text	00000018 _ZTv0_n16_N22PositionControllerTiltD0Ev
0001051c g     F .text	00000004 _ZN21PositionControllerPan16CalculateInitialEv
000158cc g     F .text	000000b4 _raise_r
000171e0  w    O .rodata	00000010 _ZTIPKDn
00010338 g     F .text	00000018 _ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv
00017a30  w    O .rwdata	00000003 _ZTSPt
00011fd0 g     F .text	0000015c _ZN6Serial4UARTC1ESt8functionIFvRNS_10rx_messageEEE
000148e0 g     F .text	00000038 _ZN10__cxxabiv123__fundamental_type_infoD0Ev
00011ecc g     F .text	00000008 _ZN5Plant7EncoderC1Em
00015a94 g     F .text	00000004 _getpid_r
0001484c g     F .text	0000001c _ZSt19uncaught_exceptionsv
000144dc g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
00013908 g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD1Ev
00017aec  w    O .rwdata	00000008 _ZTIDd
000122e8 g     F .text	0000009c _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
00017a94  w    O .rwdata	00000004 _ZTSPKd
00015980 g     F .text	000000a0 __sigtramp_r
000157b8 g     F .text	00000040 _sbrk_r
00014870 g     F .text	0000000c _ZGTtNKSt9exception4whatEv
00016f78  w    O .rodata	00000020 _ZTVSt9type_info
00016cd4  w    O .rodata	00000018 _ZTI21PositionControllerPan
000149a0 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD1Ev
00014870 g     F .text	0000000c _ZNKSt9exception4whatEv
00017a64  w    O .rwdata	00000004 _ZTSPKm
00017bc4 g     O .rwdata	00000004 alt_max_fd
000173d0  w    O .rodata	00000010 _ZTIPDi
00017554  w    O .rodata	0000000c _ZTISt9bad_alloc
00017250  w    O .rodata	00000010 _ZTIPf
00016ee4  w    O .rodata	00000024 _ZTVN10__cxxabiv119__pointer_type_infoE
000171b0  w    O .rodata	00000010 _ZTIPDd
00017024  w    O .rodata	0000000c _ZTISt17bad_function_call
00010c34 g     F .text	00000018 _ZTv0_n16_N21PositionControllerPanD1Ev
00016f3c  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
00016c78  w    O .rodata	0000000a _ZTS8Discrete
00014eac g     F .text	00000010 _ZNSt8bad_castD1Ev
0001227c g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
0001054c g     F .text	00000004 _ZN21PositionControllerPan14CalculateFinalEv
0001437c g     F .text	00000004 _ZdlPv
00017bb4 g     O .rwdata	00000004 _global_impure_ptr
00013918 g     F .text	00000038 _ZN10__cxxabiv121__vmi_class_type_infoD0Ev
000182dc g       *ABS*	00000000 __bss_end
00014e40 g     F .text	0000000c _ZSt15get_new_handlerv
00017a78  w    O .rwdata	00000003 _ZTSPy
000179cc  w    O .rwdata	00000003 _ZTSDu
00015c90 g     F .text	00000068 alt_iic_isr_register
00017a40  w    O .rwdata	00000004 _ZTSPKi
00017450  w    O .rodata	00000010 _ZTIPb
0001673c g     F .text	000000b8 alt_tick
00015160 g     F .text	00000018 .hidden _Unwind_SjLj_Register
0001546c g     F .text	00000018 abort
00018158 g     O .bss	00000004 tilt_encoder
000118c4 g     F .text	00000018 _ZTv0_n16_N22PositionControllerTiltD1Ev
00011170 g     F .text	0000000c _ZN22PositionControllerTilt10IsFinishedEv
00017b1c  w    O .rwdata	00000008 _ZTIy
00017180  w    O .rodata	00000010 _ZTIPKDe
00014778 g     F .text	000000b4 __cxa_end_catch
00015c78 g     F .text	00000018 alt_ic_irq_enabled
0001486c g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
00016cec  w    O .rodata	00000014 _ZTV13Submodel20sim
00017240  w    O .rodata	00000010 _ZTIPKf
00011920 g     F .text	00000130 _ZN22PositionControllerTilt10InitializeEPfS0_f
0001670c g     F .text	00000030 alt_alarm_stop
000118dc g     F .text	0000002c _ZN22PositionControllerTiltD0Ev
00017230  w    O .rodata	00000010 _ZTIPd
00018180 g     O .bss	00000004 alt_irq_active
000101d0 g     F .text	00000004 _ZN8Discrete9TerminateEv
00013250 g     F .text	00000014 _ZSt9terminatev
00017a20  w    O .rwdata	00000002 _ZTSs
00017aa8  w    O .rwdata	00000004 _ZTSPDn
00010000 g       *ABS*	00000000 __alt_mem_onchip_mem
000174b0  w    O .rodata	00000024 _ZTVN10__cxxabiv117__pbase_type_infoE
000100fc g     F .exceptions	00000060 alt_irq_handler
00011c30  w    F .text	00000064 _ZNSt14_Function_baseD2Ev
00017930 g     O .rwdata	00000028 alt_dev_null
00013950 g     F .text	00000128 _ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
00017a3c  w    O .rwdata	00000003 _ZTSPi
000148a4 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
00017a84  w    O .rwdata	00000003 _ZTSPf
00017420  w    O .rodata	00000010 _ZTIPKw
00017a90  w    O .rwdata	00000003 _ZTSPd
00017ab8  w    O .rwdata	00000004 _ZTSPDf
00016e04  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
0001632c g     F .text	00000004 alt_dcache_flush_all
00017b24  w    O .rwdata	00000008 _ZTIx
000179c4  w    O .rwdata	00000003 _ZTSPw
0001798c  w    O .rwdata	00000008 _ZTISt9exception
00017ac4  w    O .rwdata	00000003 _ZTSDd
00017abc  w    O .rwdata	00000005 _ZTSPKDf
00010350 g     F .text	00000024 _ZN21PositionControllerPan21CopyInputsToVariablesEPf
00017a5c  w    O .rwdata	00000002 _ZTSm
00017be4 g       *ABS*	00000000 __ram_rwdata_end
00017310  w    O .rodata	00000010 _ZTIPi
000138a8 g     F .text	00000004 _ZNSt9type_infoD1Ev
00017bc8 g     O .rwdata	00000008 alt_dev_list
000148a4 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
00015f38 g     F .text	00000090 write
000134b0 g     F .text	00000038 _ZN10__cxxabiv120__function_type_infoD0Ev
000179e0  w    O .rwdata	00000004 _ZTSPDs
000138bc g     F .text	00000008 _ZNSt9type_infoD0Ev
00016c84  w    O .rodata	0000000c _ZTI8Discrete
00017674 g       *ABS*	00000000 __ram_rodata_end
00012448 g     F .text	00000004 _ZdlPvj
00017b14  w    O .rwdata	00000008 _ZTIf
00015cf8 g     F .text	000000f4 kill
00017a54  w    O .rwdata	00000003 _ZTSPl
00013498 g     F .text	00000008 _ZNK10__cxxabiv120__function_type_info15__is_function_pEv
000179e4  w    O .rwdata	00000005 _ZTSPKDs
00017350  w    O .rodata	00000010 _ZTIPs
000138b4 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
000179dc  w    O .rwdata	00000003 _ZTSDs
00017a70  w    O .rwdata	00000004 _ZTSPKx
00013350 g     F .text	00000064 __cxa_init_primary_exception
00010a78 g     F .text	0000000c _ZN21PositionControllerPanC1Ev
000132ac g     F .text	0000000c _ZSt13get_terminatev
000182dc g       *ABS*	00000000 end
00017ab4  w    O .rwdata	00000003 _ZTSDf
00014304 g     F .text	00000010 _ZNSt17bad_function_callD2Ev
000118b8 g     F .text	0000000c _ZN22PositionControllerTiltD1Ev
000179fc  w    O .rwdata	00000002 _ZTSc
000161f4 g     F .text	00000084 altera_avalon_uart_write
000153cc g     F .text	00000018 .hidden _Unwind_DeleteException
0001117c g     F .text	00000038 _ZN22PositionControllerTilt9TerminateEPfS0_
00017a4c  w    O .rwdata	00000004 _ZTSPKj
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00012384 g     F .text	000000c4 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
00013908 g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD2Ev
00016c51 g       *ABS*	00000000 __CTOR_LIST__
0001a000 g       *ABS*	00000000 __alt_stack_pointer
000172b0  w    O .rodata	00000010 _ZTIPm
00016114 g     F .text	00000048 alt_avalon_timer_sc_init
0001616c g     F .text	00000010 altera_avalon_uart_write_fd
000121a4 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
000160a8 g     F .text	00000030 altera_avalon_jtag_uart_write
00010374 g     F .text	00000024 _ZN21PositionControllerPan22CopyVariablesToOutputsEPf
00017078  w    O .rodata	00000012 _ZTSSt13bad_exception
00017a14  w    O .rwdata	00000002 _ZTSh
00014e4c g     F .text	0000000c _ZNKSt20bad_array_new_length4whatEv
000154e4 g     F .text	000000f8 _free_r
00014ea0 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
00011708 g     F .text	0000000c _ZN22PositionControllerTiltC1Ev
00018154 g     O .bss	00000004 pan_encoder
00016ad0 g     F .text	00000128 __call_exitprocs
00010180 g     F .text	0000003c _start
00018198 g     O .bss	00000004 _alt_tick_rate
00011f24 g     F .text	00000014 _ZN5Plant5MotorC1Emm
00016f68  w    O .rodata	0000000d _ZTSSt9type_info
000149a0 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD2Ev
00014d3c g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
00014d24 g     F .text	0000000c __cxa_pure_virtual
000101bc g     F .text	00000004 _ZN8DiscreteD2Ev
00017560  w    O .rodata	00000014 _ZTVSt9bad_alloc
00018194 g     O .bss	00000004 _alt_nticks
00015a2c g     F .text	00000010 signal
00015fe8 g     F .text	00000048 alt_sys_init
000179b8  w    O .rwdata	00000003 _ZTSPb
00017b7c  w    O .rwdata	00000008 _ZTIDs
00017370  w    O .rodata	00000010 _ZTIPh
00017430  w    O .rodata	00000010 _ZTIPw
00017628  w    O .rodata	0000000c _ZTISt10bad_typeid
000169c0 g     F .text	00000110 __register_exitproc
000175b8  w    O .rodata	00000014 _ZTVSt20bad_array_new_length
00017544  w    O .rodata	0000000d _ZTSSt9bad_alloc
0001487c g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
00013628 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
00017b5c  w    O .rwdata	00000008 _ZTIh
00017280  w    O .rodata	00000010 _ZTIPKx
00011ed4 g     F .text	0000000c _ZN5Plant7Encoder8readDataEv
00017674 g       *ABS*	00000000 __ram_rwdata_start
0001523c g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
00016c64 g       *ABS*	00000000 __ram_rodata_start
00015348 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
00017118  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
00017b3c  w    O .rwdata	00000008 _ZTIj
00014e68 g     F .text	00000038 _ZNSt20bad_array_new_lengthD0Ev
00017b0c  w    O .rwdata	00000008 _ZTId
00014df8 g     F .text	00000034 __cxa_throw_bad_array_new_length
000138a8 g     F .text	00000004 _ZNSt9type_infoD2Ev
00017aa4  w    O .rwdata	00000003 _ZTSDn
000148a8 g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
00014c44 g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD2Ev
00013824 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
000172e0  w    O .rodata	00000010 _ZTIPKj
00016f98  w    O .rodata	00000026 _ZTSN10__cxxabiv121__vmi_class_type_infoE
00010dc0 g     F .text	000000fc _ZN21PositionControllerPan9CalculateEPfS0_
000134ec g     F .text	00000008 _ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv
00017154  w    O .rodata	0000000c _ZTIN10__cxxabiv123__fundamental_type_infoE
00016030 g     F .text	00000010 altera_avalon_jtag_uart_read_fd
00016908 g     F .text	00000054 alt_get_fd
00017aac  w    O .rwdata	00000005 _ZTSPKDn
0001799c  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
00016e88  w    O .rodata	0000000c _ZTIN10__cxxabiv120__function_type_infoE
00017a88  w    O .rwdata	00000004 _ZTSPKf
000101c0 g     F .text	00000010 _ZN8Discrete10InitializeEP13Submodel20sim
00017a10  w    O .rwdata	00000004 _ZTSPKa
00016990 g     F .text	00000030 memcmp
000182dc g       *ABS*	00000000 __alt_stack_base
00014d58 g     F .text	00000038 _ZNSt9bad_allocD0Ev
000135e0 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
000148d0 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD2Ev
000111e0 g     F .text	00000038 _ZN22PositionControllerTilt13SetFinishTimeEf
000111c0 g     F .text	0000001c _ZN22PositionControllerTilt15CalculateOutputEv
000179d0  w    O .rwdata	00000004 _ZTSPDu
0001538c g     F .text	00000040 .hidden _Unwind_SjLj_Resume_or_Rethrow
000175dc  w    O .rodata	0000000c _ZTSSt8bad_cast
000138ac g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
000134f4 g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD2Ev
00011ecc g     F .text	00000008 _ZN5Plant7EncoderC2Em
00010fe8 g     F .text	0000002c _ZN22PositionControllerTilt21CopyInputsToVariablesEPf
00017978  w    O .rwdata	00000008 _ZTIFvRN6Serial10rx_messageEE
000170dc  w    O .rodata	00000014 _ZTVSt9exception
0001489c g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
0001686c g     F .text	0000009c alt_find_file
00016338 g     F .text	0000006c alt_dev_llist_insert
00015ed0 g     F .text	00000004 __malloc_lock
00015ed8 g     F .text	0000004c sbrk
00014c54 g     F .text	00000038 _ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
00016e34  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
000133b4 g     F .text	00000060 __cxa_throw
00015200 g     F .text	00000010 .hidden _Unwind_SetIP
00016dd8  w    O .rodata	0000001b _ZTSPFvRN6Serial10rx_messageEE
000171d0  w    O .rodata	00000010 _ZTIPDf
000104d8 g     F .text	0000000c _ZN21PositionControllerPan10IsFinishedEv
00017b44  w    O .rwdata	00000008 _ZTIi
00017260  w    O .rodata	00000010 _ZTIPKy
00015af8 g     F .text	000000a8 __sfvwrite_small_dev
00017410  w    O .rodata	00000010 _ZTIPDu
00018154 g       *ABS*	00000000 __bss_start
000154c4 g     F .text	00000020 memset
00011db0 g     F .text	0000011c main
00017a98  w    O .rwdata	00000002 _ZTSe
00018162 g     O .bss	00000001 _ZN6Serial4UART10uart_readyE
00018184 g     O .bss	00000004 alt_envp
00017634  w    O .rodata	00000014 _ZTVSt10bad_typeid
00010ec0  w    F .text	00000004 _ZN13Submodel20simD2Ev
00016040 g     F .text	00000010 altera_avalon_jtag_uart_write_fd
00017b04  w    O .rwdata	00000008 _ZTIe
000148b0 g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
000148b8 g     F .text	0000000c __cxa_get_globals_fast
00016dbc  w    O .rodata	0000001a _ZTSFvRN6Serial10rx_messageEE
00014348 g     F .text	00000034 _ZSt25__throw_bad_function_callv
000175f4  w    O .rodata	00000014 _ZTVSt8bad_cast
0001244c g     F .text	00000004 _ZdaPv
0001a000 g       *ABS*	00000000 __alt_heap_limit
00017a80  w    O .rwdata	00000002 _ZTSf
00014ef4 g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
000173a0  w    O .rodata	00000010 _ZTIPKc
000155dc g     F .text	00000150 _malloc_r
000142f8 g     F .text	0000000c _ZNKSt17bad_function_call4whatEv
000172a0  w    O .rodata	00000010 _ZTIPKm
0001487c g     F .text	0000000c _ZNKSt13bad_exception4whatEv
00017bd8 g     O .rwdata	00000004 alt_errno
00017970  w    O .rwdata	00000008 _ZTT22PositionControllerTilt
00015a3c g     F .text	00000008 _init_signal
00016e28  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
000173c0  w    O .rodata	00000010 _ZTIPKDi
000118ac g     F .text	0000000c _ZN22PositionControllerTiltD2Ev
0001486c g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
000175ac  w    O .rodata	0000000c _ZTISt20bad_array_new_length
00014c44 g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
00017200  w    O .rodata	00000010 _ZTIPKe
00016c60 g       *ABS*	00000000 __CTOR_END__
00011c30  w    F .text	00000064 _ZNSt14_Function_baseD1Ev
00017968  w    O .rwdata	00000008 _ZTT21PositionControllerPan
00010c1c g     F .text	0000000c _ZN21PositionControllerPanD2Ev
000179ec  w    O .rwdata	00000003 _ZTSDi
0001815d g     O .bss	00000001 _ZN6Serial4UART6rx_lenE
00015a98 g     F .text	00000044 strcmp
00017340  w    O .rodata	00000010 _ZTIPKs
000173b0  w    O .rodata	00000010 _ZTIPc
00017afc  w    O .rwdata	00000008 _ZTIDn
00016c64 g       *ABS*	00000000 __flash_rodata_start
00017104  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
00016c60 g       *ABS*	00000000 __DTOR_LIST__
00017af4  w    O .rwdata	00000008 _ZTIDf
00014eac g     F .text	00000010 _ZNSt8bad_castD2Ev
00017a9c  w    O .rwdata	00000003 _ZTSPe
000179c0  w    O .rwdata	00000002 _ZTSw
00015fc8 g     F .text	00000020 alt_irq_init
00017a00  w    O .rwdata	00000003 _ZTSPc
000166e0 g     F .text	0000002c alt_release_fd
000135f0 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
000149e8 g     F .text	0000025c _ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj
000171c0  w    O .rodata	00000010 _ZTIPKDf
00017adc  w    O .rwdata	00000005 _ZTSPKDe
0001695c g     F .text	00000014 atexit
00015ba0 g     F .text	00000048 _write_r
00014d90 g     F .text	00000034 __cxa_bad_cast
00015234 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
00016fcc  w    O .rodata	0000002c _ZTVN10__cxxabiv121__vmi_class_type_infoE
00014660 g     F .text	00000058 __cxa_call_terminate
00016d34  w    O .rodata	00000019 _ZTS22PositionControllerTilt
00017b2c  w    O .rwdata	00000008 _ZTIm
00017bb8 g     O .rwdata	00000004 _impure_ptr
00017994  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
00016e94  w    O .rodata	00000020 _ZTVN10__cxxabiv120__function_type_infoE
0001818c g     O .bss	00000004 alt_argc
00017160  w    O .rodata	00000020 _ZTVN10__cxxabiv123__fundamental_type_infoE
000163ec g     F .text	00000048 _do_dtors
00011bec  w    F .text	00000038 _ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
00017504  w    O .rodata	0000000c _ZTIN10__cxxabiv129__pointer_to_member_type_infoE
000111bc g     F .text	00000004 _ZN22PositionControllerTilt14CalculateInputEv
00017400  w    O .rodata	00000010 _ZTIPKDu
00010528 g     F .text	00000024 _ZN21PositionControllerPan15CalculateOutputEv
000132dc g     F .text	0000000c _ZSt14get_unexpectedv
00010020 g       .exceptions	00000000 alt_irq_entry
00017ad4  w    O .rwdata	00000003 _ZTSDe
00015224 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
00017380  w    O .rodata	00000010 _ZTIPKa
00017bd0 g     O .rwdata	00000008 alt_fs_list
000170b8  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
00017b84  w    O .rwdata	00000008 _ZTIDu
000172f0  w    O .rodata	00000010 _ZTIPj
00015210 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
00017ad8  w    O .rwdata	00000004 _ZTSPDe
000146c0 g     F .text	000000b8 __cxa_begin_catch
00017a1c  w    O .rwdata	00000004 _ZTSPKh
00011fd0 g     F .text	0000015c _ZN6Serial4UARTC2ESt8functionIFvRNS_10rx_messageEEE
00012234 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
00013264 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
00017460  w    O .rodata	00000010 _ZTIPKv
00017aa0  w    O .rwdata	00000004 _ZTSPKe
00014314 g     F .text	00000034 _ZNSt17bad_function_callD0Ev
00010020 g       *ABS*	00000000 __ram_exceptions_start
0001700c  w    O .rodata	00000016 _ZTSSt17bad_function_call
000179a8  w    O .rwdata	00000002 _ZTSv
00014304 g     F .text	00000010 _ZNSt17bad_function_callD1Ev
00010c78 g     F .text	00000018 _ZTv0_n16_N21PositionControllerPanD0Ev
00014890 g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
000179a4 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
00017a2c  w    O .rwdata	00000002 _ZTSt
0001353c g     F .text	000000a4 _ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00017330  w    O .rodata	00000010 _ZTIPt
00017960  w    O .rwdata	00000008 _ZTI13Submodel20sim
00015c04 g     F .text	00000004 alt_ic_isr_register
0001450c g     F .text	00000058 __cxa_allocate_exception
00017220  w    O .rodata	00000010 _ZTIPKd
00010ec0  w    F .text	00000004 _ZN13Submodel20simD1Ev
00016f30  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
00017360  w    O .rodata	00000010 _ZTIPKh
00014e2c g     F .text	00000014 _ZSt15set_new_handlerPFvvE
00017be4 g       *ABS*	00000000 _edata
0001615c g     F .text	00000010 altera_avalon_uart_read_fd
000182dc g       *ABS*	00000000 _end
00017bb0 g     O .rwdata	00000001 _ZSt7nothrow
00013a78 g     F .text	0000061c _ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
00012974 g     F .text	00000698 __gxx_personality_sj0
00010180 g       *ABS*	00000000 __ram_exceptions_end
00017a38  w    O .rwdata	00000002 _ZTSi
00010248 g     F .text	000000f0 _ZN21PositionControllerPan16CalculateDynamicEv
000101d4 g     F .text	00000058 _ZN8Discrete4StepEv
00017a74  w    O .rwdata	00000002 _ZTSy
00014868 g     F .text	00000004 _ZNSt9exceptionD1Ev
000111b8 g     F .text	00000004 _ZN22PositionControllerTilt15CalculateStaticEv
00017480  w    O .rodata	00000022 _ZTSN10__cxxabiv117__pbase_type_infoE
00011014 g     F .text	0000001c _ZN22PositionControllerTilt22CopyVariablesToOutputsEPf
00015c40 g     F .text	00000038 alt_ic_irq_disable
00017a50  w    O .rwdata	00000002 _ZTSl
00014918 g     F .text	00000070 _Znwj
00017b9c  w    O .rwdata	00000008 _ZTIv
00017a24  w    O .rwdata	00000003 _ZTSPs
00016d00  w    O .rodata	00000034 _ZTV21PositionControllerPan
00016970 g     F .text	00000020 exit
000151b8 g     F .text	00000018 .hidden _Unwind_SetGR
00013788 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
00013188 g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
00016e60  w    O .rodata	00000025 _ZTSN10__cxxabiv120__function_type_infoE
00014d48 g     F .text	00000010 _ZNSt9bad_allocD1Ev
00011f10 g     F .text	00000014 _ZN5Plant5Motor4stopEv
0001a000 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
0001815c g     O .bss	00000001 uart
00017a8c  w    O .rwdata	00000002 _ZTSd
00017b34  w    O .rwdata	00000008 _ZTIl
00017ac8  w    O .rwdata	00000004 _ZTSPDd
0001708c  w    O .rodata	0000000c _ZTISt13bad_exception
00017190  w    O .rodata	00000010 _ZTIPDe
000101bc g     F .text	00000004 _ZN8DiscreteD1Ev
00016cac  w    O .rodata	00000010 _ZTS13Submodel20sim
00014988  w    F .text	00000018 _ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj
000134a0 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD2Ev
00017290  w    O .rodata	00000010 _ZTIPx
00015be8 g     F .text	00000014 _exit
00016c90  w    O .rodata	0000001c _ZTV8Discrete
00015188 g     F .text	00000018 .hidden _Unwind_GetGR
000148c4 g     F .text	0000000c __cxa_get_globals
00017980 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
00015adc g     F .text	0000001c strlen
00010fd0 g     F .text	00000018 _ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv
00010520 g     F .text	00000004 _ZN21PositionControllerPan15CalculateStaticEv
000157f8 g     F .text	0000005c _init_signal_r
00017984  w    O .rwdata	00000008 _ZTISt9type_info
00016584 g     F .text	0000015c open
00017210  w    O .rodata	00000010 _ZTIPe
000148b4 g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
00017068  w    O .rodata	0000000d _ZTSSt9exception
00018174 g     O .bss	00000004 __malloc_sbrk_start
000111b4 g     F .text	00000004 _ZN22PositionControllerTilt16CalculateInitialEv
00017618  w    O .rodata	0000000f _ZTSSt10bad_typeid
00017ae4  w    O .rwdata	00000008 _ZTIDe
000181ac g     O .bss	00000010 tilt_motor
00014dc4 g     F .text	00000034 __cxa_bad_typeid
00014888 g     F .text	00000008 _ZNSt9exceptionD0Ev
00011ee0 g     F .text	00000018 _ZN5Plant5Motor12setFrequencyEm
00016434 g     F .text	00000004 alt_icache_flush_all
00010c28 g     F .text	0000000c _ZN21PositionControllerPanD1Ev
00010a6c g     F .text	0000000c _ZN21PositionControllerPanC2Ev
000104e4 g     F .text	00000038 _ZN21PositionControllerPan9TerminateEPfS0_
00017a68  w    O .rwdata	00000002 _ZTSx
00014f00 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
0001522c g     F .text	00000008 .hidden _Unwind_GetDataRelBase
00017bbc g     O .rwdata	00000004 alt_priority_mask
00018178 g     O .bss	00000004 __malloc_free_list
00015c08 g     F .text	00000038 alt_ic_irq_enable
00017b54  w    O .rwdata	00000008 _ZTIs
0001617c g     F .text	00000078 altera_avalon_uart_read
00017390  w    O .rodata	00000010 _ZTIPa
000179c8  w    O .rwdata	00000004 _ZTSPKw
00010c90 g     F .text	00000130 _ZN21PositionControllerPan10InitializeEPfS0_f
000134a0 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD1Ev
00014f00 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
000173f0  w    O .rodata	00000010 _ZTIPDs
000171a0  w    O .rodata	00000010 _ZTIPKDd
00017bdc g     O .rwdata	00000008 alt_alarm_list
0001712c  w    O .rodata	00000028 _ZTSN10__cxxabiv123__fundamental_type_infoE
000163a4 g     F .text	00000048 _do_ctors
00015a44 g     F .text	0000000c __sigtramp
0001022c g     F .text	00000008 _ZN8DiscreteD0Ev
00016ed8  w    O .rodata	0000000c _ZTIN10__cxxabiv119__pointer_type_infoE
00016278 g     F .text	000000b4 close
00017a18  w    O .rwdata	00000003 _ZTSPh
00011030 g     F .text	00000140 _ZN22PositionControllerTilt5ResetEf
00017098  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
00015dec g     F .text	00000084 alt_load
00017958  w    O .rwdata	00000008 _ZTI17IntegrationMethod
000138c4 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
00017a28  w    O .rwdata	00000004 _ZTSPKs
00014c8c g     F .text	00000098 _ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00010c4c g     F .text	0000002c _ZN21PositionControllerPanD0Ev
00015a20 g     F .text	0000000c raise
00017a34  w    O .rwdata	00000004 _ZTSPKt
00015490 g     F .text	0000000c free
00012244 g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
0001213c g     F .text	00000050 _ZN6Serial4UART8sendDataENS_10tx_messageE
00016df4  w    O .rodata	00000010 _ZTIPFvRN6Serial10rx_messageEE
000116fc g     F .text	0000000c _ZN22PositionControllerTiltC2Ev
00010550 g     F .text	00000038 _ZN21PositionControllerPan13SetFinishTimeEf



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
   10108:	0009313a 	rdctl	r4,ipending
   1010c:	040000b4 	movhi	r16,2
   10110:	84207704 	addi	r16,r16,-32292
   10114:	0005883a 	mov	r2,zero
   10118:	00c00044 	movi	r3,1
   1011c:	20ca703a 	and	r5,r4,r3
   10120:	28000b26 	beq	r5,zero,10150 <alt_irq_handler+0x54>
   10124:	100490fa 	slli	r2,r2,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0009313a 	rdctl	r4,ipending
   1013c:	203ff51e 	bne	r4,zero,10114 <alt_irq_handler+0x18>
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
   10150:	1806907a 	slli	r3,r3,1
   10154:	10800044 	addi	r2,r2,1
   10158:	003ff006 	br	1011c <alt_irq_handler+0x20>

0001015c <alt_instruction_exception_entry>:
   1015c:	d0a20e17 	ldw	r2,-30664(gp)
   10160:	200b883a 	mov	r5,r4
   10164:	10000326 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   10174:	003da03a 	break	0
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	dee80014 	ori	sp,sp,40960
    movhi gp, %hi(_gp)
   10188:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
   1018c:	d6be5614 	ori	gp,gp,63832
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10a05514 	ori	r2,r2,33108

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18e0b714 	ori	r3,r3,33500

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	0015dec0 	call	15dec <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	0015e700 	call	15e70 <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <alt_after_alt_main>

000101bc <_ZN8DiscreteD1Ev>:
	model = NULL;
}

Discrete::~Discrete(void)
{
}
   101bc:	f800283a 	ret

000101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>:
/*
 * the initialization of the Discrete integration method
 */
void Discrete::Initialize (Submodel20sim* themodel)
{
	model = themodel;
   101c0:	21400115 	stw	r5,4(r4)
	model->m_major = true;
   101c4:	00800044 	movi	r2,1
   101c8:	28800145 	stb	r2,5(r5)
}
   101cc:	f800283a 	ret

000101d0 <_ZN8Discrete9TerminateEv>:

/* the termination of the Discrete integration method */
void Discrete::Terminate ()
{
	/* nothing to be done */
}
   101d0:	f800283a 	ret

000101d4 <_ZN8Discrete4StepEv>:
void Discrete::Step ()
{
	XXInteger index;

	/* for each of the supplied states */
	for (index = 0; index < model->m_number_states; index++)
   101d4:	21000117 	ldw	r4,4(r4)
   101d8:	0005883a 	mov	r2,zero
   101dc:	21c00a17 	ldw	r7,40(r4)
   101e0:	11c0090e 	bge	r2,r7,10208 <_ZN8Discrete4StepEv+0x34>
	{
		/* just a move of the new state */
		model->m_s [index] = model->m_R [index];
   101e4:	100c90ba 	slli	r6,r2,2
   101e8:	21401317 	ldw	r5,76(r4)
   101ec:	20c01217 	ldw	r3,72(r4)
	for (index = 0; index < model->m_number_states; index++)
   101f0:	10800044 	addi	r2,r2,1
		model->m_s [index] = model->m_R [index];
   101f4:	298b883a 	add	r5,r5,r6
   101f8:	29400017 	ldw	r5,0(r5)
   101fc:	1987883a 	add	r3,r3,r6
   10200:	19400015 	stw	r5,0(r3)
	for (index = 0; index < model->m_number_states; index++)
   10204:	003ff606 	br	101e0 <_ZN8Discrete4StepEv+0xc>
	}

	/* increment the simulation time */
	model->m_time += model->m_step_size;
   10208:	20800517 	ldw	r2,20(r4)
   1020c:	20c00217 	ldw	r3,8(r4)
   10210:	10c5ff72 	custom	253,r2,r2,r3
   10214:	20800515 	stw	r2,20(r4)
	model->m_major = true;
   10218:	00800044 	movi	r2,1
   1021c:	20800145 	stb	r2,5(r4)

	/* evaluate the dynamic part to calculate the new rates */
	model->CalculateDynamic ();
   10220:	20800017 	ldw	r2,0(r4)
   10224:	10800017 	ldw	r2,0(r2)
   10228:	1000683a 	jmp	r2

0001022c <_ZN8DiscreteD0Ev>:
}
   1022c:	01400204 	movi	r5,8
   10230:	00124481 	jmpi	12448 <_ZdlPvj>

00010234 <_ZN8DiscreteC1Ev>:
Discrete::Discrete(void)
   10234:	00800074 	movhi	r2,1
   10238:	109b2604 	addi	r2,r2,27800
   1023c:	20800015 	stw	r2,0(r4)
	model = NULL;
   10240:	20000115 	stw	zero,4(r4)
}
   10244:	f800283a 	ret

00010248 <_ZN21PositionControllerPan16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerPan::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10248:	20800017 	ldw	r2,0(r4)
   1024c:	10bffd17 	ldw	r2,-12(r2)
   10250:	2089883a 	add	r4,r4,r2
   10254:	21400f17 	ldw	r5,60(r4)
   10258:	20c01117 	ldw	r3,68(r4)

	/* corrGain\corr = corrGain\K * Splitter1\input; */
	m_V[0] = m_P[0] * m_V[5];

	/* PID1\error = PlusMinus1\plus1 - Splitter1\input; */
	m_R[1] = m_V[3] - m_V[5];
   1025c:	22801317 	ldw	r10,76(r4)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10260:	29800317 	ldw	r6,12(r5)
   10264:	28800217 	ldw	r2,8(r5)
	m_V[5] = m_V[8];
   10268:	19c00817 	ldw	r7,32(r3)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   1026c:	22c01217 	ldw	r11,72(r4)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10270:	1185ff32 	custom	252,r2,r2,r6
   10274:	21800217 	ldw	r6,8(r4)
	m_V[5] = m_V[8];
   10278:	19c00515 	stw	r7,20(r3)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   1027c:	1185ff72 	custom	253,r2,r2,r6
   10280:	018fe034 	movhi	r6,16256
   10284:	3085fff2 	custom	255,r2,r6,r2
	m_V[3] = m_V[7];
   10288:	19800717 	ldw	r6,28(r3)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   1028c:	18800215 	stw	r2,8(r3)
	m_V[3] = m_V[7];
   10290:	19800315 	stw	r6,12(r3)
	m_V[0] = m_P[0] * m_V[5];
   10294:	28800017 	ldw	r2,0(r5)
   10298:	11c5ff32 	custom	252,r2,r2,r7
   1029c:	18800015 	stw	r2,0(r3)
	m_R[1] = m_V[3] - m_V[5];
   102a0:	31cfffb2 	custom	254,r7,r6,r7
   102a4:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   102a8:	2a400217 	ldw	r9,8(r5)
   102ac:	58800017 	ldw	r2,0(r11)
   102b0:	2a000317 	ldw	r8,12(r5)
   102b4:	29800117 	ldw	r6,4(r5)
   102b8:	4885ff32 	custom	252,r2,r9,r2
   102bc:	1205ff32 	custom	252,r2,r2,r8
   102c0:	5a000117 	ldw	r8,4(r11)
   102c4:	4993ff32 	custom	252,r9,r9,r6
   102c8:	3a11ffb2 	custom	254,r8,r7,r8
   102cc:	4251ff32 	custom	252,r8,r8,r9
   102d0:	1205ff72 	custom	253,r2,r2,r8
   102d4:	22000217 	ldw	r8,8(r4)
   102d8:	320dff32 	custom	252,r6,r6,r8
   102dc:	31cdff32 	custom	252,r6,r6,r7
   102e0:	1185ff72 	custom	253,r2,r2,r6
   102e4:	19800217 	ldw	r6,8(r3)
   102e8:	1185ff32 	custom	252,r2,r2,r6
   102ec:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   102f0:	21000217 	ldw	r4,8(r4)
   102f4:	29800417 	ldw	r6,16(r5)
   102f8:	1109ff32 	custom	252,r4,r2,r4
   102fc:	2189fff2 	custom	255,r4,r4,r6
   10300:	59800217 	ldw	r6,8(r11)
   10304:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[1] = m_R[2] + m_R[0];
   10308:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   1030c:	51000215 	stw	r4,8(r10)
	m_V[1] = m_R[2] + m_R[0];
   10310:	18800115 	stw	r2,4(r3)

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10314:	29000517 	ldw	r4,20(r5)
   10318:	110df9f2 	custom	231,r6,r2,r4
   1031c:	3000041e 	bne	r6,zero,10330 <_ZN21PositionControllerPan16CalculateDynamicEv+0xe8>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) */
		((m_V[1] > m_P[6]) ? 
   10320:	29000617 	ldw	r4,24(r5)
   10324:	110bf972 	custom	229,r5,r2,r4
   10328:	2800011e 	bne	r5,zero,10330 <_ZN21PositionControllerPan16CalculateDynamicEv+0xe8>
   1032c:	1009883a 	mov	r4,r2
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10330:	19000415 	stw	r4,16(r3)
			/* PID1\output */
			m_V[1]
		)
	);

}
   10334:	f800283a 	ret

00010338 <_ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10338:	2009883a 	mov	r4,r4
   1033c:	20800017 	ldw	r2,0(r4)
   10340:	10bffd04 	addi	r2,r2,-12
   10344:	10800017 	ldw	r2,0(r2)
   10348:	2089883a 	add	r4,r4,r2
   1034c:	00102481 	jmpi	10248 <_ZN21PositionControllerPan16CalculateDynamicEv>

00010350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>:
	m_V[7] = u[0];		/* in */
   10350:	20800017 	ldw	r2,0(r4)
   10354:	28c00017 	ldw	r3,0(r5)
   10358:	10bffd17 	ldw	r2,-12(r2)
   1035c:	2089883a 	add	r4,r4,r2
   10360:	20801117 	ldw	r2,68(r4)
   10364:	10c00715 	stw	r3,28(r2)
	m_V[8] = u[1];		/* position */
   10368:	28c00117 	ldw	r3,4(r5)
   1036c:	10c00815 	stw	r3,32(r2)
}
   10370:	f800283a 	ret

00010374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[6];		/* corr */
   10374:	20800017 	ldw	r2,0(r4)
   10378:	10bffd17 	ldw	r2,-12(r2)
   1037c:	2089883a 	add	r4,r4,r2
   10380:	20801117 	ldw	r2,68(r4)
   10384:	10c00617 	ldw	r3,24(r2)
   10388:	28c00015 	stw	r3,0(r5)
	y[1] = 	m_V[9];		/* out */
   1038c:	10800917 	ldw	r2,36(r2)
   10390:	28800115 	stw	r2,4(r5)
}
   10394:	f800283a 	ret

00010398 <_ZN21PositionControllerPan5ResetEf>:
	m_start_time = starttime;
   10398:	20800017 	ldw	r2,0(r4)
{
   1039c:	defffe04 	addi	sp,sp,-8
	m_step_size = 0.01;
   103a0:	00cf0934 	movhi	r3,15396
	m_start_time = starttime;
   103a4:	10bffd17 	ldw	r2,-12(r2)
{
   103a8:	dfc00115 	stw	ra,4(sp)
   103ac:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   103b0:	2085883a 	add	r2,r4,r2
{
   103b4:	2021883a 	mov	r16,r4
	m_step_size = 0.01;
   103b8:	18f5c284 	addi	r3,r3,-10486
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103bc:	11000e17 	ldw	r4,56(r2)
	m_step_size = 0.01;
   103c0:	10c00215 	stw	r3,8(r2)
	m_major = true;
   103c4:	00c00044 	movi	r3,1
   103c8:	10c00145 	stb	r3,5(r2)
	m_start_time = starttime;
   103cc:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   103d0:	11400515 	stw	r5,20(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103d4:	01800104 	movi	r6,4
   103d8:	000b883a 	mov	r5,zero
	m_stop_run = false;
   103dc:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103e0:	00154c40 	call	154c4 <memset>
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   103e4:	80800017 	ldw	r2,0(r16)
   103e8:	01800804 	movi	r6,32
   103ec:	000b883a 	mov	r5,zero
   103f0:	10bffd17 	ldw	r2,-12(r2)
   103f4:	8085883a 	add	r2,r16,r2
   103f8:	11000f17 	ldw	r4,60(r2)
   103fc:	00154c40 	call	154c4 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   10400:	80800017 	ldw	r2,0(r16)
   10404:	01800404 	movi	r6,16
   10408:	000b883a 	mov	r5,zero
   1040c:	10bffd17 	ldw	r2,-12(r2)
   10410:	8085883a 	add	r2,r16,r2
   10414:	11001017 	ldw	r4,64(r2)
   10418:	00154c40 	call	154c4 <memset>
	memset(m_V, 0, (10 + 1) * sizeof(XXDouble));
   1041c:	80800017 	ldw	r2,0(r16)
   10420:	01800b04 	movi	r6,44
   10424:	000b883a 	mov	r5,zero
   10428:	10bffd17 	ldw	r2,-12(r2)
   1042c:	8085883a 	add	r2,r16,r2
   10430:	11001117 	ldw	r4,68(r2)
   10434:	00154c40 	call	154c4 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   10438:	80800017 	ldw	r2,0(r16)
   1043c:	01800404 	movi	r6,16
   10440:	000b883a 	mov	r5,zero
   10444:	10bffd17 	ldw	r2,-12(r2)
   10448:	8085883a 	add	r2,r16,r2
   1044c:	11001217 	ldw	r4,72(r2)
   10450:	00154c40 	call	154c4 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   10454:	80800017 	ldw	r2,0(r16)
   10458:	01800404 	movi	r6,16
   1045c:	000b883a 	mov	r5,zero
   10460:	10bffd17 	ldw	r2,-12(r2)
   10464:	8085883a 	add	r2,r16,r2
   10468:	11001317 	ldw	r4,76(r2)
   1046c:	00154c40 	call	154c4 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   10470:	80800017 	ldw	r2,0(r16)
   10474:	01800104 	movi	r6,4
   10478:	000b883a 	mov	r5,zero
   1047c:	10bffd17 	ldw	r2,-12(r2)
   10480:	8085883a 	add	r2,r16,r2
   10484:	11001417 	ldw	r4,80(r2)
   10488:	00154c40 	call	154c4 <memset>
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   1048c:	80800017 	ldw	r2,0(r16)
   10490:	01800104 	movi	r6,4
   10494:	000b883a 	mov	r5,zero
   10498:	10bffd17 	ldw	r2,-12(r2)
   1049c:	8085883a 	add	r2,r16,r2
   104a0:	11001517 	ldw	r4,84(r2)
   104a4:	00154c40 	call	154c4 <memset>
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   104a8:	80800017 	ldw	r2,0(r16)
   104ac:	01800104 	movi	r6,4
   104b0:	000b883a 	mov	r5,zero
   104b4:	10bffd17 	ldw	r2,-12(r2)
   104b8:	8085883a 	add	r2,r16,r2
   104bc:	11001617 	ldw	r4,88(r2)
   104c0:	00154c40 	call	154c4 <memset>
	state = initialrun;
   104c4:	80000115 	stw	zero,4(r16)
}
   104c8:	dfc00117 	ldw	ra,4(sp)
   104cc:	dc000017 	ldw	r16,0(sp)
   104d0:	dec00204 	addi	sp,sp,8
   104d4:	f800283a 	ret

000104d8 <_ZN21PositionControllerPan10IsFinishedEv>:
	return (state == finished);
   104d8:	20800117 	ldw	r2,4(r4)
   104dc:	108000a0 	cmpeqi	r2,r2,2
}
   104e0:	f800283a 	ret

000104e4 <_ZN21PositionControllerPan9TerminateEPfS0_>:
{
   104e4:	defffd04 	addi	sp,sp,-12
   104e8:	dc400115 	stw	r17,4(sp)
   104ec:	dc000015 	stw	r16,0(sp)
   104f0:	dfc00215 	stw	ra,8(sp)
   104f4:	2021883a 	mov	r16,r4
   104f8:	3023883a 	mov	r17,r6
	CopyInputsToVariables (u);
   104fc:	00103500 	call	10350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>
	CopyVariablesToOutputs (y);
   10500:	880b883a 	mov	r5,r17
   10504:	8009883a 	mov	r4,r16
}
   10508:	dfc00217 	ldw	ra,8(sp)
   1050c:	dc400117 	ldw	r17,4(sp)
   10510:	dc000017 	ldw	r16,0(sp)
   10514:	dec00304 	addi	sp,sp,12
	CopyVariablesToOutputs (y);
   10518:	00103741 	jmpi	10374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>

0001051c <_ZN21PositionControllerPan16CalculateInitialEv>:
}
   1051c:	f800283a 	ret

00010520 <_ZN21PositionControllerPan15CalculateStaticEv>:
   10520:	f800283a 	ret

00010524 <_ZN21PositionControllerPan14CalculateInputEv>:
   10524:	f800283a 	ret

00010528 <_ZN21PositionControllerPan15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerPan::CalculateOutput (void)
{
	/* corr = corrGain\corr; */
	m_V[6] = m_V[0];
   10528:	20800017 	ldw	r2,0(r4)
   1052c:	10bffd17 	ldw	r2,-12(r2)
   10530:	2089883a 	add	r4,r4,r2
   10534:	20801117 	ldw	r2,68(r4)
   10538:	10c00017 	ldw	r3,0(r2)
   1053c:	10c00615 	stw	r3,24(r2)

	/* out = SignalLimiter2\output; */
	m_V[9] = m_V[4];
   10540:	10c00417 	ldw	r3,16(r2)
   10544:	10c00915 	stw	r3,36(r2)

}
   10548:	f800283a 	ret

0001054c <_ZN21PositionControllerPan14CalculateFinalEv>:
   1054c:	f800283a 	ret

00010550 <_ZN21PositionControllerPan13SetFinishTimeEf>:



bool PositionControllerPan::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   10550:	20800017 	ldw	r2,0(r4)
   10554:	10bffd17 	ldw	r2,-12(r2)
   10558:	2089883a 	add	r4,r4,r2
   1055c:	0005883a 	mov	r2,zero
   10560:	2885f9b2 	custom	230,r2,r5,r2
   10564:	1000031e 	bne	r2,zero,10574 <_ZN21PositionControllerPan13SetFinishTimeEf+0x24>
   10568:	20800517 	ldw	r2,20(r4)
   1056c:	1145f9f2 	custom	231,r2,r2,r5
   10570:	10000326 	beq	r2,zero,10580 <_ZN21PositionControllerPan13SetFinishTimeEf+0x30>
	{
		m_finish_time = newtime;
   10574:	21400415 	stw	r5,16(r4)
		return true;
   10578:	00800044 	movi	r2,1
   1057c:	f800283a 	ret
	}

	return false;
   10580:	0005883a 	mov	r2,zero
}
   10584:	f800283a 	ret

00010588 <_ZN21PositionControllerPanC4Ev>:
{
   10588:	00800074 	movhi	r2,1
   1058c:	deffed04 	addi	sp,sp,-76
   10590:	108a5d04 	addi	r2,r2,10612
   10594:	d8800a15 	stw	r2,40(sp)
   10598:	00800074 	movhi	r2,1
   1059c:	109afe04 	addi	r2,r2,27640
   105a0:	d8800b15 	stw	r2,44(sp)
   105a4:	00800074 	movhi	r2,1
   105a8:	10829004 	addi	r2,r2,2624
   105ac:	d9000015 	stw	r4,0(sp)
   105b0:	d9000404 	addi	r4,sp,16
   105b4:	d8800d15 	stw	r2,52(sp)
   105b8:	dfc01215 	stw	ra,72(sp)
   105bc:	df001115 	stw	fp,68(sp)
   105c0:	d9400115 	stw	r5,4(sp)
   105c4:	d9800215 	stw	r6,8(sp)
   105c8:	df000c15 	stw	fp,48(sp)
   105cc:	dec00e15 	stw	sp,56(sp)
   105d0:	00151600 	call	15160 <_Unwind_SjLj_Register>
PositionControllerPan::PositionControllerPan(void)
   105d4:	d8800117 	ldw	r2,4(sp)
   105d8:	10012126 	beq	r2,zero,10a60 <_ZN21PositionControllerPanC4Ev+0x4d8>
#ifndef SUBMODEL20SIM_H
#define SUBMODEL20SIM_H

#include "xxtypes.h"

class Submodel20sim
   105dc:	d8c00017 	ldw	r3,0(sp)
   105e0:	00800074 	movhi	r2,1
   105e4:	109b3d04 	addi	r2,r2,27892
   105e8:	18800415 	stw	r2,16(r3)
   105ec:	00800074 	movhi	r2,1
   105f0:	109b4304 	addi	r2,r2,27916
   105f4:	d8c00017 	ldw	r3,0(sp)
   105f8:	18800015 	stw	r2,0(r3)
   105fc:	d8c00117 	ldw	r3,4(sp)
   10600:	18005b1e 	bne	r3,zero,10770 <_ZN21PositionControllerPanC4Ev+0x1e8>
   10604:	d8c00217 	ldw	r3,8(sp)
   10608:	10bffd17 	ldw	r2,-12(r2)
   1060c:	18c00117 	ldw	r3,4(r3)
   10610:	d9000017 	ldw	r4,0(sp)
   10614:	2085883a 	add	r2,r4,r2
   10618:	10c00015 	stw	r3,0(r2)
   1061c:	20800204 	addi	r2,r4,8
   10620:	d8800215 	stw	r2,8(sp)
   10624:	d9000217 	ldw	r4,8(sp)
   10628:	00bfffc4 	movi	r2,-1
   1062c:	d8800515 	stw	r2,20(sp)
   10630:	00102340 	call	10234 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   10634:	d8800117 	ldw	r2,4(sp)
   10638:	1000511e 	bne	r2,zero,10780 <_ZN21PositionControllerPanC4Ev+0x1f8>
   1063c:	d8800017 	ldw	r2,0(sp)
   10640:	10800017 	ldw	r2,0(r2)
   10644:	10bffd17 	ldw	r2,-12(r2)
   10648:	d8c00017 	ldw	r3,0(sp)
   1064c:	1885883a 	add	r2,r3,r2
   10650:	10000615 	stw	zero,24(r2)
	m_number_parameters = 7;
   10654:	d8800117 	ldw	r2,4(sp)
   10658:	10004b1e 	bne	r2,zero,10788 <_ZN21PositionControllerPanC4Ev+0x200>
   1065c:	18800017 	ldw	r2,0(r3)
   10660:	10bffd17 	ldw	r2,-12(r2)
   10664:	d8c00017 	ldw	r3,0(sp)
   10668:	1885883a 	add	r2,r3,r2
   1066c:	00c001c4 	movi	r3,7
   10670:	10c00715 	stw	r3,28(r2)
	m_number_initialvalues = 3;
   10674:	d8800117 	ldw	r2,4(sp)
   10678:	1000451e 	bne	r2,zero,10790 <_ZN21PositionControllerPanC4Ev+0x208>
   1067c:	d8800017 	ldw	r2,0(sp)
   10680:	10800017 	ldw	r2,0(r2)
   10684:	10bffd17 	ldw	r2,-12(r2)
   10688:	d8c00017 	ldw	r3,0(sp)
   1068c:	1885883a 	add	r2,r3,r2
   10690:	00c000c4 	movi	r3,3
   10694:	10c00815 	stw	r3,32(r2)
	m_number_variables = 10;
   10698:	d8800117 	ldw	r2,4(sp)
   1069c:	10003e1e 	bne	r2,zero,10798 <_ZN21PositionControllerPanC4Ev+0x210>
   106a0:	d8800017 	ldw	r2,0(sp)
   106a4:	10800017 	ldw	r2,0(r2)
   106a8:	10bffd17 	ldw	r2,-12(r2)
   106ac:	d8c00017 	ldw	r3,0(sp)
   106b0:	1885883a 	add	r2,r3,r2
   106b4:	00c00284 	movi	r3,10
   106b8:	10c00915 	stw	r3,36(r2)
	m_number_states = 3;
   106bc:	d8800117 	ldw	r2,4(sp)
   106c0:	1000371e 	bne	r2,zero,107a0 <_ZN21PositionControllerPanC4Ev+0x218>
   106c4:	d8800017 	ldw	r2,0(sp)
   106c8:	10800017 	ldw	r2,0(r2)
   106cc:	10bffd17 	ldw	r2,-12(r2)
   106d0:	d8c00017 	ldw	r3,0(sp)
   106d4:	1885883a 	add	r2,r3,r2
   106d8:	00c000c4 	movi	r3,3
   106dc:	10c00a15 	stw	r3,40(r2)
	m_number_rates = 3;
   106e0:	d8800117 	ldw	r2,4(sp)
   106e4:	1000301e 	bne	r2,zero,107a8 <_ZN21PositionControllerPanC4Ev+0x220>
   106e8:	d8800017 	ldw	r2,0(sp)
   106ec:	10800017 	ldw	r2,0(r2)
   106f0:	10bffd17 	ldw	r2,-12(r2)
   106f4:	d8c00017 	ldw	r3,0(sp)
   106f8:	1885883a 	add	r2,r3,r2
   106fc:	00c000c4 	movi	r3,3
   10700:	10c00b15 	stw	r3,44(r2)
	m_number_matrices = 0;
   10704:	d8800117 	ldw	r2,4(sp)
   10708:	1000291e 	bne	r2,zero,107b0 <_ZN21PositionControllerPanC4Ev+0x228>
   1070c:	d8800017 	ldw	r2,0(sp)
   10710:	10800017 	ldw	r2,0(r2)
   10714:	10bffd17 	ldw	r2,-12(r2)
   10718:	d8c00017 	ldw	r3,0(sp)
   1071c:	1885883a 	add	r2,r3,r2
   10720:	10000c15 	stw	zero,48(r2)
	m_number_unnamed = 0;
   10724:	d8800117 	ldw	r2,4(sp)
   10728:	1000231e 	bne	r2,zero,107b8 <_ZN21PositionControllerPanC4Ev+0x230>
   1072c:	18800017 	ldw	r2,0(r3)
   10730:	10bffd17 	ldw	r2,-12(r2)
   10734:	d8c00017 	ldw	r3,0(sp)
   10738:	1885883a 	add	r2,r3,r2
   1073c:	10000d15 	stw	zero,52(r2)
	m_C = new XXDouble[0 + 1];		/* constants */
   10740:	d8800117 	ldw	r2,4(sp)
   10744:	10001e1e 	bne	r2,zero,107c0 <_ZN21PositionControllerPanC4Ev+0x238>
   10748:	18800017 	ldw	r2,0(r3)
   1074c:	10bffd17 	ldw	r2,-12(r2)
   10750:	d8c00017 	ldw	r3,0(sp)
   10754:	01000104 	movi	r4,4
   10758:	1885883a 	add	r2,r3,r2
   1075c:	d8800315 	stw	r2,12(sp)
   10760:	00800044 	movi	r2,1
   10764:	d8800515 	stw	r2,20(sp)
   10768:	00134e80 	call	134e8 <_Znaj>
   1076c:	00001606 	br	107c8 <_ZN21PositionControllerPanC4Ev+0x240>
PositionControllerPan::PositionControllerPan(void)
   10770:	00c00074 	movhi	r3,1
   10774:	18db4a04 	addi	r3,r3,27944
   10778:	00800404 	movi	r2,16
   1077c:	003fa406 	br	10610 <_ZN21PositionControllerPanC4Ev+0x88>
	m_number_constants = 0;
   10780:	00800404 	movi	r2,16
   10784:	003fb006 	br	10648 <_ZN21PositionControllerPanC4Ev+0xc0>
	m_number_parameters = 7;
   10788:	00800404 	movi	r2,16
   1078c:	003fb506 	br	10664 <_ZN21PositionControllerPanC4Ev+0xdc>
	m_number_initialvalues = 3;
   10790:	00800404 	movi	r2,16
   10794:	003fbc06 	br	10688 <_ZN21PositionControllerPanC4Ev+0x100>
	m_number_variables = 10;
   10798:	00800404 	movi	r2,16
   1079c:	003fc306 	br	106ac <_ZN21PositionControllerPanC4Ev+0x124>
	m_number_states = 3;
   107a0:	00800404 	movi	r2,16
   107a4:	003fca06 	br	106d0 <_ZN21PositionControllerPanC4Ev+0x148>
	m_number_rates = 3;
   107a8:	00800404 	movi	r2,16
   107ac:	003fd106 	br	106f4 <_ZN21PositionControllerPanC4Ev+0x16c>
	m_number_matrices = 0;
   107b0:	00800404 	movi	r2,16
   107b4:	003fd806 	br	10718 <_ZN21PositionControllerPanC4Ev+0x190>
	m_number_unnamed = 0;
   107b8:	00800404 	movi	r2,16
   107bc:	003fdd06 	br	10734 <_ZN21PositionControllerPanC4Ev+0x1ac>
	m_C = new XXDouble[0 + 1];		/* constants */
   107c0:	00800404 	movi	r2,16
   107c4:	003fe206 	br	10750 <_ZN21PositionControllerPanC4Ev+0x1c8>
   107c8:	d8c00317 	ldw	r3,12(sp)
   107cc:	18800e15 	stw	r2,56(r3)
	m_P = new XXDouble[7 + 1];		/* parameters */
   107d0:	d8800117 	ldw	r2,4(sp)
   107d4:	10000b1e 	bne	r2,zero,10804 <_ZN21PositionControllerPanC4Ev+0x27c>
   107d8:	d8800017 	ldw	r2,0(sp)
   107dc:	10800017 	ldw	r2,0(r2)
   107e0:	10bffd17 	ldw	r2,-12(r2)
   107e4:	d8c00017 	ldw	r3,0(sp)
   107e8:	01000804 	movi	r4,32
   107ec:	1885883a 	add	r2,r3,r2
   107f0:	d8800315 	stw	r2,12(sp)
   107f4:	00800044 	movi	r2,1
   107f8:	d8800515 	stw	r2,20(sp)
   107fc:	00134e80 	call	134e8 <_Znaj>
   10800:	00000206 	br	1080c <_ZN21PositionControllerPanC4Ev+0x284>
   10804:	00800404 	movi	r2,16
   10808:	003ff606 	br	107e4 <_ZN21PositionControllerPanC4Ev+0x25c>
   1080c:	d8c00317 	ldw	r3,12(sp)
   10810:	18800f15 	stw	r2,60(r3)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10814:	d8800117 	ldw	r2,4(sp)
   10818:	10000b1e 	bne	r2,zero,10848 <_ZN21PositionControllerPanC4Ev+0x2c0>
   1081c:	d8800017 	ldw	r2,0(sp)
   10820:	10800017 	ldw	r2,0(r2)
   10824:	10bffd17 	ldw	r2,-12(r2)
   10828:	d8c00017 	ldw	r3,0(sp)
   1082c:	01000404 	movi	r4,16
   10830:	1885883a 	add	r2,r3,r2
   10834:	d8800315 	stw	r2,12(sp)
   10838:	00800044 	movi	r2,1
   1083c:	d8800515 	stw	r2,20(sp)
   10840:	00134e80 	call	134e8 <_Znaj>
   10844:	00000206 	br	10850 <_ZN21PositionControllerPanC4Ev+0x2c8>
   10848:	00800404 	movi	r2,16
   1084c:	003ff606 	br	10828 <_ZN21PositionControllerPanC4Ev+0x2a0>
   10850:	d8c00317 	ldw	r3,12(sp)
   10854:	18801015 	stw	r2,64(r3)
	m_V = new XXDouble[10 + 1];		/* variables */
   10858:	d8800117 	ldw	r2,4(sp)
   1085c:	10000b1e 	bne	r2,zero,1088c <_ZN21PositionControllerPanC4Ev+0x304>
   10860:	d8800017 	ldw	r2,0(sp)
   10864:	10800017 	ldw	r2,0(r2)
   10868:	10bffd17 	ldw	r2,-12(r2)
   1086c:	d8c00017 	ldw	r3,0(sp)
   10870:	01000b04 	movi	r4,44
   10874:	1885883a 	add	r2,r3,r2
   10878:	d8800315 	stw	r2,12(sp)
   1087c:	00800044 	movi	r2,1
   10880:	d8800515 	stw	r2,20(sp)
   10884:	00134e80 	call	134e8 <_Znaj>
   10888:	00000206 	br	10894 <_ZN21PositionControllerPanC4Ev+0x30c>
   1088c:	00800404 	movi	r2,16
   10890:	003ff606 	br	1086c <_ZN21PositionControllerPanC4Ev+0x2e4>
   10894:	d8c00317 	ldw	r3,12(sp)
   10898:	18801115 	stw	r2,68(r3)
	m_s = new XXDouble[3 + 1];		/* states */
   1089c:	d8800117 	ldw	r2,4(sp)
   108a0:	10000b1e 	bne	r2,zero,108d0 <_ZN21PositionControllerPanC4Ev+0x348>
   108a4:	d8800017 	ldw	r2,0(sp)
   108a8:	10800017 	ldw	r2,0(r2)
   108ac:	10bffd17 	ldw	r2,-12(r2)
   108b0:	d8c00017 	ldw	r3,0(sp)
   108b4:	01000404 	movi	r4,16
   108b8:	1885883a 	add	r2,r3,r2
   108bc:	d8800315 	stw	r2,12(sp)
   108c0:	00800044 	movi	r2,1
   108c4:	d8800515 	stw	r2,20(sp)
   108c8:	00134e80 	call	134e8 <_Znaj>
   108cc:	00000206 	br	108d8 <_ZN21PositionControllerPanC4Ev+0x350>
   108d0:	00800404 	movi	r2,16
   108d4:	003ff606 	br	108b0 <_ZN21PositionControllerPanC4Ev+0x328>
   108d8:	d8c00317 	ldw	r3,12(sp)
   108dc:	18801215 	stw	r2,72(r3)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   108e0:	d8800117 	ldw	r2,4(sp)
   108e4:	10000b1e 	bne	r2,zero,10914 <_ZN21PositionControllerPanC4Ev+0x38c>
   108e8:	d8800017 	ldw	r2,0(sp)
   108ec:	10800017 	ldw	r2,0(r2)
   108f0:	10bffd17 	ldw	r2,-12(r2)
   108f4:	d8c00017 	ldw	r3,0(sp)
   108f8:	01000404 	movi	r4,16
   108fc:	1885883a 	add	r2,r3,r2
   10900:	d8800315 	stw	r2,12(sp)
   10904:	00800044 	movi	r2,1
   10908:	d8800515 	stw	r2,20(sp)
   1090c:	00134e80 	call	134e8 <_Znaj>
   10910:	00000206 	br	1091c <_ZN21PositionControllerPanC4Ev+0x394>
   10914:	00800404 	movi	r2,16
   10918:	003ff606 	br	108f4 <_ZN21PositionControllerPanC4Ev+0x36c>
   1091c:	d8c00317 	ldw	r3,12(sp)
   10920:	18801315 	stw	r2,76(r3)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10924:	d8800117 	ldw	r2,4(sp)
   10928:	10000b1e 	bne	r2,zero,10958 <_ZN21PositionControllerPanC4Ev+0x3d0>
   1092c:	d8800017 	ldw	r2,0(sp)
   10930:	10800017 	ldw	r2,0(r2)
   10934:	10bffd17 	ldw	r2,-12(r2)
   10938:	d8c00017 	ldw	r3,0(sp)
   1093c:	01000304 	movi	r4,12
   10940:	1885883a 	add	r2,r3,r2
   10944:	d8800315 	stw	r2,12(sp)
   10948:	00800044 	movi	r2,1
   1094c:	d8800515 	stw	r2,20(sp)
   10950:	00134e80 	call	134e8 <_Znaj>
   10954:	00000206 	br	10960 <_ZN21PositionControllerPanC4Ev+0x3d8>
   10958:	00800404 	movi	r2,16
   1095c:	003ff606 	br	10938 <_ZN21PositionControllerPanC4Ev+0x3b0>
   10960:	d8c00317 	ldw	r3,12(sp)
   10964:	18801415 	stw	r2,80(r3)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10968:	d8800117 	ldw	r2,4(sp)
   1096c:	10000b1e 	bne	r2,zero,1099c <_ZN21PositionControllerPanC4Ev+0x414>
   10970:	d8800017 	ldw	r2,0(sp)
   10974:	10800017 	ldw	r2,0(r2)
   10978:	10bffd17 	ldw	r2,-12(r2)
   1097c:	d8c00017 	ldw	r3,0(sp)
   10980:	01000104 	movi	r4,4
   10984:	1885883a 	add	r2,r3,r2
   10988:	d8800315 	stw	r2,12(sp)
   1098c:	00800044 	movi	r2,1
   10990:	d8800515 	stw	r2,20(sp)
   10994:	00134e80 	call	134e8 <_Znaj>
   10998:	00000206 	br	109a4 <_ZN21PositionControllerPanC4Ev+0x41c>
   1099c:	00800404 	movi	r2,16
   109a0:	003ff606 	br	1097c <_ZN21PositionControllerPanC4Ev+0x3f4>
   109a4:	d8c00317 	ldw	r3,12(sp)
   109a8:	18801515 	stw	r2,84(r3)
	m_workarray = new XXDouble[0 + 1];
   109ac:	d8800117 	ldw	r2,4(sp)
   109b0:	10000b1e 	bne	r2,zero,109e0 <_ZN21PositionControllerPanC4Ev+0x458>
   109b4:	d8800017 	ldw	r2,0(sp)
   109b8:	10800017 	ldw	r2,0(r2)
   109bc:	10bffd17 	ldw	r2,-12(r2)
   109c0:	d8c00017 	ldw	r3,0(sp)
   109c4:	01000104 	movi	r4,4
   109c8:	1885883a 	add	r2,r3,r2
   109cc:	d8800315 	stw	r2,12(sp)
   109d0:	00800044 	movi	r2,1
   109d4:	d8800515 	stw	r2,20(sp)
   109d8:	00134e80 	call	134e8 <_Znaj>
   109dc:	00000206 	br	109e8 <_ZN21PositionControllerPanC4Ev+0x460>
   109e0:	00800404 	movi	r2,16
   109e4:	003ff606 	br	109c0 <_ZN21PositionControllerPanC4Ev+0x438>
   109e8:	d8c00317 	ldw	r3,12(sp)
	Reset(0.0);
   109ec:	d9000017 	ldw	r4,0(sp)
   109f0:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   109f4:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   109f8:	00103980 	call	10398 <_ZN21PositionControllerPan5ResetEf>
	m_finish_time = 20.0;
   109fc:	d8800117 	ldw	r2,4(sp)
   10a00:	10000d1e 	bne	r2,zero,10a38 <_ZN21PositionControllerPanC4Ev+0x4b0>
   10a04:	d8800017 	ldw	r2,0(sp)
   10a08:	10800017 	ldw	r2,0(r2)
   10a0c:	10bffd17 	ldw	r2,-12(r2)
   10a10:	d8c00017 	ldw	r3,0(sp)
   10a14:	d9000404 	addi	r4,sp,16
   10a18:	1885883a 	add	r2,r3,r2
   10a1c:	00d06834 	movhi	r3,16800
   10a20:	10c00415 	stw	r3,16(r2)
   10a24:	00151780 	call	15178 <_Unwind_SjLj_Unregister>
}
   10a28:	dfc01217 	ldw	ra,72(sp)
   10a2c:	df001117 	ldw	fp,68(sp)
   10a30:	dec01304 	addi	sp,sp,76
   10a34:	f800283a 	ret
	m_finish_time = 20.0;
   10a38:	00800404 	movi	r2,16
   10a3c:	003ff406 	br	10a10 <_ZN21PositionControllerPanC4Ev+0x488>
PositionControllerPan::PositionControllerPan(void)
   10a40:	d8800617 	ldw	r2,24(sp)
   10a44:	d9000217 	ldw	r4,8(sp)
   10a48:	d8800015 	stw	r2,0(sp)
   10a4c:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   10a50:	d9000017 	ldw	r4,0(sp)
   10a54:	00bfffc4 	movi	r2,-1
   10a58:	d8800515 	stw	r2,20(sp)
   10a5c:	00153480 	call	15348 <_Unwind_SjLj_Resume>
   10a60:	d8800217 	ldw	r2,8(sp)
   10a64:	10800017 	ldw	r2,0(r2)
   10a68:	003ee206 	br	105f4 <_ZN21PositionControllerPanC4Ev+0x6c>

00010a6c <_ZN21PositionControllerPanC2Ev>:
}
   10a6c:	280d883a 	mov	r6,r5
   10a70:	000b883a 	mov	r5,zero
   10a74:	00105881 	jmpi	10588 <_ZN21PositionControllerPanC4Ev>

00010a78 <_ZN21PositionControllerPanC1Ev>:
   10a78:	000d883a 	mov	r6,zero
   10a7c:	01400044 	movi	r5,1
   10a80:	00105881 	jmpi	10588 <_ZN21PositionControllerPanC4Ev>

00010a84 <_ZN21PositionControllerPanD4Ev>:
{
   10a84:	defffd04 	addi	sp,sp,-12
   10a88:	dc400115 	stw	r17,4(sp)
   10a8c:	dc000015 	stw	r16,0(sp)
   10a90:	dfc00215 	stw	ra,8(sp)
   10a94:	2021883a 	mov	r16,r4
   10a98:	2823883a 	mov	r17,r5
PositionControllerPan::~PositionControllerPan(void)
   10a9c:	2800481e 	bne	r5,zero,10bc0 <_ZN21PositionControllerPanD4Ev+0x13c>
   10aa0:	30800017 	ldw	r2,0(r6)
   10aa4:	80800015 	stw	r2,0(r16)
   10aa8:	8800481e 	bne	r17,zero,10bcc <_ZN21PositionControllerPanD4Ev+0x148>
   10aac:	30c00117 	ldw	r3,4(r6)
   10ab0:	10bffd17 	ldw	r2,-12(r2)
   10ab4:	8085883a 	add	r2,r16,r2
	delete[] m_C;
   10ab8:	11000e17 	ldw	r4,56(r2)
PositionControllerPan::~PositionControllerPan(void)
   10abc:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   10ac0:	20000126 	beq	r4,zero,10ac8 <_ZN21PositionControllerPanD4Ev+0x44>
   10ac4:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_P;
   10ac8:	8800441e 	bne	r17,zero,10bdc <_ZN21PositionControllerPanD4Ev+0x158>
   10acc:	80800017 	ldw	r2,0(r16)
   10ad0:	10bffd17 	ldw	r2,-12(r2)
   10ad4:	8085883a 	add	r2,r16,r2
   10ad8:	11000f17 	ldw	r4,60(r2)
   10adc:	20000126 	beq	r4,zero,10ae4 <_ZN21PositionControllerPanD4Ev+0x60>
   10ae0:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_I;
   10ae4:	88003f1e 	bne	r17,zero,10be4 <_ZN21PositionControllerPanD4Ev+0x160>
   10ae8:	80800017 	ldw	r2,0(r16)
   10aec:	10bffd17 	ldw	r2,-12(r2)
   10af0:	8085883a 	add	r2,r16,r2
   10af4:	11001017 	ldw	r4,64(r2)
   10af8:	20000126 	beq	r4,zero,10b00 <_ZN21PositionControllerPanD4Ev+0x7c>
   10afc:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_V;
   10b00:	88003a1e 	bne	r17,zero,10bec <_ZN21PositionControllerPanD4Ev+0x168>
   10b04:	80800017 	ldw	r2,0(r16)
   10b08:	10bffd17 	ldw	r2,-12(r2)
   10b0c:	8085883a 	add	r2,r16,r2
   10b10:	11001117 	ldw	r4,68(r2)
   10b14:	20000126 	beq	r4,zero,10b1c <_ZN21PositionControllerPanD4Ev+0x98>
   10b18:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_s;
   10b1c:	8800351e 	bne	r17,zero,10bf4 <_ZN21PositionControllerPanD4Ev+0x170>
   10b20:	80800017 	ldw	r2,0(r16)
   10b24:	10bffd17 	ldw	r2,-12(r2)
   10b28:	8085883a 	add	r2,r16,r2
   10b2c:	11001217 	ldw	r4,72(r2)
   10b30:	20000126 	beq	r4,zero,10b38 <_ZN21PositionControllerPanD4Ev+0xb4>
   10b34:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_R;
   10b38:	8800301e 	bne	r17,zero,10bfc <_ZN21PositionControllerPanD4Ev+0x178>
   10b3c:	80800017 	ldw	r2,0(r16)
   10b40:	10bffd17 	ldw	r2,-12(r2)
   10b44:	8085883a 	add	r2,r16,r2
   10b48:	11001317 	ldw	r4,76(r2)
   10b4c:	20000126 	beq	r4,zero,10b54 <_ZN21PositionControllerPanD4Ev+0xd0>
   10b50:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_M;
   10b54:	88002b1e 	bne	r17,zero,10c04 <_ZN21PositionControllerPanD4Ev+0x180>
   10b58:	80800017 	ldw	r2,0(r16)
   10b5c:	10bffd17 	ldw	r2,-12(r2)
   10b60:	8085883a 	add	r2,r16,r2
   10b64:	11001417 	ldw	r4,80(r2)
   10b68:	20000126 	beq	r4,zero,10b70 <_ZN21PositionControllerPanD4Ev+0xec>
   10b6c:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_U;
   10b70:	8800261e 	bne	r17,zero,10c0c <_ZN21PositionControllerPanD4Ev+0x188>
   10b74:	80800017 	ldw	r2,0(r16)
   10b78:	10bffd17 	ldw	r2,-12(r2)
   10b7c:	8085883a 	add	r2,r16,r2
   10b80:	11001517 	ldw	r4,84(r2)
   10b84:	20000126 	beq	r4,zero,10b8c <_ZN21PositionControllerPanD4Ev+0x108>
   10b88:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_workarray;
   10b8c:	8800211e 	bne	r17,zero,10c14 <_ZN21PositionControllerPanD4Ev+0x190>
   10b90:	80800017 	ldw	r2,0(r16)
   10b94:	10bffd17 	ldw	r2,-12(r2)
   10b98:	8085883a 	add	r2,r16,r2
   10b9c:	11001617 	ldw	r4,88(r2)
   10ba0:	20000126 	beq	r4,zero,10ba8 <_ZN21PositionControllerPanD4Ev+0x124>
   10ba4:	001244c0 	call	1244c <_ZdaPv>
PositionControllerPan::~PositionControllerPan(void)
   10ba8:	81000204 	addi	r4,r16,8
}
   10bac:	dfc00217 	ldw	ra,8(sp)
   10bb0:	dc400117 	ldw	r17,4(sp)
   10bb4:	dc000017 	ldw	r16,0(sp)
   10bb8:	dec00304 	addi	sp,sp,12
PositionControllerPan::~PositionControllerPan(void)
   10bbc:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>
   10bc0:	00800074 	movhi	r2,1
   10bc4:	109b4304 	addi	r2,r2,27916
   10bc8:	003fb606 	br	10aa4 <_ZN21PositionControllerPanD4Ev+0x20>
   10bcc:	00c00074 	movhi	r3,1
   10bd0:	18db4a04 	addi	r3,r3,27944
   10bd4:	00800404 	movi	r2,16
   10bd8:	003fb606 	br	10ab4 <_ZN21PositionControllerPanD4Ev+0x30>
	delete[] m_P;
   10bdc:	00800404 	movi	r2,16
   10be0:	003fbc06 	br	10ad4 <_ZN21PositionControllerPanD4Ev+0x50>
	delete[] m_I;
   10be4:	00800404 	movi	r2,16
   10be8:	003fc106 	br	10af0 <_ZN21PositionControllerPanD4Ev+0x6c>
	delete[] m_V;
   10bec:	00800404 	movi	r2,16
   10bf0:	003fc606 	br	10b0c <_ZN21PositionControllerPanD4Ev+0x88>
	delete[] m_s;
   10bf4:	00800404 	movi	r2,16
   10bf8:	003fcb06 	br	10b28 <_ZN21PositionControllerPanD4Ev+0xa4>
	delete[] m_R;
   10bfc:	00800404 	movi	r2,16
   10c00:	003fd006 	br	10b44 <_ZN21PositionControllerPanD4Ev+0xc0>
	delete[] m_M;
   10c04:	00800404 	movi	r2,16
   10c08:	003fd506 	br	10b60 <_ZN21PositionControllerPanD4Ev+0xdc>
	delete[] m_U;
   10c0c:	00800404 	movi	r2,16
   10c10:	003fda06 	br	10b7c <_ZN21PositionControllerPanD4Ev+0xf8>
	delete[] m_workarray;
   10c14:	00800404 	movi	r2,16
   10c18:	003fdf06 	br	10b98 <_ZN21PositionControllerPanD4Ev+0x114>

00010c1c <_ZN21PositionControllerPanD2Ev>:
}
   10c1c:	280d883a 	mov	r6,r5
   10c20:	000b883a 	mov	r5,zero
   10c24:	0010a841 	jmpi	10a84 <_ZN21PositionControllerPanD4Ev>

00010c28 <_ZN21PositionControllerPanD1Ev>:
   10c28:	000d883a 	mov	r6,zero
   10c2c:	01400084 	movi	r5,2
   10c30:	0010a841 	jmpi	10a84 <_ZN21PositionControllerPanD4Ev>

00010c34 <_ZTv0_n16_N21PositionControllerPanD1Ev>:
		virtual ~PositionControllerPan(void);
   10c34:	2009883a 	mov	r4,r4
   10c38:	20800017 	ldw	r2,0(r4)
   10c3c:	10bffc04 	addi	r2,r2,-16
   10c40:	10800017 	ldw	r2,0(r2)
   10c44:	2089883a 	add	r4,r4,r2
   10c48:	0010c281 	jmpi	10c28 <_ZN21PositionControllerPanD1Ev>

00010c4c <_ZN21PositionControllerPanD0Ev>:
PositionControllerPan::~PositionControllerPan(void)
   10c4c:	defffe04 	addi	sp,sp,-8
   10c50:	dc000015 	stw	r16,0(sp)
   10c54:	dfc00115 	stw	ra,4(sp)
   10c58:	2021883a 	mov	r16,r4
}
   10c5c:	0010c280 	call	10c28 <_ZN21PositionControllerPanD1Ev>
   10c60:	01401b04 	movi	r5,108
   10c64:	8009883a 	mov	r4,r16
   10c68:	dfc00117 	ldw	ra,4(sp)
   10c6c:	dc000017 	ldw	r16,0(sp)
   10c70:	dec00204 	addi	sp,sp,8
   10c74:	00124481 	jmpi	12448 <_ZdlPvj>

00010c78 <_ZTv0_n16_N21PositionControllerPanD0Ev>:
   10c78:	2009883a 	mov	r4,r4
   10c7c:	20800017 	ldw	r2,0(r4)
   10c80:	10bffc04 	addi	r2,r2,-16
   10c84:	10800017 	ldw	r2,0(r2)
   10c88:	2089883a 	add	r4,r4,r2
   10c8c:	0010c4c1 	jmpi	10c4c <_ZN21PositionControllerPanD0Ev>

00010c90 <_ZN21PositionControllerPan10InitializeEPfS0_f>:
	m_initialize = true;
   10c90:	20800017 	ldw	r2,0(r4)
{
   10c94:	defffb04 	addi	sp,sp,-20
   10c98:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   10c9c:	10bffd17 	ldw	r2,-12(r2)
{
   10ca0:	dcc00315 	stw	r19,12(sp)
   10ca4:	dc800215 	stw	r18,8(sp)
   10ca8:	dc400115 	stw	r17,4(sp)
   10cac:	dc000015 	stw	r16,0(sp)
   10cb0:	2825883a 	mov	r18,r5
	m_initialize = true;
   10cb4:	208b883a 	add	r5,r4,r2
   10cb8:	00800044 	movi	r2,1
   10cbc:	28800105 	stb	r2,4(r5)
	m_P[0] = 0.0;		/* corrGain\K */
   10cc0:	28800f17 	ldw	r2,60(r5)
	m_P[1] = 2.6;		/* PID1\kp */
   10cc4:	00d009b4 	movhi	r3,16422
	m_stop_run = false;
   10cc8:	28000185 	stb	zero,6(r5)
	m_P[1] = 2.6;		/* PID1\kp */
   10ccc:	18d99984 	addi	r3,r3,26214
   10cd0:	10c00115 	stw	r3,4(r2)
	m_P[2] = 0.05;		/* PID1\tauD */
   10cd4:	00cf5374 	movhi	r3,15693
   10cd8:	18f33344 	addi	r3,r3,-13107
   10cdc:	10c00215 	stw	r3,8(r2)
	m_P[3] = 0.17;		/* PID1\beta */
   10ce0:	00cf8bb4 	movhi	r3,15918
   10ce4:	18c51ec4 	addi	r3,r3,5243
   10ce8:	10c00315 	stw	r3,12(r2)
	m_P[4] = 9.0;		/* PID1\tauI */
   10cec:	00d04434 	movhi	r3,16656
   10cf0:	10c00415 	stw	r3,16(r2)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10cf4:	00efdf74 	movhi	r3,49021
   10cf8:	18dc2904 	addi	r3,r3,28836
   10cfc:	10c00515 	stw	r3,20(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10d00:	00cfdf74 	movhi	r3,16253
   10d04:	18dc2904 	addi	r3,r3,28836
	m_P[0] = 0.0;		/* corrGain\K */
   10d08:	10000015 	stw	zero,0(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10d0c:	10c00615 	stw	r3,24(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10d10:	28801017 	ldw	r2,64(r5)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10d14:	28c01217 	ldw	r3,72(r5)
{
   10d18:	2021883a 	mov	r16,r4
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   10d1c:	10000115 	stw	zero,4(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10d20:	10000015 	stw	zero,0(r2)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   10d24:	10000215 	stw	zero,8(r2)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10d28:	18000015 	stw	zero,0(r3)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10d2c:	11000117 	ldw	r4,4(r2)
{
   10d30:	3023883a 	mov	r17,r6
   10d34:	3827883a 	mov	r19,r7
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10d38:	19000115 	stw	r4,4(r3)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10d3c:	10800217 	ldw	r2,8(r2)
	myintegmethod.Initialize(this);
   10d40:	81000204 	addi	r4,r16,8
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10d44:	18800215 	stw	r2,8(r3)
	myintegmethod.Initialize(this);
   10d48:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   10d4c:	80800017 	ldw	r2,0(r16)
	CopyInputsToVariables (u);
   10d50:	900b883a 	mov	r5,r18
   10d54:	8009883a 	mov	r4,r16
	m_time = t;
   10d58:	10bffd17 	ldw	r2,-12(r2)
   10d5c:	8085883a 	add	r2,r16,r2
   10d60:	14c00515 	stw	r19,20(r2)
	CopyInputsToVariables (u);
   10d64:	00103500 	call	10350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>
	CalculateDynamic ();
   10d68:	80800017 	ldw	r2,0(r16)
   10d6c:	8009883a 	mov	r4,r16
   10d70:	10800217 	ldw	r2,8(r2)
   10d74:	103ee83a 	callr	r2
	CalculateOutput ();
   10d78:	8009883a 	mov	r4,r16
   10d7c:	00105280 	call	10528 <_ZN21PositionControllerPan15CalculateOutputEv>
	CopyVariablesToOutputs (y);
   10d80:	880b883a 	mov	r5,r17
   10d84:	8009883a 	mov	r4,r16
   10d88:	00103740 	call	10374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>
	m_initialize = false;
   10d8c:	80800017 	ldw	r2,0(r16)
   10d90:	10bffd17 	ldw	r2,-12(r2)
   10d94:	8085883a 	add	r2,r16,r2
   10d98:	10000105 	stb	zero,4(r2)
	state = mainrun;
   10d9c:	00800044 	movi	r2,1
   10da0:	80800115 	stw	r2,4(r16)
}
   10da4:	dfc00417 	ldw	ra,16(sp)
   10da8:	dcc00317 	ldw	r19,12(sp)
   10dac:	dc800217 	ldw	r18,8(sp)
   10db0:	dc400117 	ldw	r17,4(sp)
   10db4:	dc000017 	ldw	r16,0(sp)
   10db8:	dec00504 	addi	sp,sp,20
   10dbc:	f800283a 	ret

00010dc0 <_ZN21PositionControllerPan9CalculateEPfS0_>:
	switch (state)
   10dc0:	20800117 	ldw	r2,4(r4)
   10dc4:	10000326 	beq	r2,zero,10dd4 <_ZN21PositionControllerPan9CalculateEPfS0_+0x14>
   10dc8:	10800060 	cmpeqi	r2,r2,1
   10dcc:	1000031e 	bne	r2,zero,10ddc <_ZN21PositionControllerPan9CalculateEPfS0_+0x1c>
   10dd0:	f800283a 	ret
			Initialize(u, y, 0.0);
   10dd4:	000f883a 	mov	r7,zero
   10dd8:	0010c901 	jmpi	10c90 <_ZN21PositionControllerPan10InitializeEPfS0_f>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10ddc:	20800017 	ldw	r2,0(r4)
{
   10de0:	defffd04 	addi	sp,sp,-12
   10de4:	dc400115 	stw	r17,4(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10de8:	10fffd17 	ldw	r3,-12(r2)
{
   10dec:	dc000015 	stw	r16,0(sp)
   10df0:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10df4:	20c7883a 	add	r3,r4,r3
   10df8:	18800217 	ldw	r2,8(r3)
   10dfc:	2021883a 	mov	r16,r4
   10e00:	19000417 	ldw	r4,16(r3)
   10e04:	280f883a 	mov	r7,r5
   10e08:	18c00517 	ldw	r3,20(r3)
   10e0c:	014cf5f4 	movhi	r5,13271
   10e10:	2085ffb2 	custom	254,r2,r4,r2
   10e14:	296fe544 	addi	r5,r5,-16491
   10e18:	1145ff72 	custom	253,r2,r2,r5
   10e1c:	1885f9b2 	custom	230,r2,r3,r2
   10e20:	3023883a 	mov	r17,r6
   10e24:	1000021e 	bne	r2,zero,10e30 <_ZN21PositionControllerPan9CalculateEPfS0_+0x70>
   10e28:	2089f8b2 	custom	226,r4,r4,r2
   10e2c:	2000201e 	bne	r4,zero,10eb0 <_ZN21PositionControllerPan9CalculateEPfS0_+0xf0>
				CopyInputsToVariables (u);
   10e30:	380b883a 	mov	r5,r7
   10e34:	8009883a 	mov	r4,r16
   10e38:	00103500 	call	10350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>
				myintegmethod.Step();
   10e3c:	81000204 	addi	r4,r16,8
   10e40:	00101d40 	call	101d4 <_ZN8Discrete4StepEv>
				CalculateOutput ();
   10e44:	8009883a 	mov	r4,r16
   10e48:	00105280 	call	10528 <_ZN21PositionControllerPan15CalculateOutputEv>
				CopyVariablesToOutputs (y);
   10e4c:	880b883a 	mov	r5,r17
   10e50:	8009883a 	mov	r4,r16
   10e54:	00103740 	call	10374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10e58:	80800017 	ldw	r2,0(r16)
   10e5c:	10bffd17 	ldw	r2,-12(r2)
   10e60:	8085883a 	add	r2,r16,r2
   10e64:	10c00183 	ldbu	r3,6(r2)
   10e68:	18000a1e 	bne	r3,zero,10e94 <_ZN21PositionControllerPan9CalculateEPfS0_+0xd4>
   10e6c:	10c00417 	ldw	r3,16(r2)
   10e70:	0009883a 	mov	r4,zero
   10e74:	1909f8f2 	custom	227,r4,r3,r4
   10e78:	2000081e 	bne	r4,zero,10e9c <_ZN21PositionControllerPan9CalculateEPfS0_+0xdc>
   10e7c:	10800517 	ldw	r2,20(r2)
   10e80:	010cf5f4 	movhi	r4,13271
   10e84:	212fe544 	addi	r4,r4,-16491
   10e88:	1105ff72 	custom	253,r2,r2,r4
   10e8c:	1887f9b2 	custom	230,r3,r3,r2
   10e90:	18000226 	beq	r3,zero,10e9c <_ZN21PositionControllerPan9CalculateEPfS0_+0xdc>
				state = finished;
   10e94:	00800084 	movi	r2,2
   10e98:	80800115 	stw	r2,4(r16)
}
   10e9c:	dfc00217 	ldw	ra,8(sp)
   10ea0:	dc400117 	ldw	r17,4(sp)
   10ea4:	dc000017 	ldw	r16,0(sp)
   10ea8:	dec00304 	addi	sp,sp,12
   10eac:	f800283a 	ret
				state = finished;
   10eb0:	00800084 	movi	r2,2
   10eb4:	80800115 	stw	r2,4(r16)
   10eb8:	003fe706 	br	10e58 <_ZN21PositionControllerPan9CalculateEPfS0_+0x98>

00010ebc <_ZN13Submodel20sim16CalculateDynamicEv>:
		friend class IntegrationMethod;
		friend class Discrete;
		friend class Euler;
		friend class RungeKutta2;
		friend class RungeKutta4;
		virtual void CalculateDynamic (void) {};
   10ebc:	f800283a 	ret

00010ec0 <_ZN13Submodel20simD1Ev>:
		XXDouble m_start_time;
		XXDouble m_finish_time;
		XXDouble m_time;

	public:
		virtual ~Submodel20sim(){};
   10ec0:	f800283a 	ret

00010ec4 <_ZN13Submodel20simD0Ev>:
   10ec4:	01401704 	movi	r5,92
   10ec8:	00124481 	jmpi	12448 <_ZdlPvj>

00010ecc <_ZN22PositionControllerTilt16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerTilt::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10ecc:	20800017 	ldw	r2,0(r4)
   10ed0:	10bffd17 	ldw	r2,-12(r2)
   10ed4:	2089883a 	add	r4,r4,r2
   10ed8:	21400f17 	ldw	r5,60(r4)
   10edc:	20c01117 	ldw	r3,68(r4)

	/* corrGain\output = corrGain\K * corrGain\input; */
	m_V[1] = m_P[0] * m_V[0];

	/* PID1\error = PlusMinus2\plus1 - PlusMinus2\minus1; */
	m_R[1] = m_V[5] - m_V[6];
   10ee0:	22801317 	ldw	r10,76(r4)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10ee4:	29800317 	ldw	r6,12(r5)
   10ee8:	28800217 	ldw	r2,8(r5)
	m_V[6] = m_V[10];
   10eec:	19c00a17 	ldw	r7,40(r3)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10ef0:	22c01217 	ldw	r11,72(r4)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10ef4:	1185ff32 	custom	252,r2,r2,r6
   10ef8:	21800217 	ldw	r6,8(r4)
	m_V[6] = m_V[10];
   10efc:	19c00615 	stw	r7,24(r3)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10f00:	1185ff72 	custom	253,r2,r2,r6
   10f04:	018fe034 	movhi	r6,16256
   10f08:	3085fff2 	custom	255,r2,r6,r2
   10f0c:	18800315 	stw	r2,12(r3)
	m_V[5] = m_V[9];
   10f10:	19800917 	ldw	r6,36(r3)
	m_V[0] = m_V[8];
   10f14:	18800817 	ldw	r2,32(r3)
	m_V[5] = m_V[9];
   10f18:	19800515 	stw	r6,20(r3)
	m_V[0] = m_V[8];
   10f1c:	18800015 	stw	r2,0(r3)
	m_V[1] = m_P[0] * m_V[0];
   10f20:	2a000017 	ldw	r8,0(r5)
	m_R[1] = m_V[5] - m_V[6];
   10f24:	31cfffb2 	custom	254,r7,r6,r7
	m_V[1] = m_P[0] * m_V[0];
   10f28:	4091ff32 	custom	252,r8,r8,r2
   10f2c:	1a000115 	stw	r8,4(r3)
	m_R[1] = m_V[5] - m_V[6];
   10f30:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10f34:	2a400217 	ldw	r9,8(r5)
   10f38:	58800017 	ldw	r2,0(r11)
   10f3c:	2a000317 	ldw	r8,12(r5)
   10f40:	29800117 	ldw	r6,4(r5)
   10f44:	4885ff32 	custom	252,r2,r9,r2
   10f48:	1205ff32 	custom	252,r2,r2,r8
   10f4c:	5a000117 	ldw	r8,4(r11)
   10f50:	4993ff32 	custom	252,r9,r9,r6
   10f54:	3a11ffb2 	custom	254,r8,r7,r8
   10f58:	4251ff32 	custom	252,r8,r8,r9
   10f5c:	1205ff72 	custom	253,r2,r2,r8
   10f60:	22000217 	ldw	r8,8(r4)
   10f64:	320dff32 	custom	252,r6,r6,r8
   10f68:	31cdff32 	custom	252,r6,r6,r7
   10f6c:	1185ff72 	custom	253,r2,r2,r6
   10f70:	19800317 	ldw	r6,12(r3)
   10f74:	1185ff32 	custom	252,r2,r2,r6
   10f78:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f7c:	21000217 	ldw	r4,8(r4)
   10f80:	29800417 	ldw	r6,16(r5)
   10f84:	1109ff32 	custom	252,r4,r2,r4
   10f88:	2189fff2 	custom	255,r4,r4,r6
   10f8c:	59800217 	ldw	r6,8(r11)
   10f90:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[2] = m_R[2] + m_R[0];
   10f94:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f98:	51000215 	stw	r4,8(r10)
	m_V[2] = m_R[2] + m_R[0];
   10f9c:	18800215 	stw	r2,8(r3)

	/* PlusMinus1\output = corrGain\output + PID1\output; */
	m_V[4] = m_V[1] + m_V[2];
   10fa0:	19000117 	ldw	r4,4(r3)
   10fa4:	1105ff72 	custom	253,r2,r2,r4
   10fa8:	18800415 	stw	r2,16(r3)

	/* SignalLimiter2\output = (if PlusMinus1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) end); */
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10fac:	29000517 	ldw	r4,20(r5)
   10fb0:	110df9f2 	custom	231,r6,r2,r4
   10fb4:	3000041e 	bne	r6,zero,10fc8 <_ZN22PositionControllerTilt16CalculateDynamicEv+0xfc>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) */
		((m_V[4] > m_P[6]) ? 
   10fb8:	29000617 	ldw	r4,24(r5)
   10fbc:	110bf972 	custom	229,r5,r2,r4
   10fc0:	2800011e 	bne	r5,zero,10fc8 <_ZN22PositionControllerTilt16CalculateDynamicEv+0xfc>
   10fc4:	1009883a 	mov	r4,r2
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10fc8:	19000715 	stw	r4,28(r3)
			/* PlusMinus1\output */
			m_V[4]
		)
	);

}
   10fcc:	f800283a 	ret

00010fd0 <_ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10fd0:	2009883a 	mov	r4,r4
   10fd4:	20800017 	ldw	r2,0(r4)
   10fd8:	10bffd04 	addi	r2,r2,-12
   10fdc:	10800017 	ldw	r2,0(r2)
   10fe0:	2089883a 	add	r4,r4,r2
   10fe4:	0010ecc1 	jmpi	10ecc <_ZN22PositionControllerTilt16CalculateDynamicEv>

00010fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>:
	m_V[8] = u[0];		/* corr */
   10fe8:	20800017 	ldw	r2,0(r4)
   10fec:	28c00017 	ldw	r3,0(r5)
   10ff0:	10bffd17 	ldw	r2,-12(r2)
   10ff4:	2089883a 	add	r4,r4,r2
   10ff8:	20801117 	ldw	r2,68(r4)
   10ffc:	10c00815 	stw	r3,32(r2)
	m_V[9] = u[1];		/* in */
   11000:	28c00117 	ldw	r3,4(r5)
   11004:	10c00915 	stw	r3,36(r2)
	m_V[10] = u[2];		/* position */
   11008:	28c00217 	ldw	r3,8(r5)
   1100c:	10c00a15 	stw	r3,40(r2)
}
   11010:	f800283a 	ret

00011014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[11];		/* out */
   11014:	20800017 	ldw	r2,0(r4)
   11018:	10bffd17 	ldw	r2,-12(r2)
   1101c:	2089883a 	add	r4,r4,r2
   11020:	20801117 	ldw	r2,68(r4)
   11024:	10800b17 	ldw	r2,44(r2)
   11028:	28800015 	stw	r2,0(r5)
}
   1102c:	f800283a 	ret

00011030 <_ZN22PositionControllerTilt5ResetEf>:
	m_start_time = starttime;
   11030:	20800017 	ldw	r2,0(r4)
{
   11034:	defffe04 	addi	sp,sp,-8
	m_step_size = 0.01;
   11038:	00cf0934 	movhi	r3,15396
	m_start_time = starttime;
   1103c:	10bffd17 	ldw	r2,-12(r2)
{
   11040:	dfc00115 	stw	ra,4(sp)
   11044:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   11048:	2085883a 	add	r2,r4,r2
{
   1104c:	2021883a 	mov	r16,r4
	m_step_size = 0.01;
   11050:	18f5c284 	addi	r3,r3,-10486
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   11054:	11000e17 	ldw	r4,56(r2)
	m_step_size = 0.01;
   11058:	10c00215 	stw	r3,8(r2)
	m_major = true;
   1105c:	00c00044 	movi	r3,1
   11060:	10c00145 	stb	r3,5(r2)
	m_start_time = starttime;
   11064:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   11068:	11400515 	stw	r5,20(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   1106c:	01800104 	movi	r6,4
   11070:	000b883a 	mov	r5,zero
	m_stop_run = false;
   11074:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   11078:	00154c40 	call	154c4 <memset>
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   1107c:	80800017 	ldw	r2,0(r16)
   11080:	01800804 	movi	r6,32
   11084:	000b883a 	mov	r5,zero
   11088:	10bffd17 	ldw	r2,-12(r2)
   1108c:	8085883a 	add	r2,r16,r2
   11090:	11000f17 	ldw	r4,60(r2)
   11094:	00154c40 	call	154c4 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   11098:	80800017 	ldw	r2,0(r16)
   1109c:	01800404 	movi	r6,16
   110a0:	000b883a 	mov	r5,zero
   110a4:	10bffd17 	ldw	r2,-12(r2)
   110a8:	8085883a 	add	r2,r16,r2
   110ac:	11001017 	ldw	r4,64(r2)
   110b0:	00154c40 	call	154c4 <memset>
	memset(m_V, 0, (12 + 1) * sizeof(XXDouble));
   110b4:	80800017 	ldw	r2,0(r16)
   110b8:	01800d04 	movi	r6,52
   110bc:	000b883a 	mov	r5,zero
   110c0:	10bffd17 	ldw	r2,-12(r2)
   110c4:	8085883a 	add	r2,r16,r2
   110c8:	11001117 	ldw	r4,68(r2)
   110cc:	00154c40 	call	154c4 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   110d0:	80800017 	ldw	r2,0(r16)
   110d4:	01800404 	movi	r6,16
   110d8:	000b883a 	mov	r5,zero
   110dc:	10bffd17 	ldw	r2,-12(r2)
   110e0:	8085883a 	add	r2,r16,r2
   110e4:	11001217 	ldw	r4,72(r2)
   110e8:	00154c40 	call	154c4 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   110ec:	80800017 	ldw	r2,0(r16)
   110f0:	01800404 	movi	r6,16
   110f4:	000b883a 	mov	r5,zero
   110f8:	10bffd17 	ldw	r2,-12(r2)
   110fc:	8085883a 	add	r2,r16,r2
   11100:	11001317 	ldw	r4,76(r2)
   11104:	00154c40 	call	154c4 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   11108:	80800017 	ldw	r2,0(r16)
   1110c:	01800104 	movi	r6,4
   11110:	000b883a 	mov	r5,zero
   11114:	10bffd17 	ldw	r2,-12(r2)
   11118:	8085883a 	add	r2,r16,r2
   1111c:	11001417 	ldw	r4,80(r2)
   11120:	00154c40 	call	154c4 <memset>
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   11124:	80800017 	ldw	r2,0(r16)
   11128:	01800104 	movi	r6,4
   1112c:	000b883a 	mov	r5,zero
   11130:	10bffd17 	ldw	r2,-12(r2)
   11134:	8085883a 	add	r2,r16,r2
   11138:	11001517 	ldw	r4,84(r2)
   1113c:	00154c40 	call	154c4 <memset>
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   11140:	80800017 	ldw	r2,0(r16)
   11144:	01800104 	movi	r6,4
   11148:	000b883a 	mov	r5,zero
   1114c:	10bffd17 	ldw	r2,-12(r2)
   11150:	8085883a 	add	r2,r16,r2
   11154:	11001617 	ldw	r4,88(r2)
   11158:	00154c40 	call	154c4 <memset>
	state = initialrun;
   1115c:	80000115 	stw	zero,4(r16)
}
   11160:	dfc00117 	ldw	ra,4(sp)
   11164:	dc000017 	ldw	r16,0(sp)
   11168:	dec00204 	addi	sp,sp,8
   1116c:	f800283a 	ret

00011170 <_ZN22PositionControllerTilt10IsFinishedEv>:
	return (state == finished);
   11170:	20800117 	ldw	r2,4(r4)
   11174:	108000a0 	cmpeqi	r2,r2,2
}
   11178:	f800283a 	ret

0001117c <_ZN22PositionControllerTilt9TerminateEPfS0_>:
{
   1117c:	defffd04 	addi	sp,sp,-12
   11180:	dc400115 	stw	r17,4(sp)
   11184:	dc000015 	stw	r16,0(sp)
   11188:	dfc00215 	stw	ra,8(sp)
   1118c:	2021883a 	mov	r16,r4
   11190:	3023883a 	mov	r17,r6
	CopyInputsToVariables (u);
   11194:	0010fe80 	call	10fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>
	CopyVariablesToOutputs (y);
   11198:	880b883a 	mov	r5,r17
   1119c:	8009883a 	mov	r4,r16
}
   111a0:	dfc00217 	ldw	ra,8(sp)
   111a4:	dc400117 	ldw	r17,4(sp)
   111a8:	dc000017 	ldw	r16,0(sp)
   111ac:	dec00304 	addi	sp,sp,12
	CopyVariablesToOutputs (y);
   111b0:	00110141 	jmpi	11014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>

000111b4 <_ZN22PositionControllerTilt16CalculateInitialEv>:
}
   111b4:	f800283a 	ret

000111b8 <_ZN22PositionControllerTilt15CalculateStaticEv>:
   111b8:	f800283a 	ret

000111bc <_ZN22PositionControllerTilt14CalculateInputEv>:
   111bc:	f800283a 	ret

000111c0 <_ZN22PositionControllerTilt15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerTilt::CalculateOutput (void)
{
	/* out = SignalLimiter2\output; */
	m_V[11] = m_V[7];
   111c0:	20800017 	ldw	r2,0(r4)
   111c4:	10bffd17 	ldw	r2,-12(r2)
   111c8:	2089883a 	add	r4,r4,r2
   111cc:	20801117 	ldw	r2,68(r4)
   111d0:	10c00717 	ldw	r3,28(r2)
   111d4:	10c00b15 	stw	r3,44(r2)

}
   111d8:	f800283a 	ret

000111dc <_ZN22PositionControllerTilt14CalculateFinalEv>:
   111dc:	f800283a 	ret

000111e0 <_ZN22PositionControllerTilt13SetFinishTimeEf>:



bool PositionControllerTilt::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   111e0:	20800017 	ldw	r2,0(r4)
   111e4:	10bffd17 	ldw	r2,-12(r2)
   111e8:	2089883a 	add	r4,r4,r2
   111ec:	0005883a 	mov	r2,zero
   111f0:	2885f9b2 	custom	230,r2,r5,r2
   111f4:	1000031e 	bne	r2,zero,11204 <_ZN22PositionControllerTilt13SetFinishTimeEf+0x24>
   111f8:	20800517 	ldw	r2,20(r4)
   111fc:	1145f9f2 	custom	231,r2,r2,r5
   11200:	10000326 	beq	r2,zero,11210 <_ZN22PositionControllerTilt13SetFinishTimeEf+0x30>
	{
		m_finish_time = newtime;
   11204:	21400415 	stw	r5,16(r4)
		return true;
   11208:	00800044 	movi	r2,1
   1120c:	f800283a 	ret
	}

	return false;
   11210:	0005883a 	mov	r2,zero
}
   11214:	f800283a 	ret

00011218 <_ZN22PositionControllerTiltC4Ev>:
{
   11218:	00800074 	movhi	r2,1
   1121c:	deffed04 	addi	sp,sp,-76
   11220:	108a5d04 	addi	r2,r2,10612
   11224:	d8800a15 	stw	r2,40(sp)
   11228:	00800074 	movhi	r2,1
   1122c:	109aff84 	addi	r2,r2,27646
   11230:	d8800b15 	stw	r2,44(sp)
   11234:	00800074 	movhi	r2,1
   11238:	1085b404 	addi	r2,r2,5840
   1123c:	d9000015 	stw	r4,0(sp)
   11240:	d9000404 	addi	r4,sp,16
   11244:	d8800d15 	stw	r2,52(sp)
   11248:	dfc01215 	stw	ra,72(sp)
   1124c:	df001115 	stw	fp,68(sp)
   11250:	d9400115 	stw	r5,4(sp)
   11254:	d9800215 	stw	r6,8(sp)
   11258:	df000c15 	stw	fp,48(sp)
   1125c:	dec00e15 	stw	sp,56(sp)
   11260:	00151600 	call	15160 <_Unwind_SjLj_Register>
PositionControllerTilt::PositionControllerTilt(void)
   11264:	d8800117 	ldw	r2,4(sp)
   11268:	10012126 	beq	r2,zero,116f0 <_ZN22PositionControllerTiltC4Ev+0x4d8>
#ifndef SUBMODEL20SIM_H
#define SUBMODEL20SIM_H

#include "xxtypes.h"

class Submodel20sim
   1126c:	d8c00017 	ldw	r3,0(sp)
   11270:	00800074 	movhi	r2,1
   11274:	109b3d04 	addi	r2,r2,27892
   11278:	18800415 	stw	r2,16(r3)
   1127c:	00800074 	movhi	r2,1
   11280:	109b5d04 	addi	r2,r2,28020
   11284:	d8c00017 	ldw	r3,0(sp)
   11288:	18800015 	stw	r2,0(r3)
   1128c:	d8c00117 	ldw	r3,4(sp)
   11290:	18005b1e 	bne	r3,zero,11400 <_ZN22PositionControllerTiltC4Ev+0x1e8>
   11294:	d8c00217 	ldw	r3,8(sp)
   11298:	10bffd17 	ldw	r2,-12(r2)
   1129c:	18c00117 	ldw	r3,4(r3)
   112a0:	d9000017 	ldw	r4,0(sp)
   112a4:	2085883a 	add	r2,r4,r2
   112a8:	10c00015 	stw	r3,0(r2)
   112ac:	20800204 	addi	r2,r4,8
   112b0:	d8800215 	stw	r2,8(sp)
   112b4:	d9000217 	ldw	r4,8(sp)
   112b8:	00bfffc4 	movi	r2,-1
   112bc:	d8800515 	stw	r2,20(sp)
   112c0:	00102340 	call	10234 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   112c4:	d8800117 	ldw	r2,4(sp)
   112c8:	1000511e 	bne	r2,zero,11410 <_ZN22PositionControllerTiltC4Ev+0x1f8>
   112cc:	d8800017 	ldw	r2,0(sp)
   112d0:	10800017 	ldw	r2,0(r2)
   112d4:	10bffd17 	ldw	r2,-12(r2)
   112d8:	d8c00017 	ldw	r3,0(sp)
   112dc:	1885883a 	add	r2,r3,r2
   112e0:	10000615 	stw	zero,24(r2)
	m_number_parameters = 7;
   112e4:	d8800117 	ldw	r2,4(sp)
   112e8:	10004b1e 	bne	r2,zero,11418 <_ZN22PositionControllerTiltC4Ev+0x200>
   112ec:	18800017 	ldw	r2,0(r3)
   112f0:	10bffd17 	ldw	r2,-12(r2)
   112f4:	d8c00017 	ldw	r3,0(sp)
   112f8:	1885883a 	add	r2,r3,r2
   112fc:	00c001c4 	movi	r3,7
   11300:	10c00715 	stw	r3,28(r2)
	m_number_initialvalues = 3;
   11304:	d8800117 	ldw	r2,4(sp)
   11308:	1000451e 	bne	r2,zero,11420 <_ZN22PositionControllerTiltC4Ev+0x208>
   1130c:	d8800017 	ldw	r2,0(sp)
   11310:	10800017 	ldw	r2,0(r2)
   11314:	10bffd17 	ldw	r2,-12(r2)
   11318:	d8c00017 	ldw	r3,0(sp)
   1131c:	1885883a 	add	r2,r3,r2
   11320:	00c000c4 	movi	r3,3
   11324:	10c00815 	stw	r3,32(r2)
	m_number_variables = 12;
   11328:	d8800117 	ldw	r2,4(sp)
   1132c:	10003e1e 	bne	r2,zero,11428 <_ZN22PositionControllerTiltC4Ev+0x210>
   11330:	d8800017 	ldw	r2,0(sp)
   11334:	10800017 	ldw	r2,0(r2)
   11338:	10bffd17 	ldw	r2,-12(r2)
   1133c:	d8c00017 	ldw	r3,0(sp)
   11340:	1885883a 	add	r2,r3,r2
   11344:	00c00304 	movi	r3,12
   11348:	10c00915 	stw	r3,36(r2)
	m_number_states = 3;
   1134c:	d8800117 	ldw	r2,4(sp)
   11350:	1000371e 	bne	r2,zero,11430 <_ZN22PositionControllerTiltC4Ev+0x218>
   11354:	d8800017 	ldw	r2,0(sp)
   11358:	10800017 	ldw	r2,0(r2)
   1135c:	10bffd17 	ldw	r2,-12(r2)
   11360:	d8c00017 	ldw	r3,0(sp)
   11364:	1885883a 	add	r2,r3,r2
   11368:	00c000c4 	movi	r3,3
   1136c:	10c00a15 	stw	r3,40(r2)
	m_number_rates = 3;
   11370:	d8800117 	ldw	r2,4(sp)
   11374:	1000301e 	bne	r2,zero,11438 <_ZN22PositionControllerTiltC4Ev+0x220>
   11378:	d8800017 	ldw	r2,0(sp)
   1137c:	10800017 	ldw	r2,0(r2)
   11380:	10bffd17 	ldw	r2,-12(r2)
   11384:	d8c00017 	ldw	r3,0(sp)
   11388:	1885883a 	add	r2,r3,r2
   1138c:	00c000c4 	movi	r3,3
   11390:	10c00b15 	stw	r3,44(r2)
	m_number_matrices = 0;
   11394:	d8800117 	ldw	r2,4(sp)
   11398:	1000291e 	bne	r2,zero,11440 <_ZN22PositionControllerTiltC4Ev+0x228>
   1139c:	d8800017 	ldw	r2,0(sp)
   113a0:	10800017 	ldw	r2,0(r2)
   113a4:	10bffd17 	ldw	r2,-12(r2)
   113a8:	d8c00017 	ldw	r3,0(sp)
   113ac:	1885883a 	add	r2,r3,r2
   113b0:	10000c15 	stw	zero,48(r2)
	m_number_unnamed = 0;
   113b4:	d8800117 	ldw	r2,4(sp)
   113b8:	1000231e 	bne	r2,zero,11448 <_ZN22PositionControllerTiltC4Ev+0x230>
   113bc:	18800017 	ldw	r2,0(r3)
   113c0:	10bffd17 	ldw	r2,-12(r2)
   113c4:	d8c00017 	ldw	r3,0(sp)
   113c8:	1885883a 	add	r2,r3,r2
   113cc:	10000d15 	stw	zero,52(r2)
	m_C = new XXDouble[0 + 1];		/* constants */
   113d0:	d8800117 	ldw	r2,4(sp)
   113d4:	10001e1e 	bne	r2,zero,11450 <_ZN22PositionControllerTiltC4Ev+0x238>
   113d8:	18800017 	ldw	r2,0(r3)
   113dc:	10bffd17 	ldw	r2,-12(r2)
   113e0:	d8c00017 	ldw	r3,0(sp)
   113e4:	01000104 	movi	r4,4
   113e8:	1885883a 	add	r2,r3,r2
   113ec:	d8800315 	stw	r2,12(sp)
   113f0:	00800044 	movi	r2,1
   113f4:	d8800515 	stw	r2,20(sp)
   113f8:	00134e80 	call	134e8 <_Znaj>
   113fc:	00001606 	br	11458 <_ZN22PositionControllerTiltC4Ev+0x240>
PositionControllerTilt::PositionControllerTilt(void)
   11400:	00c00074 	movhi	r3,1
   11404:	18db6404 	addi	r3,r3,28048
   11408:	00800404 	movi	r2,16
   1140c:	003fa406 	br	112a0 <_ZN22PositionControllerTiltC4Ev+0x88>
	m_number_constants = 0;
   11410:	00800404 	movi	r2,16
   11414:	003fb006 	br	112d8 <_ZN22PositionControllerTiltC4Ev+0xc0>
	m_number_parameters = 7;
   11418:	00800404 	movi	r2,16
   1141c:	003fb506 	br	112f4 <_ZN22PositionControllerTiltC4Ev+0xdc>
	m_number_initialvalues = 3;
   11420:	00800404 	movi	r2,16
   11424:	003fbc06 	br	11318 <_ZN22PositionControllerTiltC4Ev+0x100>
	m_number_variables = 12;
   11428:	00800404 	movi	r2,16
   1142c:	003fc306 	br	1133c <_ZN22PositionControllerTiltC4Ev+0x124>
	m_number_states = 3;
   11430:	00800404 	movi	r2,16
   11434:	003fca06 	br	11360 <_ZN22PositionControllerTiltC4Ev+0x148>
	m_number_rates = 3;
   11438:	00800404 	movi	r2,16
   1143c:	003fd106 	br	11384 <_ZN22PositionControllerTiltC4Ev+0x16c>
	m_number_matrices = 0;
   11440:	00800404 	movi	r2,16
   11444:	003fd806 	br	113a8 <_ZN22PositionControllerTiltC4Ev+0x190>
	m_number_unnamed = 0;
   11448:	00800404 	movi	r2,16
   1144c:	003fdd06 	br	113c4 <_ZN22PositionControllerTiltC4Ev+0x1ac>
	m_C = new XXDouble[0 + 1];		/* constants */
   11450:	00800404 	movi	r2,16
   11454:	003fe206 	br	113e0 <_ZN22PositionControllerTiltC4Ev+0x1c8>
   11458:	d8c00317 	ldw	r3,12(sp)
   1145c:	18800e15 	stw	r2,56(r3)
	m_P = new XXDouble[7 + 1];		/* parameters */
   11460:	d8800117 	ldw	r2,4(sp)
   11464:	10000b1e 	bne	r2,zero,11494 <_ZN22PositionControllerTiltC4Ev+0x27c>
   11468:	d8800017 	ldw	r2,0(sp)
   1146c:	10800017 	ldw	r2,0(r2)
   11470:	10bffd17 	ldw	r2,-12(r2)
   11474:	d8c00017 	ldw	r3,0(sp)
   11478:	01000804 	movi	r4,32
   1147c:	1885883a 	add	r2,r3,r2
   11480:	d8800315 	stw	r2,12(sp)
   11484:	00800044 	movi	r2,1
   11488:	d8800515 	stw	r2,20(sp)
   1148c:	00134e80 	call	134e8 <_Znaj>
   11490:	00000206 	br	1149c <_ZN22PositionControllerTiltC4Ev+0x284>
   11494:	00800404 	movi	r2,16
   11498:	003ff606 	br	11474 <_ZN22PositionControllerTiltC4Ev+0x25c>
   1149c:	d8c00317 	ldw	r3,12(sp)
   114a0:	18800f15 	stw	r2,60(r3)
	m_I = new XXDouble[3 + 1];		/* initial values */
   114a4:	d8800117 	ldw	r2,4(sp)
   114a8:	10000b1e 	bne	r2,zero,114d8 <_ZN22PositionControllerTiltC4Ev+0x2c0>
   114ac:	d8800017 	ldw	r2,0(sp)
   114b0:	10800017 	ldw	r2,0(r2)
   114b4:	10bffd17 	ldw	r2,-12(r2)
   114b8:	d8c00017 	ldw	r3,0(sp)
   114bc:	01000404 	movi	r4,16
   114c0:	1885883a 	add	r2,r3,r2
   114c4:	d8800315 	stw	r2,12(sp)
   114c8:	00800044 	movi	r2,1
   114cc:	d8800515 	stw	r2,20(sp)
   114d0:	00134e80 	call	134e8 <_Znaj>
   114d4:	00000206 	br	114e0 <_ZN22PositionControllerTiltC4Ev+0x2c8>
   114d8:	00800404 	movi	r2,16
   114dc:	003ff606 	br	114b8 <_ZN22PositionControllerTiltC4Ev+0x2a0>
   114e0:	d8c00317 	ldw	r3,12(sp)
   114e4:	18801015 	stw	r2,64(r3)
	m_V = new XXDouble[12 + 1];		/* variables */
   114e8:	d8800117 	ldw	r2,4(sp)
   114ec:	10000b1e 	bne	r2,zero,1151c <_ZN22PositionControllerTiltC4Ev+0x304>
   114f0:	d8800017 	ldw	r2,0(sp)
   114f4:	10800017 	ldw	r2,0(r2)
   114f8:	10bffd17 	ldw	r2,-12(r2)
   114fc:	d8c00017 	ldw	r3,0(sp)
   11500:	01000d04 	movi	r4,52
   11504:	1885883a 	add	r2,r3,r2
   11508:	d8800315 	stw	r2,12(sp)
   1150c:	00800044 	movi	r2,1
   11510:	d8800515 	stw	r2,20(sp)
   11514:	00134e80 	call	134e8 <_Znaj>
   11518:	00000206 	br	11524 <_ZN22PositionControllerTiltC4Ev+0x30c>
   1151c:	00800404 	movi	r2,16
   11520:	003ff606 	br	114fc <_ZN22PositionControllerTiltC4Ev+0x2e4>
   11524:	d8c00317 	ldw	r3,12(sp)
   11528:	18801115 	stw	r2,68(r3)
	m_s = new XXDouble[3 + 1];		/* states */
   1152c:	d8800117 	ldw	r2,4(sp)
   11530:	10000b1e 	bne	r2,zero,11560 <_ZN22PositionControllerTiltC4Ev+0x348>
   11534:	d8800017 	ldw	r2,0(sp)
   11538:	10800017 	ldw	r2,0(r2)
   1153c:	10bffd17 	ldw	r2,-12(r2)
   11540:	d8c00017 	ldw	r3,0(sp)
   11544:	01000404 	movi	r4,16
   11548:	1885883a 	add	r2,r3,r2
   1154c:	d8800315 	stw	r2,12(sp)
   11550:	00800044 	movi	r2,1
   11554:	d8800515 	stw	r2,20(sp)
   11558:	00134e80 	call	134e8 <_Znaj>
   1155c:	00000206 	br	11568 <_ZN22PositionControllerTiltC4Ev+0x350>
   11560:	00800404 	movi	r2,16
   11564:	003ff606 	br	11540 <_ZN22PositionControllerTiltC4Ev+0x328>
   11568:	d8c00317 	ldw	r3,12(sp)
   1156c:	18801215 	stw	r2,72(r3)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11570:	d8800117 	ldw	r2,4(sp)
   11574:	10000b1e 	bne	r2,zero,115a4 <_ZN22PositionControllerTiltC4Ev+0x38c>
   11578:	d8800017 	ldw	r2,0(sp)
   1157c:	10800017 	ldw	r2,0(r2)
   11580:	10bffd17 	ldw	r2,-12(r2)
   11584:	d8c00017 	ldw	r3,0(sp)
   11588:	01000404 	movi	r4,16
   1158c:	1885883a 	add	r2,r3,r2
   11590:	d8800315 	stw	r2,12(sp)
   11594:	00800044 	movi	r2,1
   11598:	d8800515 	stw	r2,20(sp)
   1159c:	00134e80 	call	134e8 <_Znaj>
   115a0:	00000206 	br	115ac <_ZN22PositionControllerTiltC4Ev+0x394>
   115a4:	00800404 	movi	r2,16
   115a8:	003ff606 	br	11584 <_ZN22PositionControllerTiltC4Ev+0x36c>
   115ac:	d8c00317 	ldw	r3,12(sp)
   115b0:	18801315 	stw	r2,76(r3)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   115b4:	d8800117 	ldw	r2,4(sp)
   115b8:	10000b1e 	bne	r2,zero,115e8 <_ZN22PositionControllerTiltC4Ev+0x3d0>
   115bc:	d8800017 	ldw	r2,0(sp)
   115c0:	10800017 	ldw	r2,0(r2)
   115c4:	10bffd17 	ldw	r2,-12(r2)
   115c8:	d8c00017 	ldw	r3,0(sp)
   115cc:	01000304 	movi	r4,12
   115d0:	1885883a 	add	r2,r3,r2
   115d4:	d8800315 	stw	r2,12(sp)
   115d8:	00800044 	movi	r2,1
   115dc:	d8800515 	stw	r2,20(sp)
   115e0:	00134e80 	call	134e8 <_Znaj>
   115e4:	00000206 	br	115f0 <_ZN22PositionControllerTiltC4Ev+0x3d8>
   115e8:	00800404 	movi	r2,16
   115ec:	003ff606 	br	115c8 <_ZN22PositionControllerTiltC4Ev+0x3b0>
   115f0:	d8c00317 	ldw	r3,12(sp)
   115f4:	18801415 	stw	r2,80(r3)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   115f8:	d8800117 	ldw	r2,4(sp)
   115fc:	10000b1e 	bne	r2,zero,1162c <_ZN22PositionControllerTiltC4Ev+0x414>
   11600:	d8800017 	ldw	r2,0(sp)
   11604:	10800017 	ldw	r2,0(r2)
   11608:	10bffd17 	ldw	r2,-12(r2)
   1160c:	d8c00017 	ldw	r3,0(sp)
   11610:	01000104 	movi	r4,4
   11614:	1885883a 	add	r2,r3,r2
   11618:	d8800315 	stw	r2,12(sp)
   1161c:	00800044 	movi	r2,1
   11620:	d8800515 	stw	r2,20(sp)
   11624:	00134e80 	call	134e8 <_Znaj>
   11628:	00000206 	br	11634 <_ZN22PositionControllerTiltC4Ev+0x41c>
   1162c:	00800404 	movi	r2,16
   11630:	003ff606 	br	1160c <_ZN22PositionControllerTiltC4Ev+0x3f4>
   11634:	d8c00317 	ldw	r3,12(sp)
   11638:	18801515 	stw	r2,84(r3)
	m_workarray = new XXDouble[0 + 1];
   1163c:	d8800117 	ldw	r2,4(sp)
   11640:	10000b1e 	bne	r2,zero,11670 <_ZN22PositionControllerTiltC4Ev+0x458>
   11644:	d8800017 	ldw	r2,0(sp)
   11648:	10800017 	ldw	r2,0(r2)
   1164c:	10bffd17 	ldw	r2,-12(r2)
   11650:	d8c00017 	ldw	r3,0(sp)
   11654:	01000104 	movi	r4,4
   11658:	1885883a 	add	r2,r3,r2
   1165c:	d8800315 	stw	r2,12(sp)
   11660:	00800044 	movi	r2,1
   11664:	d8800515 	stw	r2,20(sp)
   11668:	00134e80 	call	134e8 <_Znaj>
   1166c:	00000206 	br	11678 <_ZN22PositionControllerTiltC4Ev+0x460>
   11670:	00800404 	movi	r2,16
   11674:	003ff606 	br	11650 <_ZN22PositionControllerTiltC4Ev+0x438>
   11678:	d8c00317 	ldw	r3,12(sp)
	Reset(0.0);
   1167c:	d9000017 	ldw	r4,0(sp)
   11680:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   11684:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   11688:	00110300 	call	11030 <_ZN22PositionControllerTilt5ResetEf>
	m_finish_time = 20.0;
   1168c:	d8800117 	ldw	r2,4(sp)
   11690:	10000d1e 	bne	r2,zero,116c8 <_ZN22PositionControllerTiltC4Ev+0x4b0>
   11694:	d8800017 	ldw	r2,0(sp)
   11698:	10800017 	ldw	r2,0(r2)
   1169c:	10bffd17 	ldw	r2,-12(r2)
   116a0:	d8c00017 	ldw	r3,0(sp)
   116a4:	d9000404 	addi	r4,sp,16
   116a8:	1885883a 	add	r2,r3,r2
   116ac:	00d06834 	movhi	r3,16800
   116b0:	10c00415 	stw	r3,16(r2)
   116b4:	00151780 	call	15178 <_Unwind_SjLj_Unregister>
}
   116b8:	dfc01217 	ldw	ra,72(sp)
   116bc:	df001117 	ldw	fp,68(sp)
   116c0:	dec01304 	addi	sp,sp,76
   116c4:	f800283a 	ret
	m_finish_time = 20.0;
   116c8:	00800404 	movi	r2,16
   116cc:	003ff406 	br	116a0 <_ZN22PositionControllerTiltC4Ev+0x488>
PositionControllerTilt::PositionControllerTilt(void)
   116d0:	d8800617 	ldw	r2,24(sp)
   116d4:	d9000217 	ldw	r4,8(sp)
   116d8:	d8800015 	stw	r2,0(sp)
   116dc:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   116e0:	d9000017 	ldw	r4,0(sp)
   116e4:	00bfffc4 	movi	r2,-1
   116e8:	d8800515 	stw	r2,20(sp)
   116ec:	00153480 	call	15348 <_Unwind_SjLj_Resume>
   116f0:	d8800217 	ldw	r2,8(sp)
   116f4:	10800017 	ldw	r2,0(r2)
   116f8:	003ee206 	br	11284 <_ZN22PositionControllerTiltC4Ev+0x6c>

000116fc <_ZN22PositionControllerTiltC2Ev>:
}
   116fc:	280d883a 	mov	r6,r5
   11700:	000b883a 	mov	r5,zero
   11704:	00112181 	jmpi	11218 <_ZN22PositionControllerTiltC4Ev>

00011708 <_ZN22PositionControllerTiltC1Ev>:
   11708:	000d883a 	mov	r6,zero
   1170c:	01400044 	movi	r5,1
   11710:	00112181 	jmpi	11218 <_ZN22PositionControllerTiltC4Ev>

00011714 <_ZN22PositionControllerTiltD4Ev>:
{
   11714:	defffd04 	addi	sp,sp,-12
   11718:	dc400115 	stw	r17,4(sp)
   1171c:	dc000015 	stw	r16,0(sp)
   11720:	dfc00215 	stw	ra,8(sp)
   11724:	2021883a 	mov	r16,r4
   11728:	2823883a 	mov	r17,r5
PositionControllerTilt::~PositionControllerTilt(void)
   1172c:	2800481e 	bne	r5,zero,11850 <_ZN22PositionControllerTiltD4Ev+0x13c>
   11730:	30800017 	ldw	r2,0(r6)
   11734:	80800015 	stw	r2,0(r16)
   11738:	8800481e 	bne	r17,zero,1185c <_ZN22PositionControllerTiltD4Ev+0x148>
   1173c:	30c00117 	ldw	r3,4(r6)
   11740:	10bffd17 	ldw	r2,-12(r2)
   11744:	8085883a 	add	r2,r16,r2
	delete[] m_C;
   11748:	11000e17 	ldw	r4,56(r2)
PositionControllerTilt::~PositionControllerTilt(void)
   1174c:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   11750:	20000126 	beq	r4,zero,11758 <_ZN22PositionControllerTiltD4Ev+0x44>
   11754:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_P;
   11758:	8800441e 	bne	r17,zero,1186c <_ZN22PositionControllerTiltD4Ev+0x158>
   1175c:	80800017 	ldw	r2,0(r16)
   11760:	10bffd17 	ldw	r2,-12(r2)
   11764:	8085883a 	add	r2,r16,r2
   11768:	11000f17 	ldw	r4,60(r2)
   1176c:	20000126 	beq	r4,zero,11774 <_ZN22PositionControllerTiltD4Ev+0x60>
   11770:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_I;
   11774:	88003f1e 	bne	r17,zero,11874 <_ZN22PositionControllerTiltD4Ev+0x160>
   11778:	80800017 	ldw	r2,0(r16)
   1177c:	10bffd17 	ldw	r2,-12(r2)
   11780:	8085883a 	add	r2,r16,r2
   11784:	11001017 	ldw	r4,64(r2)
   11788:	20000126 	beq	r4,zero,11790 <_ZN22PositionControllerTiltD4Ev+0x7c>
   1178c:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_V;
   11790:	88003a1e 	bne	r17,zero,1187c <_ZN22PositionControllerTiltD4Ev+0x168>
   11794:	80800017 	ldw	r2,0(r16)
   11798:	10bffd17 	ldw	r2,-12(r2)
   1179c:	8085883a 	add	r2,r16,r2
   117a0:	11001117 	ldw	r4,68(r2)
   117a4:	20000126 	beq	r4,zero,117ac <_ZN22PositionControllerTiltD4Ev+0x98>
   117a8:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_s;
   117ac:	8800351e 	bne	r17,zero,11884 <_ZN22PositionControllerTiltD4Ev+0x170>
   117b0:	80800017 	ldw	r2,0(r16)
   117b4:	10bffd17 	ldw	r2,-12(r2)
   117b8:	8085883a 	add	r2,r16,r2
   117bc:	11001217 	ldw	r4,72(r2)
   117c0:	20000126 	beq	r4,zero,117c8 <_ZN22PositionControllerTiltD4Ev+0xb4>
   117c4:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_R;
   117c8:	8800301e 	bne	r17,zero,1188c <_ZN22PositionControllerTiltD4Ev+0x178>
   117cc:	80800017 	ldw	r2,0(r16)
   117d0:	10bffd17 	ldw	r2,-12(r2)
   117d4:	8085883a 	add	r2,r16,r2
   117d8:	11001317 	ldw	r4,76(r2)
   117dc:	20000126 	beq	r4,zero,117e4 <_ZN22PositionControllerTiltD4Ev+0xd0>
   117e0:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_M;
   117e4:	88002b1e 	bne	r17,zero,11894 <_ZN22PositionControllerTiltD4Ev+0x180>
   117e8:	80800017 	ldw	r2,0(r16)
   117ec:	10bffd17 	ldw	r2,-12(r2)
   117f0:	8085883a 	add	r2,r16,r2
   117f4:	11001417 	ldw	r4,80(r2)
   117f8:	20000126 	beq	r4,zero,11800 <_ZN22PositionControllerTiltD4Ev+0xec>
   117fc:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_U;
   11800:	8800261e 	bne	r17,zero,1189c <_ZN22PositionControllerTiltD4Ev+0x188>
   11804:	80800017 	ldw	r2,0(r16)
   11808:	10bffd17 	ldw	r2,-12(r2)
   1180c:	8085883a 	add	r2,r16,r2
   11810:	11001517 	ldw	r4,84(r2)
   11814:	20000126 	beq	r4,zero,1181c <_ZN22PositionControllerTiltD4Ev+0x108>
   11818:	001244c0 	call	1244c <_ZdaPv>
	delete[] m_workarray;
   1181c:	8800211e 	bne	r17,zero,118a4 <_ZN22PositionControllerTiltD4Ev+0x190>
   11820:	80800017 	ldw	r2,0(r16)
   11824:	10bffd17 	ldw	r2,-12(r2)
   11828:	8085883a 	add	r2,r16,r2
   1182c:	11001617 	ldw	r4,88(r2)
   11830:	20000126 	beq	r4,zero,11838 <_ZN22PositionControllerTiltD4Ev+0x124>
   11834:	001244c0 	call	1244c <_ZdaPv>
PositionControllerTilt::~PositionControllerTilt(void)
   11838:	81000204 	addi	r4,r16,8
}
   1183c:	dfc00217 	ldw	ra,8(sp)
   11840:	dc400117 	ldw	r17,4(sp)
   11844:	dc000017 	ldw	r16,0(sp)
   11848:	dec00304 	addi	sp,sp,12
PositionControllerTilt::~PositionControllerTilt(void)
   1184c:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>
   11850:	00800074 	movhi	r2,1
   11854:	109b5d04 	addi	r2,r2,28020
   11858:	003fb606 	br	11734 <_ZN22PositionControllerTiltD4Ev+0x20>
   1185c:	00c00074 	movhi	r3,1
   11860:	18db6404 	addi	r3,r3,28048
   11864:	00800404 	movi	r2,16
   11868:	003fb606 	br	11744 <_ZN22PositionControllerTiltD4Ev+0x30>
	delete[] m_P;
   1186c:	00800404 	movi	r2,16
   11870:	003fbc06 	br	11764 <_ZN22PositionControllerTiltD4Ev+0x50>
	delete[] m_I;
   11874:	00800404 	movi	r2,16
   11878:	003fc106 	br	11780 <_ZN22PositionControllerTiltD4Ev+0x6c>
	delete[] m_V;
   1187c:	00800404 	movi	r2,16
   11880:	003fc606 	br	1179c <_ZN22PositionControllerTiltD4Ev+0x88>
	delete[] m_s;
   11884:	00800404 	movi	r2,16
   11888:	003fcb06 	br	117b8 <_ZN22PositionControllerTiltD4Ev+0xa4>
	delete[] m_R;
   1188c:	00800404 	movi	r2,16
   11890:	003fd006 	br	117d4 <_ZN22PositionControllerTiltD4Ev+0xc0>
	delete[] m_M;
   11894:	00800404 	movi	r2,16
   11898:	003fd506 	br	117f0 <_ZN22PositionControllerTiltD4Ev+0xdc>
	delete[] m_U;
   1189c:	00800404 	movi	r2,16
   118a0:	003fda06 	br	1180c <_ZN22PositionControllerTiltD4Ev+0xf8>
	delete[] m_workarray;
   118a4:	00800404 	movi	r2,16
   118a8:	003fdf06 	br	11828 <_ZN22PositionControllerTiltD4Ev+0x114>

000118ac <_ZN22PositionControllerTiltD2Ev>:
}
   118ac:	280d883a 	mov	r6,r5
   118b0:	000b883a 	mov	r5,zero
   118b4:	00117141 	jmpi	11714 <_ZN22PositionControllerTiltD4Ev>

000118b8 <_ZN22PositionControllerTiltD1Ev>:
   118b8:	000d883a 	mov	r6,zero
   118bc:	01400084 	movi	r5,2
   118c0:	00117141 	jmpi	11714 <_ZN22PositionControllerTiltD4Ev>

000118c4 <_ZTv0_n16_N22PositionControllerTiltD1Ev>:
		virtual ~PositionControllerTilt(void);
   118c4:	2009883a 	mov	r4,r4
   118c8:	20800017 	ldw	r2,0(r4)
   118cc:	10bffc04 	addi	r2,r2,-16
   118d0:	10800017 	ldw	r2,0(r2)
   118d4:	2089883a 	add	r4,r4,r2
   118d8:	00118b81 	jmpi	118b8 <_ZN22PositionControllerTiltD1Ev>

000118dc <_ZN22PositionControllerTiltD0Ev>:
PositionControllerTilt::~PositionControllerTilt(void)
   118dc:	defffe04 	addi	sp,sp,-8
   118e0:	dc000015 	stw	r16,0(sp)
   118e4:	dfc00115 	stw	ra,4(sp)
   118e8:	2021883a 	mov	r16,r4
}
   118ec:	00118b80 	call	118b8 <_ZN22PositionControllerTiltD1Ev>
   118f0:	01401b04 	movi	r5,108
   118f4:	8009883a 	mov	r4,r16
   118f8:	dfc00117 	ldw	ra,4(sp)
   118fc:	dc000017 	ldw	r16,0(sp)
   11900:	dec00204 	addi	sp,sp,8
   11904:	00124481 	jmpi	12448 <_ZdlPvj>

00011908 <_ZTv0_n16_N22PositionControllerTiltD0Ev>:
   11908:	2009883a 	mov	r4,r4
   1190c:	20800017 	ldw	r2,0(r4)
   11910:	10bffc04 	addi	r2,r2,-16
   11914:	10800017 	ldw	r2,0(r2)
   11918:	2089883a 	add	r4,r4,r2
   1191c:	00118dc1 	jmpi	118dc <_ZN22PositionControllerTiltD0Ev>

00011920 <_ZN22PositionControllerTilt10InitializeEPfS0_f>:
	m_initialize = true;
   11920:	20800017 	ldw	r2,0(r4)
{
   11924:	defffb04 	addi	sp,sp,-20
   11928:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   1192c:	10bffd17 	ldw	r2,-12(r2)
{
   11930:	dcc00315 	stw	r19,12(sp)
   11934:	dc800215 	stw	r18,8(sp)
   11938:	dc400115 	stw	r17,4(sp)
   1193c:	dc000015 	stw	r16,0(sp)
   11940:	2825883a 	mov	r18,r5
	m_initialize = true;
   11944:	208b883a 	add	r5,r4,r2
   11948:	00800044 	movi	r2,1
   1194c:	28800105 	stb	r2,4(r5)
	m_P[0] = 0.0;		/* corrGain\K */
   11950:	28800f17 	ldw	r2,60(r5)
	m_P[1] = 1.6;		/* PID1\kp */
   11954:	00cff374 	movhi	r3,16333
	m_stop_run = false;
   11958:	28000185 	stb	zero,6(r5)
	m_P[1] = 1.6;		/* PID1\kp */
   1195c:	18f33344 	addi	r3,r3,-13107
   11960:	10c00115 	stw	r3,4(r2)
	m_P[2] = 0.05;		/* PID1\tauD */
   11964:	00cf5374 	movhi	r3,15693
   11968:	18f33344 	addi	r3,r3,-13107
   1196c:	10c00215 	stw	r3,8(r2)
	m_P[3] = 0.001;		/* PID1\beta */
   11970:	00cea0f4 	movhi	r3,14979
   11974:	18c49bc4 	addi	r3,r3,4719
   11978:	10c00315 	stw	r3,12(r2)
	m_P[4] = 10.5;		/* PID1\tauI */
   1197c:	00d04a34 	movhi	r3,16680
   11980:	10c00415 	stw	r3,16(r2)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   11984:	00efdf74 	movhi	r3,49021
   11988:	18dc2904 	addi	r3,r3,28836
   1198c:	10c00515 	stw	r3,20(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11990:	00cfdf74 	movhi	r3,16253
   11994:	18dc2904 	addi	r3,r3,28836
	m_P[0] = 0.0;		/* corrGain\K */
   11998:	10000015 	stw	zero,0(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   1199c:	10c00615 	stw	r3,24(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   119a0:	28801017 	ldw	r2,64(r5)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   119a4:	28c01217 	ldw	r3,72(r5)
{
   119a8:	2021883a 	mov	r16,r4
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   119ac:	10000115 	stw	zero,4(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   119b0:	10000015 	stw	zero,0(r2)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   119b4:	10000215 	stw	zero,8(r2)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   119b8:	18000015 	stw	zero,0(r3)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   119bc:	11000117 	ldw	r4,4(r2)
{
   119c0:	3023883a 	mov	r17,r6
   119c4:	3827883a 	mov	r19,r7
	m_s[1] = m_I[1];		/* PID1\error_previous */
   119c8:	19000115 	stw	r4,4(r3)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   119cc:	10800217 	ldw	r2,8(r2)
	myintegmethod.Initialize(this);
   119d0:	81000204 	addi	r4,r16,8
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   119d4:	18800215 	stw	r2,8(r3)
	myintegmethod.Initialize(this);
   119d8:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   119dc:	80800017 	ldw	r2,0(r16)
	CopyInputsToVariables (u);
   119e0:	900b883a 	mov	r5,r18
   119e4:	8009883a 	mov	r4,r16
	m_time = t;
   119e8:	10bffd17 	ldw	r2,-12(r2)
   119ec:	8085883a 	add	r2,r16,r2
   119f0:	14c00515 	stw	r19,20(r2)
	CopyInputsToVariables (u);
   119f4:	0010fe80 	call	10fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>
	CalculateDynamic ();
   119f8:	80800017 	ldw	r2,0(r16)
   119fc:	8009883a 	mov	r4,r16
   11a00:	10800217 	ldw	r2,8(r2)
   11a04:	103ee83a 	callr	r2
	CalculateOutput ();
   11a08:	8009883a 	mov	r4,r16
   11a0c:	00111c00 	call	111c0 <_ZN22PositionControllerTilt15CalculateOutputEv>
	CopyVariablesToOutputs (y);
   11a10:	880b883a 	mov	r5,r17
   11a14:	8009883a 	mov	r4,r16
   11a18:	00110140 	call	11014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>
	m_initialize = false;
   11a1c:	80800017 	ldw	r2,0(r16)
   11a20:	10bffd17 	ldw	r2,-12(r2)
   11a24:	8085883a 	add	r2,r16,r2
   11a28:	10000105 	stb	zero,4(r2)
	state = mainrun;
   11a2c:	00800044 	movi	r2,1
   11a30:	80800115 	stw	r2,4(r16)
}
   11a34:	dfc00417 	ldw	ra,16(sp)
   11a38:	dcc00317 	ldw	r19,12(sp)
   11a3c:	dc800217 	ldw	r18,8(sp)
   11a40:	dc400117 	ldw	r17,4(sp)
   11a44:	dc000017 	ldw	r16,0(sp)
   11a48:	dec00504 	addi	sp,sp,20
   11a4c:	f800283a 	ret

00011a50 <_ZN22PositionControllerTilt9CalculateEPfS0_>:
	switch (state)
   11a50:	20800117 	ldw	r2,4(r4)
   11a54:	10000326 	beq	r2,zero,11a64 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x14>
   11a58:	10800060 	cmpeqi	r2,r2,1
   11a5c:	1000031e 	bne	r2,zero,11a6c <_ZN22PositionControllerTilt9CalculateEPfS0_+0x1c>
   11a60:	f800283a 	ret
			Initialize(u, y, 0.0);
   11a64:	000f883a 	mov	r7,zero
   11a68:	00119201 	jmpi	11920 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11a6c:	20800017 	ldw	r2,0(r4)
{
   11a70:	defffd04 	addi	sp,sp,-12
   11a74:	dc400115 	stw	r17,4(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11a78:	10fffd17 	ldw	r3,-12(r2)
{
   11a7c:	dc000015 	stw	r16,0(sp)
   11a80:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11a84:	20c7883a 	add	r3,r4,r3
   11a88:	18800217 	ldw	r2,8(r3)
   11a8c:	2021883a 	mov	r16,r4
   11a90:	19000417 	ldw	r4,16(r3)
   11a94:	280f883a 	mov	r7,r5
   11a98:	18c00517 	ldw	r3,20(r3)
   11a9c:	014cf5f4 	movhi	r5,13271
   11aa0:	2085ffb2 	custom	254,r2,r4,r2
   11aa4:	296fe544 	addi	r5,r5,-16491
   11aa8:	1145ff72 	custom	253,r2,r2,r5
   11aac:	1885f9b2 	custom	230,r2,r3,r2
   11ab0:	3023883a 	mov	r17,r6
   11ab4:	1000021e 	bne	r2,zero,11ac0 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x70>
   11ab8:	2089f8b2 	custom	226,r4,r4,r2
   11abc:	2000201e 	bne	r4,zero,11b40 <_ZN22PositionControllerTilt9CalculateEPfS0_+0xf0>
				CopyInputsToVariables (u);
   11ac0:	380b883a 	mov	r5,r7
   11ac4:	8009883a 	mov	r4,r16
   11ac8:	0010fe80 	call	10fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>
				myintegmethod.Step();
   11acc:	81000204 	addi	r4,r16,8
   11ad0:	00101d40 	call	101d4 <_ZN8Discrete4StepEv>
				CalculateOutput ();
   11ad4:	8009883a 	mov	r4,r16
   11ad8:	00111c00 	call	111c0 <_ZN22PositionControllerTilt15CalculateOutputEv>
				CopyVariablesToOutputs (y);
   11adc:	880b883a 	mov	r5,r17
   11ae0:	8009883a 	mov	r4,r16
   11ae4:	00110140 	call	11014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   11ae8:	80800017 	ldw	r2,0(r16)
   11aec:	10bffd17 	ldw	r2,-12(r2)
   11af0:	8085883a 	add	r2,r16,r2
   11af4:	10c00183 	ldbu	r3,6(r2)
   11af8:	18000a1e 	bne	r3,zero,11b24 <_ZN22PositionControllerTilt9CalculateEPfS0_+0xd4>
   11afc:	10c00417 	ldw	r3,16(r2)
   11b00:	0009883a 	mov	r4,zero
   11b04:	1909f8f2 	custom	227,r4,r3,r4
   11b08:	2000081e 	bne	r4,zero,11b2c <_ZN22PositionControllerTilt9CalculateEPfS0_+0xdc>
   11b0c:	10800517 	ldw	r2,20(r2)
   11b10:	010cf5f4 	movhi	r4,13271
   11b14:	212fe544 	addi	r4,r4,-16491
   11b18:	1105ff72 	custom	253,r2,r2,r4
   11b1c:	1887f9b2 	custom	230,r3,r3,r2
   11b20:	18000226 	beq	r3,zero,11b2c <_ZN22PositionControllerTilt9CalculateEPfS0_+0xdc>
				state = finished;
   11b24:	00800084 	movi	r2,2
   11b28:	80800115 	stw	r2,4(r16)
}
   11b2c:	dfc00217 	ldw	ra,8(sp)
   11b30:	dc400117 	ldw	r17,4(sp)
   11b34:	dc000017 	ldw	r16,0(sp)
   11b38:	dec00304 	addi	sp,sp,12
   11b3c:	f800283a 	ret
				state = finished;
   11b40:	00800084 	movi	r2,2
   11b44:	80800115 	stw	r2,4(r16)
   11b48:	003fe706 	br	11ae8 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x98>

00011b4c <_Z17handleUartMessageRN6Serial10rx_messageE>:
			return (freq << 18) | (duty << 4) | (direction << 2) | (enable << 1) | motor;
		}

		uint32_t getFirstWord()
		{
			return freq;
   11b4c:	20800017 	ldw	r2,0(r4)
// Setup Motors.
Plant::Motor tilt_motor = Plant::Motor(MOTOR_PWM_0_SLAVE_1_BASE, MOTOR_PWM_0_SLAVE_2_BASE);
Plant::Motor pan_motor = Plant::Motor(MOTOR_PWM_1_SLAVE_1_BASE, MOTOR_PWM_1_SLAVE_2_BASE);

void handleUartMessage(Serial::rx_message &received_message)
{
   11b50:	defffe04 	addi	sp,sp,-8
   11b54:	dc000015 	stw	r16,0(sp)
   11b58:	dfc00115 	stw	ra,4(sp)
   11b5c:	2021883a 	mov	r16,r4
   11b60:	114fffcc 	andi	r5,r2,16383
	// Determine for which motor this message is intended.
	switch (received_message.motor)
   11b64:	10001216 	blt	r2,zero,11bb0 <_Z17handleUartMessageRN6Serial10rx_messageE+0x64>
	{
		case 0:
		{
			tilt_motor.setFrequency(received_message.getFirstWord());
   11b68:	010000b4 	movhi	r4,2
   11b6c:	21206b04 	addi	r4,r4,-32340
   11b70:	0011ee00 	call	11ee0 <_ZN5Plant5Motor12setFrequencyEm>
		}

		uint32_t getSecondWord()
		{
			return (duty << 16) | (direction << 14) | enable << 13;
   11b74:	80800017 	ldw	r2,0(r16)
			tilt_motor.setSecondWord(received_message.getSecondWord());
   11b78:	010000b4 	movhi	r4,2
   11b7c:	21206b04 	addi	r4,r4,-32340
   11b80:	100a90ba 	slli	r5,r2,2
   11b84:	1006d3ba 	srli	r3,r2,14
   11b88:	1004d47a 	srli	r2,r2,17
   11b8c:	294fffec 	andhi	r5,r5,16383
   11b90:	18f0000c 	andi	r3,r3,49152
   11b94:	28cab03a 	or	r5,r5,r3
   11b98:	1088000c 	andi	r2,r2,8192
   11b9c:	288ab03a 	or	r5,r5,r2
			pan_motor.setFrequency(received_message.getFirstWord());
			pan_motor.setSecondWord(received_message.getSecondWord());
			break;
		}
	}
}
   11ba0:	dfc00117 	ldw	ra,4(sp)
   11ba4:	dc000017 	ldw	r16,0(sp)
   11ba8:	dec00204 	addi	sp,sp,8
			pan_motor.setSecondWord(received_message.getSecondWord());
   11bac:	0011ef81 	jmpi	11ef8 <_ZN5Plant5Motor13setSecondWordEm>
			pan_motor.setFrequency(received_message.getFirstWord());
   11bb0:	010000b4 	movhi	r4,2
   11bb4:	21206704 	addi	r4,r4,-32356
   11bb8:	0011ee00 	call	11ee0 <_ZN5Plant5Motor12setFrequencyEm>
   11bbc:	80800017 	ldw	r2,0(r16)
			pan_motor.setSecondWord(received_message.getSecondWord());
   11bc0:	010000b4 	movhi	r4,2
   11bc4:	21206704 	addi	r4,r4,-32356
   11bc8:	100a90ba 	slli	r5,r2,2
   11bcc:	1006d3ba 	srli	r3,r2,14
   11bd0:	1004d47a 	srli	r2,r2,17
   11bd4:	294fffec 	andhi	r5,r5,16383
   11bd8:	18f0000c 	andi	r3,r3,49152
   11bdc:	28cab03a 	or	r5,r5,r3
   11be0:	1088000c 	andi	r2,r2,8192
   11be4:	288ab03a 	or	r5,r5,r2
   11be8:	003fed06 	br	11ba0 <_Z17handleUartMessageRN6Serial10rx_messageE+0x54>

00011bec <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation>:
    public:
      static bool
      _M_manager(_Any_data& __dest, const _Any_data& __source,
		 _Manager_operation __op)
      {
	switch (__op)
   11bec:	30000626 	beq	r6,zero,11c08 <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x1c>
   11bf0:	30800060 	cmpeqi	r2,r6,1
   11bf4:	1000081e 	bne	r2,zero,11c18 <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x2c>
	  switch (__op)
   11bf8:	31800098 	cmpnei	r6,r6,2
   11bfc:	3000071e 	bne	r6,zero,11c1c <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x30>
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11c00:	28800017 	ldw	r2,0(r5)
   11c04:	00000206 	br	11c10 <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x24>
	  {
#if __cpp_rtti
	  case __get_type_info:
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11c08:	00800074 	movhi	r2,1
   11c0c:	109b7d04 	addi	r2,r2,28148
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11c10:	20800015 	stw	r2,0(r4)
	      break;
   11c14:	00000106 	br	11c1c <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x30>
	    break;
#endif
	  case __get_functor_ptr:
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11c18:	21400015 	stw	r5,0(r4)

	  default:
	    _Base::_M_manager(__dest, __source, __op);
	  }
	return false;
      }
   11c1c:	0005883a 	mov	r2,zero
   11c20:	f800283a 	ret

00011c24 <_ZNSt17_Function_handlerIFvRN6Serial10rx_messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_>:
    { return static_cast<_Up&&>(__t); }

  template<typename _Res, typename _Fn, typename... _Args>
    constexpr _Res
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
   11c24:	20800017 	ldw	r2,0(r4)
   11c28:	2809883a 	mov	r4,r5
   11c2c:	1000683a 	jmp	r2

00011c30 <_ZNSt14_Function_baseD1Ev>:
    ~_Function_base()
   11c30:	00800074 	movhi	r2,1
   11c34:	defff104 	addi	sp,sp,-60
   11c38:	108a5d04 	addi	r2,r2,10612
   11c3c:	d8800615 	stw	r2,24(sp)
   11c40:	00800074 	movhi	r2,1
   11c44:	109b0104 	addi	r2,r2,27652
   11c48:	dc000d15 	stw	r16,52(sp)
   11c4c:	2021883a 	mov	r16,r4
   11c50:	d809883a 	mov	r4,sp
   11c54:	d8800715 	stw	r2,28(sp)
   11c58:	dfc00e15 	stw	ra,56(sp)
   11c5c:	00151600 	call	15160 <_Unwind_SjLj_Register>
      if (_M_manager)
   11c60:	80800217 	ldw	r2,8(r16)
   11c64:	10000526 	beq	r2,zero,11c7c <_ZNSt14_Function_baseD1Ev+0x4c>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   11c68:	d8000115 	stw	zero,4(sp)
   11c6c:	018000c4 	movi	r6,3
   11c70:	800b883a 	mov	r5,r16
   11c74:	8009883a 	mov	r4,r16
   11c78:	103ee83a 	callr	r2
   11c7c:	d809883a 	mov	r4,sp
   11c80:	00151780 	call	15178 <_Unwind_SjLj_Unregister>
    }
   11c84:	dfc00e17 	ldw	ra,56(sp)
   11c88:	dc000d17 	ldw	r16,52(sp)
   11c8c:	dec00f04 	addi	sp,sp,60
   11c90:	f800283a 	ret

00011c94 <_GLOBAL__sub_I_uart>:

		//usleep(10);
	}

	return 0;
}
   11c94:	00800074 	movhi	r2,1
   11c98:	deffec04 	addi	sp,sp,-80
   11c9c:	108a5d04 	addi	r2,r2,10612
   11ca0:	d8800715 	stw	r2,28(sp)
   11ca4:	00800074 	movhi	r2,1
   11ca8:	109b0204 	addi	r2,r2,27656
   11cac:	d8800815 	stw	r2,32(sp)
   11cb0:	00800074 	movhi	r2,1
   11cb4:	10874404 	addi	r2,r2,7440
   11cb8:	d9000104 	addi	r4,sp,4
   11cbc:	d8800a15 	stw	r2,40(sp)
   11cc0:	dfc01315 	stw	ra,76(sp)
   11cc4:	df001215 	stw	fp,72(sp)
   11cc8:	df000915 	stw	fp,36(sp)
   11ccc:	dec00b15 	stw	sp,44(sp)
   11cd0:	00151600 	call	15160 <_Unwind_SjLj_Register>
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11cd4:	00800074 	movhi	r2,1
   11cd8:	1086d304 	addi	r2,r2,6988
   11cdc:	d8800e15 	stw	r2,56(sp)
	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;

	if (_My_handler::_M_not_empty_function(__f))
	  {
	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
	    _M_invoker = &_My_handler::_M_invoke;
   11ce0:	00800074 	movhi	r2,1
   11ce4:	10870904 	addi	r2,r2,7204
   11ce8:	d8801115 	stw	r2,68(sp)
	    _M_manager = &_My_handler::_M_manager;
   11cec:	00800074 	movhi	r2,1
   11cf0:	1086fb04 	addi	r2,r2,7148
   11cf4:	d8801015 	stw	r2,64(sp)
Serial::UART uart = Serial::UART(handleUartMessage);
   11cf8:	d9400e04 	addi	r5,sp,56
   11cfc:	00800044 	movi	r2,1
   11d00:	d1220104 	addi	r4,gp,-30716
   11d04:	d8800215 	stw	r2,8(sp)
   11d08:	0011fd00 	call	11fd0 <_ZN6Serial4UARTC1ESt8functionIFvRNS_10rx_messageEEE>
   11d0c:	00000806 	br	11d30 <_GLOBAL__sub_I_uart+0x9c>
    class function<_Res(_ArgTypes...)>
   11d10:	d8800317 	ldw	r2,12(sp)
   11d14:	d9000e04 	addi	r4,sp,56
   11d18:	d8800015 	stw	r2,0(sp)
   11d1c:	0011c300 	call	11c30 <_ZNSt14_Function_baseD1Ev>
   11d20:	d9000017 	ldw	r4,0(sp)
   11d24:	00bfffc4 	movi	r2,-1
   11d28:	d8800215 	stw	r2,8(sp)
   11d2c:	00153480 	call	15348 <_Unwind_SjLj_Resume>
   11d30:	d9000e04 	addi	r4,sp,56
   11d34:	0011c300 	call	11c30 <_ZNSt14_Function_baseD1Ev>
Plant::Encoder tilt_encoder = Plant::Encoder(QUADRATURE_ENCODER_0_BASE);
   11d38:	014000b4 	movhi	r5,2
   11d3c:	00bfffc4 	movi	r2,-1
   11d40:	29490004 	addi	r5,r5,9216
   11d44:	d1220004 	addi	r4,gp,-30720
   11d48:	d8800215 	stw	r2,8(sp)
   11d4c:	0011ecc0 	call	11ecc <_ZN5Plant7EncoderC1Em>
Plant::Encoder pan_encoder = Plant::Encoder(QUADRATURE_ENCODER_1_BASE);
   11d50:	014000b4 	movhi	r5,2
   11d54:	29480004 	addi	r5,r5,8192
   11d58:	d121ff04 	addi	r4,gp,-30724
   11d5c:	0011ecc0 	call	11ecc <_ZN5Plant7EncoderC1Em>
Plant::Motor tilt_motor = Plant::Motor(MOTOR_PWM_0_SLAVE_1_BASE, MOTOR_PWM_0_SLAVE_2_BASE);
   11d60:	018000b4 	movhi	r6,2
   11d64:	014000b4 	movhi	r5,2
   11d68:	010000b4 	movhi	r4,2
   11d6c:	31850004 	addi	r6,r6,5120
   11d70:	29470004 	addi	r5,r5,7168
   11d74:	21206b04 	addi	r4,r4,-32340
   11d78:	0011f240 	call	11f24 <_ZN5Plant5MotorC1Emm>
Plant::Motor pan_motor = Plant::Motor(MOTOR_PWM_1_SLAVE_1_BASE, MOTOR_PWM_1_SLAVE_2_BASE);
   11d7c:	018000b4 	movhi	r6,2
   11d80:	014000b4 	movhi	r5,2
   11d84:	010000b4 	movhi	r4,2
   11d88:	31840004 	addi	r6,r6,4096
   11d8c:	29460004 	addi	r5,r5,6144
   11d90:	21206704 	addi	r4,r4,-32356
   11d94:	0011f240 	call	11f24 <_ZN5Plant5MotorC1Emm>
   11d98:	d9000104 	addi	r4,sp,4
   11d9c:	00151780 	call	15178 <_Unwind_SjLj_Unregister>
}
   11da0:	dfc01317 	ldw	ra,76(sp)
   11da4:	df001217 	ldw	fp,72(sp)
   11da8:	dec01404 	addi	sp,sp,80
   11dac:	f800283a 	ret

00011db0 <main>:
{
   11db0:	00800074 	movhi	r2,1
   11db4:	deffd004 	addi	sp,sp,-192
   11db8:	108a5d04 	addi	r2,r2,10612
   11dbc:	d8800c15 	stw	r2,48(sp)
   11dc0:	00800074 	movhi	r2,1
   11dc4:	109b0384 	addi	r2,r2,27662
   11dc8:	d8800d15 	stw	r2,52(sp)
   11dcc:	00800074 	movhi	r2,1
   11dd0:	1087ab04 	addi	r2,r2,7852
   11dd4:	d9000604 	addi	r4,sp,24
   11dd8:	dfc02f15 	stw	ra,188(sp)
   11ddc:	d8800f15 	stw	r2,60(sp)
   11de0:	df002e15 	stw	fp,184(sp)
   11de4:	df000e15 	stw	fp,56(sp)
   11de8:	dec01015 	stw	sp,64(sp)
   11dec:	00151600 	call	15160 <_Unwind_SjLj_Register>
	printf("JIWY motor controller running..\n");
   11df0:	01000074 	movhi	r4,1
   11df4:	00bfffc4 	movi	r2,-1
   11df8:	211b6704 	addi	r4,r4,28060
   11dfc:	d8800715 	stw	r2,28(sp)
   11e00:	00157ac0 	call	157ac <puts>
	PositionControllerPan pan_model;
   11e04:	d9001304 	addi	r4,sp,76
   11e08:	0010a780 	call	10a78 <_ZN21PositionControllerPanC1Ev>
		int32_t tilt = tilt_encoder.readData();
   11e0c:	d0a20004 	addi	r2,gp,-30720
   11e10:	d8800415 	stw	r2,16(sp)
		int32_t encoder_value : 31;
		int32_t motor : 1;

		tx_message(int32_t encoder_value, int32_t motor_value) :
				encoder_value(encoder_value),
				motor (motor_value)
   11e14:	00a00034 	movhi	r2,32768
   11e18:	10bfffc4 	addi	r2,r2,-1
   11e1c:	d8800515 	stw	r2,20(sp)
			uart.sendData(message);
   11e20:	d0a20104 	addi	r2,gp,-30716
	int32_t prev_pan = 0;
   11e24:	d8000215 	stw	zero,8(sp)
	int32_t prev_tilt = 0;
   11e28:	d8000115 	stw	zero,4(sp)
			uart.sendData(message);
   11e2c:	d8800315 	stw	r2,12(sp)
		int32_t tilt = tilt_encoder.readData();
   11e30:	d9000417 	ldw	r4,16(sp)
   11e34:	00800044 	movi	r2,1
   11e38:	d8800715 	stw	r2,28(sp)
   11e3c:	0011ed40 	call	11ed4 <_ZN5Plant7Encoder8readDataEv>
   11e40:	00000506 	br	11e58 <main+0xa8>
		int32_t pan = pan_encoder.readData();
   11e44:	d8800117 	ldw	r2,4(sp)
   11e48:	d8800215 	stw	r2,8(sp)
		int32_t tilt = tilt_encoder.readData();
   11e4c:	d8800017 	ldw	r2,0(sp)
   11e50:	d8800115 	stw	r2,4(sp)
   11e54:	003ff606 	br	11e30 <main+0x80>
   11e58:	d8800015 	stw	r2,0(sp)
		if (tilt != prev_tilt)
   11e5c:	d8c00017 	ldw	r3,0(sp)
   11e60:	d8800117 	ldw	r2,4(sp)
   11e64:	10c00526 	beq	r2,r3,11e7c <main+0xcc>
			uart.sendData(message);
   11e68:	1805883a 	mov	r2,r3
   11e6c:	d8c00517 	ldw	r3,20(sp)
   11e70:	d9000317 	ldw	r4,12(sp)
   11e74:	10ca703a 	and	r5,r2,r3
   11e78:	001213c0 	call	1213c <_ZN6Serial4UART8sendDataENS_10tx_messageE>
		int32_t pan = pan_encoder.readData();
   11e7c:	00800044 	movi	r2,1
   11e80:	d121ff04 	addi	r4,gp,-30724
   11e84:	d8800715 	stw	r2,28(sp)
   11e88:	0011ed40 	call	11ed4 <_ZN5Plant7Encoder8readDataEv>
   11e8c:	d8800115 	stw	r2,4(sp)
		if (pan != prev_pan)
   11e90:	d8c00117 	ldw	r3,4(sp)
   11e94:	d8800217 	ldw	r2,8(sp)
   11e98:	10ffea26 	beq	r2,r3,11e44 <main+0x94>
			uart.sendData(message);
   11e9c:	d9000317 	ldw	r4,12(sp)
   11ea0:	19600034 	orhi	r5,r3,32768
   11ea4:	001213c0 	call	1213c <_ZN6Serial4UART8sendDataENS_10tx_messageE>
   11ea8:	003fe606 	br	11e44 <main+0x94>
	PositionControllerPan pan_model;
   11eac:	d8800817 	ldw	r2,32(sp)
   11eb0:	d9001304 	addi	r4,sp,76
   11eb4:	d8800015 	stw	r2,0(sp)
   11eb8:	0010c280 	call	10c28 <_ZN21PositionControllerPanD1Ev>
   11ebc:	d9000017 	ldw	r4,0(sp)
   11ec0:	00bfffc4 	movi	r2,-1
   11ec4:	d8800715 	stw	r2,28(sp)
   11ec8:	00153480 	call	15348 <_Unwind_SjLj_Resume>

00011ecc <_ZN5Plant7EncoderC1Em>:
#include "encoder.hpp"

Plant::Encoder::Encoder(uint32_t base_address) :
	base_address(base_address)
   11ecc:	21400015 	stw	r5,0(r4)
{}
   11ed0:	f800283a 	ret

00011ed4 <_ZN5Plant7Encoder8readDataEv>:

int32_t Plant::Encoder::readData()
{
	return IORD_32DIRECT(base_address, 0);
   11ed4:	20800017 	ldw	r2,0(r4)
}
   11ed8:	10800037 	ldwio	r2,0(r2)
   11edc:	f800283a 	ret

00011ee0 <_ZN5Plant5Motor12setFrequencyEm>:
	stop();
}

void Plant::Motor::setFrequency(uint32_t new_frequency)
{
	if (frequency != new_frequency)
   11ee0:	20800217 	ldw	r2,8(r4)
   11ee4:	11400326 	beq	r2,r5,11ef4 <_ZN5Plant5Motor12setFrequencyEm+0x14>
	{
		IOWR_32DIRECT(base_address_first_word, 0, new_frequency);
   11ee8:	20800017 	ldw	r2,0(r4)
   11eec:	11400035 	stwio	r5,0(r2)
		frequency = new_frequency;
   11ef0:	21400215 	stw	r5,8(r4)
	}
}
   11ef4:	f800283a 	ret

00011ef8 <_ZN5Plant5Motor13setSecondWordEm>:

void  Plant::Motor::setSecondWord(uint32_t new_word)
{
	if (second_word != new_word)
   11ef8:	20800317 	ldw	r2,12(r4)
   11efc:	11400326 	beq	r2,r5,11f0c <_ZN5Plant5Motor13setSecondWordEm+0x14>
	{
		IOWR_32DIRECT(base_address_second_word, 0, new_word);
   11f00:	20800117 	ldw	r2,4(r4)
   11f04:	11400035 	stwio	r5,0(r2)
		second_word = new_word;
   11f08:	21400315 	stw	r5,12(r4)
	}
}
   11f0c:	f800283a 	ret

00011f10 <_ZN5Plant5Motor4stopEv>:

void Plant::Motor::stop()
{
	// Set all values to zero.
	IOWR_32DIRECT(base_address_first_word, 0, 0);
   11f10:	20800017 	ldw	r2,0(r4)
   11f14:	10000035 	stwio	zero,0(r2)
	IOWR_32DIRECT(base_address_second_word, 0, 0);
   11f18:	20800117 	ldw	r2,4(r4)
   11f1c:	10000035 	stwio	zero,0(r2)
}
   11f20:	f800283a 	ret

00011f24 <_ZN5Plant5MotorC1Emm>:
	base_address_second_word(base_address_second_word)
   11f24:	21400015 	stw	r5,0(r4)
   11f28:	21800115 	stw	r6,4(r4)
   11f2c:	20000215 	stw	zero,8(r4)
   11f30:	20000315 	stw	zero,12(r4)
	stop();
   11f34:	0011f101 	jmpi	11f10 <_ZN5Plant5Motor4stopEv>

00011f38 <_ZN6Serial4UART10uart_0_isrEPv>:
std::function<void(Serial::rx_message &received_message)> Serial::UART::callback;

void Serial::UART::uart_0_isr(void *)
{
	// Check if the UART buffer is empty or if there are more messages waiting.
	alt_u16 status = IORD_ALTERA_AVALON_UART_STATUS(UART_0_BASE);
   11f38:	008000b4 	movhi	r2,2
   11f3c:	108a0a37 	ldwio	r2,10280(r2)

	if(status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
   11f40:	1080200c 	andi	r2,r2,128
   11f44:	10001926 	beq	r2,zero,11fac <_ZN6Serial4UART10uart_0_isrEPv+0x74>
	{
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   11f48:	008000b4 	movhi	r2,2
   11f4c:	110a0837 	ldwio	r4,10272(r2)
   11f50:	d0a20143 	ldbu	r2,-30715(gp)
   11f54:	d0e20184 	addi	r3,gp,-30714
   11f58:	11403fcc 	andi	r5,r2,255
		rx_len ++ ;
   11f5c:	10800044 	addi	r2,r2,1
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   11f60:	1947883a 	add	r3,r3,r5
		rx_len ++ ;
   11f64:	d0a20145 	stb	r2,-30715(gp)

		if (rx_len >= MESSAGE_SIZE)
   11f68:	10803fcc 	andi	r2,r2,255
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   11f6c:	19000005 	stb	r4,0(r3)
		if (rx_len >= MESSAGE_SIZE)
   11f70:	10800130 	cmpltui	r2,r2,4
   11f74:	10000d1e 	bne	r2,zero,11fac <_ZN6Serial4UART10uart_0_isrEPv+0x74>
		{
			uart_ready = true;
			rx_len = 0;
   11f78:	d0220145 	stb	zero,-30715(gp)
{
   11f7c:	defffe04 	addi	sp,sp,-8
	if (uart_ready)
	{
		uart_ready = 0;

		Serial::rx_message received_message;
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   11f80:	d809883a 	mov	r4,sp
   11f84:	01800104 	movi	r6,4
   11f88:	d1620184 	addi	r5,gp,-30714
{
   11f8c:	dfc00115 	stw	ra,4(sp)
		uart_ready = 0;
   11f90:	d0220285 	stb	zero,-30710(gp)
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   11f94:	001549c0 	call	1549c <memcpy>
    bool _M_empty() const { return !_M_manager; }
   11f98:	010000b4 	movhi	r4,2
   11f9c:	21206f04 	addi	r4,r4,-32324
  template<typename _Res, typename... _ArgTypes>
    _Res
    function<_Res(_ArgTypes...)>::
    operator()(_ArgTypes... __args) const
    {
      if (_M_empty())
   11fa0:	20800217 	ldw	r2,8(r4)
   11fa4:	1000041e 	bne	r2,zero,11fb8 <_ZN6Serial4UART10uart_0_isrEPv+0x80>
	__throw_bad_function_call();
   11fa8:	00143480 	call	14348 <_ZSt25__throw_bad_function_callv>
	if (uart_ready)
   11fac:	d0a20283 	ldbu	r2,-30710(gp)
   11fb0:	103ff21e 	bne	r2,zero,11f7c <_ZN6Serial4UART10uart_0_isrEPv+0x44>
   11fb4:	f800283a 	ret
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   11fb8:	20800317 	ldw	r2,12(r4)
   11fbc:	d80b883a 	mov	r5,sp
   11fc0:	103ee83a 	callr	r2

		callback(received_message);
	}
}
   11fc4:	dfc00117 	ldw	ra,4(sp)
   11fc8:	dec00204 	addi	sp,sp,8
   11fcc:	f800283a 	ret

00011fd0 <_ZN6Serial4UARTC1ESt8functionIFvRNS_10rx_messageEEE>:

Serial::UART::UART(std::function<void(Serial::rx_message &received_message)> func)
   11fd0:	00800074 	movhi	r2,1
   11fd4:	deffeb04 	addi	sp,sp,-84
   11fd8:	108a5d04 	addi	r2,r2,10612
   11fdc:	d8800815 	stw	r2,32(sp)
   11fe0:	00800074 	movhi	r2,1
   11fe4:	109b0504 	addi	r2,r2,27668
   11fe8:	d8800915 	stw	r2,36(sp)
   11fec:	00800074 	movhi	r2,1
   11ff0:	10884304 	addi	r2,r2,8460
   11ff4:	d9000204 	addi	r4,sp,8
   11ff8:	d8800b15 	stw	r2,44(sp)
   11ffc:	dfc01415 	stw	ra,80(sp)
   12000:	df001315 	stw	fp,76(sp)
   12004:	d9400115 	stw	r5,4(sp)
   12008:	df000a15 	stw	fp,40(sp)
   1200c:	dec00c15 	stw	sp,48(sp)
   12010:	00151600 	call	15160 <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   12014:	d8800117 	ldw	r2,4(sp)
    _Function_base() : _M_manager(nullptr) { }
   12018:	d8001115 	stw	zero,68(sp)
    bool _M_empty() const { return !_M_manager; }
   1201c:	10800217 	ldw	r2,8(r2)
      if (static_cast<bool>(__x))
   12020:	10000c26 	beq	r2,zero,12054 <_ZN6Serial4UARTC1ESt8functionIFvRNS_10rx_messageEEE+0x84>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   12024:	d9400117 	ldw	r5,4(sp)
   12028:	00c00044 	movi	r3,1
   1202c:	d8c00315 	stw	r3,12(sp)
   12030:	01800084 	movi	r6,2
   12034:	d9000f04 	addi	r4,sp,60
   12038:	103ee83a 	callr	r2
	  _M_invoker = __x._M_invoker;
   1203c:	d8800117 	ldw	r2,4(sp)
   12040:	10800317 	ldw	r2,12(r2)
   12044:	d8801215 	stw	r2,72(sp)
	  _M_manager = __x._M_manager;
   12048:	d8800117 	ldw	r2,4(sp)
   1204c:	10800217 	ldw	r2,8(r2)
   12050:	d8801115 	stw	r2,68(sp)
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
      __a = _GLIBCXX_MOVE(__b);
   12054:	010000b4 	movhi	r4,2
   12058:	21206f17 	ldw	r4,-32324(r4)
   1205c:	008000b4 	movhi	r2,2
   12060:	10a06f04 	addi	r2,r2,-32324
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12064:	d9400f17 	ldw	r5,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   12068:	d9000f15 	stw	r4,60(sp)
   1206c:	11000117 	ldw	r4,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12070:	d8c01017 	ldw	r3,64(sp)
      __a = _GLIBCXX_MOVE(__b);
   12074:	d9001015 	stw	r4,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12078:	010000b4 	movhi	r4,2
   1207c:	21606f15 	stw	r5,-32324(r4)
   12080:	10c00115 	stw	r3,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   12084:	11000217 	ldw	r4,8(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12088:	d8c01117 	ldw	r3,68(sp)
      __a = _GLIBCXX_MOVE(__b);
   1208c:	d9001115 	stw	r4,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12090:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   12094:	11000317 	ldw	r4,12(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12098:	d8c01217 	ldw	r3,72(sp)
      __a = _GLIBCXX_MOVE(__b);
   1209c:	d9001215 	stw	r4,72(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   120a0:	10c00315 	stw	r3,12(r2)
    class function<_Res(_ArgTypes...)>
   120a4:	d9000f04 	addi	r4,sp,60
   120a8:	0011c300 	call	11c30 <_ZNSt14_Function_baseD1Ev>
{
	callback = func;

	// Clear status flag.
	IOWR_ALTERA_AVALON_UART_STATUS(UART_0_BASE, 0x00);
   120ac:	008000b4 	movhi	r2,2
   120b0:	100a0a35 	stwio	zero,10280(r2)

	// Read the useless value in the empty receive register.
	IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   120b4:	108a0837 	ldwio	r2,10272(r2)

	// Setup RX IRQ routine.
	alt_u16 control = ALTERA_AVALON_UART_CONTROL_RRDY_MSK | ALTERA_AVALON_UART_CONTROL_E_MSK;
	IOWR_ALTERA_AVALON_UART_CONTROL (UART_0_BASE, control);
   120b8:	00c06004 	movi	r3,384
   120bc:	008000b4 	movhi	r2,2
   120c0:	10ca0b35 	stwio	r3,10284(r2)

	// Install IRQ service routine.
    alt_ic_isr_register(UART_0_IRQ_INTERRUPT_CONTROLLER_ID, UART_0_IRQ, uart_0_isr, NULL, NULL);
   120c4:	01800074 	movhi	r6,1
   120c8:	d8000015 	stw	zero,0(sp)
   120cc:	00bfffc4 	movi	r2,-1
   120d0:	000f883a 	mov	r7,zero
   120d4:	3187ce04 	addi	r6,r6,7992
   120d8:	01400104 	movi	r5,4
   120dc:	0009883a 	mov	r4,zero
   120e0:	d8800315 	stw	r2,12(sp)
   120e4:	0015c040 	call	15c04 <alt_ic_isr_register>

    // Enable interrupt.
	IOWR_ALTERA_AVALON_UART_CONTROL(UART_0_BASE, ALTERA_AVALON_UART_CONTROL_RRDY_MSK);
   120e8:	00c02004 	movi	r3,128
   120ec:	008000b4 	movhi	r2,2
   120f0:	10ca0b35 	stwio	r3,10284(r2)
   120f4:	d9000204 	addi	r4,sp,8
   120f8:	00151780 	call	15178 <_Unwind_SjLj_Unregister>
}
   120fc:	dfc01417 	ldw	ra,80(sp)
   12100:	df001317 	ldw	fp,76(sp)
   12104:	dec01504 	addi	sp,sp,84
   12108:	f800283a 	ret
    : _Function_base()
   1210c:	d8800417 	ldw	r2,16(sp)
   12110:	d9000f04 	addi	r4,sp,60
   12114:	d8800115 	stw	r2,4(sp)
   12118:	0011c300 	call	11c30 <_ZNSt14_Function_baseD1Ev>
   1211c:	d9000117 	ldw	r4,4(sp)
   12120:	00bfffc4 	movi	r2,-1
   12124:	d8800315 	stw	r2,12(sp)
   12128:	00153480 	call	15348 <_Unwind_SjLj_Resume>

0001212c <_ZN6Serial4UART14convertToArrayENS_10tx_messageE>:
		IOWR_ALTERA_AVALON_UART_TXDATA(UART_0_BASE, data_byte);
	}
}

std::array<uint8_t, 4> Serial::UART::convertToArray(tx_message msg)
{
   1212c:	defffd04 	addi	sp,sp,-12
   12130:	2805883a 	mov	r2,r5
            reinterpret_cast<uint8_t *>(&msg),
            reinterpret_cast<uint8_t *>(&msg) + 4,
            &temp[0]
    );
    return temp;
}
   12134:	dec00304 	addi	sp,sp,12
   12138:	f800283a 	ret

0001213c <_ZN6Serial4UART8sendDataENS_10tx_messageE>:
{
   1213c:	defffe04 	addi	sp,sp,-8
   12140:	dfc00115 	stw	ra,4(sp)
	std::array<uint8_t, 4> data	= convertToArray(msg);
   12144:	001212c0 	call	1212c <_ZN6Serial4UART14convertToArrayENS_10tx_messageE>
   12148:	d8800015 	stw	r2,0(sp)
   1214c:	0005883a 	mov	r2,zero
	for (uint8_t data_byte : data)
   12150:	d887883a 	add	r3,sp,r2
   12154:	19000003 	ldbu	r4,0(r3)
		alt_u8 status = IORD_ALTERA_AVALON_UART_STATUS (UART_0_BASE);
   12158:	00c000b4 	movhi	r3,2
   1215c:	18ca0a37 	ldwio	r3,10280(r3)
		while (! (status & ALTERA_AVALON_UART_STATUS_TRDY_MSK))
   12160:	18c0100c 	andi	r3,r3,64
   12164:	183ffc26 	beq	r3,zero,12158 <_ZN6Serial4UART8sendDataENS_10tx_messageE+0x1c>
		IOWR_ALTERA_AVALON_UART_TXDATA(UART_0_BASE, data_byte);
   12168:	20c03fcc 	andi	r3,r4,255
   1216c:	010000b4 	movhi	r4,2
   12170:	20ca0935 	stwio	r3,10276(r4)
	for (uint8_t data_byte : data)
   12174:	10800044 	addi	r2,r2,1
   12178:	10c00118 	cmpnei	r3,r2,4
   1217c:	183ff41e 	bne	r3,zero,12150 <_ZN6Serial4UART8sendDataENS_10tx_messageE+0x14>
}
   12180:	dfc00117 	ldw	ra,4(sp)
   12184:	dec00204 	addi	sp,sp,8
   12188:	f800283a 	ret

0001218c <_GLOBAL__sub_I__ZN6Serial4UART10uart_readyE>:
    _Function_base() : _M_manager(nullptr) { }
   1218c:	008000b4 	movhi	r2,2
   12190:	10207115 	stw	zero,-32316(r2)
}
   12194:	f800283a 	ret

00012198 <_GLOBAL__sub_D__ZN6Serial4UART10uart_readyE>:
    class function<_Res(_ArgTypes...)>
   12198:	010000b4 	movhi	r4,2
   1219c:	21206f04 	addi	r4,r4,-32324
   121a0:	0011c301 	jmpi	11c30 <_ZNSt14_Function_baseD1Ev>

000121a4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   121a4:	20800017 	ldw	r2,0(r4)
   121a8:	defffa04 	addi	sp,sp,-24
   121ac:	dc000415 	stw	r16,16(sp)
   121b0:	10800617 	ldw	r2,24(r2)
   121b4:	3021883a 	mov	r16,r6
   121b8:	31800017 	ldw	r6,0(r6)
   121bc:	00c00404 	movi	r3,16
   121c0:	dfc00515 	stw	ra,20(sp)
   121c4:	d8000015 	stw	zero,0(sp)
   121c8:	d8000115 	stw	zero,4(sp)
   121cc:	d8c00215 	stw	r3,8(sp)
   121d0:	d8000315 	stw	zero,12(sp)
   121d4:	d80f883a 	mov	r7,sp
   121d8:	103ee83a 	callr	r2
   121dc:	d8800117 	ldw	r2,4(sp)
   121e0:	1080018c 	andi	r2,r2,6
   121e4:	10800198 	cmpnei	r2,r2,6
   121e8:	1000071e 	bne	r2,zero,12208 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
   121ec:	d8c00017 	ldw	r3,0(sp)
   121f0:	00800044 	movi	r2,1
   121f4:	80c00015 	stw	r3,0(r16)
   121f8:	dfc00517 	ldw	ra,20(sp)
   121fc:	dc000417 	ldw	r16,16(sp)
   12200:	dec00604 	addi	sp,sp,24
   12204:	f800283a 	ret
   12208:	0005883a 	mov	r2,zero
   1220c:	dfc00517 	ldw	ra,20(sp)
   12210:	dc000417 	ldw	r16,16(sp)
   12214:	dec00604 	addi	sp,sp,24
   12218:	f800283a 	ret

0001221c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
   1221c:	d8c00017 	ldw	r3,0(sp)
   12220:	00800044 	movi	r2,1
   12224:	19800126 	beq	r3,r6,1222c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
   12228:	f800283a 	ret
   1222c:	00800184 	movi	r2,6
   12230:	f800283a 	ret

00012234 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   12234:	00800074 	movhi	r2,1
   12238:	109b8f04 	addi	r2,r2,28220
   1223c:	20800015 	stw	r2,0(r4)
   12240:	00138a81 	jmpi	138a8 <_ZNSt9type_infoD1Ev>

00012244 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   12244:	defffe04 	addi	sp,sp,-8
   12248:	00800074 	movhi	r2,1
   1224c:	dc000015 	stw	r16,0(sp)
   12250:	dfc00115 	stw	ra,4(sp)
   12254:	109b8f04 	addi	r2,r2,28220
   12258:	20800015 	stw	r2,0(r4)
   1225c:	2021883a 	mov	r16,r4
   12260:	00138a80 	call	138a8 <_ZNSt9type_infoD1Ev>
   12264:	01400204 	movi	r5,8
   12268:	8009883a 	mov	r4,r16
   1226c:	dfc00117 	ldw	ra,4(sp)
   12270:	dc000017 	ldw	r16,0(sp)
   12274:	dec00204 	addi	sp,sp,8
   12278:	00124481 	jmpi	12448 <_ZdlPvj>

0001227c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
   1227c:	21000117 	ldw	r4,4(r4)
   12280:	29400117 	ldw	r5,4(r5)
   12284:	defffd04 	addi	sp,sp,-12
   12288:	dc400115 	stw	r17,4(sp)
   1228c:	dc000015 	stw	r16,0(sp)
   12290:	dfc00215 	stw	ra,8(sp)
   12294:	3023883a 	mov	r17,r6
   12298:	3821883a 	mov	r16,r7
   1229c:	21400526 	beq	r4,r5,122b4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
   122a0:	20800007 	ldb	r2,0(r4)
   122a4:	10800aa0 	cmpeqi	r2,r2,42
   122a8:	10000d1e 	bne	r2,zero,122e0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   122ac:	0015a980 	call	15a98 <strcmp>
   122b0:	10000b1e 	bne	r2,zero,122e0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   122b4:	00800204 	movi	r2,8
   122b8:	80800315 	stw	r2,12(r16)
   122bc:	00800184 	movi	r2,6
   122c0:	80800115 	stw	r2,4(r16)
   122c4:	84400015 	stw	r17,0(r16)
   122c8:	00800044 	movi	r2,1
   122cc:	dfc00217 	ldw	ra,8(sp)
   122d0:	dc400117 	ldw	r17,4(sp)
   122d4:	dc000017 	ldw	r16,0(sp)
   122d8:	dec00304 	addi	sp,sp,12
   122dc:	f800283a 	ret
   122e0:	0005883a 	mov	r2,zero
   122e4:	003ff906 	br	122cc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>

000122e8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
   122e8:	defffb04 	addi	sp,sp,-20
   122ec:	dc800315 	stw	r18,12(sp)
   122f0:	dc400215 	stw	r17,8(sp)
   122f4:	2025883a 	mov	r18,r4
   122f8:	2823883a 	mov	r17,r5
   122fc:	21000117 	ldw	r4,4(r4)
   12300:	29400117 	ldw	r5,4(r5)
   12304:	dfc00415 	stw	ra,16(sp)
   12308:	dc000115 	stw	r16,4(sp)
   1230c:	21400826 	beq	r4,r5,12330 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x48>
   12310:	20800007 	ldb	r2,0(r4)
   12314:	3821883a 	mov	r16,r7
   12318:	10800aa0 	cmpeqi	r2,r2,42
   1231c:	10000b1e 	bne	r2,zero,1234c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12320:	d9800015 	stw	r6,0(sp)
   12324:	0015a980 	call	15a98 <strcmp>
   12328:	d9800017 	ldw	r6,0(sp)
   1232c:	1000071e 	bne	r2,zero,1234c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12330:	00800044 	movi	r2,1
   12334:	dfc00417 	ldw	ra,16(sp)
   12338:	dc800317 	ldw	r18,12(sp)
   1233c:	dc400217 	ldw	r17,8(sp)
   12340:	dc000117 	ldw	r16,4(sp)
   12344:	dec00504 	addi	sp,sp,20
   12348:	f800283a 	ret
   1234c:	81c00128 	cmpgeui	r7,r16,4
   12350:	38000a1e 	bne	r7,zero,1237c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x94>
   12354:	88800017 	ldw	r2,0(r17)
   12358:	900b883a 	mov	r5,r18
   1235c:	8809883a 	mov	r4,r17
   12360:	10800517 	ldw	r2,20(r2)
   12364:	dfc00417 	ldw	ra,16(sp)
   12368:	dc800317 	ldw	r18,12(sp)
   1236c:	dc400217 	ldw	r17,8(sp)
   12370:	dc000117 	ldw	r16,4(sp)
   12374:	dec00504 	addi	sp,sp,20
   12378:	1000683a 	jmp	r2
   1237c:	0005883a 	mov	r2,zero
   12380:	003fec06 	br	12334 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x4c>

00012384 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
   12384:	defffa04 	addi	sp,sp,-24
   12388:	dc400315 	stw	r17,12(sp)
   1238c:	d8800817 	ldw	r2,32(sp)
   12390:	dc400617 	ldw	r17,24(sp)
   12394:	dc800415 	stw	r18,16(sp)
   12398:	dc000215 	stw	r16,8(sp)
   1239c:	dfc00515 	stw	ra,20(sp)
   123a0:	dc800917 	ldw	r18,36(sp)
   123a4:	21000117 	ldw	r4,4(r4)
   123a8:	3021883a 	mov	r16,r6
   123ac:	88801226 	beq	r17,r2,123f8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x74>
   123b0:	39400117 	ldw	r5,4(r7)
   123b4:	21400526 	beq	r4,r5,123cc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   123b8:	20800007 	ldb	r2,0(r4)
   123bc:	10800aa0 	cmpeqi	r2,r2,42
   123c0:	1000061e 	bne	r2,zero,123dc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   123c4:	0015a980 	call	15a98 <strcmp>
   123c8:	1000041e 	bne	r2,zero,123dc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   123cc:	00800044 	movi	r2,1
   123d0:	94400015 	stw	r17,0(r18)
   123d4:	94000115 	stw	r16,4(r18)
   123d8:	90800315 	stw	r2,12(r18)
   123dc:	0005883a 	mov	r2,zero
   123e0:	dfc00517 	ldw	ra,20(sp)
   123e4:	dc800417 	ldw	r18,16(sp)
   123e8:	dc400317 	ldw	r17,12(sp)
   123ec:	dc000217 	ldw	r16,8(sp)
   123f0:	dec00604 	addi	sp,sp,24
   123f4:	f800283a 	ret
   123f8:	d8800717 	ldw	r2,28(sp)
   123fc:	11400117 	ldw	r5,4(r2)
   12400:	21400f26 	beq	r4,r5,12440 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12404:	20800007 	ldb	r2,0(r4)
   12408:	10800aa0 	cmpeqi	r2,r2,42
   1240c:	1000091e 	bne	r2,zero,12434 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
   12410:	d9c00115 	stw	r7,4(sp)
   12414:	d9000015 	stw	r4,0(sp)
   12418:	0015a980 	call	15a98 <strcmp>
   1241c:	d9000017 	ldw	r4,0(sp)
   12420:	d9c00117 	ldw	r7,4(sp)
   12424:	10000626 	beq	r2,zero,12440 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12428:	39400117 	ldw	r5,4(r7)
   1242c:	217fe51e 	bne	r4,r5,123c4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x40>
   12430:	003fe606 	br	123cc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12434:	38800117 	ldw	r2,4(r7)
   12438:	20bfe81e 	bne	r4,r2,123dc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   1243c:	003fe306 	br	123cc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12440:	94000215 	stw	r16,8(r18)
   12444:	003fe506 	br	123dc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>

00012448 <_ZdlPvj>:
   12448:	001437c1 	jmpi	1437c <_ZdlPv>

0001244c <_ZdaPv>:
   1244c:	001437c1 	jmpi	1437c <_ZdlPv>

00012450 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
   12450:	28800017 	ldw	r2,0(r5)
   12454:	30c00017 	ldw	r3,0(r6)
   12458:	defffb04 	addi	sp,sp,-20
   1245c:	10800217 	ldw	r2,8(r2)
   12460:	dc800315 	stw	r18,12(sp)
   12464:	dc400215 	stw	r17,8(sp)
   12468:	dc000115 	stw	r16,4(sp)
   1246c:	dfc00415 	stw	ra,16(sp)
   12470:	2023883a 	mov	r17,r4
   12474:	d8c00015 	stw	r3,0(sp)
   12478:	2809883a 	mov	r4,r5
   1247c:	2821883a 	mov	r16,r5
   12480:	3025883a 	mov	r18,r6
   12484:	103ee83a 	callr	r2
   12488:	10803fcc 	andi	r2,r2,255
   1248c:	10000326 	beq	r2,zero,1249c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
   12490:	d8800017 	ldw	r2,0(sp)
   12494:	10800017 	ldw	r2,0(r2)
   12498:	d8800015 	stw	r2,0(sp)
   1249c:	88800017 	ldw	r2,0(r17)
   124a0:	01c00044 	movi	r7,1
   124a4:	d80d883a 	mov	r6,sp
   124a8:	10800417 	ldw	r2,16(r2)
   124ac:	800b883a 	mov	r5,r16
   124b0:	8809883a 	mov	r4,r17
   124b4:	103ee83a 	callr	r2
   124b8:	10c03fcc 	andi	r3,r2,255
   124bc:	18000226 	beq	r3,zero,124c8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x78>
   124c0:	d8c00017 	ldw	r3,0(sp)
   124c4:	90c00015 	stw	r3,0(r18)
   124c8:	dfc00417 	ldw	ra,16(sp)
   124cc:	dc800317 	ldw	r18,12(sp)
   124d0:	dc400217 	ldw	r17,8(sp)
   124d4:	dc000117 	ldw	r16,4(sp)
   124d8:	dec00504 	addi	sp,sp,20
   124dc:	f800283a 	ret

000124e0 <_ZL28read_encoded_value_with_basehjPKhPj>:
   124e0:	20803fcc 	andi	r2,r4,255
   124e4:	10801418 	cmpnei	r2,r2,80
   124e8:	10002c26 	beq	r2,zero,1259c <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
   124ec:	208003cc 	andi	r2,r4,15
   124f0:	10c00368 	cmpgeui	r3,r2,13
   124f4:	1800711e 	bne	r3,zero,126bc <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
   124f8:	100490ba 	slli	r2,r2,2
   124fc:	00c00074 	movhi	r3,1
   12500:	10c7883a 	add	r3,r2,r3
   12504:	18894317 	ldw	r2,9484(r3)
   12508:	1000683a 	jmp	r2
   1250c:	00012540 	call	1254 <__alt_mem_onchip_mem-0xedac>
   12510:	00012630 	cmpltui	zero,zero,1176
   12514:	000125f4 	movhi	zero,1175
   12518:	00012540 	call	1254 <__alt_mem_onchip_mem-0xedac>
   1251c:	000125c4 	movi	zero,1175
   12520:	000126bc 	xorhi	zero,zero,1178
   12524:	000126bc 	xorhi	zero,zero,1178
   12528:	000126bc 	xorhi	zero,zero,1178
   1252c:	000126bc 	xorhi	zero,zero,1178
   12530:	00012668 	cmpgeui	zero,zero,1177
   12534:	0001260c 	andi	zero,zero,1176
   12538:	00012540 	call	1254 <__alt_mem_onchip_mem-0xedac>
   1253c:	000125c4 	movi	zero,1175
   12540:	32000043 	ldbu	r8,1(r6)
   12544:	30800083 	ldbu	r2,2(r6)
   12548:	30c000c3 	ldbu	r3,3(r6)
   1254c:	32400003 	ldbu	r9,0(r6)
   12550:	4010923a 	slli	r8,r8,8
   12554:	1004943a 	slli	r2,r2,16
   12558:	1806963a 	slli	r3,r3,24
   1255c:	4250b03a 	or	r8,r8,r9
   12560:	1204b03a 	or	r2,r2,r8
   12564:	1886b03a 	or	r3,r3,r2
   12568:	30800104 	addi	r2,r6,4
   1256c:	18000926 	beq	r3,zero,12594 <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
   12570:	22001c0c 	andi	r8,r4,112
   12574:	42000418 	cmpnei	r8,r8,16
   12578:	4000011e 	bne	r8,zero,12580 <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
   1257c:	300b883a 	mov	r5,r6
   12580:	21003fcc 	andi	r4,r4,255
   12584:	2100201c 	xori	r4,r4,128
   12588:	213fe004 	addi	r4,r4,-128
   1258c:	1947883a 	add	r3,r3,r5
   12590:	20000916 	blt	r4,zero,125b8 <_ZL28read_encoded_value_with_basehjPKhPj+0xd8>
   12594:	38c00015 	stw	r3,0(r7)
   12598:	f800283a 	ret
   1259c:	308000c4 	addi	r2,r6,3
   125a0:	01bfff04 	movi	r6,-4
   125a4:	1184703a 	and	r2,r2,r6
   125a8:	10c00017 	ldw	r3,0(r2)
   125ac:	10800104 	addi	r2,r2,4
   125b0:	38c00015 	stw	r3,0(r7)
   125b4:	f800283a 	ret
   125b8:	18c00017 	ldw	r3,0(r3)
   125bc:	38c00015 	stw	r3,0(r7)
   125c0:	f800283a 	ret
   125c4:	32000043 	ldbu	r8,1(r6)
   125c8:	30800083 	ldbu	r2,2(r6)
   125cc:	30c000c3 	ldbu	r3,3(r6)
   125d0:	32400003 	ldbu	r9,0(r6)
   125d4:	4010923a 	slli	r8,r8,8
   125d8:	1004943a 	slli	r2,r2,16
   125dc:	1806963a 	slli	r3,r3,24
   125e0:	4250b03a 	or	r8,r8,r9
   125e4:	1204b03a 	or	r2,r2,r8
   125e8:	1886b03a 	or	r3,r3,r2
   125ec:	30800204 	addi	r2,r6,8
   125f0:	003fde06 	br	1256c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   125f4:	30c00043 	ldbu	r3,1(r6)
   125f8:	32000003 	ldbu	r8,0(r6)
   125fc:	30800084 	addi	r2,r6,2
   12600:	1806923a 	slli	r3,r3,8
   12604:	1a06b03a 	or	r3,r3,r8
   12608:	003fd806 	br	1256c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   1260c:	30c00043 	ldbu	r3,1(r6)
   12610:	32000003 	ldbu	r8,0(r6)
   12614:	30800084 	addi	r2,r6,2
   12618:	1806923a 	slli	r3,r3,8
   1261c:	1a06b03a 	or	r3,r3,r8
   12620:	18ffffcc 	andi	r3,r3,65535
   12624:	18e0001c 	xori	r3,r3,32768
   12628:	18e00004 	addi	r3,r3,-32768
   1262c:	003fcf06 	br	1256c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12630:	3005883a 	mov	r2,r6
   12634:	0007883a 	mov	r3,zero
   12638:	0015883a 	mov	r10,zero
   1263c:	12000003 	ldbu	r8,0(r2)
   12640:	10800044 	addi	r2,r2,1
   12644:	42401fcc 	andi	r9,r8,127
   12648:	4a92983a 	sll	r9,r9,r10
   1264c:	42003fcc 	andi	r8,r8,255
   12650:	4200201c 	xori	r8,r8,128
   12654:	423fe004 	addi	r8,r8,-128
   12658:	1a46b03a 	or	r3,r3,r9
   1265c:	528001c4 	addi	r10,r10,7
   12660:	403ff616 	blt	r8,zero,1263c <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
   12664:	003fc106 	br	1256c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12668:	3005883a 	mov	r2,r6
   1266c:	0007883a 	mov	r3,zero
   12670:	0013883a 	mov	r9,zero
   12674:	12800003 	ldbu	r10,0(r2)
   12678:	10800044 	addi	r2,r2,1
   1267c:	52001fcc 	andi	r8,r10,127
   12680:	4250983a 	sll	r8,r8,r9
   12684:	52c03fcc 	andi	r11,r10,255
   12688:	5ac0201c 	xori	r11,r11,128
   1268c:	5affe004 	addi	r11,r11,-128
   12690:	1a06b03a 	or	r3,r3,r8
   12694:	4a4001c4 	addi	r9,r9,7
   12698:	583ff616 	blt	r11,zero,12674 <_ZL28read_encoded_value_with_basehjPKhPj+0x194>
   1269c:	4a000828 	cmpgeui	r8,r9,32
   126a0:	403fb21e 	bne	r8,zero,1256c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   126a4:	5280100c 	andi	r10,r10,64
   126a8:	503fb026 	beq	r10,zero,1256c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   126ac:	023fffc4 	movi	r8,-1
   126b0:	4252983a 	sll	r9,r8,r9
   126b4:	1a46b03a 	or	r3,r3,r9
   126b8:	003fad06 	br	12570 <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
   126bc:	deffff04 	addi	sp,sp,-4
   126c0:	dfc00015 	stw	ra,0(sp)
   126c4:	001546c0 	call	1546c <abort>

000126c8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
   126c8:	20803fcc 	andi	r2,r4,255
   126cc:	10803fe0 	cmpeqi	r2,r2,255
   126d0:	1000161e 	bne	r2,zero,1272c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   126d4:	2007883a 	mov	r3,r4
   126d8:	18801c0c 	andi	r2,r3,112
   126dc:	2809883a 	mov	r4,r5
   126e0:	11400c20 	cmpeqi	r5,r2,48
   126e4:	2800131e 	bne	r5,zero,12734 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
   126e8:	11400c68 	cmpgeui	r5,r2,49
   126ec:	2800031e 	bne	r5,zero,126fc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
   126f0:	11400820 	cmpeqi	r5,r2,32
   126f4:	28000426 	beq	r5,zero,12708 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
   126f8:	00152341 	jmpi	15234 <_Unwind_GetTextRelBase>
   126fc:	10c01020 	cmpeqi	r3,r2,64
   12700:	18000826 	beq	r3,zero,12724 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
   12704:	001521c1 	jmpi	1521c <_Unwind_GetRegionStart>
   12708:	10800868 	cmpgeui	r2,r2,33
   1270c:	1000021e 	bne	r2,zero,12718 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12710:	18c0180c 	andi	r3,r3,96
   12714:	18000526 	beq	r3,zero,1272c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12718:	deffff04 	addi	sp,sp,-4
   1271c:	dfc00015 	stw	ra,0(sp)
   12720:	001546c0 	call	1546c <abort>
   12724:	10801420 	cmpeqi	r2,r2,80
   12728:	103ffb26 	beq	r2,zero,12718 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   1272c:	0005883a 	mov	r2,zero
   12730:	f800283a 	ret
   12734:	001522c1 	jmpi	1522c <_Unwind_GetDataRelBase>

00012738 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
   12738:	defffb04 	addi	sp,sp,-20
   1273c:	dc800215 	stw	r18,8(sp)
   12740:	dc400115 	stw	r17,4(sp)
   12744:	dc000015 	stw	r16,0(sp)
   12748:	dfc00415 	stw	ra,16(sp)
   1274c:	dcc00315 	stw	r19,12(sp)
   12750:	2025883a 	mov	r18,r4
   12754:	2821883a 	mov	r16,r5
   12758:	3023883a 	mov	r17,r6
   1275c:	20003d26 	beq	r4,zero,12854 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
   12760:	001521c0 	call	1521c <_Unwind_GetRegionStart>
   12764:	88800015 	stw	r2,0(r17)
   12768:	84c00003 	ldbu	r19,0(r16)
   1276c:	84000044 	addi	r16,r16,1
   12770:	98c03fe0 	cmpeqi	r3,r19,255
   12774:	18002d26 	beq	r3,zero,1282c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
   12778:	88800115 	stw	r2,4(r17)
   1277c:	81000003 	ldbu	r4,0(r16)
   12780:	80800044 	addi	r2,r16,1
   12784:	20c03fcc 	andi	r3,r4,255
   12788:	89000505 	stb	r4,20(r17)
   1278c:	18c03fe0 	cmpeqi	r3,r3,255
   12790:	1800321e 	bne	r3,zero,1285c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
   12794:	000d883a 	mov	r6,zero
   12798:	000b883a 	mov	r5,zero
   1279c:	10c00003 	ldbu	r3,0(r2)
   127a0:	10800044 	addi	r2,r2,1
   127a4:	19001fcc 	andi	r4,r3,127
   127a8:	2148983a 	sll	r4,r4,r5
   127ac:	18c03fcc 	andi	r3,r3,255
   127b0:	18c0201c 	xori	r3,r3,128
   127b4:	18ffe004 	addi	r3,r3,-128
   127b8:	310cb03a 	or	r6,r6,r4
   127bc:	294001c4 	addi	r5,r5,7
   127c0:	183ff616 	blt	r3,zero,1279c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
   127c4:	118d883a 	add	r6,r2,r6
   127c8:	89800315 	stw	r6,12(r17)
   127cc:	10c00003 	ldbu	r3,0(r2)
   127d0:	000f883a 	mov	r7,zero
   127d4:	10800044 	addi	r2,r2,1
   127d8:	88c00545 	stb	r3,21(r17)
   127dc:	000b883a 	mov	r5,zero
   127e0:	10c00003 	ldbu	r3,0(r2)
   127e4:	10800044 	addi	r2,r2,1
   127e8:	19001fcc 	andi	r4,r3,127
   127ec:	2148983a 	sll	r4,r4,r5
   127f0:	18c03fcc 	andi	r3,r3,255
   127f4:	18c0201c 	xori	r3,r3,128
   127f8:	18ffe004 	addi	r3,r3,-128
   127fc:	390eb03a 	or	r7,r7,r4
   12800:	294001c4 	addi	r5,r5,7
   12804:	183ff616 	blt	r3,zero,127e0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
   12808:	11cf883a 	add	r7,r2,r7
   1280c:	89c00415 	stw	r7,16(r17)
   12810:	dfc00417 	ldw	ra,16(sp)
   12814:	dcc00317 	ldw	r19,12(sp)
   12818:	dc800217 	ldw	r18,8(sp)
   1281c:	dc400117 	ldw	r17,4(sp)
   12820:	dc000017 	ldw	r16,0(sp)
   12824:	dec00504 	addi	sp,sp,20
   12828:	f800283a 	ret
   1282c:	900b883a 	mov	r5,r18
   12830:	9809883a 	mov	r4,r19
   12834:	00126c80 	call	126c8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12838:	800d883a 	mov	r6,r16
   1283c:	89c00104 	addi	r7,r17,4
   12840:	100b883a 	mov	r5,r2
   12844:	9809883a 	mov	r4,r19
   12848:	00124e00 	call	124e0 <_ZL28read_encoded_value_with_basehjPKhPj>
   1284c:	1021883a 	mov	r16,r2
   12850:	003fca06 	br	1277c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
   12854:	0005883a 	mov	r2,zero
   12858:	003fc206 	br	12764 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
   1285c:	88000315 	stw	zero,12(r17)
   12860:	003fda06 	br	127cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

00012864 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
   12864:	defffa04 	addi	sp,sp,-24
   12868:	dc000215 	stw	r16,8(sp)
   1286c:	24000317 	ldw	r16,12(r4)
   12870:	01ce303a 	nor	r7,zero,r7
   12874:	dc800415 	stw	r18,16(sp)
   12878:	dc400315 	stw	r17,12(sp)
   1287c:	dfc00515 	stw	ra,20(sp)
   12880:	2025883a 	mov	r18,r4
   12884:	2823883a 	mov	r17,r5
   12888:	d9800015 	stw	r6,0(sp)
   1288c:	81e1883a 	add	r16,r16,r7
   12890:	000f883a 	mov	r7,zero
   12894:	000d883a 	mov	r6,zero
   12898:	80800003 	ldbu	r2,0(r16)
   1289c:	84000044 	addi	r16,r16,1
   128a0:	10c01fcc 	andi	r3,r2,127
   128a4:	1986983a 	sll	r3,r3,r6
   128a8:	10803fcc 	andi	r2,r2,255
   128ac:	1080201c 	xori	r2,r2,128
   128b0:	10bfe004 	addi	r2,r2,-128
   128b4:	38ceb03a 	or	r7,r7,r3
   128b8:	318001c4 	addi	r6,r6,7
   128bc:	103ff616 	blt	r2,zero,12898 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
   128c0:	38002926 	beq	r7,zero,12968 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x104>
   128c4:	90800503 	ldbu	r2,20(r18)
   128c8:	11003fcc 	andi	r4,r2,255
   128cc:	20c03fe0 	cmpeqi	r3,r4,255
   128d0:	1800231e 	bne	r3,zero,12960 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xfc>
   128d4:	108001cc 	andi	r2,r2,7
   128d8:	10c000a0 	cmpeqi	r3,r2,2
   128dc:	18001d1e 	bne	r3,zero,12954 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xf0>
   128e0:	10c000e8 	cmpgeui	r3,r2,3
   128e4:	18001726 	beq	r3,zero,12944 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe0>
   128e8:	10c000e0 	cmpeqi	r3,r2,3
   128ec:	1800161e 	bne	r3,zero,12948 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe4>
   128f0:	10800120 	cmpeqi	r2,r2,4
   128f4:	10001e26 	beq	r2,zero,12970 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   128f8:	380e90fa 	slli	r7,r7,3
   128fc:	01c5c83a 	sub	r2,zero,r7
   12900:	91800317 	ldw	r6,12(r18)
   12904:	91400217 	ldw	r5,8(r18)
   12908:	d9c00104 	addi	r7,sp,4
   1290c:	308d883a 	add	r6,r6,r2
   12910:	00124e00 	call	124e0 <_ZL28read_encoded_value_with_basehjPKhPj>
   12914:	d9000117 	ldw	r4,4(sp)
   12918:	d80d883a 	mov	r6,sp
   1291c:	880b883a 	mov	r5,r17
   12920:	00124500 	call	12450 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   12924:	10c03fcc 	andi	r3,r2,255
   12928:	183fd926 	beq	r3,zero,12890 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
   1292c:	dfc00517 	ldw	ra,20(sp)
   12930:	dc800417 	ldw	r18,16(sp)
   12934:	dc400317 	ldw	r17,12(sp)
   12938:	dc000217 	ldw	r16,8(sp)
   1293c:	dec00604 	addi	sp,sp,24
   12940:	f800283a 	ret
   12944:	10000a1e 	bne	r2,zero,12970 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   12948:	380e90ba 	slli	r7,r7,2
   1294c:	01c5c83a 	sub	r2,zero,r7
   12950:	003feb06 	br	12900 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   12954:	39cf883a 	add	r7,r7,r7
   12958:	01c5c83a 	sub	r2,zero,r7
   1295c:	003fe806 	br	12900 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   12960:	0005883a 	mov	r2,zero
   12964:	003fe606 	br	12900 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   12968:	0005883a 	mov	r2,zero
   1296c:	003fef06 	br	1292c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xc8>
   12970:	001546c0 	call	1546c <abort>

00012974 <__gxx_personality_sj0>:
   12974:	deffdb04 	addi	sp,sp,-148
   12978:	02000074 	movhi	r8,1
   1297c:	00c00074 	movhi	r3,1
   12980:	00800074 	movhi	r2,1
   12984:	108bfa04 	addi	r2,r2,12264
   12988:	d9000015 	stw	r4,0(sp)
   1298c:	420a5d04 	addi	r8,r8,10612
   12990:	18db0704 	addi	r3,r3,27676
   12994:	d9000d04 	addi	r4,sp,52
   12998:	d8801615 	stw	r2,88(sp)
   1299c:	dfc02415 	stw	ra,144(sp)
   129a0:	df002315 	stw	fp,140(sp)
   129a4:	d9400315 	stw	r5,12(sp)
   129a8:	d9800115 	stw	r6,4(sp)
   129ac:	d9c00215 	stw	r7,8(sp)
   129b0:	da001315 	stw	r8,76(sp)
   129b4:	d8c01415 	stw	r3,80(sp)
   129b8:	df001515 	stw	fp,84(sp)
   129bc:	dec01715 	stw	sp,92(sp)
   129c0:	00151600 	call	15160 <_Unwind_SjLj_Register>
   129c4:	d8800017 	ldw	r2,0(sp)
   129c8:	d8001a15 	stw	zero,104(sp)
   129cc:	d8001b15 	stw	zero,108(sp)
   129d0:	10800058 	cmpnei	r2,r2,1
   129d4:	1000471e 	bne	r2,zero,12af4 <__gxx_personality_sj0+0x180>
   129d8:	d9800117 	ldw	r6,4(sp)
   129dc:	00af3574 	movhi	r2,48341
   129e0:	10b54004 	addi	r2,r2,-11008
   129e4:	3085883a 	add	r2,r6,r2
   129e8:	d8800715 	stw	r2,28(sp)
   129ec:	1185803a 	cmpltu	r2,r2,r6
   129f0:	d9800217 	ldw	r6,8(sp)
   129f4:	00ee2cb4 	movhi	r3,47282
   129f8:	d9000317 	ldw	r4,12(sp)
   129fc:	18eaaf04 	addi	r3,r3,-21828
   12a00:	30c7883a 	add	r3,r6,r3
   12a04:	10c7883a 	add	r3,r2,r3
   12a08:	21000198 	cmpnei	r4,r4,6
   12a0c:	d8c00615 	stw	r3,24(sp)
   12a10:	2000011e 	bne	r4,zero,12a18 <__gxx_personality_sj0+0xa4>
   12a14:	1800d026 	beq	r3,zero,12d58 <__gxx_personality_sj0+0x3e4>
   12a18:	d9002617 	ldw	r4,152(sp)
   12a1c:	00bfffc4 	movi	r2,-1
   12a20:	d8800e15 	stw	r2,56(sp)
   12a24:	00152100 	call	15210 <_Unwind_GetLanguageSpecificData>
   12a28:	d8800515 	stw	r2,20(sp)
   12a2c:	10005d26 	beq	r2,zero,12ba4 <__gxx_personality_sj0+0x230>
   12a30:	d9400517 	ldw	r5,20(sp)
   12a34:	d9002617 	ldw	r4,152(sp)
   12a38:	d9801d04 	addi	r6,sp,116
   12a3c:	00bfffc4 	movi	r2,-1
   12a40:	d8800e15 	stw	r2,56(sp)
   12a44:	00127380 	call	12738 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   12a48:	d9002203 	ldbu	r4,136(sp)
   12a4c:	d9402617 	ldw	r5,152(sp)
   12a50:	d8800015 	stw	r2,0(sp)
   12a54:	00126c80 	call	126c8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12a58:	d9002617 	ldw	r4,152(sp)
   12a5c:	d9401b04 	addi	r5,sp,108
   12a60:	d8801f15 	stw	r2,124(sp)
   12a64:	00151e00 	call	151e0 <_Unwind_GetIPInfo>
   12a68:	d8c01b17 	ldw	r3,108(sp)
   12a6c:	d8800115 	stw	r2,4(sp)
   12a70:	18004f26 	beq	r3,zero,12bb0 <__gxx_personality_sj0+0x23c>
   12a74:	d8800117 	ldw	r2,4(sp)
   12a78:	10004a16 	blt	r2,zero,12ba4 <__gxx_personality_sj0+0x230>
   12a7c:	1000381e 	bne	r2,zero,12b60 <__gxx_personality_sj0+0x1ec>
   12a80:	d8000415 	stw	zero,16(sp)
   12a84:	d8000215 	stw	zero,8(sp)
   12a88:	00800044 	movi	r2,1
   12a8c:	d8c00317 	ldw	r3,12(sp)
   12a90:	18c0004c 	andi	r3,r3,1
   12a94:	1801061e 	bne	r3,zero,12eb0 <__gxx_personality_sj0+0x53c>
   12a98:	d8c00317 	ldw	r3,12(sp)
   12a9c:	18c0020c 	andi	r3,r3,8
   12aa0:	18010a26 	beq	r3,zero,12ecc <__gxx_personality_sj0+0x558>
   12aa4:	10800058 	cmpnei	r2,r2,1
   12aa8:	10015126 	beq	r2,zero,12ff0 <__gxx_personality_sj0+0x67c>
   12aac:	d8800417 	ldw	r2,16(sp)
   12ab0:	10014a16 	blt	r2,zero,12fdc <__gxx_personality_sj0+0x668>
   12ab4:	d9002617 	ldw	r4,152(sp)
   12ab8:	d9802517 	ldw	r6,148(sp)
   12abc:	00bfffc4 	movi	r2,-1
   12ac0:	000b883a 	mov	r5,zero
   12ac4:	d8800e15 	stw	r2,56(sp)
   12ac8:	00151b80 	call	151b8 <_Unwind_SetGR>
   12acc:	d9800417 	ldw	r6,16(sp)
   12ad0:	d9002617 	ldw	r4,152(sp)
   12ad4:	01400044 	movi	r5,1
   12ad8:	00151b80 	call	151b8 <_Unwind_SetGR>
   12adc:	d9400117 	ldw	r5,4(sp)
   12ae0:	d9002617 	ldw	r4,152(sp)
   12ae4:	00152000 	call	15200 <_Unwind_SetIP>
   12ae8:	008001c4 	movi	r2,7
   12aec:	d8800015 	stw	r2,0(sp)
   12af0:	00000206 	br	12afc <__gxx_personality_sj0+0x188>
   12af4:	008000c4 	movi	r2,3
   12af8:	d8800015 	stw	r2,0(sp)
   12afc:	d9000d04 	addi	r4,sp,52
   12b00:	00151780 	call	15178 <_Unwind_SjLj_Unregister>
   12b04:	d8800017 	ldw	r2,0(sp)
   12b08:	dfc02417 	ldw	ra,144(sp)
   12b0c:	df002317 	ldw	fp,140(sp)
   12b10:	dec02504 	addi	sp,sp,148
   12b14:	f800283a 	ret
   12b18:	000b883a 	mov	r5,zero
   12b1c:	0009883a 	mov	r4,zero
   12b20:	d8c00017 	ldw	r3,0(sp)
   12b24:	18800003 	ldbu	r2,0(r3)
   12b28:	18c00044 	addi	r3,r3,1
   12b2c:	d8c00015 	stw	r3,0(sp)
   12b30:	10c01fcc 	andi	r3,r2,127
   12b34:	1906983a 	sll	r3,r3,r4
   12b38:	10803fcc 	andi	r2,r2,255
   12b3c:	1080201c 	xori	r2,r2,128
   12b40:	10bfe004 	addi	r2,r2,-128
   12b44:	28cab03a 	or	r5,r5,r3
   12b48:	210001c4 	addi	r4,r4,7
   12b4c:	103ff416 	blt	r2,zero,12b20 <__gxx_personality_sj0+0x1ac>
   12b50:	d8800117 	ldw	r2,4(sp)
   12b54:	10bfffc4 	addi	r2,r2,-1
   12b58:	d8800115 	stw	r2,4(sp)
   12b5c:	10001726 	beq	r2,zero,12bbc <__gxx_personality_sj0+0x248>
   12b60:	000d883a 	mov	r6,zero
   12b64:	0009883a 	mov	r4,zero
   12b68:	d8c00017 	ldw	r3,0(sp)
   12b6c:	18800003 	ldbu	r2,0(r3)
   12b70:	18c00044 	addi	r3,r3,1
   12b74:	d8c00015 	stw	r3,0(sp)
   12b78:	10c01fcc 	andi	r3,r2,127
   12b7c:	1906983a 	sll	r3,r3,r4
   12b80:	10803fcc 	andi	r2,r2,255
   12b84:	1080201c 	xori	r2,r2,128
   12b88:	10bfe004 	addi	r2,r2,-128
   12b8c:	30ccb03a 	or	r6,r6,r3
   12b90:	210001c4 	addi	r4,r4,7
   12b94:	103ff416 	blt	r2,zero,12b68 <__gxx_personality_sj0+0x1f4>
   12b98:	003fdf06 	br	12b18 <__gxx_personality_sj0+0x1a4>
   12b9c:	d88008c3 	ldbu	r2,35(sp)
   12ba0:	10008c1e 	bne	r2,zero,12dd4 <__gxx_personality_sj0+0x460>
   12ba4:	00800204 	movi	r2,8
   12ba8:	d8800015 	stw	r2,0(sp)
   12bac:	003fd306 	br	12afc <__gxx_personality_sj0+0x188>
   12bb0:	10bfffc4 	addi	r2,r2,-1
   12bb4:	d8800115 	stw	r2,4(sp)
   12bb8:	003fae06 	br	12a74 <__gxx_personality_sj0+0x100>
   12bbc:	30800044 	addi	r2,r6,1
   12bc0:	d8800a15 	stw	r2,40(sp)
   12bc4:	283ff626 	beq	r5,zero,12ba0 <__gxx_personality_sj0+0x22c>
   12bc8:	d8800a17 	ldw	r2,40(sp)
   12bcc:	103ff526 	beq	r2,zero,12ba4 <__gxx_personality_sj0+0x230>
   12bd0:	d8802117 	ldw	r2,132(sp)
   12bd4:	297fffc4 	addi	r5,r5,-1
   12bd8:	1145883a 	add	r2,r2,r5
   12bdc:	d8800215 	stw	r2,8(sp)
   12be0:	10007c26 	beq	r2,zero,12dd4 <__gxx_personality_sj0+0x460>
   12be4:	d8800317 	ldw	r2,12(sp)
   12be8:	1080020c 	andi	r2,r2,8
   12bec:	d8800b15 	stw	r2,44(sp)
   12bf0:	1000bf1e 	bne	r2,zero,12ef0 <__gxx_personality_sj0+0x57c>
   12bf4:	d8800617 	ldw	r2,24(sp)
   12bf8:	1000e526 	beq	r2,zero,12f90 <__gxx_personality_sj0+0x61c>
   12bfc:	00800074 	movhi	r2,1
   12c00:	109e6704 	addi	r2,r2,31132
   12c04:	d8800915 	stw	r2,36(sp)
   12c08:	d8800717 	ldw	r2,28(sp)
   12c0c:	d80008c5 	stb	zero,35(sp)
   12c10:	108000a8 	cmpgeui	r2,r2,2
   12c14:	d8800c15 	stw	r2,48(sp)
   12c18:	d8800217 	ldw	r2,8(sp)
   12c1c:	000f883a 	mov	r7,zero
   12c20:	0007883a 	mov	r3,zero
   12c24:	d8800015 	stw	r2,0(sp)
   12c28:	d8800017 	ldw	r2,0(sp)
   12c2c:	11000003 	ldbu	r4,0(r2)
   12c30:	10800044 	addi	r2,r2,1
   12c34:	d8800015 	stw	r2,0(sp)
   12c38:	20801fcc 	andi	r2,r4,127
   12c3c:	10c4983a 	sll	r2,r2,r3
   12c40:	21403fcc 	andi	r5,r4,255
   12c44:	2940201c 	xori	r5,r5,128
   12c48:	297fe004 	addi	r5,r5,-128
   12c4c:	388eb03a 	or	r7,r7,r2
   12c50:	18c001c4 	addi	r3,r3,7
   12c54:	283ff416 	blt	r5,zero,12c28 <__gxx_personality_sj0+0x2b4>
   12c58:	18800828 	cmpgeui	r2,r3,32
   12c5c:	1000061e 	bne	r2,zero,12c78 <__gxx_personality_sj0+0x304>
   12c60:	2100100c 	andi	r4,r4,64
   12c64:	20000426 	beq	r4,zero,12c78 <__gxx_personality_sj0+0x304>
   12c68:	00800044 	movi	r2,1
   12c6c:	10c6983a 	sll	r3,r2,r3
   12c70:	00c7c83a 	sub	r3,zero,r3
   12c74:	38ceb03a 	or	r7,r7,r3
   12c78:	d9400017 	ldw	r5,0(sp)
   12c7c:	d9c00415 	stw	r7,16(sp)
   12c80:	d8000115 	stw	zero,4(sp)
   12c84:	0007883a 	mov	r3,zero
   12c88:	29000003 	ldbu	r4,0(r5)
   12c8c:	da000117 	ldw	r8,4(sp)
   12c90:	29400044 	addi	r5,r5,1
   12c94:	20801fcc 	andi	r2,r4,127
   12c98:	10c4983a 	sll	r2,r2,r3
   12c9c:	21803fcc 	andi	r6,r4,255
   12ca0:	3180201c 	xori	r6,r6,128
   12ca4:	4084b03a 	or	r2,r8,r2
   12ca8:	31bfe004 	addi	r6,r6,-128
   12cac:	d8800115 	stw	r2,4(sp)
   12cb0:	18c001c4 	addi	r3,r3,7
   12cb4:	303ff416 	blt	r6,zero,12c88 <__gxx_personality_sj0+0x314>
   12cb8:	18800828 	cmpgeui	r2,r3,32
   12cbc:	1000081e 	bne	r2,zero,12ce0 <__gxx_personality_sj0+0x36c>
   12cc0:	2100100c 	andi	r4,r4,64
   12cc4:	20000626 	beq	r4,zero,12ce0 <__gxx_personality_sj0+0x36c>
   12cc8:	00800044 	movi	r2,1
   12ccc:	10c6983a 	sll	r3,r2,r3
   12cd0:	d8800117 	ldw	r2,4(sp)
   12cd4:	00c7c83a 	sub	r3,zero,r3
   12cd8:	10c4b03a 	or	r2,r2,r3
   12cdc:	d8800115 	stw	r2,4(sp)
   12ce0:	38004726 	beq	r7,zero,12e00 <__gxx_personality_sj0+0x48c>
   12ce4:	01c04916 	blt	zero,r7,12e0c <__gxx_personality_sj0+0x498>
   12ce8:	d8800917 	ldw	r2,36(sp)
   12cec:	10000426 	beq	r2,zero,12d00 <__gxx_personality_sj0+0x38c>
   12cf0:	d8800b17 	ldw	r2,44(sp)
   12cf4:	1000021e 	bne	r2,zero,12d00 <__gxx_personality_sj0+0x38c>
   12cf8:	d8800617 	ldw	r2,24(sp)
   12cfc:	10008026 	beq	r2,zero,12f00 <__gxx_personality_sj0+0x58c>
   12d00:	d8802017 	ldw	r2,128(sp)
   12d04:	01ce303a 	nor	r7,zero,r7
   12d08:	000b883a 	mov	r5,zero
   12d0c:	11cf883a 	add	r7,r2,r7
   12d10:	0009883a 	mov	r4,zero
   12d14:	38800003 	ldbu	r2,0(r7)
   12d18:	39c00044 	addi	r7,r7,1
   12d1c:	10c01fcc 	andi	r3,r2,127
   12d20:	1906983a 	sll	r3,r3,r4
   12d24:	10803fcc 	andi	r2,r2,255
   12d28:	1080201c 	xori	r2,r2,128
   12d2c:	10bfe004 	addi	r2,r2,-128
   12d30:	28cab03a 	or	r5,r5,r3
   12d34:	210001c4 	addi	r4,r4,7
   12d38:	103ff616 	blt	r2,zero,12d14 <__gxx_personality_sj0+0x3a0>
   12d3c:	28005126 	beq	r5,zero,12e84 <__gxx_personality_sj0+0x510>
   12d40:	d8800117 	ldw	r2,4(sp)
   12d44:	103f9526 	beq	r2,zero,12b9c <__gxx_personality_sj0+0x228>
   12d48:	d8c00017 	ldw	r3,0(sp)
   12d4c:	1885883a 	add	r2,r3,r2
   12d50:	d8800215 	stw	r2,8(sp)
   12d54:	003fb006 	br	12c18 <__gxx_personality_sj0+0x2a4>
   12d58:	d8800717 	ldw	r2,28(sp)
   12d5c:	108000a8 	cmpgeui	r2,r2,2
   12d60:	103f2d1e 	bne	r2,zero,12a18 <__gxx_personality_sj0+0xa4>
   12d64:	d8802517 	ldw	r2,148(sp)
   12d68:	10bffe17 	ldw	r2,-8(r2)
   12d6c:	d8800115 	stw	r2,4(sp)
   12d70:	10005d26 	beq	r2,zero,12ee8 <__gxx_personality_sj0+0x574>
   12d74:	d8802517 	ldw	r2,148(sp)
   12d78:	10bffb17 	ldw	r2,-20(r2)
   12d7c:	d8800415 	stw	r2,16(sp)
   12d80:	d8802517 	ldw	r2,148(sp)
   12d84:	10bffd17 	ldw	r2,-12(r2)
   12d88:	d8800515 	stw	r2,20(sp)
   12d8c:	d8800417 	ldw	r2,16(sp)
   12d90:	103f480e 	bge	r2,zero,12ab4 <__gxx_personality_sj0+0x140>
   12d94:	d9002617 	ldw	r4,152(sp)
   12d98:	d9400517 	ldw	r5,20(sp)
   12d9c:	d9801d04 	addi	r6,sp,116
   12da0:	00bfffc4 	movi	r2,-1
   12da4:	d8800e15 	stw	r2,56(sp)
   12da8:	00127380 	call	12738 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   12dac:	d9402617 	ldw	r5,152(sp)
   12db0:	d9002203 	ldbu	r4,136(sp)
   12db4:	00126c80 	call	126c8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12db8:	d9002203 	ldbu	r4,136(sp)
   12dbc:	d9402617 	ldw	r5,152(sp)
   12dc0:	d8801f15 	stw	r2,124(sp)
   12dc4:	00126c80 	call	126c8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12dc8:	d8c02517 	ldw	r3,148(sp)
   12dcc:	18bffe15 	stw	r2,-8(r3)
   12dd0:	003f3806 	br	12ab4 <__gxx_personality_sj0+0x140>
   12dd4:	d8800317 	ldw	r2,12(sp)
   12dd8:	1080004c 	andi	r2,r2,1
   12ddc:	103f711e 	bne	r2,zero,12ba4 <__gxx_personality_sj0+0x230>
   12de0:	d8800317 	ldw	r2,12(sp)
   12de4:	1080020c 	andi	r2,r2,8
   12de8:	d8800415 	stw	r2,16(sp)
   12dec:	10008126 	beq	r2,zero,12ff4 <__gxx_personality_sj0+0x680>
   12df0:	d8800a17 	ldw	r2,40(sp)
   12df4:	d8000415 	stw	zero,16(sp)
   12df8:	d8800115 	stw	r2,4(sp)
   12dfc:	003f2d06 	br	12ab4 <__gxx_personality_sj0+0x140>
   12e00:	00800044 	movi	r2,1
   12e04:	d88008c5 	stb	r2,35(sp)
   12e08:	003fcd06 	br	12d40 <__gxx_personality_sj0+0x3cc>
   12e0c:	d8802203 	ldbu	r2,136(sp)
   12e10:	11003fcc 	andi	r4,r2,255
   12e14:	20c03fe0 	cmpeqi	r3,r4,255
   12e18:	18002a1e 	bne	r3,zero,12ec4 <__gxx_personality_sj0+0x550>
   12e1c:	108001cc 	andi	r2,r2,7
   12e20:	10c000a0 	cmpeqi	r3,r2,2
   12e24:	18001f1e 	bne	r3,zero,12ea4 <__gxx_personality_sj0+0x530>
   12e28:	10c000e8 	cmpgeui	r3,r2,3
   12e2c:	18001926 	beq	r3,zero,12e94 <__gxx_personality_sj0+0x520>
   12e30:	10c000e0 	cmpeqi	r3,r2,3
   12e34:	1800181e 	bne	r3,zero,12e98 <__gxx_personality_sj0+0x524>
   12e38:	10800120 	cmpeqi	r2,r2,4
   12e3c:	10007026 	beq	r2,zero,13000 <__gxx_personality_sj0+0x68c>
   12e40:	380490fa 	slli	r2,r7,3
   12e44:	0085c83a 	sub	r2,zero,r2
   12e48:	d9802017 	ldw	r6,128(sp)
   12e4c:	d9401f17 	ldw	r5,124(sp)
   12e50:	d9c01c04 	addi	r7,sp,112
   12e54:	308d883a 	add	r6,r6,r2
   12e58:	00bfffc4 	movi	r2,-1
   12e5c:	d8800e15 	stw	r2,56(sp)
   12e60:	00124e00 	call	124e0 <_ZL28read_encoded_value_with_basehjPKhPj>
   12e64:	d9001c17 	ldw	r4,112(sp)
   12e68:	20000626 	beq	r4,zero,12e84 <__gxx_personality_sj0+0x510>
   12e6c:	d9400917 	ldw	r5,36(sp)
   12e70:	283fb326 	beq	r5,zero,12d40 <__gxx_personality_sj0+0x3cc>
   12e74:	d9801a04 	addi	r6,sp,104
   12e78:	00124500 	call	12450 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   12e7c:	10803fcc 	andi	r2,r2,255
   12e80:	103faf26 	beq	r2,zero,12d40 <__gxx_personality_sj0+0x3cc>
   12e84:	d8800a17 	ldw	r2,40(sp)
   12e88:	d8800115 	stw	r2,4(sp)
   12e8c:	008000c4 	movi	r2,3
   12e90:	003efe06 	br	12a8c <__gxx_personality_sj0+0x118>
   12e94:	10005a1e 	bne	r2,zero,13000 <__gxx_personality_sj0+0x68c>
   12e98:	380490ba 	slli	r2,r7,2
   12e9c:	0085c83a 	sub	r2,zero,r2
   12ea0:	003fe906 	br	12e48 <__gxx_personality_sj0+0x4d4>
   12ea4:	39cf883a 	add	r7,r7,r7
   12ea8:	01c5c83a 	sub	r2,zero,r7
   12eac:	003fe606 	br	12e48 <__gxx_personality_sj0+0x4d4>
   12eb0:	d8800617 	ldw	r2,24(sp)
   12eb4:	10002326 	beq	r2,zero,12f44 <__gxx_personality_sj0+0x5d0>
   12eb8:	00800184 	movi	r2,6
   12ebc:	d8800015 	stw	r2,0(sp)
   12ec0:	003f0e06 	br	12afc <__gxx_personality_sj0+0x188>
   12ec4:	0005883a 	mov	r2,zero
   12ec8:	003fdf06 	br	12e48 <__gxx_personality_sj0+0x4d4>
   12ecc:	d8c00617 	ldw	r3,24(sp)
   12ed0:	183ef41e 	bne	r3,zero,12aa4 <__gxx_personality_sj0+0x130>
   12ed4:	d8c00717 	ldw	r3,28(sp)
   12ed8:	18c000a8 	cmpgeui	r3,r3,2
   12edc:	183ef11e 	bne	r3,zero,12aa4 <__gxx_personality_sj0+0x130>
   12ee0:	10800060 	cmpeqi	r2,r2,1
   12ee4:	103fa926 	beq	r2,zero,12d8c <__gxx_personality_sj0+0x418>
   12ee8:	d9002517 	ldw	r4,148(sp)
   12eec:	00146600 	call	14660 <__cxa_call_terminate>
   12ef0:	00800074 	movhi	r2,1
   12ef4:	109e6504 	addi	r2,r2,31124
   12ef8:	d8800915 	stw	r2,36(sp)
   12efc:	003f4206 	br	12c08 <__gxx_personality_sj0+0x294>
   12f00:	d8800c17 	ldw	r2,48(sp)
   12f04:	103f7e1e 	bne	r2,zero,12d00 <__gxx_personality_sj0+0x38c>
   12f08:	d9801a17 	ldw	r6,104(sp)
   12f0c:	d9400917 	ldw	r5,36(sp)
   12f10:	00bfffc4 	movi	r2,-1
   12f14:	d9001d04 	addi	r4,sp,116
   12f18:	d8800e15 	stw	r2,56(sp)
   12f1c:	00128640 	call	12864 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   12f20:	10803fcc 	andi	r2,r2,255
   12f24:	103f861e 	bne	r2,zero,12d40 <__gxx_personality_sj0+0x3cc>
   12f28:	d8800317 	ldw	r2,12(sp)
   12f2c:	1080004c 	andi	r2,r2,1
   12f30:	1000271e 	bne	r2,zero,12fd0 <__gxx_personality_sj0+0x65c>
   12f34:	d8800a17 	ldw	r2,40(sp)
   12f38:	d8800115 	stw	r2,4(sp)
   12f3c:	008000c4 	movi	r2,3
   12f40:	003fe406 	br	12ed4 <__gxx_personality_sj0+0x560>
   12f44:	d8800717 	ldw	r2,28(sp)
   12f48:	108000a8 	cmpgeui	r2,r2,2
   12f4c:	103fda1e 	bne	r2,zero,12eb8 <__gxx_personality_sj0+0x544>
   12f50:	d8802517 	ldw	r2,148(sp)
   12f54:	d8c00417 	ldw	r3,16(sp)
   12f58:	10fffb15 	stw	r3,-20(r2)
   12f5c:	d8c00217 	ldw	r3,8(sp)
   12f60:	10fffc15 	stw	r3,-16(r2)
   12f64:	d8c00517 	ldw	r3,20(sp)
   12f68:	10fffd15 	stw	r3,-12(r2)
   12f6c:	d8c02517 	ldw	r3,148(sp)
   12f70:	d8801a17 	ldw	r2,104(sp)
   12f74:	18bfff15 	stw	r2,-4(r3)
   12f78:	1805883a 	mov	r2,r3
   12f7c:	d8c00117 	ldw	r3,4(sp)
   12f80:	10fffe15 	stw	r3,-8(r2)
   12f84:	00800184 	movi	r2,6
   12f88:	d8800015 	stw	r2,0(sp)
   12f8c:	003edb06 	br	12afc <__gxx_personality_sj0+0x188>
   12f90:	d8800717 	ldw	r2,28(sp)
   12f94:	108000a8 	cmpgeui	r2,r2,2
   12f98:	103f181e 	bne	r2,zero,12bfc <__gxx_personality_sj0+0x288>
   12f9c:	d8802517 	ldw	r2,148(sp)
   12fa0:	10800003 	ldbu	r2,0(r2)
   12fa4:	1080004c 	andi	r2,r2,1
   12fa8:	10000626 	beq	r2,zero,12fc4 <__gxx_personality_sj0+0x650>
   12fac:	d8802517 	ldw	r2,148(sp)
   12fb0:	10bff517 	ldw	r2,-44(r2)
   12fb4:	10fff017 	ldw	r3,-64(r2)
   12fb8:	d8801a15 	stw	r2,104(sp)
   12fbc:	d8c00915 	stw	r3,36(sp)
   12fc0:	003f1106 	br	12c08 <__gxx_personality_sj0+0x294>
   12fc4:	d8802517 	ldw	r2,148(sp)
   12fc8:	10800504 	addi	r2,r2,20
   12fcc:	003ff906 	br	12fb4 <__gxx_personality_sj0+0x640>
   12fd0:	d8800a17 	ldw	r2,40(sp)
   12fd4:	d8800115 	stw	r2,4(sp)
   12fd8:	003fdd06 	br	12f50 <__gxx_personality_sj0+0x5dc>
   12fdc:	00800044 	movi	r2,1
   12fe0:	d8800e15 	stw	r2,56(sp)
   12fe4:	00132740 	call	13274 <_ZSt10unexpectedv>
   12fe8:	d9000f17 	ldw	r4,60(sp)
   12fec:	00146c00 	call	146c0 <__cxa_begin_catch>
   12ff0:	00132500 	call	13250 <_ZSt9terminatev>
   12ff4:	d8800a17 	ldw	r2,40(sp)
   12ff8:	d8800115 	stw	r2,4(sp)
   12ffc:	003ead06 	br	12ab4 <__gxx_personality_sj0+0x140>
   13000:	00bfffc4 	movi	r2,-1
   13004:	d8800e15 	stw	r2,56(sp)
   13008:	001546c0 	call	1546c <abort>

0001300c <__cxa_call_unexpected>:
   1300c:	deffe704 	addi	sp,sp,-100
   13010:	01400074 	movhi	r5,1
   13014:	00c00074 	movhi	r3,1
   13018:	00800074 	movhi	r2,1
   1301c:	294a5d04 	addi	r5,r5,10612
   13020:	18db0b04 	addi	r3,r3,27692
   13024:	108c2304 	addi	r2,r2,12428
   13028:	d9000015 	stw	r4,0(sp)
   1302c:	d9000404 	addi	r4,sp,16
   13030:	d9400a15 	stw	r5,40(sp)
   13034:	d8c00b15 	stw	r3,44(sp)
   13038:	dfc01815 	stw	ra,96(sp)
   1303c:	d8800d15 	stw	r2,52(sp)
   13040:	df001715 	stw	fp,92(sp)
   13044:	df000c15 	stw	fp,48(sp)
   13048:	dec00e15 	stw	sp,56(sp)
   1304c:	00151600 	call	15160 <_Unwind_SjLj_Register>
   13050:	d9000017 	ldw	r4,0(sp)
   13054:	00146c00 	call	146c0 <__cxa_begin_catch>
   13058:	d8c00017 	ldw	r3,0(sp)
   1305c:	197ffd17 	ldw	r5,-12(r3)
   13060:	18bffe17 	ldw	r2,-8(r3)
   13064:	193ff717 	ldw	r4,-36(r3)
   13068:	d9400115 	stw	r5,4(sp)
   1306c:	197ffb17 	ldw	r5,-20(r3)
   13070:	18fff817 	ldw	r3,-32(r3)
   13074:	d8801315 	stw	r2,76(sp)
   13078:	00800044 	movi	r2,1
   1307c:	d9400015 	stw	r5,0(sp)
   13080:	d8c00215 	stw	r3,8(sp)
   13084:	d8800515 	stw	r2,20(sp)
   13088:	00132640 	call	13264 <_ZN10__cxxabiv112__unexpectedEPFvvE>
   1308c:	d8c00617 	ldw	r3,24(sp)
   13090:	d8800517 	ldw	r2,20(sp)
   13094:	d8c00315 	stw	r3,12(sp)
   13098:	10002b1e 	bne	r2,zero,13148 <__cxa_call_unexpected+0x13c>
   1309c:	d9000317 	ldw	r4,12(sp)
   130a0:	00146c00 	call	146c0 <__cxa_begin_catch>
   130a4:	00148b80 	call	148b8 <__cxa_get_globals_fast>
   130a8:	10800017 	ldw	r2,0(r2)
   130ac:	10c00b03 	ldbu	r3,44(r2)
   130b0:	18c0004c 	andi	r3,r3,1
   130b4:	18002e26 	beq	r3,zero,13170 <__cxa_call_unexpected+0x164>
   130b8:	10800017 	ldw	r2,0(r2)
   130bc:	d8800315 	stw	r2,12(sp)
   130c0:	d9400117 	ldw	r5,4(sp)
   130c4:	00800084 	movi	r2,2
   130c8:	d9801104 	addi	r6,sp,68
   130cc:	0009883a 	mov	r4,zero
   130d0:	d8800515 	stw	r2,20(sp)
   130d4:	00127380 	call	12738 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   130d8:	d9800317 	ldw	r6,12(sp)
   130dc:	d9c00017 	ldw	r7,0(sp)
   130e0:	d9001104 	addi	r4,sp,68
   130e4:	317ff017 	ldw	r5,-64(r6)
   130e8:	00128640 	call	12864 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   130ec:	10803fcc 	andi	r2,r2,255
   130f0:	1000221e 	bne	r2,zero,1317c <__cxa_call_unexpected+0x170>
   130f4:	d9c00017 	ldw	r7,0(sp)
   130f8:	01400074 	movhi	r5,1
   130fc:	00800084 	movi	r2,2
   13100:	000d883a 	mov	r6,zero
   13104:	295c2304 	addi	r5,r5,28812
   13108:	d9001104 	addi	r4,sp,68
   1310c:	d8800515 	stw	r2,20(sp)
   13110:	00128640 	call	12864 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13114:	10803fcc 	andi	r2,r2,255
   13118:	10001926 	beq	r2,zero,13180 <__cxa_call_unexpected+0x174>
   1311c:	01000104 	movi	r4,4
   13120:	001450c0 	call	1450c <__cxa_allocate_exception>
   13124:	1009883a 	mov	r4,r2
   13128:	00800074 	movhi	r2,1
   1312c:	01800074 	movhi	r6,1
   13130:	01400074 	movhi	r5,1
   13134:	109c3e04 	addi	r2,r2,28920
   13138:	31921b04 	addi	r6,r6,18540
   1313c:	295c2304 	addi	r5,r5,28812
   13140:	20800015 	stw	r2,0(r4)
   13144:	00133b40 	call	133b4 <__cxa_throw>
   13148:	10bfffc4 	addi	r2,r2,-1
   1314c:	10000126 	beq	r2,zero,13154 <__cxa_call_unexpected+0x148>
   13150:	003b68fa 	trap	3
   13154:	d8000515 	stw	zero,20(sp)
   13158:	00147780 	call	14778 <__cxa_end_catch>
   1315c:	00147780 	call	14778 <__cxa_end_catch>
   13160:	d9000317 	ldw	r4,12(sp)
   13164:	00bfffc4 	movi	r2,-1
   13168:	d8800515 	stw	r2,20(sp)
   1316c:	00153480 	call	15348 <_Unwind_SjLj_Resume>
   13170:	10801004 	addi	r2,r2,64
   13174:	d8800315 	stw	r2,12(sp)
   13178:	003fd106 	br	130c0 <__cxa_call_unexpected+0xb4>
   1317c:	00134140 	call	13414 <__cxa_rethrow>
   13180:	d9000217 	ldw	r4,8(sp)
   13184:	00131880 	call	13188 <_ZN10__cxxabiv111__terminateEPFvvE>

00013188 <_ZN10__cxxabiv111__terminateEPFvvE>:
   13188:	deffef04 	addi	sp,sp,-68
   1318c:	01400074 	movhi	r5,1
   13190:	00c00074 	movhi	r3,1
   13194:	00800074 	movhi	r2,1
   13198:	200d883a 	mov	r6,r4
   1319c:	108c7904 	addi	r2,r2,12772
   131a0:	294a5d04 	addi	r5,r5,10612
   131a4:	18db0f04 	addi	r3,r3,27708
   131a8:	d9000204 	addi	r4,sp,8
   131ac:	d8800b15 	stw	r2,44(sp)
   131b0:	dfc01015 	stw	ra,64(sp)
   131b4:	df000f15 	stw	fp,60(sp)
   131b8:	d9800015 	stw	r6,0(sp)
   131bc:	d9400815 	stw	r5,32(sp)
   131c0:	d8c00915 	stw	r3,36(sp)
   131c4:	df000a15 	stw	fp,40(sp)
   131c8:	dec00c15 	stw	sp,48(sp)
   131cc:	00151600 	call	15160 <_Unwind_SjLj_Register>
   131d0:	00800044 	movi	r2,1
   131d4:	d8800315 	stw	r2,12(sp)
   131d8:	d8800017 	ldw	r2,0(sp)
   131dc:	103ee83a 	callr	r2
   131e0:	001546c0 	call	1546c <abort>
   131e4:	d8c00417 	ldw	r3,16(sp)
   131e8:	d8800317 	ldw	r2,12(sp)
   131ec:	d8c00015 	stw	r3,0(sp)
   131f0:	d8c00517 	ldw	r3,20(sp)
   131f4:	d8c00115 	stw	r3,4(sp)
   131f8:	1000051e 	bne	r2,zero,13210 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
   131fc:	d9000017 	ldw	r4,0(sp)
   13200:	00146c00 	call	146c0 <__cxa_begin_catch>
   13204:	00800084 	movi	r2,2
   13208:	d8800315 	stw	r2,12(sp)
   1320c:	001546c0 	call	1546c <abort>
   13210:	10bfffc4 	addi	r2,r2,-1
   13214:	10000126 	beq	r2,zero,1321c <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
   13218:	003b68fa 	trap	3
   1321c:	d8000315 	stw	zero,12(sp)
   13220:	00147780 	call	14778 <__cxa_end_catch>
   13224:	d8c00117 	ldw	r3,4(sp)
   13228:	18bfffe0 	cmpeqi	r2,r3,-1
   1322c:	10000426 	beq	r2,zero,13240 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
   13230:	d8800117 	ldw	r2,4(sp)
   13234:	d9000017 	ldw	r4,0(sp)
   13238:	d8800315 	stw	r2,12(sp)
   1323c:	001300c0 	call	1300c <__cxa_call_unexpected>
   13240:	d9000017 	ldw	r4,0(sp)
   13244:	00bfffc4 	movi	r2,-1
   13248:	d8800315 	stw	r2,12(sp)
   1324c:	00153480 	call	15348 <_Unwind_SjLj_Resume>

00013250 <_ZSt9terminatev>:
   13250:	00800074 	movhi	r2,1
   13254:	111e6917 	ldw	r4,31140(r2)
   13258:	deffff04 	addi	sp,sp,-4
   1325c:	dfc00015 	stw	ra,0(sp)
   13260:	00131880 	call	13188 <_ZN10__cxxabiv111__terminateEPFvvE>

00013264 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
   13264:	deffff04 	addi	sp,sp,-4
   13268:	dfc00015 	stw	ra,0(sp)
   1326c:	203ee83a 	callr	r4
   13270:	00132500 	call	13250 <_ZSt9terminatev>

00013274 <_ZSt10unexpectedv>:
   13274:	00800074 	movhi	r2,1
   13278:	111e6017 	ldw	r4,31104(r2)
   1327c:	deffff04 	addi	sp,sp,-4
   13280:	dfc00015 	stw	ra,0(sp)
   13284:	00132640 	call	13264 <_ZN10__cxxabiv112__unexpectedEPFvvE>

00013288 <_ZSt13set_terminatePFvvE>:
   13288:	20000526 	beq	r4,zero,132a0 <_ZSt13set_terminatePFvvE+0x18>
   1328c:	00c00074 	movhi	r3,1
   13290:	00800074 	movhi	r2,1
   13294:	109e6917 	ldw	r2,31140(r2)
   13298:	191e6915 	stw	r4,31140(r3)
   1329c:	f800283a 	ret
   132a0:	01000074 	movhi	r4,1
   132a4:	21151b04 	addi	r4,r4,21612
   132a8:	003ff806 	br	1328c <_ZSt13set_terminatePFvvE+0x4>

000132ac <_ZSt13get_terminatev>:
   132ac:	00800074 	movhi	r2,1
   132b0:	109e6917 	ldw	r2,31140(r2)
   132b4:	f800283a 	ret

000132b8 <_ZSt14set_unexpectedPFvvE>:
   132b8:	20000526 	beq	r4,zero,132d0 <_ZSt14set_unexpectedPFvvE+0x18>
   132bc:	00c00074 	movhi	r3,1
   132c0:	00800074 	movhi	r2,1
   132c4:	109e6017 	ldw	r2,31104(r2)
   132c8:	191e6015 	stw	r4,31104(r3)
   132cc:	f800283a 	ret
   132d0:	01000074 	movhi	r4,1
   132d4:	210c9404 	addi	r4,r4,12880
   132d8:	003ff806 	br	132bc <_ZSt14set_unexpectedPFvvE+0x4>

000132dc <_ZSt14get_unexpectedv>:
   132dc:	00800074 	movhi	r2,1
   132e0:	109e6017 	ldw	r2,31104(r2)
   132e4:	f800283a 	ret

000132e8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   132e8:	defffe04 	addi	sp,sp,-8
   132ec:	dfc00115 	stw	ra,4(sp)
   132f0:	dc000015 	stw	r16,0(sp)
   132f4:	210000b0 	cmpltui	r4,r4,2
   132f8:	20001326 	beq	r4,zero,13348 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
   132fc:	28bff417 	ldw	r2,-48(r5)
   13300:	10ffffc4 	addi	r3,r2,-1
   13304:	28fff415 	stw	r3,-48(r5)
   13308:	10800058 	cmpnei	r2,r2,1
   1330c:	10000426 	beq	r2,zero,13320 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
   13310:	dfc00117 	ldw	ra,4(sp)
   13314:	dc000017 	ldw	r16,0(sp)
   13318:	dec00204 	addi	sp,sp,8
   1331c:	f800283a 	ret
   13320:	28bff617 	ldw	r2,-40(r5)
   13324:	2c000504 	addi	r16,r5,20
   13328:	10000226 	beq	r2,zero,13334 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
   1332c:	8009883a 	mov	r4,r16
   13330:	103ee83a 	callr	r2
   13334:	8009883a 	mov	r4,r16
   13338:	dfc00117 	ldw	ra,4(sp)
   1333c:	dc000017 	ldw	r16,0(sp)
   13340:	dec00204 	addi	sp,sp,8
   13344:	00145641 	jmpi	14564 <__cxa_free_exception>
   13348:	293ff817 	ldw	r4,-32(r5)
   1334c:	00131880 	call	13188 <_ZN10__cxxabiv111__terminateEPFvvE>

00013350 <__cxa_init_primary_exception>:
   13350:	defffe04 	addi	sp,sp,-8
   13354:	dfc00115 	stw	ra,4(sp)
   13358:	dc000015 	stw	r16,0(sp)
   1335c:	217ff015 	stw	r5,-64(r4)
   13360:	21bff115 	stw	r6,-60(r4)
   13364:	203fef15 	stw	zero,-68(r4)
   13368:	2021883a 	mov	r16,r4
   1336c:	00132dc0 	call	132dc <_ZSt14get_unexpectedv>
   13370:	80bff215 	stw	r2,-56(r16)
   13374:	00132ac0 	call	132ac <_ZSt13get_terminatev>
   13378:	0150caf4 	movhi	r5,17195
   1337c:	0111d3b4 	movhi	r4,18254
   13380:	00c00074 	movhi	r3,1
   13384:	294ac004 	addi	r5,r5,11008
   13388:	211550c4 	addi	r4,r4,21827
   1338c:	18ccba04 	addi	r3,r3,13032
   13390:	80bff315 	stw	r2,-52(r16)
   13394:	80bfef04 	addi	r2,r16,-68
   13398:	817ffb15 	stw	r5,-20(r16)
   1339c:	813ffc15 	stw	r4,-16(r16)
   133a0:	80fffd15 	stw	r3,-12(r16)
   133a4:	dfc00117 	ldw	ra,4(sp)
   133a8:	dc000017 	ldw	r16,0(sp)
   133ac:	dec00204 	addi	sp,sp,8
   133b0:	f800283a 	ret

000133b4 <__cxa_throw>:
   133b4:	defffc04 	addi	sp,sp,-16
   133b8:	dfc00315 	stw	ra,12(sp)
   133bc:	dc800215 	stw	r18,8(sp)
   133c0:	dc400115 	stw	r17,4(sp)
   133c4:	dc000015 	stw	r16,0(sp)
   133c8:	2823883a 	mov	r17,r5
   133cc:	2021883a 	mov	r16,r4
   133d0:	3025883a 	mov	r18,r6
   133d4:	00148c40 	call	148c4 <__cxa_get_globals>
   133d8:	10c00117 	ldw	r3,4(r2)
   133dc:	900d883a 	mov	r6,r18
   133e0:	880b883a 	mov	r5,r17
   133e4:	18c00044 	addi	r3,r3,1
   133e8:	8009883a 	mov	r4,r16
   133ec:	10c00115 	stw	r3,4(r2)
   133f0:	00133500 	call	13350 <__cxa_init_primary_exception>
   133f4:	14000c04 	addi	r16,r2,48
   133f8:	00c00044 	movi	r3,1
   133fc:	10c00015 	stw	r3,0(r2)
   13400:	8009883a 	mov	r4,r16
   13404:	001523c0 	call	1523c <_Unwind_SjLj_RaiseException>
   13408:	8009883a 	mov	r4,r16
   1340c:	00146c00 	call	146c0 <__cxa_begin_catch>
   13410:	00132500 	call	13250 <_ZSt9terminatev>

00013414 <__cxa_rethrow>:
   13414:	defffe04 	addi	sp,sp,-8
   13418:	dfc00115 	stw	ra,4(sp)
   1341c:	dc000015 	stw	r16,0(sp)
   13420:	00148c40 	call	148c4 <__cxa_get_globals>
   13424:	10c00117 	ldw	r3,4(r2)
   13428:	11000017 	ldw	r4,0(r2)
   1342c:	18c00044 	addi	r3,r3,1
   13430:	10c00115 	stw	r3,4(r2)
   13434:	20001126 	beq	r4,zero,1347c <__cxa_rethrow+0x68>
   13438:	20c00b17 	ldw	r3,44(r4)
   1343c:	21800c17 	ldw	r6,48(r4)
   13440:	016f3574 	movhi	r5,48341
   13444:	29754004 	addi	r5,r5,-11008
   13448:	01ee2cb4 	movhi	r7,47282
   1344c:	39eaaf04 	addi	r7,r7,-21828
   13450:	194b883a 	add	r5,r3,r5
   13454:	28c7803a 	cmpltu	r3,r5,r3
   13458:	31cd883a 	add	r6,r6,r7
   1345c:	1987883a 	add	r3,r3,r6
   13460:	18000726 	beq	r3,zero,13480 <__cxa_rethrow+0x6c>
   13464:	10000015 	stw	zero,0(r2)
   13468:	24000b04 	addi	r16,r4,44
   1346c:	8009883a 	mov	r4,r16
   13470:	001538c0 	call	1538c <_Unwind_SjLj_Resume_or_Rethrow>
   13474:	8009883a 	mov	r4,r16
   13478:	00146c00 	call	146c0 <__cxa_begin_catch>
   1347c:	00132500 	call	13250 <_ZSt9terminatev>
   13480:	294000a8 	cmpgeui	r5,r5,2
   13484:	283ff71e 	bne	r5,zero,13464 <__cxa_rethrow+0x50>
   13488:	20800517 	ldw	r2,20(r4)
   1348c:	0085c83a 	sub	r2,zero,r2
   13490:	20800515 	stw	r2,20(r4)
   13494:	003ff406 	br	13468 <__cxa_rethrow+0x54>

00013498 <_ZNK10__cxxabiv120__function_type_info15__is_function_pEv>:
   13498:	00800044 	movi	r2,1
   1349c:	f800283a 	ret

000134a0 <_ZN10__cxxabiv120__function_type_infoD1Ev>:
   134a0:	00800074 	movhi	r2,1
   134a4:	109ba704 	addi	r2,r2,28316
   134a8:	20800015 	stw	r2,0(r4)
   134ac:	00138a81 	jmpi	138a8 <_ZNSt9type_infoD1Ev>

000134b0 <_ZN10__cxxabiv120__function_type_infoD0Ev>:
   134b0:	defffe04 	addi	sp,sp,-8
   134b4:	00800074 	movhi	r2,1
   134b8:	dc000015 	stw	r16,0(sp)
   134bc:	dfc00115 	stw	ra,4(sp)
   134c0:	109ba704 	addi	r2,r2,28316
   134c4:	20800015 	stw	r2,0(r4)
   134c8:	2021883a 	mov	r16,r4
   134cc:	00138a80 	call	138a8 <_ZNSt9type_infoD1Ev>
   134d0:	01400204 	movi	r5,8
   134d4:	8009883a 	mov	r4,r16
   134d8:	dfc00117 	ldw	ra,4(sp)
   134dc:	dc000017 	ldw	r16,0(sp)
   134e0:	dec00204 	addi	sp,sp,8
   134e4:	00124481 	jmpi	12448 <_ZdlPvj>

000134e8 <_Znaj>:
   134e8:	00149181 	jmpi	14918 <_Znwj>

000134ec <_ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv>:
   134ec:	00800044 	movi	r2,1
   134f0:	f800283a 	ret

000134f4 <_ZN10__cxxabiv119__pointer_type_infoD1Ev>:
   134f4:	00800074 	movhi	r2,1
   134f8:	109bbb04 	addi	r2,r2,28396
   134fc:	20800015 	stw	r2,0(r4)
   13500:	00149a01 	jmpi	149a0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

00013504 <_ZN10__cxxabiv119__pointer_type_infoD0Ev>:
   13504:	defffe04 	addi	sp,sp,-8
   13508:	00800074 	movhi	r2,1
   1350c:	dc000015 	stw	r16,0(sp)
   13510:	dfc00115 	stw	ra,4(sp)
   13514:	109bbb04 	addi	r2,r2,28396
   13518:	20800015 	stw	r2,0(r4)
   1351c:	2021883a 	mov	r16,r4
   13520:	00149a00 	call	149a0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   13524:	01400404 	movi	r5,16
   13528:	8009883a 	mov	r4,r16
   1352c:	dfc00117 	ldw	ra,4(sp)
   13530:	dc000017 	ldw	r16,0(sp)
   13534:	dec00204 	addi	sp,sp,8
   13538:	00124481 	jmpi	12448 <_ZdlPvj>

0001353c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   1353c:	defffb04 	addi	sp,sp,-20
   13540:	dc800315 	stw	r18,12(sp)
   13544:	dc400215 	stw	r17,8(sp)
   13548:	dfc00415 	stw	ra,16(sp)
   1354c:	388000a8 	cmpgeui	r2,r7,2
   13550:	24800317 	ldw	r18,12(r4)
   13554:	2823883a 	mov	r17,r5
   13558:	10000a26 	beq	r2,zero,13584 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x48>
   1355c:	90800017 	ldw	r2,0(r18)
   13560:	89400317 	ldw	r5,12(r17)
   13564:	39c00084 	addi	r7,r7,2
   13568:	10800417 	ldw	r2,16(r2)
   1356c:	9009883a 	mov	r4,r18
   13570:	dfc00417 	ldw	ra,16(sp)
   13574:	dc800317 	ldw	r18,12(sp)
   13578:	dc400217 	ldw	r17,8(sp)
   1357c:	dec00504 	addi	sp,sp,20
   13580:	1000683a 	jmp	r2
   13584:	00800074 	movhi	r2,1
   13588:	91000117 	ldw	r4,4(r18)
   1358c:	115ee817 	ldw	r5,31648(r2)
   13590:	21400926 	beq	r4,r5,135b8 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x7c>
   13594:	20800007 	ldb	r2,0(r4)
   13598:	10800aa0 	cmpeqi	r2,r2,42
   1359c:	103fef1e 	bne	r2,zero,1355c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   135a0:	d9c00115 	stw	r7,4(sp)
   135a4:	d9800015 	stw	r6,0(sp)
   135a8:	0015a980 	call	15a98 <strcmp>
   135ac:	d9800017 	ldw	r6,0(sp)
   135b0:	d9c00117 	ldw	r7,4(sp)
   135b4:	103fe91e 	bne	r2,zero,1355c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   135b8:	89000317 	ldw	r4,12(r17)
   135bc:	20800017 	ldw	r2,0(r4)
   135c0:	10800317 	ldw	r2,12(r2)
   135c4:	103ee83a 	callr	r2
   135c8:	1080005c 	xori	r2,r2,1
   135cc:	dfc00417 	ldw	ra,16(sp)
   135d0:	dc800317 	ldw	r18,12(sp)
   135d4:	dc400217 	ldw	r17,8(sp)
   135d8:	dec00504 	addi	sp,sp,20
   135dc:	f800283a 	ret

000135e0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   135e0:	00800074 	movhi	r2,1
   135e4:	109bd104 	addi	r2,r2,28484
   135e8:	20800015 	stw	r2,0(r4)
   135ec:	00122341 	jmpi	12234 <_ZN10__cxxabiv117__class_type_infoD1Ev>

000135f0 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   135f0:	defffe04 	addi	sp,sp,-8
   135f4:	00800074 	movhi	r2,1
   135f8:	dc000015 	stw	r16,0(sp)
   135fc:	dfc00115 	stw	ra,4(sp)
   13600:	109bd104 	addi	r2,r2,28484
   13604:	20800015 	stw	r2,0(r4)
   13608:	2021883a 	mov	r16,r4
   1360c:	00122340 	call	12234 <_ZN10__cxxabiv117__class_type_infoD1Ev>
   13610:	01400304 	movi	r5,12
   13614:	8009883a 	mov	r4,r16
   13618:	dfc00117 	ldw	ra,4(sp)
   1361c:	dc000017 	ldw	r16,0(sp)
   13620:	dec00204 	addi	sp,sp,8
   13624:	00124481 	jmpi	12448 <_ZdlPvj>

00013628 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   13628:	defff504 	addi	sp,sp,-44
   1362c:	dcc00415 	stw	r19,16(sp)
   13630:	38800117 	ldw	r2,4(r7)
   13634:	24c00117 	ldw	r19,4(r4)
   13638:	df000915 	stw	fp,36(sp)
   1363c:	dd800715 	stw	r22,28(sp)
   13640:	dd400615 	stw	r21,24(sp)
   13644:	dd000515 	stw	r20,20(sp)
   13648:	dc000115 	stw	r16,4(sp)
   1364c:	dfc00a15 	stw	ra,40(sp)
   13650:	ddc00815 	stw	r23,32(sp)
   13654:	dc800315 	stw	r18,12(sp)
   13658:	dc400215 	stw	r17,8(sp)
   1365c:	dd000b17 	ldw	r20,44(sp)
   13660:	df000c17 	ldw	fp,48(sp)
   13664:	dd800d17 	ldw	r22,52(sp)
   13668:	dd400e17 	ldw	r21,56(sp)
   1366c:	2821883a 	mov	r16,r5
   13670:	98800b26 	beq	r19,r2,136a0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
   13674:	9dc00007 	ldb	r23,0(r19)
   13678:	2025883a 	mov	r18,r4
   1367c:	3823883a 	mov	r17,r7
   13680:	b8c00aa0 	cmpeqi	r3,r23,42
   13684:	18001a1e 	bne	r3,zero,136f0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13688:	100b883a 	mov	r5,r2
   1368c:	9809883a 	mov	r4,r19
   13690:	d9800015 	stw	r6,0(sp)
   13694:	0015a980 	call	15a98 <strcmp>
   13698:	d9800017 	ldw	r6,0(sp)
   1369c:	1000141e 	bne	r2,zero,136f0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   136a0:	ad000015 	stw	r20,0(r21)
   136a4:	a9800115 	stw	r6,4(r21)
   136a8:	80003416 	blt	r16,zero,1377c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
   136ac:	a421883a 	add	r16,r20,r16
   136b0:	b4003026 	beq	r22,r16,13774 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
   136b4:	00800044 	movi	r2,1
   136b8:	a8800315 	stw	r2,12(r21)
   136bc:	0005883a 	mov	r2,zero
   136c0:	dfc00a17 	ldw	ra,40(sp)
   136c4:	df000917 	ldw	fp,36(sp)
   136c8:	ddc00817 	ldw	r23,32(sp)
   136cc:	dd800717 	ldw	r22,28(sp)
   136d0:	dd400617 	ldw	r21,24(sp)
   136d4:	dd000517 	ldw	r20,20(sp)
   136d8:	dcc00417 	ldw	r19,16(sp)
   136dc:	dc800317 	ldw	r18,12(sp)
   136e0:	dc400217 	ldw	r17,8(sp)
   136e4:	dc000117 	ldw	r16,4(sp)
   136e8:	dec00b04 	addi	sp,sp,44
   136ec:	f800283a 	ret
   136f0:	a5801526 	beq	r20,r22,13748 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
   136f4:	91000217 	ldw	r4,8(r18)
   136f8:	880f883a 	mov	r7,r17
   136fc:	800b883a 	mov	r5,r16
   13700:	20800017 	ldw	r2,0(r4)
   13704:	dd400e15 	stw	r21,56(sp)
   13708:	dd800d15 	stw	r22,52(sp)
   1370c:	df000c15 	stw	fp,48(sp)
   13710:	dd000b15 	stw	r20,44(sp)
   13714:	10800717 	ldw	r2,28(r2)
   13718:	dfc00a17 	ldw	ra,40(sp)
   1371c:	df000917 	ldw	fp,36(sp)
   13720:	ddc00817 	ldw	r23,32(sp)
   13724:	dd800717 	ldw	r22,28(sp)
   13728:	dd400617 	ldw	r21,24(sp)
   1372c:	dd000517 	ldw	r20,20(sp)
   13730:	dcc00417 	ldw	r19,16(sp)
   13734:	dc800317 	ldw	r18,12(sp)
   13738:	dc400217 	ldw	r17,8(sp)
   1373c:	dc000117 	ldw	r16,4(sp)
   13740:	dec00b04 	addi	sp,sp,44
   13744:	1000683a 	jmp	r2
   13748:	e1400117 	ldw	r5,4(fp)
   1374c:	99400726 	beq	r19,r5,1376c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x144>
   13750:	bdc00aa0 	cmpeqi	r23,r23,42
   13754:	b83fe71e 	bne	r23,zero,136f4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13758:	9809883a 	mov	r4,r19
   1375c:	d9800015 	stw	r6,0(sp)
   13760:	0015a980 	call	15a98 <strcmp>
   13764:	d9800017 	ldw	r6,0(sp)
   13768:	103fe21e 	bne	r2,zero,136f4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   1376c:	a9800215 	stw	r6,8(r21)
   13770:	003fd206 	br	136bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13774:	00800184 	movi	r2,6
   13778:	003fcf06 	br	136b8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x90>
   1377c:	843fff98 	cmpnei	r16,r16,-2
   13780:	803fce1e 	bne	r16,zero,136bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13784:	003fcb06 	br	136b4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x8c>

00013788 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   13788:	defffa04 	addi	sp,sp,-24
   1378c:	dc800415 	stw	r18,16(sp)
   13790:	dc800617 	ldw	r18,24(sp)
   13794:	dc400315 	stw	r17,12(sp)
   13798:	dc000215 	stw	r16,8(sp)
   1379c:	dfc00515 	stw	ra,20(sp)
   137a0:	2021883a 	mov	r16,r4
   137a4:	2823883a 	mov	r17,r5
   137a8:	91800b26 	beq	r18,r6,137d8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
   137ac:	81000217 	ldw	r4,8(r16)
   137b0:	880b883a 	mov	r5,r17
   137b4:	20800017 	ldw	r2,0(r4)
   137b8:	dc800615 	stw	r18,24(sp)
   137bc:	10800817 	ldw	r2,32(r2)
   137c0:	dfc00517 	ldw	ra,20(sp)
   137c4:	dc800417 	ldw	r18,16(sp)
   137c8:	dc400317 	ldw	r17,12(sp)
   137cc:	dc000217 	ldw	r16,8(sp)
   137d0:	dec00604 	addi	sp,sp,24
   137d4:	1000683a 	jmp	r2
   137d8:	21000117 	ldw	r4,4(r4)
   137dc:	39400117 	ldw	r5,4(r7)
   137e0:	21400926 	beq	r4,r5,13808 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
   137e4:	20800007 	ldb	r2,0(r4)
   137e8:	10800aa0 	cmpeqi	r2,r2,42
   137ec:	103fef1e 	bne	r2,zero,137ac <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   137f0:	d9c00115 	stw	r7,4(sp)
   137f4:	d9800015 	stw	r6,0(sp)
   137f8:	0015a980 	call	15a98 <strcmp>
   137fc:	d9800017 	ldw	r6,0(sp)
   13800:	d9c00117 	ldw	r7,4(sp)
   13804:	103fe91e 	bne	r2,zero,137ac <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13808:	00800184 	movi	r2,6
   1380c:	dfc00517 	ldw	ra,20(sp)
   13810:	dc800417 	ldw	r18,16(sp)
   13814:	dc400317 	ldw	r17,12(sp)
   13818:	dc000217 	ldw	r16,8(sp)
   1381c:	dec00604 	addi	sp,sp,24
   13820:	f800283a 	ret

00013824 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   13824:	defffb04 	addi	sp,sp,-20
   13828:	dcc00315 	stw	r19,12(sp)
   1382c:	dc800215 	stw	r18,8(sp)
   13830:	dc400115 	stw	r17,4(sp)
   13834:	dc000015 	stw	r16,0(sp)
   13838:	dfc00415 	stw	ra,16(sp)
   1383c:	2025883a 	mov	r18,r4
   13840:	2827883a 	mov	r19,r5
   13844:	3021883a 	mov	r16,r6
   13848:	3823883a 	mov	r17,r7
   1384c:	001227c0 	call	1227c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   13850:	10c03fcc 	andi	r3,r2,255
   13854:	18000d1e 	bne	r3,zero,1388c <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
   13858:	91000217 	ldw	r4,8(r18)
   1385c:	880f883a 	mov	r7,r17
   13860:	800d883a 	mov	r6,r16
   13864:	20800017 	ldw	r2,0(r4)
   13868:	980b883a 	mov	r5,r19
   1386c:	10800617 	ldw	r2,24(r2)
   13870:	dfc00417 	ldw	ra,16(sp)
   13874:	dcc00317 	ldw	r19,12(sp)
   13878:	dc800217 	ldw	r18,8(sp)
   1387c:	dc400117 	ldw	r17,4(sp)
   13880:	dc000017 	ldw	r16,0(sp)
   13884:	dec00504 	addi	sp,sp,20
   13888:	1000683a 	jmp	r2
   1388c:	dfc00417 	ldw	ra,16(sp)
   13890:	dcc00317 	ldw	r19,12(sp)
   13894:	dc800217 	ldw	r18,8(sp)
   13898:	dc400117 	ldw	r17,4(sp)
   1389c:	dc000017 	ldw	r16,0(sp)
   138a0:	dec00504 	addi	sp,sp,20
   138a4:	f800283a 	ret

000138a8 <_ZNSt9type_infoD1Ev>:
   138a8:	f800283a 	ret

000138ac <_ZNKSt9type_info14__is_pointer_pEv>:
   138ac:	0005883a 	mov	r2,zero
   138b0:	f800283a 	ret

000138b4 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
   138b4:	0005883a 	mov	r2,zero
   138b8:	f800283a 	ret

000138bc <_ZNSt9type_infoD0Ev>:
   138bc:	01400204 	movi	r5,8
   138c0:	00124481 	jmpi	12448 <_ZdlPvj>

000138c4 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   138c4:	21000117 	ldw	r4,4(r4)
   138c8:	29400117 	ldw	r5,4(r5)
   138cc:	21400c26 	beq	r4,r5,13900 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
   138d0:	20800007 	ldb	r2,0(r4)
   138d4:	10800aa0 	cmpeqi	r2,r2,42
   138d8:	1000071e 	bne	r2,zero,138f8 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
   138dc:	deffff04 	addi	sp,sp,-4
   138e0:	dfc00015 	stw	ra,0(sp)
   138e4:	0015a980 	call	15a98 <strcmp>
   138e8:	1005003a 	cmpeq	r2,r2,zero
   138ec:	dfc00017 	ldw	ra,0(sp)
   138f0:	dec00104 	addi	sp,sp,4
   138f4:	f800283a 	ret
   138f8:	0005883a 	mov	r2,zero
   138fc:	f800283a 	ret
   13900:	00800044 	movi	r2,1
   13904:	f800283a 	ret

00013908 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
   13908:	00800074 	movhi	r2,1
   1390c:	109bf504 	addi	r2,r2,28628
   13910:	20800015 	stw	r2,0(r4)
   13914:	00122341 	jmpi	12234 <_ZN10__cxxabiv117__class_type_infoD1Ev>

00013918 <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
   13918:	defffe04 	addi	sp,sp,-8
   1391c:	00800074 	movhi	r2,1
   13920:	dc000015 	stw	r16,0(sp)
   13924:	dfc00115 	stw	ra,4(sp)
   13928:	109bf504 	addi	r2,r2,28628
   1392c:	20800015 	stw	r2,0(r4)
   13930:	2021883a 	mov	r16,r4
   13934:	00122340 	call	12234 <_ZN10__cxxabiv117__class_type_infoD1Ev>
   13938:	01400604 	movi	r5,24
   1393c:	8009883a 	mov	r4,r16
   13940:	dfc00117 	ldw	ra,4(sp)
   13944:	dc000017 	ldw	r16,0(sp)
   13948:	dec00204 	addi	sp,sp,8
   1394c:	00124481 	jmpi	12448 <_ZdlPvj>

00013950 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   13950:	defff604 	addi	sp,sp,-40
   13954:	dc800315 	stw	r18,12(sp)
   13958:	dc800a17 	ldw	r18,40(sp)
   1395c:	ddc00815 	stw	r23,32(sp)
   13960:	dd800715 	stw	r22,28(sp)
   13964:	dd400615 	stw	r21,24(sp)
   13968:	dc000115 	stw	r16,4(sp)
   1396c:	dfc00915 	stw	ra,36(sp)
   13970:	dd000515 	stw	r20,20(sp)
   13974:	dcc00415 	stw	r19,16(sp)
   13978:	dc400215 	stw	r17,8(sp)
   1397c:	302f883a 	mov	r23,r6
   13980:	2021883a 	mov	r16,r4
   13984:	282b883a 	mov	r21,r5
   13988:	382d883a 	mov	r22,r7
   1398c:	34803026 	beq	r6,r18,13a50 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x100>
   13990:	80800317 	ldw	r2,12(r16)
   13994:	147fffc4 	addi	r17,r2,-1
   13998:	10001d26 	beq	r2,zero,13a10 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc0>
   1399c:	10800044 	addi	r2,r2,1
   139a0:	100490fa 	slli	r2,r2,3
   139a4:	acffff60 	cmpeqi	r19,r21,-3
   139a8:	80a1883a 	add	r16,r16,r2
   139ac:	80800117 	ldw	r2,4(r16)
   139b0:	b00f883a 	mov	r7,r22
   139b4:	a80b883a 	mov	r5,r21
   139b8:	1100008c 	andi	r4,r2,2
   139bc:	8c7fffc4 	addi	r17,r17,-1
   139c0:	10c0004c 	andi	r3,r2,1
   139c4:	20000f26 	beq	r4,zero,13a04 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   139c8:	1005d23a 	srai	r2,r2,8
   139cc:	1829883a 	mov	r20,r3
   139d0:	18000426 	beq	r3,zero,139e4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x94>
   139d4:	98000b1e 	bne	r19,zero,13a04 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   139d8:	b9800017 	ldw	r6,0(r23)
   139dc:	3085883a 	add	r2,r6,r2
   139e0:	10800017 	ldw	r2,0(r2)
   139e4:	81000017 	ldw	r4,0(r16)
   139e8:	b88d883a 	add	r6,r23,r2
   139ec:	20800017 	ldw	r2,0(r4)
   139f0:	dc800015 	stw	r18,0(sp)
   139f4:	10800817 	ldw	r2,32(r2)
   139f8:	103ee83a 	callr	r2
   139fc:	10c00110 	cmplti	r3,r2,4
   13a00:	18000f26 	beq	r3,zero,13a40 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xf0>
   13a04:	88bfffe0 	cmpeqi	r2,r17,-1
   13a08:	843ffe04 	addi	r16,r16,-8
   13a0c:	103fe726 	beq	r2,zero,139ac <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5c>
   13a10:	00800044 	movi	r2,1
   13a14:	dfc00917 	ldw	ra,36(sp)
   13a18:	ddc00817 	ldw	r23,32(sp)
   13a1c:	dd800717 	ldw	r22,28(sp)
   13a20:	dd400617 	ldw	r21,24(sp)
   13a24:	dd000517 	ldw	r20,20(sp)
   13a28:	dcc00417 	ldw	r19,16(sp)
   13a2c:	dc800317 	ldw	r18,12(sp)
   13a30:	dc400217 	ldw	r17,8(sp)
   13a34:	dc000117 	ldw	r16,4(sp)
   13a38:	dec00a04 	addi	sp,sp,40
   13a3c:	f800283a 	ret
   13a40:	a5003fcc 	andi	r20,r20,255
   13a44:	a03ff326 	beq	r20,zero,13a14 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   13a48:	10800054 	ori	r2,r2,1
   13a4c:	003ff106 	br	13a14 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   13a50:	21000117 	ldw	r4,4(r4)
   13a54:	39400117 	ldw	r5,4(r7)
   13a58:	21400526 	beq	r4,r5,13a70 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x120>
   13a5c:	20800007 	ldb	r2,0(r4)
   13a60:	10800aa0 	cmpeqi	r2,r2,42
   13a64:	103fca1e 	bne	r2,zero,13990 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   13a68:	0015a980 	call	15a98 <strcmp>
   13a6c:	103fc81e 	bne	r2,zero,13990 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   13a70:	00800184 	movi	r2,6
   13a74:	003fe706 	br	13a14 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>

00013a78 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   13a78:	deffe504 	addi	sp,sp,-108
   13a7c:	dc001115 	stw	r16,68(sp)
   13a80:	dc001e17 	ldw	r16,120(sp)
   13a84:	df001915 	stw	fp,100(sp)
   13a88:	dd401615 	stw	r21,88(sp)
   13a8c:	80800417 	ldw	r2,16(r16)
   13a90:	dcc01415 	stw	r19,80(sp)
   13a94:	dc801315 	stw	r18,76(sp)
   13a98:	dfc01a15 	stw	ra,104(sp)
   13a9c:	ddc01815 	stw	r23,96(sp)
   13aa0:	dd801715 	stw	r22,92(sp)
   13aa4:	dd001515 	stw	r20,84(sp)
   13aa8:	dc401215 	stw	r17,72(sp)
   13aac:	1080040c 	andi	r2,r2,16
   13ab0:	d9000615 	stw	r4,24(sp)
   13ab4:	dd401b17 	ldw	r21,108(sp)
   13ab8:	2839883a 	mov	fp,r5
   13abc:	3025883a 	mov	r18,r6
   13ac0:	3827883a 	mov	r19,r7
   13ac4:	10000226 	beq	r2,zero,13ad0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58>
   13ac8:	20800217 	ldw	r2,8(r4)
   13acc:	80800415 	stw	r2,16(r16)
   13ad0:	d8800617 	ldw	r2,24(sp)
   13ad4:	11000117 	ldw	r4,4(r2)
   13ad8:	d8801d17 	ldw	r2,116(sp)
   13adc:	a8801d26 	beq	r21,r2,13b54 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
   13ae0:	99400117 	ldw	r5,4(r19)
   13ae4:	29000526 	beq	r5,r4,13afc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   13ae8:	20800007 	ldb	r2,0(r4)
   13aec:	10800aa0 	cmpeqi	r2,r2,42
   13af0:	1000201e 	bne	r2,zero,13b74 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   13af4:	0015a980 	call	15a98 <strcmp>
   13af8:	10001e1e 	bne	r2,zero,13b74 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   13afc:	85400015 	stw	r21,0(r16)
   13b00:	84800115 	stw	r18,4(r16)
   13b04:	e0011d16 	blt	fp,zero,13f7c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x504>
   13b08:	d8801d17 	ldw	r2,116(sp)
   13b0c:	af15883a 	add	r10,r21,fp
   13b10:	12814026 	beq	r2,r10,14014 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x59c>
   13b14:	00800044 	movi	r2,1
   13b18:	80800315 	stw	r2,12(r16)
   13b1c:	0023883a 	mov	r17,zero
   13b20:	8805883a 	mov	r2,r17
   13b24:	dfc01a17 	ldw	ra,104(sp)
   13b28:	df001917 	ldw	fp,100(sp)
   13b2c:	ddc01817 	ldw	r23,96(sp)
   13b30:	dd801717 	ldw	r22,92(sp)
   13b34:	dd401617 	ldw	r21,88(sp)
   13b38:	dd001517 	ldw	r20,84(sp)
   13b3c:	dcc01417 	ldw	r19,80(sp)
   13b40:	dc801317 	ldw	r18,76(sp)
   13b44:	dc401217 	ldw	r17,72(sp)
   13b48:	dc001117 	ldw	r16,68(sp)
   13b4c:	dec01b04 	addi	sp,sp,108
   13b50:	f800283a 	ret
   13b54:	d8801c17 	ldw	r2,112(sp)
   13b58:	11400117 	ldw	r5,4(r2)
   13b5c:	29012626 	beq	r5,r4,13ff8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   13b60:	20800007 	ldb	r2,0(r4)
   13b64:	10800aa0 	cmpeqi	r2,r2,42
   13b68:	1000ea26 	beq	r2,zero,13f14 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x49c>
   13b6c:	98800117 	ldw	r2,4(r19)
   13b70:	113fe226 	beq	r2,r4,13afc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   13b74:	e000b516 	blt	fp,zero,13e4c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3d4>
   13b78:	d8801d17 	ldw	r2,116(sp)
   13b7c:	172fc83a 	sub	r23,r2,fp
   13b80:	dc001e15 	stw	r16,120(sp)
   13b84:	00800084 	movi	r2,2
   13b88:	b821883a 	mov	r16,r23
   13b8c:	a82f883a 	mov	r23,r21
   13b90:	dd401e17 	ldw	r21,120(sp)
   13b94:	d8800915 	stw	r2,36(sp)
   13b98:	e0bfff98 	cmpnei	r2,fp,-2
   13b9c:	0023883a 	mov	r17,zero
   13ba0:	d80007c5 	stb	zero,31(sp)
   13ba4:	05800044 	movi	r22,1
   13ba8:	d8800515 	stw	r2,20(sp)
   13bac:	d8800617 	ldw	r2,24(sp)
   13bb0:	12400317 	ldw	r9,12(r2)
   13bb4:	4d3fffc4 	addi	r20,r9,-1
   13bb8:	48007226 	beq	r9,zero,13d84 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30c>
   13bbc:	4a400044 	addi	r9,r9,1
   13bc0:	481290fa 	slli	r9,r9,3
   13bc4:	ddc01b15 	stw	r23,108(sp)
   13bc8:	e0ffffa0 	cmpeqi	r3,fp,-2
   13bcc:	a02f883a 	mov	r23,r20
   13bd0:	dd001b17 	ldw	r20,108(sp)
   13bd4:	d8c00815 	stw	r3,32(sp)
   13bd8:	b0c03fcc 	andi	r3,r22,255
   13bdc:	126d883a 	add	r22,r2,r9
   13be0:	e005883a 	mov	r2,fp
   13be4:	d8c00415 	stw	r3,16(sp)
   13be8:	8039883a 	mov	fp,r16
   13bec:	b021883a 	mov	r16,r22
   13bf0:	102d883a 	mov	r22,r2
   13bf4:	80800117 	ldw	r2,4(r16)
   13bf8:	a9000417 	ldw	r4,16(r21)
   13bfc:	d8000c15 	stw	zero,48(sp)
   13c00:	d8000d15 	stw	zero,52(sp)
   13c04:	d8000e15 	stw	zero,56(sp)
   13c08:	d8000f15 	stw	zero,60(sp)
   13c0c:	d9001015 	stw	r4,64(sp)
   13c10:	1180004c 	andi	r6,r2,1
   13c14:	1007d23a 	srai	r3,r2,8
   13c18:	30009626 	beq	r6,zero,13e74 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3fc>
   13c1c:	a1c00017 	ldw	r7,0(r20)
   13c20:	91800054 	ori	r6,r18,1
   13c24:	38c7883a 	add	r3,r7,r3
   13c28:	18c00017 	ldw	r3,0(r3)
   13c2c:	a0c7883a 	add	r3,r20,r3
   13c30:	e0000326 	beq	fp,zero,13c40 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c8>
   13c34:	d9400417 	ldw	r5,16(sp)
   13c38:	e0cf803a 	cmpltu	r7,fp,r3
   13c3c:	29c09526 	beq	r5,r7,13e94 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x41c>
   13c40:	1080008c 	andi	r2,r2,2
   13c44:	1000041e 	bne	r2,zero,13c58 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e0>
   13c48:	d8800517 	ldw	r2,20(sp)
   13c4c:	10008e26 	beq	r2,zero,13e88 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x410>
   13c50:	00bfff44 	movi	r2,-3
   13c54:	308c703a 	and	r6,r6,r2
   13c58:	81000017 	ldw	r4,0(r16)
   13c5c:	d9400c04 	addi	r5,sp,48
   13c60:	980f883a 	mov	r7,r19
   13c64:	20800017 	ldw	r2,0(r4)
   13c68:	d9400315 	stw	r5,12(sp)
   13c6c:	d9401d17 	ldw	r5,116(sp)
   13c70:	d8c00015 	stw	r3,0(sp)
   13c74:	d9400215 	stw	r5,8(sp)
   13c78:	d9401c17 	ldw	r5,112(sp)
   13c7c:	d9400115 	stw	r5,4(sp)
   13c80:	10800717 	ldw	r2,28(r2)
   13c84:	b00b883a 	mov	r5,r22
   13c88:	103ee83a 	callr	r2
   13c8c:	a9800217 	ldw	r6,8(r21)
   13c90:	d9000e17 	ldw	r4,56(sp)
   13c94:	d8c00f17 	ldw	r3,60(sp)
   13c98:	3108b03a 	or	r4,r6,r4
   13c9c:	a9000215 	stw	r4,8(r21)
   13ca0:	19800198 	cmpnei	r6,r3,6
   13ca4:	3000ca26 	beq	r6,zero,13fd0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x558>
   13ca8:	d9800c17 	ldw	r6,48(sp)
   13cac:	1a800098 	cmpnei	r10,r3,2
   13cb0:	300f883a 	mov	r7,r6
   13cb4:	5000ce26 	beq	r10,zero,13ff0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x578>
   13cb8:	89c03fcc 	andi	r7,r17,255
   13cbc:	abc00017 	ldw	r15,0(r21)
   13cc0:	38006e1e 	bne	r7,zero,13e7c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x404>
   13cc4:	78001c26 	beq	r15,zero,13d38 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c0>
   13cc8:	79807526 	beq	r15,r6,13ea0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x428>
   13ccc:	30007926 	beq	r6,zero,13eb4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x43c>
   13cd0:	20800110 	cmplti	r2,r4,4
   13cd4:	ab000317 	ldw	r12,12(r21)
   13cd8:	1000331e 	bne	r2,zero,13da8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   13cdc:	2080004c 	andi	r2,r4,1
   13ce0:	10000326 	beq	r2,zero,13cf0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x278>
   13ce4:	a8800417 	ldw	r2,16(r21)
   13ce8:	1080008c 	andi	r2,r2,2
   13cec:	10002e1e 	bne	r2,zero,13da8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   13cf0:	6000011e 	bne	r12,zero,13cf8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x280>
   13cf4:	03000044 	movi	r12,1
   13cf8:	1800011e 	bne	r3,zero,13d00 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x288>
   13cfc:	00c00044 	movi	r3,1
   13d00:	6015883a 	mov	r10,r12
   13d04:	50c4f03a 	xor	r2,r10,r3
   13d08:	10800110 	cmplti	r2,r2,4
   13d0c:	181d883a 	mov	r14,r3
   13d10:	10002c26 	beq	r2,zero,13dc4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>
   13d14:	7294703a 	and	r10,r14,r10
   13d18:	52800110 	cmplti	r10,r10,4
   13d1c:	5000cb26 	beq	r10,zero,1404c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5d4>
   13d20:	a9000217 	ldw	r4,8(r21)
   13d24:	00800044 	movi	r2,1
   13d28:	a8000015 	stw	zero,0(r21)
   13d2c:	a8800315 	stw	r2,12(r21)
   13d30:	04400044 	movi	r17,1
   13d34:	00000a06 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13d38:	d8c00d17 	ldw	r3,52(sp)
   13d3c:	a9800015 	stw	r6,0(r21)
   13d40:	a8c00115 	stw	r3,4(r21)
   13d44:	30007126 	beq	r6,zero,13f0c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x494>
   13d48:	20006e26 	beq	r4,zero,13f04 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x48c>
   13d4c:	d8c00617 	ldw	r3,24(sp)
   13d50:	1023883a 	mov	r17,r2
   13d54:	18c00217 	ldw	r3,8(r3)
   13d58:	18c0004c 	andi	r3,r3,1
   13d5c:	183f7026 	beq	r3,zero,13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   13d60:	21000120 	cmpeqi	r4,r4,4
   13d64:	203f6e1e 	bne	r4,zero,13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   13d68:	bdffffc4 	addi	r23,r23,-1
   13d6c:	b8bfffe0 	cmpeqi	r2,r23,-1
   13d70:	843ffe04 	addi	r16,r16,-8
   13d74:	103f9f26 	beq	r2,zero,13bf4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17c>
   13d78:	e021883a 	mov	r16,fp
   13d7c:	a02f883a 	mov	r23,r20
   13d80:	b039883a 	mov	fp,r22
   13d84:	d88007c3 	ldbu	r2,31(sp)
   13d88:	103f6526 	beq	r2,zero,13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   13d8c:	d8800917 	ldw	r2,36(sp)
   13d90:	002d883a 	mov	r22,zero
   13d94:	10800058 	cmpnei	r2,r2,1
   13d98:	103f6126 	beq	r2,zero,13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   13d9c:	00800044 	movi	r2,1
   13da0:	d8800915 	stw	r2,36(sp)
   13da4:	003f8106 	br	13bac <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
   13da8:	6015883a 	mov	r10,r12
   13dac:	181d883a 	mov	r14,r3
   13db0:	0300120e 	bge	zero,r12,13dfc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x384>
   13db4:	00c0420e 	bge	zero,r3,13ec0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x448>
   13db8:	50c4f03a 	xor	r2,r10,r3
   13dbc:	10800110 	cmplti	r2,r2,4
   13dc0:	103fd41e 	bne	r2,zero,13d14 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   13dc4:	18800108 	cmpgei	r2,r3,4
   13dc8:	10004b26 	beq	r2,zero,13ef8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x480>
   13dcc:	d9800c17 	ldw	r6,48(sp)
   13dd0:	1a80008c 	andi	r10,r3,2
   13dd4:	d8800d17 	ldw	r2,52(sp)
   13dd8:	a9800015 	stw	r6,0(r21)
   13ddc:	0023883a 	mov	r17,zero
   13de0:	a8800115 	stw	r2,4(r21)
   13de4:	a8c00315 	stw	r3,12(r21)
   13de8:	503f4c1e 	bne	r10,zero,13b1c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   13dec:	1880004c 	andi	r2,r3,1
   13df0:	10009b26 	beq	r2,zero,14060 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e8>
   13df4:	a9000217 	ldw	r4,8(r21)
   13df8:	003fd906 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13dfc:	18800110 	cmplti	r2,r3,4
   13e00:	1000061e 	bne	r2,zero,13e1c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3a4>
   13e04:	1880004c 	andi	r2,r3,1
   13e08:	10001226 	beq	r2,zero,13e54 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   13e0c:	d8800617 	ldw	r2,24(sp)
   13e10:	10800217 	ldw	r2,8(r2)
   13e14:	1080008c 	andi	r2,r2,2
   13e18:	10000e26 	beq	r2,zero,13e54 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   13e1c:	b0005a16 	blt	r22,zero,13f88 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x510>
   13e20:	d8801d17 	ldw	r2,116(sp)
   13e24:	7d9f883a 	add	r15,r15,r22
   13e28:	13c07c26 	beq	r2,r15,1401c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5a4>
   13e2c:	00c09416 	blt	zero,r3,14080 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   13e30:	d8c01d17 	ldw	r3,116(sp)
   13e34:	3585883a 	add	r2,r6,r22
   13e38:	18808b26 	beq	r3,r2,14068 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   13e3c:	02800044 	movi	r10,1
   13e40:	03000044 	movi	r12,1
   13e44:	5080005c 	xori	r2,r10,1
   13e48:	00002606 	br	13ee4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x46c>
   13e4c:	002f883a 	mov	r23,zero
   13e50:	003f4b06 	br	13b80 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x108>
   13e54:	1880005c 	xori	r2,r3,1
   13e58:	10800108 	cmpgei	r2,r2,4
   13e5c:	103fdc1e 	bne	r2,zero,13dd0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x358>
   13e60:	00800044 	movi	r2,1
   13e64:	a8000015 	stw	zero,0(r21)
   13e68:	a8800315 	stw	r2,12(r21)
   13e6c:	04400044 	movi	r17,1
   13e70:	003fbb06 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13e74:	900d883a 	mov	r6,r18
   13e78:	003f6c06 	br	13c2c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b4>
   13e7c:	783f921e 	bne	r15,zero,13cc8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x250>
   13e80:	303f931e 	bne	r6,zero,13cd0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   13e84:	003fb606 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13e88:	210000cc 	andi	r4,r4,3
   13e8c:	203f701e 	bne	r4,zero,13c50 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1d8>
   13e90:	003fb506 	br	13d68 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   13e94:	00800044 	movi	r2,1
   13e98:	d88007c5 	stb	r2,31(sp)
   13e9c:	003fb206 	br	13d68 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   13ea0:	a8800117 	ldw	r2,4(r21)
   13ea4:	d8c00d17 	ldw	r3,52(sp)
   13ea8:	10c4b03a 	or	r2,r2,r3
   13eac:	a8800115 	stw	r2,4(r21)
   13eb0:	003fab06 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13eb4:	10803fcc 	andi	r2,r2,255
   13eb8:	103f851e 	bne	r2,zero,13cd0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   13ebc:	003fa806 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13ec0:	60800108 	cmpgei	r2,r12,4
   13ec4:	10001a26 	beq	r2,zero,13f30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   13ec8:	6080004c 	andi	r2,r12,1
   13ecc:	10000426 	beq	r2,zero,13ee0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x468>
   13ed0:	d8800617 	ldw	r2,24(sp)
   13ed4:	10800217 	ldw	r2,8(r2)
   13ed8:	1080008c 	andi	r2,r2,2
   13edc:	1000141e 	bne	r2,zero,13f30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   13ee0:	6080005c 	xori	r2,r12,1
   13ee4:	10800108 	cmpgei	r2,r2,4
   13ee8:	103f8d26 	beq	r2,zero,13d20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2a8>
   13eec:	5280008c 	andi	r10,r10,2
   13ef0:	6007883a 	mov	r3,r12
   13ef4:	003fbb06 	br	13de4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   13ef8:	6280008c 	andi	r10,r12,2
   13efc:	6007883a 	mov	r3,r12
   13f00:	003fb806 	br	13de4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   13f04:	1023883a 	mov	r17,r2
   13f08:	003f9706 	br	13d68 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   13f0c:	1023883a 	mov	r17,r2
   13f10:	003f9306 	br	13d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   13f14:	d9000415 	stw	r4,16(sp)
   13f18:	0015a980 	call	15a98 <strcmp>
   13f1c:	d9000417 	ldw	r4,16(sp)
   13f20:	10003526 	beq	r2,zero,13ff8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   13f24:	99400117 	ldw	r5,4(r19)
   13f28:	293ef21e 	bne	r5,r4,13af4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
   13f2c:	003ef306 	br	13afc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   13f30:	d9800c17 	ldw	r6,48(sp)
   13f34:	b0003d0e 	bge	r22,zero,1402c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5b4>
   13f38:	d8800517 	ldw	r2,20(sp)
   13f3c:	103fc126 	beq	r2,zero,13e44 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   13f40:	d8c01d17 	ldw	r3,116(sp)
   13f44:	98800017 	ldw	r2,0(r19)
   13f48:	d9c01c17 	ldw	r7,112(sp)
   13f4c:	d8c00015 	stw	r3,0(sp)
   13f50:	10800817 	ldw	r2,32(r2)
   13f54:	db000b15 	stw	r12,44(sp)
   13f58:	da800a15 	stw	r10,40(sp)
   13f5c:	b00b883a 	mov	r5,r22
   13f60:	9809883a 	mov	r4,r19
   13f64:	103ee83a 	callr	r2
   13f68:	da800a17 	ldw	r10,40(sp)
   13f6c:	db000b17 	ldw	r12,44(sp)
   13f70:	1007883a 	mov	r3,r2
   13f74:	101d883a 	mov	r14,r2
   13f78:	003f8f06 	br	13db8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   13f7c:	e33fff98 	cmpnei	r12,fp,-2
   13f80:	603ee61e 	bne	r12,zero,13b1c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   13f84:	003ee306 	br	13b14 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9c>
   13f88:	d8800817 	ldw	r2,32(sp)
   13f8c:	db800a15 	stw	r14,40(sp)
   13f90:	10001c1e 	bne	r2,zero,14004 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58c>
   13f94:	d8c00b15 	stw	r3,44(sp)
   13f98:	d8c01d17 	ldw	r3,116(sp)
   13f9c:	98800017 	ldw	r2,0(r19)
   13fa0:	d9c01c17 	ldw	r7,112(sp)
   13fa4:	d8c00015 	stw	r3,0(sp)
   13fa8:	10800817 	ldw	r2,32(r2)
   13fac:	780d883a 	mov	r6,r15
   13fb0:	b00b883a 	mov	r5,r22
   13fb4:	9809883a 	mov	r4,r19
   13fb8:	103ee83a 	callr	r2
   13fbc:	db800a17 	ldw	r14,40(sp)
   13fc0:	d8c00b17 	ldw	r3,44(sp)
   13fc4:	1019883a 	mov	r12,r2
   13fc8:	1015883a 	mov	r10,r2
   13fcc:	003f7906 	br	13db4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x33c>
   13fd0:	d9c00c17 	ldw	r7,48(sp)
   13fd4:	a821883a 	mov	r16,r21
   13fd8:	80c00315 	stw	r3,12(r16)
   13fdc:	d8c00d17 	ldw	r3,52(sp)
   13fe0:	81c00015 	stw	r7,0(r16)
   13fe4:	1023883a 	mov	r17,r2
   13fe8:	80c00115 	stw	r3,4(r16)
   13fec:	003ecc06 	br	13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   13ff0:	a821883a 	mov	r16,r21
   13ff4:	003ff806 	br	13fd8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x560>
   13ff8:	84800215 	stw	r18,8(r16)
   13ffc:	0023883a 	mov	r17,zero
   14000:	003ec706 	br	13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14004:	00c01e16 	blt	zero,r3,14080 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   14008:	03000044 	movi	r12,1
   1400c:	02800044 	movi	r10,1
   14010:	003f8c06 	br	13e44 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14014:	00800184 	movi	r2,6
   14018:	003ebf06 	br	13b18 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa0>
   1401c:	00c0150e 	bge	zero,r3,14074 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5fc>
   14020:	02800184 	movi	r10,6
   14024:	03000184 	movi	r12,6
   14028:	003f6306 	br	13db8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   1402c:	d8c01d17 	ldw	r3,116(sp)
   14030:	3585883a 	add	r2,r6,r22
   14034:	18bf831e 	bne	r3,r2,13e44 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14038:	6080019c 	xori	r2,r12,6
   1403c:	10800108 	cmpgei	r2,r2,4
   14040:	1000091e 	bne	r2,zero,14068 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   14044:	03800184 	movi	r14,6
   14048:	003f3206 	br	13d14 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   1404c:	00800084 	movi	r2,2
   14050:	a8000015 	stw	zero,0(r21)
   14054:	a8800315 	stw	r2,12(r21)
   14058:	04400044 	movi	r17,1
   1405c:	003eb006 	br	13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14060:	1023883a 	mov	r17,r2
   14064:	003eae06 	br	13b20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14068:	02800084 	movi	r10,2
   1406c:	00c00184 	movi	r3,6
   14070:	003f5806 	br	13dd4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x35c>
   14074:	03000184 	movi	r12,6
   14078:	02800184 	movi	r10,6
   1407c:	003f9b06 	br	13eec <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x474>
   14080:	1880005c 	xori	r2,r3,1
   14084:	10800108 	cmpgei	r2,r2,4
   14088:	103f2626 	beq	r2,zero,13d24 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2ac>
   1408c:	03000044 	movi	r12,1
   14090:	003f4c06 	br	13dc4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>

00014094 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   14094:	defff004 	addi	sp,sp,-64
   14098:	dd800c15 	stw	r22,48(sp)
   1409c:	dd400b15 	stw	r21,44(sp)
   140a0:	dd000a15 	stw	r20,40(sp)
   140a4:	dcc00915 	stw	r19,36(sp)
   140a8:	dc000615 	stw	r16,24(sp)
   140ac:	dfc00f15 	stw	ra,60(sp)
   140b0:	df000e15 	stw	fp,56(sp)
   140b4:	ddc00d15 	stw	r23,52(sp)
   140b8:	dc800815 	stw	r18,32(sp)
   140bc:	dc400715 	stw	r17,28(sp)
   140c0:	2021883a 	mov	r16,r4
   140c4:	d9000115 	stw	r4,4(sp)
   140c8:	2827883a 	mov	r19,r5
   140cc:	3029883a 	mov	r20,r6
   140d0:	382b883a 	mov	r21,r7
   140d4:	001227c0 	call	1227c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   140d8:	102d883a 	mov	r22,r2
   140dc:	10803fcc 	andi	r2,r2,255
   140e0:	1000551e 	bne	r2,zero,14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   140e4:	ac400217 	ldw	r17,8(r21)
   140e8:	8880040c 	andi	r2,r17,16
   140ec:	10007c1e 	bne	r2,zero,142e0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x24c>
   140f0:	d8c00117 	ldw	r3,4(sp)
   140f4:	18800317 	ldw	r2,12(r3)
   140f8:	15ffffc4 	addi	r23,r2,-1
   140fc:	10007526 	beq	r2,zero,142d4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   14100:	14000044 	addi	r16,r2,1
   14104:	802090fa 	slli	r16,r16,3
   14108:	8880004c 	andi	r2,r17,1
   1410c:	d8800015 	stw	r2,0(sp)
   14110:	1c21883a 	add	r16,r3,r16
   14114:	00002706 	br	141b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   14118:	1005d23a 	srai	r2,r2,8
   1411c:	90000326 	beq	r18,zero,1412c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x98>
   14120:	a1800017 	ldw	r6,0(r20)
   14124:	3085883a 	add	r2,r6,r2
   14128:	10800017 	ldw	r2,0(r2)
   1412c:	a08d883a 	add	r6,r20,r2
   14130:	81000017 	ldw	r4,0(r16)
   14134:	d9c00204 	addi	r7,sp,8
   14138:	980b883a 	mov	r5,r19
   1413c:	20800017 	ldw	r2,0(r4)
   14140:	10800617 	ldw	r2,24(r2)
   14144:	103ee83a 	callr	r2
   14148:	102d883a 	mov	r22,r2
   1414c:	10803fcc 	andi	r2,r2,255
   14150:	10001426 	beq	r2,zero,141a4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14154:	d8800517 	ldw	r2,20(sp)
   14158:	10800218 	cmpnei	r2,r2,8
   1415c:	10002226 	beq	r2,zero,141e8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x154>
   14160:	d8800317 	ldw	r2,12(sp)
   14164:	11000110 	cmplti	r4,r2,4
   14168:	2000041e 	bne	r4,zero,1417c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   1416c:	e000031e 	bne	fp,zero,1417c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   14170:	00ffff44 	movi	r3,-3
   14174:	10c4703a 	and	r2,r2,r3
   14178:	d8800315 	stw	r2,12(sp)
   1417c:	a8800317 	ldw	r2,12(r21)
   14180:	10001d26 	beq	r2,zero,141f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x164>
   14184:	a9000017 	ldw	r4,0(r21)
   14188:	d9400217 	ldw	r5,8(sp)
   1418c:	2140561e 	bne	r4,r5,142e8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x254>
   14190:	20003626 	beq	r4,zero,1426c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1d8>
   14194:	a8800117 	ldw	r2,4(r21)
   14198:	d9000317 	ldw	r4,12(sp)
   1419c:	1104b03a 	or	r2,r2,r4
   141a0:	a8800115 	stw	r2,4(r21)
   141a4:	bdffffc4 	addi	r23,r23,-1
   141a8:	b8bfffd8 	cmpnei	r2,r23,-1
   141ac:	843ffe04 	addi	r16,r16,-8
   141b0:	10004826 	beq	r2,zero,142d4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   141b4:	80800117 	ldw	r2,4(r16)
   141b8:	d8c00017 	ldw	r3,0(sp)
   141bc:	d8000215 	stw	zero,8(sp)
   141c0:	1700008c 	andi	fp,r2,2
   141c4:	d8000315 	stw	zero,12(sp)
   141c8:	dc400415 	stw	r17,16(sp)
   141cc:	d8000515 	stw	zero,20(sp)
   141d0:	e0c8b03a 	or	r4,fp,r3
   141d4:	1480004c 	andi	r18,r2,1
   141d8:	203ff226 	beq	r4,zero,141a4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   141dc:	a03fce1e 	bne	r20,zero,14118 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x84>
   141e0:	000d883a 	mov	r6,zero
   141e4:	003fd206 	br	14130 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x9c>
   141e8:	903fdd26 	beq	r18,zero,14160 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   141ec:	80800017 	ldw	r2,0(r16)
   141f0:	d8800515 	stw	r2,20(sp)
   141f4:	003fda06 	br	14160 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   141f8:	d9000217 	ldw	r4,8(sp)
   141fc:	d8800317 	ldw	r2,12(sp)
   14200:	a9000015 	stw	r4,0(r21)
   14204:	d9000417 	ldw	r4,16(sp)
   14208:	a8800115 	stw	r2,4(r21)
   1420c:	a9000215 	stw	r4,8(r21)
   14210:	d9000517 	ldw	r4,20(sp)
   14214:	a9000315 	stw	r4,12(r21)
   14218:	11000110 	cmplti	r4,r2,4
   1421c:	2000061e 	bne	r4,zero,14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14220:	1100008c 	andi	r4,r2,2
   14224:	20002126 	beq	r4,zero,142ac <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x218>
   14228:	d8800117 	ldw	r2,4(sp)
   1422c:	10800217 	ldw	r2,8(r2)
   14230:	1080004c 	andi	r2,r2,1
   14234:	103fdb1e 	bne	r2,zero,141a4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14238:	b005883a 	mov	r2,r22
   1423c:	dfc00f17 	ldw	ra,60(sp)
   14240:	df000e17 	ldw	fp,56(sp)
   14244:	ddc00d17 	ldw	r23,52(sp)
   14248:	dd800c17 	ldw	r22,48(sp)
   1424c:	dd400b17 	ldw	r21,44(sp)
   14250:	dd000a17 	ldw	r20,40(sp)
   14254:	dcc00917 	ldw	r19,36(sp)
   14258:	dc800817 	ldw	r18,32(sp)
   1425c:	dc400717 	ldw	r17,28(sp)
   14260:	dc000617 	ldw	r16,24(sp)
   14264:	dec01004 	addi	sp,sp,64
   14268:	f800283a 	ret
   1426c:	d9000517 	ldw	r4,20(sp)
   14270:	21400220 	cmpeqi	r5,r4,8
   14274:	28000a1e 	bne	r5,zero,142a0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   14278:	11400220 	cmpeqi	r5,r2,8
   1427c:	2800081e 	bne	r5,zero,142a0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   14280:	21000117 	ldw	r4,4(r4)
   14284:	11400117 	ldw	r5,4(r2)
   14288:	217fc226 	beq	r4,r5,14194 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   1428c:	20800007 	ldb	r2,0(r4)
   14290:	10800aa0 	cmpeqi	r2,r2,42
   14294:	1000021e 	bne	r2,zero,142a0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   14298:	0015a980 	call	15a98 <strcmp>
   1429c:	103fbd26 	beq	r2,zero,14194 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   142a0:	00800084 	movi	r2,2
   142a4:	a8800115 	stw	r2,4(r21)
   142a8:	003fe306 	br	14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   142ac:	1080004c 	andi	r2,r2,1
   142b0:	103fe126 	beq	r2,zero,14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   142b4:	d8800117 	ldw	r2,4(sp)
   142b8:	10800217 	ldw	r2,8(r2)
   142bc:	1080008c 	andi	r2,r2,2
   142c0:	103fdd26 	beq	r2,zero,14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   142c4:	bdffffc4 	addi	r23,r23,-1
   142c8:	b8bfffd8 	cmpnei	r2,r23,-1
   142cc:	843ffe04 	addi	r16,r16,-8
   142d0:	103fb81e 	bne	r2,zero,141b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   142d4:	ad800117 	ldw	r22,4(r21)
   142d8:	b02cc03a 	cmpne	r22,r22,zero
   142dc:	003fd606 	br	14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   142e0:	84400217 	ldw	r17,8(r16)
   142e4:	003f8206 	br	140f0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x5c>
   142e8:	00800084 	movi	r2,2
   142ec:	a8000015 	stw	zero,0(r21)
   142f0:	a8800115 	stw	r2,4(r21)
   142f4:	003fd006 	br	14238 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>

000142f8 <_ZNKSt17bad_function_call4whatEv>:
   142f8:	00800074 	movhi	r2,1
   142fc:	109bfe04 	addi	r2,r2,28664
   14300:	f800283a 	ret

00014304 <_ZNSt17bad_function_callD1Ev>:
   14304:	00800074 	movhi	r2,1
   14308:	109c0e04 	addi	r2,r2,28728
   1430c:	20800015 	stw	r2,0(r4)
   14310:	00148681 	jmpi	14868 <_ZNSt9exceptionD1Ev>

00014314 <_ZNSt17bad_function_callD0Ev>:
   14314:	defffe04 	addi	sp,sp,-8
   14318:	00800074 	movhi	r2,1
   1431c:	dc000015 	stw	r16,0(sp)
   14320:	dfc00115 	stw	ra,4(sp)
   14324:	109c0e04 	addi	r2,r2,28728
   14328:	20800015 	stw	r2,0(r4)
   1432c:	2021883a 	mov	r16,r4
   14330:	00148680 	call	14868 <_ZNSt9exceptionD1Ev>
   14334:	8009883a 	mov	r4,r16
   14338:	dfc00117 	ldw	ra,4(sp)
   1433c:	dc000017 	ldw	r16,0(sp)
   14340:	dec00204 	addi	sp,sp,8
   14344:	001437c1 	jmpi	1437c <_ZdlPv>

00014348 <_ZSt25__throw_bad_function_callv>:
   14348:	deffff04 	addi	sp,sp,-4
   1434c:	01000104 	movi	r4,4
   14350:	dfc00015 	stw	ra,0(sp)
   14354:	001450c0 	call	1450c <__cxa_allocate_exception>
   14358:	1009883a 	mov	r4,r2
   1435c:	00800074 	movhi	r2,1
   14360:	01800074 	movhi	r6,1
   14364:	01400074 	movhi	r5,1
   14368:	109c0e04 	addi	r2,r2,28728
   1436c:	3190c104 	addi	r6,r6,17156
   14370:	295c0904 	addi	r5,r5,28708
   14374:	20800015 	stw	r2,0(r4)
   14378:	00133b40 	call	133b4 <__cxa_throw>

0001437c <_ZdlPv>:
   1437c:	00154901 	jmpi	15490 <free>

00014380 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
   14380:	014000b4 	movhi	r5,2
   14384:	29607304 	addi	r5,r5,-32308
   14388:	28c00117 	ldw	r3,4(r5)
   1438c:	223fff04 	addi	r8,r4,-4
   14390:	18001a26 	beq	r3,zero,143fc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   14394:	227fff17 	ldw	r9,-4(r4)
   14398:	424d883a 	add	r6,r8,r9
   1439c:	30c01736 	bltu	r6,r3,143fc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   143a0:	18800117 	ldw	r2,4(r3)
   143a4:	19802326 	beq	r3,r6,14434 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xb4>
   143a8:	01c000b4 	movhi	r7,2
   143ac:	39e07404 	addi	r7,r7,-32304
   143b0:	10000726 	beq	r2,zero,143d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   143b4:	3080062e 	bgeu	r6,r2,143d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   143b8:	11400117 	ldw	r5,4(r2)
   143bc:	19c00104 	addi	r7,r3,4
   143c0:	1007883a 	mov	r3,r2
   143c4:	28001826 	beq	r5,zero,14428 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xa8>
   143c8:	2805883a 	mov	r2,r5
   143cc:	30bffa36 	bltu	r6,r2,143b8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x38>
   143d0:	30801026 	beq	r6,r2,14414 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   143d4:	38800017 	ldw	r2,0(r7)
   143d8:	10c00017 	ldw	r3,0(r2)
   143dc:	10cb883a 	add	r5,r2,r3
   143e0:	41400926 	beq	r8,r5,14408 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x88>
   143e4:	10800117 	ldw	r2,4(r2)
   143e8:	227fff15 	stw	r9,-4(r4)
   143ec:	20800015 	stw	r2,0(r4)
   143f0:	38800017 	ldw	r2,0(r7)
   143f4:	12000115 	stw	r8,4(r2)
   143f8:	f800283a 	ret
   143fc:	20c00015 	stw	r3,0(r4)
   14400:	2a000115 	stw	r8,4(r5)
   14404:	f800283a 	ret
   14408:	1a47883a 	add	r3,r3,r9
   1440c:	10c00015 	stw	r3,0(r2)
   14410:	f800283a 	ret
   14414:	31400017 	ldw	r5,0(r6)
   14418:	30800117 	ldw	r2,4(r6)
   1441c:	4953883a 	add	r9,r9,r5
   14420:	18800115 	stw	r2,4(r3)
   14424:	003feb06 	br	143d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14428:	0005883a 	mov	r2,zero
   1442c:	30bfe91e 	bne	r6,r2,143d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14430:	003ff806 	br	14414 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14434:	18c00017 	ldw	r3,0(r3)
   14438:	20800015 	stw	r2,0(r4)
   1443c:	1a53883a 	add	r9,r3,r9
   14440:	227fff15 	stw	r9,-4(r4)
   14444:	2a000115 	stw	r8,4(r5)
   14448:	f800283a 	ret

0001444c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
   1444c:	21000104 	addi	r4,r4,4
   14450:	20800228 	cmpgeui	r2,r4,8
   14454:	1000011e 	bne	r2,zero,1445c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x10>
   14458:	01000204 	movi	r4,8
   1445c:	008000b4 	movhi	r2,2
   14460:	10a07417 	ldw	r2,-32304(r2)
   14464:	210000c4 	addi	r4,r4,3
   14468:	00ffff04 	movi	r3,-4
   1446c:	20c8703a 	and	r4,r4,r3
   14470:	10001026 	beq	r2,zero,144b4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x68>
   14474:	018000b4 	movhi	r6,2
   14478:	31a07404 	addi	r6,r6,-32304
   1447c:	00000206 	br	14488 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3c>
   14480:	19800104 	addi	r6,r3,4
   14484:	10001426 	beq	r2,zero,144d8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x8c>
   14488:	11400017 	ldw	r5,0(r2)
   1448c:	1007883a 	mov	r3,r2
   14490:	10800117 	ldw	r2,4(r2)
   14494:	293ffa36 	bltu	r5,r4,14480 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x34>
   14498:	290fc83a 	sub	r7,r5,r4
   1449c:	3a000228 	cmpgeui	r8,r7,8
   144a0:	4000051e 	bne	r8,zero,144b8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x6c>
   144a4:	19400015 	stw	r5,0(r3)
   144a8:	30800015 	stw	r2,0(r6)
   144ac:	18800104 	addi	r2,r3,4
   144b0:	f800283a 	ret
   144b4:	f800283a 	ret
   144b8:	190b883a 	add	r5,r3,r4
   144bc:	28800115 	stw	r2,4(r5)
   144c0:	30c00017 	ldw	r3,0(r6)
   144c4:	29c00015 	stw	r7,0(r5)
   144c8:	19000015 	stw	r4,0(r3)
   144cc:	31400015 	stw	r5,0(r6)
   144d0:	18800104 	addi	r2,r3,4
   144d4:	f800283a 	ret
   144d8:	f800283a 	ret

000144dc <_ZN9__gnu_cxx9__freeresEv>:
   144dc:	008000b4 	movhi	r2,2
   144e0:	11207517 	ldw	r4,-32300(r2)
   144e4:	20000826 	beq	r4,zero,14508 <_ZN9__gnu_cxx9__freeresEv+0x2c>
   144e8:	deffff04 	addi	sp,sp,-4
   144ec:	dfc00015 	stw	ra,0(sp)
   144f0:	00154900 	call	15490 <free>
   144f4:	008000b4 	movhi	r2,2
   144f8:	10207515 	stw	zero,-32300(r2)
   144fc:	dfc00017 	ldw	ra,0(sp)
   14500:	dec00104 	addi	sp,sp,4
   14504:	f800283a 	ret
   14508:	f800283a 	ret

0001450c <__cxa_allocate_exception>:
   1450c:	defffe04 	addi	sp,sp,-8
   14510:	dc000015 	stw	r16,0(sp)
   14514:	24001104 	addi	r16,r4,68
   14518:	8009883a 	mov	r4,r16
   1451c:	dfc00115 	stw	ra,4(sp)
   14520:	00154840 	call	15484 <malloc>
   14524:	1007883a 	mov	r3,r2
   14528:	10000926 	beq	r2,zero,14550 <__cxa_allocate_exception+0x44>
   1452c:	01801104 	movi	r6,68
   14530:	000b883a 	mov	r5,zero
   14534:	1809883a 	mov	r4,r3
   14538:	00154c40 	call	154c4 <memset>
   1453c:	10801104 	addi	r2,r2,68
   14540:	dfc00117 	ldw	ra,4(sp)
   14544:	dc000017 	ldw	r16,0(sp)
   14548:	dec00204 	addi	sp,sp,8
   1454c:	f800283a 	ret
   14550:	8009883a 	mov	r4,r16
   14554:	001444c0 	call	1444c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14558:	1007883a 	mov	r3,r2
   1455c:	103ff31e 	bne	r2,zero,1452c <__cxa_allocate_exception+0x20>
   14560:	00132500 	call	13250 <_ZSt9terminatev>

00014564 <__cxa_free_exception>:
   14564:	008000b4 	movhi	r2,2
   14568:	10a07304 	addi	r2,r2,-32308
   1456c:	10c00217 	ldw	r3,8(r2)
   14570:	213fef04 	addi	r4,r4,-68
   14574:	1900042e 	bgeu	r3,r4,14588 <__cxa_free_exception+0x24>
   14578:	10800317 	ldw	r2,12(r2)
   1457c:	1887883a 	add	r3,r3,r2
   14580:	20c0012e 	bgeu	r4,r3,14588 <__cxa_free_exception+0x24>
   14584:	00143801 	jmpi	14380 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14588:	00154901 	jmpi	15490 <free>

0001458c <__cxa_allocate_dependent_exception>:
   1458c:	deffff04 	addi	sp,sp,-4
   14590:	01001004 	movi	r4,64
   14594:	dfc00015 	stw	ra,0(sp)
   14598:	00154840 	call	15484 <malloc>
   1459c:	1009883a 	mov	r4,r2
   145a0:	10000626 	beq	r2,zero,145bc <__cxa_allocate_dependent_exception+0x30>
   145a4:	01801004 	movi	r6,64
   145a8:	000b883a 	mov	r5,zero
   145ac:	00154c40 	call	154c4 <memset>
   145b0:	dfc00017 	ldw	ra,0(sp)
   145b4:	dec00104 	addi	sp,sp,4
   145b8:	f800283a 	ret
   145bc:	01001004 	movi	r4,64
   145c0:	001444c0 	call	1444c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   145c4:	1009883a 	mov	r4,r2
   145c8:	103ff61e 	bne	r2,zero,145a4 <__cxa_allocate_dependent_exception+0x18>
   145cc:	00132500 	call	13250 <_ZSt9terminatev>

000145d0 <__cxa_free_dependent_exception>:
   145d0:	00c000b4 	movhi	r3,2
   145d4:	18e07304 	addi	r3,r3,-32308
   145d8:	19400217 	ldw	r5,8(r3)
   145dc:	2005883a 	mov	r2,r4
   145e0:	2900042e 	bgeu	r5,r4,145f4 <__cxa_free_dependent_exception+0x24>
   145e4:	18c00317 	ldw	r3,12(r3)
   145e8:	28cb883a 	add	r5,r5,r3
   145ec:	2140012e 	bgeu	r4,r5,145f4 <__cxa_free_dependent_exception+0x24>
   145f0:	00143801 	jmpi	14380 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   145f4:	1009883a 	mov	r4,r2
   145f8:	00154901 	jmpi	15490 <free>

000145fc <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
   145fc:	defffd04 	addi	sp,sp,-12
   14600:	dc000015 	stw	r16,0(sp)
   14604:	040000b4 	movhi	r16,2
   14608:	dc400115 	stw	r17,4(sp)
   1460c:	84207304 	addi	r16,r16,-32308
   14610:	04424004 	movi	r17,2304
   14614:	01024004 	movi	r4,2304
   14618:	dfc00215 	stw	ra,8(sp)
   1461c:	84400315 	stw	r17,12(r16)
   14620:	00154840 	call	15484 <malloc>
   14624:	80800215 	stw	r2,8(r16)
   14628:	10000826 	beq	r2,zero,1464c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
   1462c:	80800115 	stw	r2,4(r16)
   14630:	14400015 	stw	r17,0(r2)
   14634:	10000115 	stw	zero,4(r2)
   14638:	dfc00217 	ldw	ra,8(sp)
   1463c:	dc400117 	ldw	r17,4(sp)
   14640:	dc000017 	ldw	r16,0(sp)
   14644:	dec00304 	addi	sp,sp,12
   14648:	f800283a 	ret
   1464c:	008000b4 	movhi	r2,2
   14650:	10207615 	stw	zero,-32296(r2)
   14654:	008000b4 	movhi	r2,2
   14658:	10207415 	stw	zero,-32304(r2)
   1465c:	003ff606 	br	14638 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

00014660 <__cxa_call_terminate>:
   14660:	defffe04 	addi	sp,sp,-8
   14664:	dfc00115 	stw	ra,4(sp)
   14668:	dc000015 	stw	r16,0(sp)
   1466c:	20000d26 	beq	r4,zero,146a4 <__cxa_call_terminate+0x44>
   14670:	2021883a 	mov	r16,r4
   14674:	00146c00 	call	146c0 <__cxa_begin_catch>
   14678:	80800017 	ldw	r2,0(r16)
   1467c:	81000117 	ldw	r4,4(r16)
   14680:	00ef3574 	movhi	r3,48341
   14684:	18f54004 	addi	r3,r3,-11008
   14688:	016e2cb4 	movhi	r5,47282
   1468c:	296aaf04 	addi	r5,r5,-21828
   14690:	10c7883a 	add	r3,r2,r3
   14694:	1885803a 	cmpltu	r2,r3,r2
   14698:	2149883a 	add	r4,r4,r5
   1469c:	1105883a 	add	r2,r2,r4
   146a0:	10000126 	beq	r2,zero,146a8 <__cxa_call_terminate+0x48>
   146a4:	00132500 	call	13250 <_ZSt9terminatev>
   146a8:	18c000a8 	cmpgeui	r3,r3,2
   146ac:	183ffd1e 	bne	r3,zero,146a4 <__cxa_call_terminate+0x44>
   146b0:	813ff817 	ldw	r4,-32(r16)
   146b4:	00131880 	call	13188 <_ZN10__cxxabiv111__terminateEPFvvE>

000146b8 <__cxa_get_exception_ptr>:
   146b8:	20bfff17 	ldw	r2,-4(r4)
   146bc:	f800283a 	ret

000146c0 <__cxa_begin_catch>:
   146c0:	defffe04 	addi	sp,sp,-8
   146c4:	dc000015 	stw	r16,0(sp)
   146c8:	dfc00115 	stw	ra,4(sp)
   146cc:	2021883a 	mov	r16,r4
   146d0:	00148c40 	call	148c4 <__cxa_get_globals>
   146d4:	80c00017 	ldw	r3,0(r16)
   146d8:	81800117 	ldw	r6,4(r16)
   146dc:	012f3574 	movhi	r4,48341
   146e0:	21354004 	addi	r4,r4,-11008
   146e4:	016e2cb4 	movhi	r5,47282
   146e8:	296aaf04 	addi	r5,r5,-21828
   146ec:	1909883a 	add	r4,r3,r4
   146f0:	314d883a 	add	r6,r6,r5
   146f4:	20c7803a 	cmpltu	r3,r4,r3
   146f8:	1987883a 	add	r3,r3,r6
   146fc:	100b883a 	mov	r5,r2
   14700:	81bff504 	addi	r6,r16,-44
   14704:	10800017 	ldw	r2,0(r2)
   14708:	18000626 	beq	r3,zero,14724 <__cxa_begin_catch+0x64>
   1470c:	1000191e 	bne	r2,zero,14774 <__cxa_begin_catch+0xb4>
   14710:	29800015 	stw	r6,0(r5)
   14714:	dfc00117 	ldw	ra,4(sp)
   14718:	dc000017 	ldw	r16,0(sp)
   1471c:	dec00204 	addi	sp,sp,8
   14720:	f800283a 	ret
   14724:	210000a8 	cmpgeui	r4,r4,2
   14728:	203ff81e 	bne	r4,zero,1470c <__cxa_begin_catch+0x4c>
   1472c:	80fffa17 	ldw	r3,-24(r16)
   14730:	18000d16 	blt	r3,zero,14768 <__cxa_begin_catch+0xa8>
   14734:	18c00044 	addi	r3,r3,1
   14738:	29000117 	ldw	r4,4(r5)
   1473c:	80fffa15 	stw	r3,-24(r16)
   14740:	20ffffc4 	addi	r3,r4,-1
   14744:	28c00115 	stw	r3,4(r5)
   14748:	11800226 	beq	r2,r6,14754 <__cxa_begin_catch+0x94>
   1474c:	80bff915 	stw	r2,-28(r16)
   14750:	29800015 	stw	r6,0(r5)
   14754:	80bfff17 	ldw	r2,-4(r16)
   14758:	dfc00117 	ldw	ra,4(sp)
   1475c:	dc000017 	ldw	r16,0(sp)
   14760:	dec00204 	addi	sp,sp,8
   14764:	f800283a 	ret
   14768:	01000044 	movi	r4,1
   1476c:	20c7c83a 	sub	r3,r4,r3
   14770:	003ff106 	br	14738 <__cxa_begin_catch+0x78>
   14774:	00132500 	call	13250 <_ZSt9terminatev>

00014778 <__cxa_end_catch>:
   14778:	deffff04 	addi	sp,sp,-4
   1477c:	dfc00015 	stw	ra,0(sp)
   14780:	00148b80 	call	148b8 <__cxa_get_globals_fast>
   14784:	11000017 	ldw	r4,0(r2)
   14788:	20001426 	beq	r4,zero,147dc <__cxa_end_catch+0x64>
   1478c:	20c00b17 	ldw	r3,44(r4)
   14790:	21800c17 	ldw	r6,48(r4)
   14794:	016f3574 	movhi	r5,48341
   14798:	29754004 	addi	r5,r5,-11008
   1479c:	01ee2cb4 	movhi	r7,47282
   147a0:	39eaaf04 	addi	r7,r7,-21828
   147a4:	194b883a 	add	r5,r3,r5
   147a8:	28c7803a 	cmpltu	r3,r5,r3
   147ac:	31cd883a 	add	r6,r6,r7
   147b0:	1987883a 	add	r3,r3,r6
   147b4:	1800111e 	bne	r3,zero,147fc <__cxa_end_catch+0x84>
   147b8:	294000a8 	cmpgeui	r5,r5,2
   147bc:	28000f1e 	bne	r5,zero,147fc <__cxa_end_catch+0x84>
   147c0:	20c00517 	ldw	r3,20(r4)
   147c4:	18000816 	blt	r3,zero,147e8 <__cxa_end_catch+0x70>
   147c8:	18ffffc4 	addi	r3,r3,-1
   147cc:	18001026 	beq	r3,zero,14810 <__cxa_end_catch+0x98>
   147d0:	18bfffd8 	cmpnei	r2,r3,-1
   147d4:	10001426 	beq	r2,zero,14828 <__cxa_end_catch+0xb0>
   147d8:	20c00515 	stw	r3,20(r4)
   147dc:	dfc00017 	ldw	ra,0(sp)
   147e0:	dec00104 	addi	sp,sp,4
   147e4:	f800283a 	ret
   147e8:	18c00044 	addi	r3,r3,1
   147ec:	183ffa1e 	bne	r3,zero,147d8 <__cxa_end_catch+0x60>
   147f0:	21400417 	ldw	r5,16(r4)
   147f4:	11400015 	stw	r5,0(r2)
   147f8:	003ff706 	br	147d8 <__cxa_end_catch+0x60>
   147fc:	21000b04 	addi	r4,r4,44
   14800:	10000015 	stw	zero,0(r2)
   14804:	dfc00017 	ldw	ra,0(sp)
   14808:	dec00104 	addi	sp,sp,4
   1480c:	00153cc1 	jmpi	153cc <_Unwind_DeleteException>
   14810:	20c00417 	ldw	r3,16(r4)
   14814:	21000b04 	addi	r4,r4,44
   14818:	10c00015 	stw	r3,0(r2)
   1481c:	dfc00017 	ldw	ra,0(sp)
   14820:	dec00104 	addi	sp,sp,4
   14824:	00153cc1 	jmpi	153cc <_Unwind_DeleteException>
   14828:	00132500 	call	13250 <_ZSt9terminatev>

0001482c <_ZSt18uncaught_exceptionv>:
   1482c:	deffff04 	addi	sp,sp,-4
   14830:	dfc00015 	stw	ra,0(sp)
   14834:	00148c40 	call	148c4 <__cxa_get_globals>
   14838:	10800117 	ldw	r2,4(r2)
   1483c:	1004c03a 	cmpne	r2,r2,zero
   14840:	dfc00017 	ldw	ra,0(sp)
   14844:	dec00104 	addi	sp,sp,4
   14848:	f800283a 	ret

0001484c <_ZSt19uncaught_exceptionsv>:
   1484c:	deffff04 	addi	sp,sp,-4
   14850:	dfc00015 	stw	ra,0(sp)
   14854:	00148c40 	call	148c4 <__cxa_get_globals>
   14858:	10800117 	ldw	r2,4(r2)
   1485c:	dfc00017 	ldw	ra,0(sp)
   14860:	dec00104 	addi	sp,sp,4
   14864:	f800283a 	ret

00014868 <_ZNSt9exceptionD1Ev>:
   14868:	f800283a 	ret

0001486c <_ZNSt13bad_exceptionD1Ev>:
   1486c:	f800283a 	ret

00014870 <_ZGTtNKSt9exception4whatEv>:
   14870:	00800074 	movhi	r2,1
   14874:	109c1104 	addi	r2,r2,28740
   14878:	f800283a 	ret

0001487c <_ZGTtNKSt13bad_exception4whatEv>:
   1487c:	00800074 	movhi	r2,1
   14880:	109c1504 	addi	r2,r2,28756
   14884:	f800283a 	ret

00014888 <_ZNSt9exceptionD0Ev>:
   14888:	01400104 	movi	r5,4
   1488c:	00124481 	jmpi	12448 <_ZdlPvj>

00014890 <_ZNSt13bad_exceptionD0Ev>:
   14890:	01400104 	movi	r5,4
   14894:	00124481 	jmpi	12448 <_ZdlPvj>

00014898 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
   14898:	f800283a 	ret

0001489c <_ZN10__cxxabiv115__forced_unwindD0Ev>:
   1489c:	01400104 	movi	r5,4
   148a0:	00124481 	jmpi	12448 <_ZdlPvj>

000148a4 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
   148a4:	f800283a 	ret

000148a8 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
   148a8:	01400104 	movi	r5,4
   148ac:	00124481 	jmpi	12448 <_ZdlPvj>

000148b0 <_ZGTtNKSt9exceptionD1Ev>:
   148b0:	f800283a 	ret

000148b4 <_ZGTtNKSt13bad_exceptionD1Ev>:
   148b4:	f800283a 	ret

000148b8 <__cxa_get_globals_fast>:
   148b8:	008000b4 	movhi	r2,2
   148bc:	10a05904 	addi	r2,r2,-32412
   148c0:	f800283a 	ret

000148c4 <__cxa_get_globals>:
   148c4:	008000b4 	movhi	r2,2
   148c8:	10a05904 	addi	r2,r2,-32412
   148cc:	f800283a 	ret

000148d0 <_ZN10__cxxabiv123__fundamental_type_infoD1Ev>:
   148d0:	00800074 	movhi	r2,1
   148d4:	109c5a04 	addi	r2,r2,29032
   148d8:	20800015 	stw	r2,0(r4)
   148dc:	00138a81 	jmpi	138a8 <_ZNSt9type_infoD1Ev>

000148e0 <_ZN10__cxxabiv123__fundamental_type_infoD0Ev>:
   148e0:	defffe04 	addi	sp,sp,-8
   148e4:	00800074 	movhi	r2,1
   148e8:	dc000015 	stw	r16,0(sp)
   148ec:	dfc00115 	stw	ra,4(sp)
   148f0:	109c5a04 	addi	r2,r2,29032
   148f4:	20800015 	stw	r2,0(r4)
   148f8:	2021883a 	mov	r16,r4
   148fc:	00138a80 	call	138a8 <_ZNSt9type_infoD1Ev>
   14900:	01400204 	movi	r5,8
   14904:	8009883a 	mov	r4,r16
   14908:	dfc00117 	ldw	ra,4(sp)
   1490c:	dc000017 	ldw	r16,0(sp)
   14910:	dec00204 	addi	sp,sp,8
   14914:	00124481 	jmpi	12448 <_ZdlPvj>

00014918 <_Znwj>:
   14918:	defffe04 	addi	sp,sp,-8
   1491c:	dc000015 	stw	r16,0(sp)
   14920:	dfc00115 	stw	ra,4(sp)
   14924:	2021883a 	mov	r16,r4
   14928:	2000011e 	bne	r4,zero,14930 <_Znwj+0x18>
   1492c:	04000044 	movi	r16,1
   14930:	8009883a 	mov	r4,r16
   14934:	00154840 	call	15484 <malloc>
   14938:	10000426 	beq	r2,zero,1494c <_Znwj+0x34>
   1493c:	dfc00117 	ldw	ra,4(sp)
   14940:	dc000017 	ldw	r16,0(sp)
   14944:	dec00204 	addi	sp,sp,8
   14948:	f800283a 	ret
   1494c:	0014e400 	call	14e40 <_ZSt15get_new_handlerv>
   14950:	10000226 	beq	r2,zero,1495c <_Znwj+0x44>
   14954:	103ee83a 	callr	r2
   14958:	003ff506 	br	14930 <_Znwj+0x18>
   1495c:	01000104 	movi	r4,4
   14960:	001450c0 	call	1450c <__cxa_allocate_exception>
   14964:	1009883a 	mov	r4,r2
   14968:	00800074 	movhi	r2,1
   1496c:	01800074 	movhi	r6,1
   14970:	01400074 	movhi	r5,1
   14974:	109d5a04 	addi	r2,r2,30056
   14978:	31935204 	addi	r6,r6,19784
   1497c:	295d5504 	addi	r5,r5,30036
   14980:	20800015 	stw	r2,0(r4)
   14984:	00133b40 	call	133b4 <__cxa_throw>

00014988 <_ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj>:
   14988:	21000317 	ldw	r4,12(r4)
   1498c:	29400317 	ldw	r5,12(r5)
   14990:	39c00084 	addi	r7,r7,2
   14994:	20800017 	ldw	r2,0(r4)
   14998:	10800417 	ldw	r2,16(r2)
   1499c:	1000683a 	jmp	r2

000149a0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>:
   149a0:	00800074 	movhi	r2,1
   149a4:	109d2e04 	addi	r2,r2,29880
   149a8:	20800015 	stw	r2,0(r4)
   149ac:	00138a81 	jmpi	138a8 <_ZNSt9type_infoD1Ev>

000149b0 <_ZN10__cxxabiv117__pbase_type_infoD0Ev>:
   149b0:	defffe04 	addi	sp,sp,-8
   149b4:	00800074 	movhi	r2,1
   149b8:	dc000015 	stw	r16,0(sp)
   149bc:	dfc00115 	stw	ra,4(sp)
   149c0:	109d2e04 	addi	r2,r2,29880
   149c4:	20800015 	stw	r2,0(r4)
   149c8:	2021883a 	mov	r16,r4
   149cc:	00138a80 	call	138a8 <_ZNSt9type_infoD1Ev>
   149d0:	01400404 	movi	r5,16
   149d4:	8009883a 	mov	r4,r16
   149d8:	dfc00117 	ldw	ra,4(sp)
   149dc:	dc000017 	ldw	r16,0(sp)
   149e0:	dec00204 	addi	sp,sp,8
   149e4:	00124481 	jmpi	12448 <_ZdlPvj>

000149e8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj>:
   149e8:	defff804 	addi	sp,sp,-32
   149ec:	dcc00315 	stw	r19,12(sp)
   149f0:	dc400115 	stw	r17,4(sp)
   149f4:	2027883a 	mov	r19,r4
   149f8:	2c400117 	ldw	r17,4(r5)
   149fc:	21000117 	ldw	r4,4(r4)
   14a00:	dfc00715 	stw	ra,28(sp)
   14a04:	dd800615 	stw	r22,24(sp)
   14a08:	dd400515 	stw	r21,20(sp)
   14a0c:	dd000415 	stw	r20,16(sp)
   14a10:	dc800215 	stw	r18,8(sp)
   14a14:	dc000015 	stw	r16,0(sp)
   14a18:	24400926 	beq	r4,r17,14a40 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
   14a1c:	20800007 	ldb	r2,0(r4)
   14a20:	2821883a 	mov	r16,r5
   14a24:	3025883a 	mov	r18,r6
   14a28:	10800aa0 	cmpeqi	r2,r2,42
   14a2c:	3829883a 	mov	r20,r7
   14a30:	10000e1e 	bne	r2,zero,14a6c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   14a34:	880b883a 	mov	r5,r17
   14a38:	0015a980 	call	15a98 <strcmp>
   14a3c:	10000b1e 	bne	r2,zero,14a6c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   14a40:	00800044 	movi	r2,1
   14a44:	dfc00717 	ldw	ra,28(sp)
   14a48:	dd800617 	ldw	r22,24(sp)
   14a4c:	dd400517 	ldw	r21,20(sp)
   14a50:	dd000417 	ldw	r20,16(sp)
   14a54:	dcc00317 	ldw	r19,12(sp)
   14a58:	dc800217 	ldw	r18,8(sp)
   14a5c:	dc400117 	ldw	r17,4(sp)
   14a60:	dc000017 	ldw	r16,0(sp)
   14a64:	dec00804 	addi	sp,sp,32
   14a68:	f800283a 	ret
   14a6c:	00800074 	movhi	r2,1
   14a70:	9d400017 	ldw	r21,0(r19)
   14a74:	115ec017 	ldw	r5,31488(r2)
   14a78:	adbfff17 	ldw	r22,-4(r21)
   14a7c:	89403726 	beq	r17,r5,14b5c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   14a80:	88800007 	ldb	r2,0(r17)
   14a84:	10800aa0 	cmpeqi	r2,r2,42
   14a88:	1000031e 	bne	r2,zero,14a98 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   14a8c:	8809883a 	mov	r4,r17
   14a90:	0015a980 	call	15a98 <strcmp>
   14a94:	10003126 	beq	r2,zero,14b5c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   14a98:	80006926 	beq	r16,zero,14c40 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x258>
   14a9c:	80800017 	ldw	r2,0(r16)
   14aa0:	b1000117 	ldw	r4,4(r22)
   14aa4:	10bfff17 	ldw	r2,-4(r2)
   14aa8:	11400117 	ldw	r5,4(r2)
   14aac:	21400526 	beq	r4,r5,14ac4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xdc>
   14ab0:	20800007 	ldb	r2,0(r4)
   14ab4:	10800aa0 	cmpeqi	r2,r2,42
   14ab8:	1000421e 	bne	r2,zero,14bc4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   14abc:	0015a980 	call	15a98 <strcmp>
   14ac0:	1000401e 	bne	r2,zero,14bc4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   14ac4:	a080004c 	andi	r2,r20,1
   14ac8:	10003e26 	beq	r2,zero,14bc4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   14acc:	99000217 	ldw	r4,8(r19)
   14ad0:	81800217 	ldw	r6,8(r16)
   14ad4:	21c0180c 	andi	r7,r4,96
   14ad8:	3080180c 	andi	r2,r6,96
   14adc:	01ca303a 	nor	r5,zero,r7
   14ae0:	288a703a 	and	r5,r5,r2
   14ae4:	28000126 	beq	r5,zero,14aec <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x104>
   14ae8:	31cc703a 	and	r6,r6,r7
   14aec:	0084303a 	nor	r2,zero,r2
   14af0:	0106303a 	nor	r3,zero,r4
   14af4:	11c4703a 	and	r2,r2,r7
   14af8:	1986703a 	and	r3,r3,r6
   14afc:	10c4b03a 	or	r2,r2,r3
   14b00:	1000301e 	bne	r2,zero,14bc4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   14b04:	2100004c 	andi	r4,r4,1
   14b08:	20003c26 	beq	r4,zero,14bfc <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x214>
   14b0c:	a8c00617 	ldw	r3,24(r21)
   14b10:	00800074 	movhi	r2,1
   14b14:	10926204 	addi	r2,r2,18824
   14b18:	18803b1e 	bne	r3,r2,14c08 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x220>
   14b1c:	99000317 	ldw	r4,12(r19)
   14b20:	81400317 	ldw	r5,12(r16)
   14b24:	a1c00084 	addi	r7,r20,2
   14b28:	20800017 	ldw	r2,0(r4)
   14b2c:	900d883a 	mov	r6,r18
   14b30:	10800417 	ldw	r2,16(r2)
   14b34:	dfc00717 	ldw	ra,28(sp)
   14b38:	dd800617 	ldw	r22,24(sp)
   14b3c:	dd400517 	ldw	r21,20(sp)
   14b40:	dd000417 	ldw	r20,16(sp)
   14b44:	dcc00317 	ldw	r19,12(sp)
   14b48:	dc800217 	ldw	r18,8(sp)
   14b4c:	dc400117 	ldw	r17,4(sp)
   14b50:	dc000017 	ldw	r16,0(sp)
   14b54:	dec00804 	addi	sp,sp,32
   14b58:	1000683a 	jmp	r2
   14b5c:	00800074 	movhi	r2,1
   14b60:	b4400117 	ldw	r17,4(r22)
   14b64:	115bb717 	ldw	r5,28380(r2)
   14b68:	89401c26 	beq	r17,r5,14bdc <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   14b6c:	88800007 	ldb	r2,0(r17)
   14b70:	10800aa0 	cmpeqi	r2,r2,42
   14b74:	1000151e 	bne	r2,zero,14bcc <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1e4>
   14b78:	8809883a 	mov	r4,r17
   14b7c:	0015a980 	call	15a98 <strcmp>
   14b80:	10001626 	beq	r2,zero,14bdc <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   14b84:	00800074 	movhi	r2,1
   14b88:	115d4217 	ldw	r5,29960(r2)
   14b8c:	89400326 	beq	r17,r5,14b9c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   14b90:	8809883a 	mov	r4,r17
   14b94:	0015a980 	call	15a98 <strcmp>
   14b98:	103fbf1e 	bne	r2,zero,14a98 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   14b9c:	99000317 	ldw	r4,12(r19)
   14ba0:	20800017 	ldw	r2,0(r4)
   14ba4:	10800317 	ldw	r2,12(r2)
   14ba8:	103ee83a 	callr	r2
   14bac:	10c03fcc 	andi	r3,r2,255
   14bb0:	18000d26 	beq	r3,zero,14be8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x200>
   14bb4:	00c00074 	movhi	r3,1
   14bb8:	18deea04 	addi	r3,r3,31656
   14bbc:	90c00015 	stw	r3,0(r18)
   14bc0:	003fa006 	br	14a44 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   14bc4:	0005883a 	mov	r2,zero
   14bc8:	003f9e06 	br	14a44 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   14bcc:	00800074 	movhi	r2,1
   14bd0:	109d4217 	ldw	r2,29960(r2)
   14bd4:	88bfb01e 	bne	r17,r2,14a98 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   14bd8:	003ff006 	br	14b9c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   14bdc:	90000015 	stw	zero,0(r18)
   14be0:	00800044 	movi	r2,1
   14be4:	003f9706 	br	14a44 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   14be8:	00800074 	movhi	r2,1
   14bec:	109ee904 	addi	r2,r2,31652
   14bf0:	90800015 	stw	r2,0(r18)
   14bf4:	00800044 	movi	r2,1
   14bf8:	003f9206 	br	14a44 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   14bfc:	00bfff84 	movi	r2,-2
   14c00:	a0a8703a 	and	r20,r20,r2
   14c04:	003fc106 	br	14b0c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x124>
   14c08:	a00f883a 	mov	r7,r20
   14c0c:	900d883a 	mov	r6,r18
   14c10:	800b883a 	mov	r5,r16
   14c14:	9809883a 	mov	r4,r19
   14c18:	dfc00717 	ldw	ra,28(sp)
   14c1c:	dd800617 	ldw	r22,24(sp)
   14c20:	dd400517 	ldw	r21,20(sp)
   14c24:	dd000417 	ldw	r20,16(sp)
   14c28:	dcc00317 	ldw	r19,12(sp)
   14c2c:	dc800217 	ldw	r18,8(sp)
   14c30:	dc400117 	ldw	r17,4(sp)
   14c34:	dc000017 	ldw	r16,0(sp)
   14c38:	dec00804 	addi	sp,sp,32
   14c3c:	1800683a 	jmp	r3
   14c40:	0014dc40 	call	14dc4 <__cxa_bad_typeid>

00014c44 <_ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev>:
   14c44:	00800074 	movhi	r2,1
   14c48:	109d4604 	addi	r2,r2,29976
   14c4c:	20800015 	stw	r2,0(r4)
   14c50:	00149a01 	jmpi	149a0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

00014c54 <_ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev>:
   14c54:	defffe04 	addi	sp,sp,-8
   14c58:	00800074 	movhi	r2,1
   14c5c:	dc000015 	stw	r16,0(sp)
   14c60:	dfc00115 	stw	ra,4(sp)
   14c64:	109d4604 	addi	r2,r2,29976
   14c68:	20800015 	stw	r2,0(r4)
   14c6c:	2021883a 	mov	r16,r4
   14c70:	00149a00 	call	149a0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   14c74:	01400504 	movi	r5,20
   14c78:	8009883a 	mov	r4,r16
   14c7c:	dfc00117 	ldw	ra,4(sp)
   14c80:	dc000017 	ldw	r16,0(sp)
   14c84:	dec00204 	addi	sp,sp,8
   14c88:	00124481 	jmpi	12448 <_ZdlPvj>

00014c8c <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   14c8c:	20c00417 	ldw	r3,16(r4)
   14c90:	28800417 	ldw	r2,16(r5)
   14c94:	defffb04 	addi	sp,sp,-20
   14c98:	dc400215 	stw	r17,8(sp)
   14c9c:	dc000115 	stw	r16,4(sp)
   14ca0:	2023883a 	mov	r17,r4
   14ca4:	2821883a 	mov	r16,r5
   14ca8:	19000117 	ldw	r4,4(r3)
   14cac:	11400117 	ldw	r5,4(r2)
   14cb0:	dc800315 	stw	r18,12(sp)
   14cb4:	dfc00415 	stw	ra,16(sp)
   14cb8:	3825883a 	mov	r18,r7
   14cbc:	21400e26 	beq	r4,r5,14cf8 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   14cc0:	20800007 	ldb	r2,0(r4)
   14cc4:	d9800015 	stw	r6,0(sp)
   14cc8:	10800aa0 	cmpeqi	r2,r2,42
   14ccc:	1000031e 	bne	r2,zero,14cdc <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x50>
   14cd0:	0015a980 	call	15a98 <strcmp>
   14cd4:	d9800017 	ldw	r6,0(sp)
   14cd8:	10000726 	beq	r2,zero,14cf8 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   14cdc:	0005883a 	mov	r2,zero
   14ce0:	dfc00417 	ldw	ra,16(sp)
   14ce4:	dc800317 	ldw	r18,12(sp)
   14ce8:	dc400217 	ldw	r17,8(sp)
   14cec:	dc000117 	ldw	r16,4(sp)
   14cf0:	dec00504 	addi	sp,sp,20
   14cf4:	f800283a 	ret
   14cf8:	89000317 	ldw	r4,12(r17)
   14cfc:	81400317 	ldw	r5,12(r16)
   14d00:	91c00084 	addi	r7,r18,2
   14d04:	20800017 	ldw	r2,0(r4)
   14d08:	10800417 	ldw	r2,16(r2)
   14d0c:	dfc00417 	ldw	ra,16(sp)
   14d10:	dc800317 	ldw	r18,12(sp)
   14d14:	dc400217 	ldw	r17,8(sp)
   14d18:	dc000117 	ldw	r16,4(sp)
   14d1c:	dec00504 	addi	sp,sp,20
   14d20:	1000683a 	jmp	r2

00014d24 <__cxa_pure_virtual>:
   14d24:	deffff04 	addi	sp,sp,-4
   14d28:	dfc00015 	stw	ra,0(sp)
   14d2c:	00132500 	call	13250 <_ZSt9terminatev>

00014d30 <__cxa_deleted_virtual>:
   14d30:	deffff04 	addi	sp,sp,-4
   14d34:	dfc00015 	stw	ra,0(sp)
   14d38:	00132500 	call	13250 <_ZSt9terminatev>

00014d3c <_ZNKSt9bad_alloc4whatEv>:
   14d3c:	00800074 	movhi	r2,1
   14d40:	109d4d04 	addi	r2,r2,30004
   14d44:	f800283a 	ret

00014d48 <_ZNSt9bad_allocD1Ev>:
   14d48:	00800074 	movhi	r2,1
   14d4c:	109d5a04 	addi	r2,r2,30056
   14d50:	20800015 	stw	r2,0(r4)
   14d54:	00148681 	jmpi	14868 <_ZNSt9exceptionD1Ev>

00014d58 <_ZNSt9bad_allocD0Ev>:
   14d58:	defffe04 	addi	sp,sp,-8
   14d5c:	00800074 	movhi	r2,1
   14d60:	dc000015 	stw	r16,0(sp)
   14d64:	dfc00115 	stw	ra,4(sp)
   14d68:	109d5a04 	addi	r2,r2,30056
   14d6c:	20800015 	stw	r2,0(r4)
   14d70:	2021883a 	mov	r16,r4
   14d74:	00148680 	call	14868 <_ZNSt9exceptionD1Ev>
   14d78:	01400104 	movi	r5,4
   14d7c:	8009883a 	mov	r4,r16
   14d80:	dfc00117 	ldw	ra,4(sp)
   14d84:	dc000017 	ldw	r16,0(sp)
   14d88:	dec00204 	addi	sp,sp,8
   14d8c:	00124481 	jmpi	12448 <_ZdlPvj>

00014d90 <__cxa_bad_cast>:
   14d90:	deffff04 	addi	sp,sp,-4
   14d94:	01000104 	movi	r4,4
   14d98:	dfc00015 	stw	ra,0(sp)
   14d9c:	001450c0 	call	1450c <__cxa_allocate_exception>
   14da0:	1009883a 	mov	r4,r2
   14da4:	00800074 	movhi	r2,1
   14da8:	01800074 	movhi	r6,1
   14dac:	01400074 	movhi	r5,1
   14db0:	109d7f04 	addi	r2,r2,30204
   14db4:	3193ab04 	addi	r6,r6,20140
   14db8:	295d7a04 	addi	r5,r5,30184
   14dbc:	20800015 	stw	r2,0(r4)
   14dc0:	00133b40 	call	133b4 <__cxa_throw>

00014dc4 <__cxa_bad_typeid>:
   14dc4:	deffff04 	addi	sp,sp,-4
   14dc8:	01000104 	movi	r4,4
   14dcc:	dfc00015 	stw	ra,0(sp)
   14dd0:	001450c0 	call	1450c <__cxa_allocate_exception>
   14dd4:	1009883a 	mov	r4,r2
   14dd8:	00800074 	movhi	r2,1
   14ddc:	01800074 	movhi	r6,1
   14de0:	01400074 	movhi	r5,1
   14de4:	109d8f04 	addi	r2,r2,30268
   14de8:	3193c004 	addi	r6,r6,20224
   14dec:	295d8a04 	addi	r5,r5,30248
   14df0:	20800015 	stw	r2,0(r4)
   14df4:	00133b40 	call	133b4 <__cxa_throw>

00014df8 <__cxa_throw_bad_array_new_length>:
   14df8:	deffff04 	addi	sp,sp,-4
   14dfc:	01000104 	movi	r4,4
   14e00:	dfc00015 	stw	ra,0(sp)
   14e04:	001450c0 	call	1450c <__cxa_allocate_exception>
   14e08:	1009883a 	mov	r4,r2
   14e0c:	00800074 	movhi	r2,1
   14e10:	01800074 	movhi	r6,1
   14e14:	01400074 	movhi	r5,1
   14e18:	109d7004 	addi	r2,r2,30144
   14e1c:	31939604 	addi	r6,r6,20056
   14e20:	295d6b04 	addi	r5,r5,30124
   14e24:	20800015 	stw	r2,0(r4)
   14e28:	00133b40 	call	133b4 <__cxa_throw>

00014e2c <_ZSt15set_new_handlerPFvvE>:
   14e2c:	00c000b4 	movhi	r3,2
   14e30:	008000b4 	movhi	r2,2
   14e34:	10a05b17 	ldw	r2,-32404(r2)
   14e38:	19205b15 	stw	r4,-32404(r3)
   14e3c:	f800283a 	ret

00014e40 <_ZSt15get_new_handlerv>:
   14e40:	008000b4 	movhi	r2,2
   14e44:	10a05b17 	ldw	r2,-32404(r2)
   14e48:	f800283a 	ret

00014e4c <_ZNKSt20bad_array_new_length4whatEv>:
   14e4c:	00800074 	movhi	r2,1
   14e50:	109d5d04 	addi	r2,r2,30068
   14e54:	f800283a 	ret

00014e58 <_ZNSt20bad_array_new_lengthD1Ev>:
   14e58:	00800074 	movhi	r2,1
   14e5c:	109d7004 	addi	r2,r2,30144
   14e60:	20800015 	stw	r2,0(r4)
   14e64:	0014d481 	jmpi	14d48 <_ZNSt9bad_allocD1Ev>

00014e68 <_ZNSt20bad_array_new_lengthD0Ev>:
   14e68:	defffe04 	addi	sp,sp,-8
   14e6c:	00800074 	movhi	r2,1
   14e70:	dc000015 	stw	r16,0(sp)
   14e74:	dfc00115 	stw	ra,4(sp)
   14e78:	109d7004 	addi	r2,r2,30144
   14e7c:	20800015 	stw	r2,0(r4)
   14e80:	2021883a 	mov	r16,r4
   14e84:	0014d480 	call	14d48 <_ZNSt9bad_allocD1Ev>
   14e88:	01400104 	movi	r5,4
   14e8c:	8009883a 	mov	r4,r16
   14e90:	dfc00117 	ldw	ra,4(sp)
   14e94:	dc000017 	ldw	r16,0(sp)
   14e98:	dec00204 	addi	sp,sp,8
   14e9c:	00124481 	jmpi	12448 <_ZdlPvj>

00014ea0 <_ZNKSt8bad_cast4whatEv>:
   14ea0:	00800074 	movhi	r2,1
   14ea4:	109d7304 	addi	r2,r2,30156
   14ea8:	f800283a 	ret

00014eac <_ZNSt8bad_castD1Ev>:
   14eac:	00800074 	movhi	r2,1
   14eb0:	109d7f04 	addi	r2,r2,30204
   14eb4:	20800015 	stw	r2,0(r4)
   14eb8:	00148681 	jmpi	14868 <_ZNSt9exceptionD1Ev>

00014ebc <_ZNSt8bad_castD0Ev>:
   14ebc:	defffe04 	addi	sp,sp,-8
   14ec0:	00800074 	movhi	r2,1
   14ec4:	dc000015 	stw	r16,0(sp)
   14ec8:	dfc00115 	stw	ra,4(sp)
   14ecc:	109d7f04 	addi	r2,r2,30204
   14ed0:	20800015 	stw	r2,0(r4)
   14ed4:	2021883a 	mov	r16,r4
   14ed8:	00148680 	call	14868 <_ZNSt9exceptionD1Ev>
   14edc:	01400104 	movi	r5,4
   14ee0:	8009883a 	mov	r4,r16
   14ee4:	dfc00117 	ldw	ra,4(sp)
   14ee8:	dc000017 	ldw	r16,0(sp)
   14eec:	dec00204 	addi	sp,sp,8
   14ef0:	00124481 	jmpi	12448 <_ZdlPvj>

00014ef4 <_ZNKSt10bad_typeid4whatEv>:
   14ef4:	00800074 	movhi	r2,1
   14ef8:	109d8204 	addi	r2,r2,30216
   14efc:	f800283a 	ret

00014f00 <_ZNSt10bad_typeidD1Ev>:
   14f00:	00800074 	movhi	r2,1
   14f04:	109d8f04 	addi	r2,r2,30268
   14f08:	20800015 	stw	r2,0(r4)
   14f0c:	00148681 	jmpi	14868 <_ZNSt9exceptionD1Ev>

00014f10 <_ZNSt10bad_typeidD0Ev>:
   14f10:	defffe04 	addi	sp,sp,-8
   14f14:	00800074 	movhi	r2,1
   14f18:	dc000015 	stw	r16,0(sp)
   14f1c:	dfc00115 	stw	ra,4(sp)
   14f20:	109d8f04 	addi	r2,r2,30268
   14f24:	20800015 	stw	r2,0(r4)
   14f28:	2021883a 	mov	r16,r4
   14f2c:	00148680 	call	14868 <_ZNSt9exceptionD1Ev>
   14f30:	01400104 	movi	r5,4
   14f34:	8009883a 	mov	r4,r16
   14f38:	dfc00117 	ldw	ra,4(sp)
   14f3c:	dc000017 	ldw	r16,0(sp)
   14f40:	dec00204 	addi	sp,sp,8
   14f44:	00124481 	jmpi	12448 <_ZdlPvj>

00014f48 <_Unwind_ForcedUnwind_Phase2>:
   14f48:	28800017 	ldw	r2,0(r5)
   14f4c:	defff504 	addi	sp,sp,-44
   14f50:	dd400815 	stw	r21,32(sp)
   14f54:	dd000715 	stw	r20,28(sp)
   14f58:	dcc00615 	stw	r19,24(sp)
   14f5c:	dc800515 	stw	r18,20(sp)
   14f60:	dc400415 	stw	r17,16(sp)
   14f64:	dc000315 	stw	r16,12(sp)
   14f68:	dfc00a15 	stw	ra,40(sp)
   14f6c:	dd800915 	stw	r22,36(sp)
   14f70:	302b883a 	mov	r21,r6
   14f74:	24c00317 	ldw	r19,12(r4)
   14f78:	25000417 	ldw	r20,16(r4)
   14f7c:	21800017 	ldw	r6,0(r4)
   14f80:	21c00117 	ldw	r7,4(r4)
   14f84:	2823883a 	mov	r17,r5
   14f88:	2021883a 	mov	r16,r4
   14f8c:	04800044 	movi	r18,1
   14f90:	10001d26 	beq	r2,zero,15008 <_Unwind_ForcedUnwind_Phase2+0xc0>
   14f94:	15800617 	ldw	r22,24(r2)
   14f98:	01400284 	movi	r5,10
   14f9c:	01000044 	movi	r4,1
   14fa0:	dd000215 	stw	r20,8(sp)
   14fa4:	dc400115 	stw	r17,4(sp)
   14fa8:	dc000015 	stw	r16,0(sp)
   14fac:	983ee83a 	callr	r19
   14fb0:	01400284 	movi	r5,10
   14fb4:	01000044 	movi	r4,1
   14fb8:	10001a1e 	bne	r2,zero,15024 <_Unwind_ForcedUnwind_Phase2+0xdc>
   14fbc:	81800017 	ldw	r6,0(r16)
   14fc0:	81c00117 	ldw	r7,4(r16)
   14fc4:	b0000926 	beq	r22,zero,14fec <_Unwind_ForcedUnwind_Phase2+0xa4>
   14fc8:	dc400115 	stw	r17,4(sp)
   14fcc:	dc000015 	stw	r16,0(sp)
   14fd0:	b03ee83a 	callr	r22
   14fd4:	10c001e0 	cmpeqi	r3,r2,7
   14fd8:	11000218 	cmpnei	r4,r2,8
   14fdc:	18001d1e 	bne	r3,zero,15054 <_Unwind_ForcedUnwind_Phase2+0x10c>
   14fe0:	2000101e 	bne	r4,zero,15024 <_Unwind_ForcedUnwind_Phase2+0xdc>
   14fe4:	81800017 	ldw	r6,0(r16)
   14fe8:	81c00117 	ldw	r7,4(r16)
   14fec:	88800017 	ldw	r2,0(r17)
   14ff0:	00c000b4 	movhi	r3,2
   14ff4:	94800044 	addi	r18,r18,1
   14ff8:	10800017 	ldw	r2,0(r2)
   14ffc:	18a05c15 	stw	r2,-32400(r3)
   15000:	88800015 	stw	r2,0(r17)
   15004:	103fe31e 	bne	r2,zero,14f94 <_Unwind_ForcedUnwind_Phase2+0x4c>
   15008:	dd000215 	stw	r20,8(sp)
   1500c:	dc400115 	stw	r17,4(sp)
   15010:	dc000015 	stw	r16,0(sp)
   15014:	01400684 	movi	r5,26
   15018:	01000044 	movi	r4,1
   1501c:	983ee83a 	callr	r19
   15020:	10000b26 	beq	r2,zero,15050 <_Unwind_ForcedUnwind_Phase2+0x108>
   15024:	00800084 	movi	r2,2
   15028:	dfc00a17 	ldw	ra,40(sp)
   1502c:	dd800917 	ldw	r22,36(sp)
   15030:	dd400817 	ldw	r21,32(sp)
   15034:	dd000717 	ldw	r20,28(sp)
   15038:	dcc00617 	ldw	r19,24(sp)
   1503c:	dc800517 	ldw	r18,20(sp)
   15040:	dc400417 	ldw	r17,16(sp)
   15044:	dc000317 	ldw	r16,12(sp)
   15048:	dec00b04 	addi	sp,sp,44
   1504c:	f800283a 	ret
   15050:	00800144 	movi	r2,5
   15054:	ac800015 	stw	r18,0(r21)
   15058:	003ff306 	br	15028 <_Unwind_ForcedUnwind_Phase2+0xe0>

0001505c <_Unwind_RaiseException_Phase2>:
   1505c:	28800017 	ldw	r2,0(r5)
   15060:	10002f26 	beq	r2,zero,15120 <_Unwind_RaiseException_Phase2+0xc4>
   15064:	defff804 	addi	sp,sp,-32
   15068:	dcc00515 	stw	r19,20(sp)
   1506c:	dc800415 	stw	r18,16(sp)
   15070:	dc400315 	stw	r17,12(sp)
   15074:	dc000215 	stw	r16,8(sp)
   15078:	dfc00715 	stw	ra,28(sp)
   1507c:	dd000615 	stw	r20,24(sp)
   15080:	2823883a 	mov	r17,r5
   15084:	2021883a 	mov	r16,r4
   15088:	3027883a 	mov	r19,r6
   1508c:	04800044 	movi	r18,1
   15090:	00001306 	br	150e0 <_Unwind_RaiseException_Phase2+0x84>
   15094:	18000e26 	beq	r3,zero,150d0 <_Unwind_RaiseException_Phase2+0x74>
   15098:	01400084 	movi	r5,2
   1509c:	0029883a 	mov	r20,zero
   150a0:	81800017 	ldw	r6,0(r16)
   150a4:	81c00117 	ldw	r7,4(r16)
   150a8:	01000044 	movi	r4,1
   150ac:	dc400115 	stw	r17,4(sp)
   150b0:	dc000015 	stw	r16,0(sp)
   150b4:	183ee83a 	callr	r3
   150b8:	10c001e0 	cmpeqi	r3,r2,7
   150bc:	18001a1e 	bne	r3,zero,15128 <_Unwind_RaiseException_Phase2+0xcc>
   150c0:	10800218 	cmpnei	r2,r2,8
   150c4:	10000d1e 	bne	r2,zero,150fc <_Unwind_RaiseException_Phase2+0xa0>
   150c8:	a000191e 	bne	r20,zero,15130 <_Unwind_RaiseException_Phase2+0xd4>
   150cc:	88800017 	ldw	r2,0(r17)
   150d0:	10800017 	ldw	r2,0(r2)
   150d4:	94800044 	addi	r18,r18,1
   150d8:	88800015 	stw	r2,0(r17)
   150dc:	10000726 	beq	r2,zero,150fc <_Unwind_RaiseException_Phase2+0xa0>
   150e0:	81000417 	ldw	r4,16(r16)
   150e4:	10c00617 	ldw	r3,24(r2)
   150e8:	113fea1e 	bne	r2,r4,15094 <_Unwind_RaiseException_Phase2+0x38>
   150ec:	18001026 	beq	r3,zero,15130 <_Unwind_RaiseException_Phase2+0xd4>
   150f0:	01400184 	movi	r5,6
   150f4:	05000104 	movi	r20,4
   150f8:	003fe906 	br	150a0 <_Unwind_RaiseException_Phase2+0x44>
   150fc:	00800084 	movi	r2,2
   15100:	dfc00717 	ldw	ra,28(sp)
   15104:	dd000617 	ldw	r20,24(sp)
   15108:	dcc00517 	ldw	r19,20(sp)
   1510c:	dc800417 	ldw	r18,16(sp)
   15110:	dc400317 	ldw	r17,12(sp)
   15114:	dc000217 	ldw	r16,8(sp)
   15118:	dec00804 	addi	sp,sp,32
   1511c:	f800283a 	ret
   15120:	00800084 	movi	r2,2
   15124:	f800283a 	ret
   15128:	9c800015 	stw	r18,0(r19)
   1512c:	003ff406 	br	15100 <_Unwind_RaiseException_Phase2+0xa4>
   15130:	001546c0 	call	1546c <abort>

00015134 <uw_install_context.constprop.0.isra.0>:
   15134:	deffff04 	addi	sp,sp,-4
   15138:	df000015 	stw	fp,0(sp)
   1513c:	20800804 	addi	r2,r4,32
   15140:	00c000b4 	movhi	r3,2
   15144:	19205c15 	stw	r4,-32400(r3)
   15148:	d839883a 	mov	fp,sp
   1514c:	20c00917 	ldw	r3,36(r4)
   15150:	21000817 	ldw	r4,32(r4)
   15154:	16c00217 	ldw	sp,8(r2)
   15158:	2039883a 	mov	fp,r4
   1515c:	1800683a 	jmp	r3

00015160 <_Unwind_SjLj_Register>:
   15160:	008000b4 	movhi	r2,2
   15164:	10a05c17 	ldw	r2,-32400(r2)
   15168:	20800015 	stw	r2,0(r4)
   1516c:	008000b4 	movhi	r2,2
   15170:	11205c15 	stw	r4,-32400(r2)
   15174:	f800283a 	ret

00015178 <_Unwind_SjLj_Unregister>:
   15178:	20c00017 	ldw	r3,0(r4)
   1517c:	008000b4 	movhi	r2,2
   15180:	10e05c15 	stw	r3,-32400(r2)
   15184:	f800283a 	ret

00015188 <_Unwind_GetGR>:
   15188:	29400084 	addi	r5,r5,2
   1518c:	20800017 	ldw	r2,0(r4)
   15190:	280a90ba 	slli	r5,r5,2
   15194:	114b883a 	add	r5,r2,r5
   15198:	28800017 	ldw	r2,0(r5)
   1519c:	f800283a 	ret

000151a0 <_Unwind_GetCFA>:
   151a0:	20800017 	ldw	r2,0(r4)
   151a4:	10000226 	beq	r2,zero,151b0 <_Unwind_GetCFA+0x10>
   151a8:	10800a17 	ldw	r2,40(r2)
   151ac:	f800283a 	ret
   151b0:	0005883a 	mov	r2,zero
   151b4:	f800283a 	ret

000151b8 <_Unwind_SetGR>:
   151b8:	29400084 	addi	r5,r5,2
   151bc:	20800017 	ldw	r2,0(r4)
   151c0:	280a90ba 	slli	r5,r5,2
   151c4:	114b883a 	add	r5,r2,r5
   151c8:	29800015 	stw	r6,0(r5)
   151cc:	f800283a 	ret

000151d0 <_Unwind_GetIP>:
   151d0:	20800017 	ldw	r2,0(r4)
   151d4:	10800117 	ldw	r2,4(r2)
   151d8:	10800044 	addi	r2,r2,1
   151dc:	f800283a 	ret

000151e0 <_Unwind_GetIPInfo>:
   151e0:	20800017 	ldw	r2,0(r4)
   151e4:	28000015 	stw	zero,0(r5)
   151e8:	10000326 	beq	r2,zero,151f8 <_Unwind_GetIPInfo+0x18>
   151ec:	10800117 	ldw	r2,4(r2)
   151f0:	10800044 	addi	r2,r2,1
   151f4:	f800283a 	ret
   151f8:	0005883a 	mov	r2,zero
   151fc:	f800283a 	ret

00015200 <_Unwind_SetIP>:
   15200:	20800017 	ldw	r2,0(r4)
   15204:	297fffc4 	addi	r5,r5,-1
   15208:	11400115 	stw	r5,4(r2)
   1520c:	f800283a 	ret

00015210 <_Unwind_GetLanguageSpecificData>:
   15210:	20800017 	ldw	r2,0(r4)
   15214:	10800717 	ldw	r2,28(r2)
   15218:	f800283a 	ret

0001521c <_Unwind_GetRegionStart>:
   1521c:	0005883a 	mov	r2,zero
   15220:	f800283a 	ret

00015224 <_Unwind_FindEnclosingFunction>:
   15224:	0005883a 	mov	r2,zero
   15228:	f800283a 	ret

0001522c <_Unwind_GetDataRelBase>:
   1522c:	0005883a 	mov	r2,zero
   15230:	f800283a 	ret

00015234 <_Unwind_GetTextRelBase>:
   15234:	0005883a 	mov	r2,zero
   15238:	f800283a 	ret

0001523c <_Unwind_SjLj_RaiseException>:
   1523c:	defff804 	addi	sp,sp,-32
   15240:	008000b4 	movhi	r2,2
   15244:	dc400515 	stw	r17,20(sp)
   15248:	14605c17 	ldw	r17,-32400(r2)
   1524c:	dfc00715 	stw	ra,28(sp)
   15250:	dc800615 	stw	r18,24(sp)
   15254:	dc000415 	stw	r16,16(sp)
   15258:	dc400215 	stw	r17,8(sp)
   1525c:	88001426 	beq	r17,zero,152b0 <_Unwind_SjLj_RaiseException+0x74>
   15260:	2021883a 	mov	r16,r4
   15264:	8805883a 	mov	r2,r17
   15268:	dc800204 	addi	r18,sp,8
   1526c:	10800617 	ldw	r2,24(r2)
   15270:	10000b26 	beq	r2,zero,152a0 <_Unwind_SjLj_RaiseException+0x64>
   15274:	81800017 	ldw	r6,0(r16)
   15278:	81c00117 	ldw	r7,4(r16)
   1527c:	01400044 	movi	r5,1
   15280:	dc800115 	stw	r18,4(sp)
   15284:	dc000015 	stw	r16,0(sp)
   15288:	01000044 	movi	r4,1
   1528c:	103ee83a 	callr	r2
   15290:	10c001a0 	cmpeqi	r3,r2,6
   15294:	18000d1e 	bne	r3,zero,152cc <_Unwind_SjLj_RaiseException+0x90>
   15298:	10800218 	cmpnei	r2,r2,8
   1529c:	1000171e 	bne	r2,zero,152fc <_Unwind_SjLj_RaiseException+0xc0>
   152a0:	d8800217 	ldw	r2,8(sp)
   152a4:	10800017 	ldw	r2,0(r2)
   152a8:	d8800215 	stw	r2,8(sp)
   152ac:	103fef1e 	bne	r2,zero,1526c <_Unwind_SjLj_RaiseException+0x30>
   152b0:	00800144 	movi	r2,5
   152b4:	dfc00717 	ldw	ra,28(sp)
   152b8:	dc800617 	ldw	r18,24(sp)
   152bc:	dc400517 	ldw	r17,20(sp)
   152c0:	dc000417 	ldw	r16,16(sp)
   152c4:	dec00804 	addi	sp,sp,32
   152c8:	f800283a 	ret
   152cc:	d8800217 	ldw	r2,8(sp)
   152d0:	80000315 	stw	zero,12(r16)
   152d4:	d9800304 	addi	r6,sp,12
   152d8:	80800415 	stw	r2,16(r16)
   152dc:	900b883a 	mov	r5,r18
   152e0:	8009883a 	mov	r4,r16
   152e4:	dc400215 	stw	r17,8(sp)
   152e8:	001505c0 	call	1505c <_Unwind_RaiseException_Phase2>
   152ec:	10c001d8 	cmpnei	r3,r2,7
   152f0:	183ff01e 	bne	r3,zero,152b4 <_Unwind_SjLj_RaiseException+0x78>
   152f4:	d9000217 	ldw	r4,8(sp)
   152f8:	00151340 	call	15134 <uw_install_context.constprop.0.isra.0>
   152fc:	008000c4 	movi	r2,3
   15300:	003fec06 	br	152b4 <_Unwind_SjLj_RaiseException+0x78>

00015304 <_Unwind_SjLj_ForcedUnwind>:
   15304:	008000b4 	movhi	r2,2
   15308:	defffd04 	addi	sp,sp,-12
   1530c:	10e05c17 	ldw	r3,-32400(r2)
   15310:	dfc00215 	stw	ra,8(sp)
   15314:	21400315 	stw	r5,12(r4)
   15318:	21800415 	stw	r6,16(r4)
   1531c:	d80b883a 	mov	r5,sp
   15320:	d9800104 	addi	r6,sp,4
   15324:	d8c00015 	stw	r3,0(sp)
   15328:	0014f480 	call	14f48 <_Unwind_ForcedUnwind_Phase2>
   1532c:	10c001e0 	cmpeqi	r3,r2,7
   15330:	1800031e 	bne	r3,zero,15340 <_Unwind_SjLj_ForcedUnwind+0x3c>
   15334:	dfc00217 	ldw	ra,8(sp)
   15338:	dec00304 	addi	sp,sp,12
   1533c:	f800283a 	ret
   15340:	d9000017 	ldw	r4,0(sp)
   15344:	00151340 	call	15134 <uw_install_context.constprop.0.isra.0>

00015348 <_Unwind_SjLj_Resume>:
   15348:	008000b4 	movhi	r2,2
   1534c:	10e05c17 	ldw	r3,-32400(r2)
   15350:	20800317 	ldw	r2,12(r4)
   15354:	defffd04 	addi	sp,sp,-12
   15358:	dfc00215 	stw	ra,8(sp)
   1535c:	d8c00015 	stw	r3,0(sp)
   15360:	d9800104 	addi	r6,sp,4
   15364:	d80b883a 	mov	r5,sp
   15368:	1000051e 	bne	r2,zero,15380 <_Unwind_SjLj_Resume+0x38>
   1536c:	001505c0 	call	1505c <_Unwind_RaiseException_Phase2>
   15370:	108001e0 	cmpeqi	r2,r2,7
   15374:	10000426 	beq	r2,zero,15388 <_Unwind_SjLj_Resume+0x40>
   15378:	d9000017 	ldw	r4,0(sp)
   1537c:	00151340 	call	15134 <uw_install_context.constprop.0.isra.0>
   15380:	0014f480 	call	14f48 <_Unwind_ForcedUnwind_Phase2>
   15384:	003ffa06 	br	15370 <_Unwind_SjLj_Resume+0x28>
   15388:	001546c0 	call	1546c <abort>

0001538c <_Unwind_SjLj_Resume_or_Rethrow>:
   1538c:	20800317 	ldw	r2,12(r4)
   15390:	1000011e 	bne	r2,zero,15398 <_Unwind_SjLj_Resume_or_Rethrow+0xc>
   15394:	001523c1 	jmpi	1523c <_Unwind_SjLj_RaiseException>
   15398:	008000b4 	movhi	r2,2
   1539c:	10a05c17 	ldw	r2,-32400(r2)
   153a0:	defffd04 	addi	sp,sp,-12
   153a4:	d9800104 	addi	r6,sp,4
   153a8:	d80b883a 	mov	r5,sp
   153ac:	dfc00215 	stw	ra,8(sp)
   153b0:	d8800015 	stw	r2,0(sp)
   153b4:	0014f480 	call	14f48 <_Unwind_ForcedUnwind_Phase2>
   153b8:	108001e0 	cmpeqi	r2,r2,7
   153bc:	10000226 	beq	r2,zero,153c8 <_Unwind_SjLj_Resume_or_Rethrow+0x3c>
   153c0:	d9000017 	ldw	r4,0(sp)
   153c4:	00151340 	call	15134 <uw_install_context.constprop.0.isra.0>
   153c8:	001546c0 	call	1546c <abort>

000153cc <_Unwind_DeleteException>:
   153cc:	20800217 	ldw	r2,8(r4)
   153d0:	200b883a 	mov	r5,r4
   153d4:	10000226 	beq	r2,zero,153e0 <_Unwind_DeleteException+0x14>
   153d8:	01000044 	movi	r4,1
   153dc:	1000683a 	jmp	r2
   153e0:	f800283a 	ret

000153e4 <_Unwind_Backtrace>:
   153e4:	008000b4 	movhi	r2,2
   153e8:	10a05c17 	ldw	r2,-32400(r2)
   153ec:	defffb04 	addi	sp,sp,-20
   153f0:	dc800315 	stw	r18,12(sp)
   153f4:	dc400215 	stw	r17,8(sp)
   153f8:	dc000115 	stw	r16,4(sp)
   153fc:	dfc00415 	stw	ra,16(sp)
   15400:	d8800015 	stw	r2,0(sp)
   15404:	2021883a 	mov	r16,r4
   15408:	2823883a 	mov	r17,r5
   1540c:	d825883a 	mov	r18,sp
   15410:	10000826 	beq	r2,zero,15434 <_Unwind_Backtrace+0x50>
   15414:	880b883a 	mov	r5,r17
   15418:	9009883a 	mov	r4,r18
   1541c:	803ee83a 	callr	r16
   15420:	1000101e 	bne	r2,zero,15464 <_Unwind_Backtrace+0x80>
   15424:	d8800017 	ldw	r2,0(sp)
   15428:	10800017 	ldw	r2,0(r2)
   1542c:	d8800015 	stw	r2,0(sp)
   15430:	103ff81e 	bne	r2,zero,15414 <_Unwind_Backtrace+0x30>
   15434:	880b883a 	mov	r5,r17
   15438:	9009883a 	mov	r4,r18
   1543c:	803ee83a 	callr	r16
   15440:	00c00144 	movi	r3,5
   15444:	1000071e 	bne	r2,zero,15464 <_Unwind_Backtrace+0x80>
   15448:	1805883a 	mov	r2,r3
   1544c:	dfc00417 	ldw	ra,16(sp)
   15450:	dc800317 	ldw	r18,12(sp)
   15454:	dc400217 	ldw	r17,8(sp)
   15458:	dc000117 	ldw	r16,4(sp)
   1545c:	dec00504 	addi	sp,sp,20
   15460:	f800283a 	ret
   15464:	00c000c4 	movi	r3,3
   15468:	003ff706 	br	15448 <_Unwind_Backtrace+0x64>

0001546c <abort>:
#include <unistd.h>
#include <signal.h>

void
abort (void)
{
   1546c:	deffff04 	addi	sp,sp,-4
  write (2, "Abort called\n", sizeof ("Abort called\n")-1);
#endif

  while (1)
    {
      raise (SIGABRT);
   15470:	01000184 	movi	r4,6
{
   15474:	dfc00015 	stw	ra,0(sp)
      raise (SIGABRT);
   15478:	0015a200 	call	15a20 <raise>
      _exit (1);
   1547c:	01000044 	movi	r4,1
   15480:	0015be80 	call	15be8 <_exit>

00015484 <malloc>:
#ifndef _REENT_ONLY

void *
malloc (size_t nbytes)		/* get a block */
{
  return _malloc_r (_REENT, nbytes);
   15484:	200b883a 	mov	r5,r4
   15488:	d1209817 	ldw	r4,-32160(gp)
   1548c:	00155dc1 	jmpi	155dc <_malloc_r>

00015490 <free>:
}

void
free (void *aptr)
{
  _free_r (_REENT, aptr);
   15490:	200b883a 	mov	r5,r4
   15494:	d1209817 	ldw	r4,-32160(gp)
   15498:	00154e41 	jmpi	154e4 <_free_r>

0001549c <memcpy>:
void *
__inhibit_loop_to_libcall
memcpy (void *__restrict dst0,
	const void *__restrict src0,
	size_t len0)
{
   1549c:	2005883a 	mov	r2,r4
  char *dst = (char *) dst0;
  char *src = (char *) src0;

  void *save = dst0;

  while (len0--)
   154a0:	0007883a 	mov	r3,zero
   154a4:	30c0011e 	bne	r6,r3,154ac <memcpy+0x10>
  while (len0--)
    *dst++ = *src++;

  return dst0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   154a8:	f800283a 	ret
      *dst++ = *src++;
   154ac:	28cf883a 	add	r7,r5,r3
   154b0:	39c00003 	ldbu	r7,0(r7)
   154b4:	10c9883a 	add	r4,r2,r3
   154b8:	18c00044 	addi	r3,r3,1
   154bc:	21c00005 	stb	r7,0(r4)
   154c0:	003ff806 	br	154a4 <memcpy+0x8>

000154c4 <memset>:
void *
__inhibit_loop_to_libcall
memset (void *m,
	int c,
	size_t n)
{
   154c4:	2005883a 	mov	r2,r4
      s = (char*)aligned_addr;
    }

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (n--)
   154c8:	218d883a 	add	r6,r4,r6
  char *s = (char *) m;
   154cc:	2007883a 	mov	r3,r4
  while (n--)
   154d0:	1980011e 	bne	r3,r6,154d8 <memset+0x14>
    *s++ = (char) c;

  return m;
}
   154d4:	f800283a 	ret
    *s++ = (char) c;
   154d8:	18c00044 	addi	r3,r3,1
   154dc:	197fffc5 	stb	r5,-1(r3)
   154e0:	003ffb06 	br	154d0 <memset+0xc>

000154e4 <_free_r>:
void nano_free (RARG void * free_p)
{
    chunk * p_to_free;
    chunk * p, * q;

    if (free_p == NULL) return;
   154e4:	28003c26 	beq	r5,zero,155d8 <_free_r+0xf4>
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   154e8:	28bfff17 	ldw	r2,-4(r5)
{
   154ec:	defffd04 	addi	sp,sp,-12
   154f0:	dc000115 	stw	r16,4(sp)
   154f4:	dfc00215 	stw	ra,8(sp)
    chunk * c = (chunk *)((char *)ptr - CHUNK_OFFSET);
   154f8:	2c3fff04 	addi	r16,r5,-4
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   154fc:	1000010e 	bge	r2,zero,15504 <_free_r+0x20>
   15500:	80a1883a 	add	r16,r16,r2

    p_to_free = get_chunk_from_ptr(free_p);

    MALLOC_LOCK;
   15504:	d9000015 	stw	r4,0(sp)
   15508:	0015ed00 	call	15ed0 <__malloc_lock>
    if (free_list == NULL)
   1550c:	d0a20817 	ldw	r2,-30688(gp)
   15510:	d9000017 	ldw	r4,0(sp)
   15514:	1000061e 	bne	r2,zero,15530 <_free_r+0x4c>
    {
        /* Set first free list element */
        p_to_free->next = free_list;
   15518:	80000115 	stw	zero,4(r16)
        else
        {
            /* Insert before current free_list */
            p_to_free->next = free_list;
        }
        free_list = p_to_free;
   1551c:	d4220815 	stw	r16,-30688(gp)
         * a fragment. */
        p_to_free->next = q;
        p->next = p_to_free;
    }
    MALLOC_UNLOCK;
}
   15520:	dfc00217 	ldw	ra,8(sp)
   15524:	dc000117 	ldw	r16,4(sp)
   15528:	dec00304 	addi	sp,sp,12
    MALLOC_UNLOCK;
   1552c:	0015ed41 	jmpi	15ed4 <__malloc_unlock>
    if (p_to_free < free_list)
   15530:	8080092e 	bgeu	r16,r2,15558 <_free_r+0x74>
        if ((char *)p_to_free + p_to_free->size == (char *)free_list)
   15534:	81400017 	ldw	r5,0(r16)
   15538:	8147883a 	add	r3,r16,r5
   1553c:	10c0041e 	bne	r2,r3,15550 <_free_r+0x6c>
            p_to_free->size += free_list->size;
   15540:	10c00017 	ldw	r3,0(r2)
            p_to_free->next = free_list->next;
   15544:	10800117 	ldw	r2,4(r2)
            p_to_free->size += free_list->size;
   15548:	1947883a 	add	r3,r3,r5
   1554c:	80c00015 	stw	r3,0(r16)
            p_to_free->next = free_list;
   15550:	80800115 	stw	r2,4(r16)
   15554:	003ff106 	br	1551c <_free_r+0x38>
        q = q->next;
   15558:	1007883a 	mov	r3,r2
   1555c:	10800117 	ldw	r2,4(r2)
    } while (q && q <= p_to_free);
   15560:	10000126 	beq	r2,zero,15568 <_free_r+0x84>
   15564:	80bffc2e 	bgeu	r16,r2,15558 <_free_r+0x74>
    if ((char *)p + p->size == (char *)p_to_free)
   15568:	19400017 	ldw	r5,0(r3)
   1556c:	194d883a 	add	r6,r3,r5
   15570:	34000b1e 	bne	r6,r16,155a0 <_free_r+0xbc>
        p->size += p_to_free->size;
   15574:	81800017 	ldw	r6,0(r16)
   15578:	298b883a 	add	r5,r5,r6
   1557c:	19400015 	stw	r5,0(r3)
        if ((char *)p + p->size == (char *) q)
   15580:	194d883a 	add	r6,r3,r5
   15584:	11bfe61e 	bne	r2,r6,15520 <_free_r+0x3c>
            p->size += q->size;
   15588:	11800017 	ldw	r6,0(r2)
            p->next = q->next;
   1558c:	10800117 	ldw	r2,4(r2)
            p->size += q->size;
   15590:	314b883a 	add	r5,r6,r5
   15594:	19400015 	stw	r5,0(r3)
            p->next = q->next;
   15598:	18800115 	stw	r2,4(r3)
   1559c:	003fe006 	br	15520 <_free_r+0x3c>
    else if ((char *)p + p->size > (char *)p_to_free)
   155a0:	8180032e 	bgeu	r16,r6,155b0 <_free_r+0xcc>
        RERRNO = ENOMEM;
   155a4:	00800304 	movi	r2,12
   155a8:	20800015 	stw	r2,0(r4)
        MALLOC_UNLOCK;
   155ac:	003fdc06 	br	15520 <_free_r+0x3c>
    else if ((char *)p_to_free + p_to_free->size == (char *) q)
   155b0:	81800017 	ldw	r6,0(r16)
   155b4:	818b883a 	add	r5,r16,r6
   155b8:	1140041e 	bne	r2,r5,155cc <_free_r+0xe8>
        p_to_free->size += q->size;
   155bc:	11400017 	ldw	r5,0(r2)
        p_to_free->next = q->next;
   155c0:	10800117 	ldw	r2,4(r2)
        p_to_free->size += q->size;
   155c4:	298b883a 	add	r5,r5,r6
   155c8:	81400015 	stw	r5,0(r16)
        p_to_free->next = q;
   155cc:	80800115 	stw	r2,4(r16)
        p->next = p_to_free;
   155d0:	1c000115 	stw	r16,4(r3)
   155d4:	003fd206 	br	15520 <_free_r+0x3c>
   155d8:	f800283a 	ret

000155dc <_malloc_r>:
{
   155dc:	defffc04 	addi	sp,sp,-16
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   155e0:	00bfff04 	movi	r2,-4
{
   155e4:	dc400115 	stw	r17,4(sp)
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   155e8:	2c4000c4 	addi	r17,r5,3
   155ec:	88a2703a 	and	r17,r17,r2
    alloc_size += CHUNK_OFFSET; /* size of chunk head */
   155f0:	8c400204 	addi	r17,r17,8
{
   155f4:	dc800215 	stw	r18,8(sp)
   155f8:	dfc00315 	stw	ra,12(sp)
   155fc:	dc000015 	stw	r16,0(sp)
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   15600:	88800328 	cmpgeui	r2,r17,12
{
   15604:	2025883a 	mov	r18,r4
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   15608:	1000171e 	bne	r2,zero,15668 <_malloc_r+0x8c>
   1560c:	04400304 	movi	r17,12
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   15610:	89401636 	bltu	r17,r5,1566c <_malloc_r+0x90>
    MALLOC_LOCK;
   15614:	9009883a 	mov	r4,r18
   15618:	0015ed00 	call	15ed0 <__malloc_lock>
    p = free_list;
   1561c:	d0e20817 	ldw	r3,-30688(gp)
    r = p;
   15620:	1821883a 	mov	r16,r3
    while (r)
   15624:	80001a1e 	bne	r16,zero,15690 <_malloc_r+0xb4>
    if (sbrk_start == NULL) sbrk_start = _SBRK_R(RCALL 0);
   15628:	d0a20717 	ldw	r2,-30692(gp)
   1562c:	1000041e 	bne	r2,zero,15640 <_malloc_r+0x64>
   15630:	000b883a 	mov	r5,zero
   15634:	9009883a 	mov	r4,r18
   15638:	00157b80 	call	157b8 <_sbrk_r>
   1563c:	d0a20715 	stw	r2,-30692(gp)
    p = _SBRK_R(RCALL s);
   15640:	880b883a 	mov	r5,r17
   15644:	9009883a 	mov	r4,r18
   15648:	00157b80 	call	157b8 <_sbrk_r>
    if (p == (void *)-1)
   1564c:	10ffffd8 	cmpnei	r3,r2,-1
   15650:	18002c1e 	bne	r3,zero,15704 <_malloc_r+0x128>
            RERRNO = ENOMEM;
   15654:	00800304 	movi	r2,12
   15658:	90800015 	stw	r2,0(r18)
            MALLOC_UNLOCK;
   1565c:	9009883a 	mov	r4,r18
   15660:	0015ed40 	call	15ed4 <__malloc_unlock>
   15664:	00000306 	br	15674 <_malloc_r+0x98>
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   15668:	883fe90e 	bge	r17,zero,15610 <_malloc_r+0x34>
        RERRNO = ENOMEM;
   1566c:	00800304 	movi	r2,12
   15670:	90800015 	stw	r2,0(r18)
            return NULL;
   15674:	0005883a 	mov	r2,zero
}
   15678:	dfc00317 	ldw	ra,12(sp)
   1567c:	dc800217 	ldw	r18,8(sp)
   15680:	dc400117 	ldw	r17,4(sp)
   15684:	dc000017 	ldw	r16,0(sp)
   15688:	dec00404 	addi	sp,sp,16
   1568c:	f800283a 	ret
        int rem = r->size - alloc_size;
   15690:	80800017 	ldw	r2,0(r16)
   15694:	1445c83a 	sub	r2,r2,r17
        if (rem >= 0)
   15698:	10001716 	blt	r2,zero,156f8 <_malloc_r+0x11c>
            if (rem >= MALLOC_MINCHUNK)
   1569c:	11000330 	cmpltui	r4,r2,12
   156a0:	2000041e 	bne	r4,zero,156b4 <_malloc_r+0xd8>
                r->size = rem;
   156a4:	80800015 	stw	r2,0(r16)
                r = (chunk *)((char *)r + rem);
   156a8:	80a1883a 	add	r16,r16,r2
        r->size = alloc_size;
   156ac:	84400015 	stw	r17,0(r16)
   156b0:	00000306 	br	156c0 <_malloc_r+0xe4>
                free_list = r->next;
   156b4:	80800117 	ldw	r2,4(r16)
            else if (p == r)
   156b8:	1c000d1e 	bne	r3,r16,156f0 <_malloc_r+0x114>
                free_list = r->next;
   156bc:	d0a20815 	stw	r2,-30688(gp)
    MALLOC_UNLOCK;
   156c0:	9009883a 	mov	r4,r18
   156c4:	0015ed40 	call	15ed4 <__malloc_unlock>
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   156c8:	013ffe04 	movi	r4,-8
   156cc:	808002c4 	addi	r2,r16,11
    ptr = (char *)r + CHUNK_OFFSET;
   156d0:	80c00104 	addi	r3,r16,4
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   156d4:	1104703a 	and	r2,r2,r4
    offset = align_ptr - ptr;
   156d8:	10c9c83a 	sub	r4,r2,r3
    if (offset)
   156dc:	10ffe626 	beq	r2,r3,15678 <_malloc_r+0x9c>
        *(long *)((char *)r + offset) = -offset;
   156e0:	8121883a 	add	r16,r16,r4
   156e4:	1887c83a 	sub	r3,r3,r2
   156e8:	80c00015 	stw	r3,0(r16)
   156ec:	003fe206 	br	15678 <_malloc_r+0x9c>
                p->next = r->next;
   156f0:	18800115 	stw	r2,4(r3)
   156f4:	003ff206 	br	156c0 <_malloc_r+0xe4>
        r=r->next;
   156f8:	8007883a 	mov	r3,r16
   156fc:	84000117 	ldw	r16,4(r16)
   15700:	003fc806 	br	15624 <_malloc_r+0x48>
    align_p = (char*)ALIGN_TO((unsigned long)p, CHUNK_ALIGN);
   15704:	140000c4 	addi	r16,r2,3
   15708:	00ffff04 	movi	r3,-4
   1570c:	80e0703a 	and	r16,r16,r3
    if (align_p != p)
   15710:	143fe626 	beq	r2,r16,156ac <_malloc_r+0xd0>
        p = _SBRK_R(RCALL align_p - p);
   15714:	808bc83a 	sub	r5,r16,r2
   15718:	9009883a 	mov	r4,r18
   1571c:	00157b80 	call	157b8 <_sbrk_r>
        if (p == (void *)-1)
   15720:	10bfffe0 	cmpeqi	r2,r2,-1
   15724:	103fe126 	beq	r2,zero,156ac <_malloc_r+0xd0>
   15728:	003fca06 	br	15654 <_malloc_r+0x78>

0001572c <_puts_r>:
 */
int
_DEFUN (_puts_r, (ptr, s),
	struct _reent *ptr _AND
	_CONST char * s)
{
   1572c:	defffd04 	addi	sp,sp,-12
   15730:	dc000015 	stw	r16,0(sp)
   15734:	2021883a 	mov	r16,r4
  size_t c = strlen (s);
   15738:	2809883a 	mov	r4,r5
{
   1573c:	dfc00215 	stw	ra,8(sp)
   15740:	dc400115 	stw	r17,4(sp)
   15744:	2823883a 	mov	r17,r5
  size_t c = strlen (s);
   15748:	0015adc0 	call	15adc <strlen>
  _FILE_INIT_DEV_WRITE (_stdout_r (ptr));
   1574c:	81400217 	ldw	r5,8(r16)
   15750:	00c00074 	movhi	r3,1
   15754:	18d6be04 	addi	r3,r3,23288
   15758:	28c00115 	stw	r3,4(r5)

  if (_stdout_r (ptr)->_sfvwrite (ptr, _stdout_r (ptr), s, c) != EOF)
   1575c:	100f883a 	mov	r7,r2
   15760:	880d883a 	mov	r6,r17
   15764:	8009883a 	mov	r4,r16
   15768:	0015af80 	call	15af8 <__sfvwrite_small_dev>
   1576c:	10ffffe0 	cmpeqi	r3,r2,-1
   15770:	1800091e 	bne	r3,zero,15798 <_puts_r+0x6c>
    if (_stdout_r (ptr)->_sfvwrite (ptr, _stdout_r (ptr), "\n", 1) != EOF)
   15774:	81400217 	ldw	r5,8(r16)
   15778:	01800074 	movhi	r6,1
   1577c:	01c00044 	movi	r7,1
   15780:	28800117 	ldw	r2,4(r5)
   15784:	319d9204 	addi	r6,r6,30280
   15788:	8009883a 	mov	r4,r16
   1578c:	103ee83a 	callr	r2
   15790:	10bfffe0 	cmpeqi	r2,r2,-1
   15794:	0085c83a 	sub	r2,zero,r2
      return 0;
  return EOF;
}
   15798:	dfc00217 	ldw	ra,8(sp)
   1579c:	dc400117 	ldw	r17,4(sp)
   157a0:	dc000017 	ldw	r16,0(sp)
   157a4:	dec00304 	addi	sp,sp,12
   157a8:	f800283a 	ret

000157ac <puts>:
#ifndef _REENT_ONLY

int
puts (char const * s)
{
  return _puts_r (_REENT, s);
   157ac:	200b883a 	mov	r5,r4
   157b0:	d1209817 	ldw	r4,-32160(gp)
   157b4:	001572c1 	jmpi	1572c <_puts_r>

000157b8 <_sbrk_r>:
*/

void *
_sbrk_r (struct _reent *ptr,
     ptrdiff_t incr)
{
   157b8:	defffe04 	addi	sp,sp,-8
   157bc:	dc000015 	stw	r16,0(sp)
   157c0:	2021883a 	mov	r16,r4
   157c4:	2809883a 	mov	r4,r5
   157c8:	dfc00115 	stw	ra,4(sp)
  char *ret;
  void *_sbrk(ptrdiff_t);

  errno = 0;
   157cc:	d0220915 	stw	zero,-30684(gp)
  if ((ret = (char *)(_sbrk (incr))) == (void *) -1 && errno != 0)
   157d0:	0015ed80 	call	15ed8 <sbrk>
   157d4:	10ffffd8 	cmpnei	r3,r2,-1
   157d8:	1800031e 	bne	r3,zero,157e8 <_sbrk_r+0x30>
   157dc:	d0e20917 	ldw	r3,-30684(gp)
   157e0:	18000126 	beq	r3,zero,157e8 <_sbrk_r+0x30>
    ptr->_errno = errno;
   157e4:	80c00015 	stw	r3,0(r16)
  return ret;
}
   157e8:	dfc00117 	ldw	ra,4(sp)
   157ec:	dc000017 	ldw	r16,0(sp)
   157f0:	dec00204 	addi	sp,sp,8
   157f4:	f800283a 	ret

000157f8 <_init_signal_r>:
int
_init_signal_r (struct _reent *ptr)
{
  int i;

  if (ptr->_sig_func == NULL)
   157f8:	20800c17 	ldw	r2,48(r4)
   157fc:	1000131e 	bne	r2,zero,1584c <_init_signal_r+0x54>
{
   15800:	defffe04 	addi	sp,sp,-8
    {
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   15804:	01402004 	movi	r5,128
{
   15808:	dc000015 	stw	r16,0(sp)
   1580c:	dfc00115 	stw	ra,4(sp)
   15810:	2021883a 	mov	r16,r4
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   15814:	00155dc0 	call	155dc <_malloc_r>
   15818:	80800c15 	stw	r2,48(r16)
   1581c:	1009883a 	mov	r4,r2
      if (ptr->_sig_func == NULL)
   15820:	10000826 	beq	r2,zero,15844 <_init_signal_r+0x4c>
	return -1;

      for (i = 0; i < NSIG; i++)
	ptr->_sig_func[i] = SIG_DFL;
   15824:	01802004 	movi	r6,128
   15828:	000b883a 	mov	r5,zero
   1582c:	00154c40 	call	154c4 <memset>
    }

  return 0;
   15830:	0005883a 	mov	r2,zero
}
   15834:	dfc00117 	ldw	ra,4(sp)
   15838:	dc000017 	ldw	r16,0(sp)
   1583c:	dec00204 	addi	sp,sp,8
   15840:	f800283a 	ret
	return -1;
   15844:	00bfffc4 	movi	r2,-1
   15848:	003ffa06 	br	15834 <_init_signal_r+0x3c>
  return 0;
   1584c:	0005883a 	mov	r2,zero
}
   15850:	f800283a 	ret

00015854 <_signal_r>:

_sig_func_ptr
_signal_r (struct _reent *ptr,
	int sig,
	_sig_func_ptr func)
{
   15854:	defffc04 	addi	sp,sp,-16
   15858:	dc400115 	stw	r17,4(sp)
   1585c:	dfc00315 	stw	ra,12(sp)
   15860:	dc800215 	stw	r18,8(sp)
   15864:	dc000015 	stw	r16,0(sp)
  _sig_func_ptr old_func;

  if (sig < 0 || sig >= NSIG)
   15868:	28800830 	cmpltui	r2,r5,32
{
   1586c:	2023883a 	mov	r17,r4
  if (sig < 0 || sig >= NSIG)
   15870:	1000041e 	bne	r2,zero,15884 <_signal_r+0x30>
    {
      ptr->_errno = EINVAL;
   15874:	00800584 	movi	r2,22
   15878:	20800015 	stw	r2,0(r4)
      return SIG_ERR;
    }

  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
    return SIG_ERR;
   1587c:	00bfffc4 	movi	r2,-1
   15880:	00000906 	br	158a8 <_signal_r+0x54>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   15884:	20800c17 	ldw	r2,48(r4)
   15888:	2821883a 	mov	r16,r5
   1588c:	3025883a 	mov	r18,r6
   15890:	10000b26 	beq	r2,zero,158c0 <_signal_r+0x6c>
  
  old_func = ptr->_sig_func[sig];
   15894:	89400c17 	ldw	r5,48(r17)
   15898:	802090ba 	slli	r16,r16,2
   1589c:	2c21883a 	add	r16,r5,r16
   158a0:	80800017 	ldw	r2,0(r16)
  ptr->_sig_func[sig] = func;
   158a4:	84800015 	stw	r18,0(r16)

  return old_func;
}
   158a8:	dfc00317 	ldw	ra,12(sp)
   158ac:	dc800217 	ldw	r18,8(sp)
   158b0:	dc400117 	ldw	r17,4(sp)
   158b4:	dc000017 	ldw	r16,0(sp)
   158b8:	dec00404 	addi	sp,sp,16
   158bc:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   158c0:	00157f80 	call	157f8 <_init_signal_r>
   158c4:	103ff326 	beq	r2,zero,15894 <_signal_r+0x40>
   158c8:	003fec06 	br	1587c <_signal_r+0x28>

000158cc <_raise_r>:

int 
_raise_r (struct _reent *ptr,
     int sig)
{
   158cc:	defffd04 	addi	sp,sp,-12
   158d0:	dc000015 	stw	r16,0(sp)
   158d4:	dfc00215 	stw	ra,8(sp)
   158d8:	dc400115 	stw	r17,4(sp)
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   158dc:	28800830 	cmpltui	r2,r5,32
{
   158e0:	2021883a 	mov	r16,r4
  if (sig < 0 || sig >= NSIG)
   158e4:	1000081e 	bne	r2,zero,15908 <_raise_r+0x3c>
    {
      ptr->_errno = EINVAL;
   158e8:	00800584 	movi	r2,22
   158ec:	20800015 	stw	r2,0(r4)
      return -1;
   158f0:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   158f4:	dfc00217 	ldw	ra,8(sp)
   158f8:	dc400117 	ldw	r17,4(sp)
   158fc:	dc000017 	ldw	r16,0(sp)
   15900:	dec00304 	addi	sp,sp,12
   15904:	f800283a 	ret
  if (ptr->_sig_func == NULL)
   15908:	20800c17 	ldw	r2,48(r4)
   1590c:	2823883a 	mov	r17,r5
   15910:	10000426 	beq	r2,zero,15924 <_raise_r+0x58>
    func = ptr->_sig_func[sig];
   15914:	280690ba 	slli	r3,r5,2
   15918:	10c5883a 	add	r2,r2,r3
   1591c:	10c00017 	ldw	r3,0(r2)
  if (func == SIG_DFL)
   15920:	18000a1e 	bne	r3,zero,1594c <_raise_r+0x80>
    return _kill_r (ptr, _getpid_r (ptr), sig);
   15924:	8009883a 	mov	r4,r16
   15928:	0015a940 	call	15a94 <_getpid_r>
   1592c:	880d883a 	mov	r6,r17
   15930:	100b883a 	mov	r5,r2
   15934:	8009883a 	mov	r4,r16
}
   15938:	dfc00217 	ldw	ra,8(sp)
   1593c:	dc400117 	ldw	r17,4(sp)
   15940:	dc000017 	ldw	r16,0(sp)
   15944:	dec00304 	addi	sp,sp,12
    return _kill_r (ptr, _getpid_r (ptr), sig);
   15948:	0015a501 	jmpi	15a50 <_kill_r>
  else if (func == SIG_IGN)
   1594c:	19000060 	cmpeqi	r4,r3,1
   15950:	2000091e 	bne	r4,zero,15978 <_raise_r+0xac>
  else if (func == SIG_ERR)
   15954:	193fffd8 	cmpnei	r4,r3,-1
   15958:	2000041e 	bne	r4,zero,1596c <_raise_r+0xa0>
      ptr->_errno = EINVAL;
   1595c:	00800584 	movi	r2,22
   15960:	80800015 	stw	r2,0(r16)
      return 1;
   15964:	00800044 	movi	r2,1
   15968:	003fe206 	br	158f4 <_raise_r+0x28>
      ptr->_sig_func[sig] = SIG_DFL;
   1596c:	10000015 	stw	zero,0(r2)
      func (sig);
   15970:	2809883a 	mov	r4,r5
   15974:	183ee83a 	callr	r3
    return 0;
   15978:	0005883a 	mov	r2,zero
   1597c:	003fdd06 	br	158f4 <_raise_r+0x28>

00015980 <__sigtramp_r>:
__sigtramp_r (struct _reent *ptr,
     int sig)
{
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   15980:	28800830 	cmpltui	r2,r5,32
   15984:	1000021e 	bne	r2,zero,15990 <__sigtramp_r+0x10>
    {
      return -1;
   15988:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   1598c:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   15990:	20800c17 	ldw	r2,48(r4)
{
   15994:	defffd04 	addi	sp,sp,-12
   15998:	dc400115 	stw	r17,4(sp)
   1599c:	dc000015 	stw	r16,0(sp)
   159a0:	dfc00215 	stw	ra,8(sp)
   159a4:	2023883a 	mov	r17,r4
   159a8:	2821883a 	mov	r16,r5
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   159ac:	10000726 	beq	r2,zero,159cc <__sigtramp_r+0x4c>
  func = ptr->_sig_func[sig];
   159b0:	88800c17 	ldw	r2,48(r17)
   159b4:	800690ba 	slli	r3,r16,2
   159b8:	10c7883a 	add	r3,r2,r3
   159bc:	18800017 	ldw	r2,0(r3)
  if (func == SIG_DFL)
   159c0:	10000a1e 	bne	r2,zero,159ec <__sigtramp_r+0x6c>
    return 1;
   159c4:	00800044 	movi	r2,1
   159c8:	00000306 	br	159d8 <__sigtramp_r+0x58>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   159cc:	00157f80 	call	157f8 <_init_signal_r>
   159d0:	103ff726 	beq	r2,zero,159b0 <__sigtramp_r+0x30>
      return -1;
   159d4:	00bfffc4 	movi	r2,-1
}
   159d8:	dfc00217 	ldw	ra,8(sp)
   159dc:	dc400117 	ldw	r17,4(sp)
   159e0:	dc000017 	ldw	r16,0(sp)
   159e4:	dec00304 	addi	sp,sp,12
   159e8:	f800283a 	ret
  else if (func == SIG_ERR)
   159ec:	113fffe0 	cmpeqi	r4,r2,-1
   159f0:	2000071e 	bne	r4,zero,15a10 <__sigtramp_r+0x90>
  else if (func == SIG_IGN)
   159f4:	11000060 	cmpeqi	r4,r2,1
   159f8:	2000071e 	bne	r4,zero,15a18 <__sigtramp_r+0x98>
      ptr->_sig_func[sig] = SIG_DFL;
   159fc:	18000015 	stw	zero,0(r3)
      func (sig);
   15a00:	8009883a 	mov	r4,r16
   15a04:	103ee83a 	callr	r2
      return 0;
   15a08:	0005883a 	mov	r2,zero
   15a0c:	003ff206 	br	159d8 <__sigtramp_r+0x58>
    return 2;
   15a10:	00800084 	movi	r2,2
   15a14:	003ff006 	br	159d8 <__sigtramp_r+0x58>
    return 3;
   15a18:	008000c4 	movi	r2,3
   15a1c:	003fee06 	br	159d8 <__sigtramp_r+0x58>

00015a20 <raise>:
#ifndef _REENT_ONLY

int 
raise (int sig)
{
  return _raise_r (_REENT, sig);
   15a20:	200b883a 	mov	r5,r4
   15a24:	d1209817 	ldw	r4,-32160(gp)
   15a28:	00158cc1 	jmpi	158cc <_raise_r>

00015a2c <signal>:

_sig_func_ptr
signal (int sig,
	_sig_func_ptr func)
{
  return _signal_r (_REENT, sig, func);
   15a2c:	280d883a 	mov	r6,r5
   15a30:	200b883a 	mov	r5,r4
   15a34:	d1209817 	ldw	r4,-32160(gp)
   15a38:	00158541 	jmpi	15854 <_signal_r>

00015a3c <_init_signal>:
}

int 
_init_signal (void)
{
  return _init_signal_r (_REENT);
   15a3c:	d1209817 	ldw	r4,-32160(gp)
   15a40:	00157f81 	jmpi	157f8 <_init_signal_r>

00015a44 <__sigtramp>:
}

int
__sigtramp (int sig)
{
  return __sigtramp_r (_REENT, sig);
   15a44:	200b883a 	mov	r5,r4
   15a48:	d1209817 	ldw	r4,-32160(gp)
   15a4c:	00159801 	jmpi	15980 <__sigtramp_r>

00015a50 <_kill_r>:

int
_kill_r (struct _reent *ptr,
     int pid,
     int sig)
{
   15a50:	defffe04 	addi	sp,sp,-8
   15a54:	dc000015 	stw	r16,0(sp)
   15a58:	2021883a 	mov	r16,r4
   15a5c:	2809883a 	mov	r4,r5
   15a60:	300b883a 	mov	r5,r6
   15a64:	dfc00115 	stw	ra,4(sp)
  int ret;

  errno = 0;
   15a68:	d0220915 	stw	zero,-30684(gp)
  if ((ret = _kill (pid, sig)) == -1 && errno != 0)
   15a6c:	0015cf80 	call	15cf8 <kill>
   15a70:	10ffffd8 	cmpnei	r3,r2,-1
   15a74:	1800031e 	bne	r3,zero,15a84 <_kill_r+0x34>
   15a78:	d0e20917 	ldw	r3,-30684(gp)
   15a7c:	18000126 	beq	r3,zero,15a84 <_kill_r+0x34>
    ptr->_errno = errno;
   15a80:	80c00015 	stw	r3,0(r16)
  return ret;
}
   15a84:	dfc00117 	ldw	ra,4(sp)
   15a88:	dc000017 	ldw	r16,0(sp)
   15a8c:	dec00204 	addi	sp,sp,8
   15a90:	f800283a 	ret

00015a94 <_getpid_r>:

int
_getpid_r (struct _reent *ptr)
{
  int ret;
  ret = _getpid ();
   15a94:	0015bfc1 	jmpi	15bfc <getpid>

00015a98 <strcmp>:
int
strcmp (const char *s1,
	const char *s2)
{ 
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  while (*s1 != '\0' && *s1 == *s2)
   15a98:	20800003 	ldbu	r2,0(r4)
   15a9c:	28c00003 	ldbu	r3,0(r5)
   15aa0:	11803fcc 	andi	r6,r2,255
   15aa4:	3180201c 	xori	r6,r6,128
   15aa8:	31bfe004 	addi	r6,r6,-128
   15aac:	30000426 	beq	r6,zero,15ac0 <strcmp+0x28>
   15ab0:	19c03fcc 	andi	r7,r3,255
   15ab4:	39c0201c 	xori	r7,r7,128
   15ab8:	39ffe004 	addi	r7,r7,-128
   15abc:	31c00426 	beq	r6,r7,15ad0 <strcmp+0x38>
    {
      s1++;
      s2++;
    }

  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
   15ac0:	18c03fcc 	andi	r3,r3,255
   15ac4:	10803fcc 	andi	r2,r2,255
      s1++;
      s2++;
    }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   15ac8:	10c5c83a 	sub	r2,r2,r3
   15acc:	f800283a 	ret
      s1++;
   15ad0:	21000044 	addi	r4,r4,1
      s2++;
   15ad4:	29400044 	addi	r5,r5,1
   15ad8:	003fef06 	br	15a98 <strcmp>

00015adc <strlen>:
     precise position of the null.  */
  str = (char *) aligned_addr;

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (*str)
   15adc:	2005883a 	mov	r2,r4
   15ae0:	10c00007 	ldb	r3,0(r2)
   15ae4:	1800021e 	bne	r3,zero,15af0 <strlen+0x14>
    str++;
  return str - start;
}
   15ae8:	1105c83a 	sub	r2,r2,r4
   15aec:	f800283a 	ret
    str++;
   15af0:	10800044 	addi	r2,r2,1
   15af4:	003ffa06 	br	15ae0 <strlen+0x4>

00015af8 <__sfvwrite_small_dev>:


int
__sfvwrite_small_dev (struct _reent *data, struct __sFILE_small_file * fp, _CONST char *str, int len)
{
  if (cantwrite (fp))
   15af8:	2880000b 	ldhu	r2,0(r5)
   15afc:	1080020c 	andi	r2,r2,8
   15b00:	10002526 	beq	r2,zero,15b98 <__sfvwrite_small_dev+0xa0>
    return EOF; 
    
  if (fp->_file >= 0)
   15b04:	2880008f 	ldh	r2,2(r5)
{
   15b08:	defffb04 	addi	sp,sp,-20
   15b0c:	dcc00315 	stw	r19,12(sp)
   15b10:	dc800215 	stw	r18,8(sp)
   15b14:	dc400115 	stw	r17,4(sp)
   15b18:	dc000015 	stw	r16,0(sp)
   15b1c:	dfc00415 	stw	ra,16(sp)
   15b20:	2027883a 	mov	r19,r4
   15b24:	2821883a 	mov	r16,r5
   15b28:	3025883a 	mov	r18,r6
   15b2c:	3823883a 	mov	r17,r7
  if (fp->_file >= 0)
   15b30:	1000100e 	bge	r2,zero,15b74 <__sfvwrite_small_dev+0x7c>
      return 0;
    }
  /* else, we have an invalid FILE */

err:
  fp->_flags |= __SERR;
   15b34:	8080000b 	ldhu	r2,0(r16)
   15b38:	10801014 	ori	r2,r2,64
   15b3c:	8080000d 	sth	r2,0(r16)
  return EOF;
   15b40:	00bfffc4 	movi	r2,-1
   15b44:	00000d06 	br	15b7c <__sfvwrite_small_dev+0x84>
	  new_write = _write_r (data, fp->_file, str, MIN (len_left, BUFSIZ));
   15b48:	88810050 	cmplti	r2,r17,1025
   15b4c:	880f883a 	mov	r7,r17
   15b50:	1000011e 	bne	r2,zero,15b58 <__sfvwrite_small_dev+0x60>
   15b54:	01c10004 	movi	r7,1024
   15b58:	8140008f 	ldh	r5,2(r16)
   15b5c:	900d883a 	mov	r6,r18
   15b60:	9809883a 	mov	r4,r19
   15b64:	0015ba00 	call	15ba0 <_write_r>
	  if (new_write <= 0)
   15b68:	00bff20e 	bge	zero,r2,15b34 <__sfvwrite_small_dev+0x3c>
	  len_left = len_left - new_write;
   15b6c:	88a3c83a 	sub	r17,r17,r2
	  str += new_write;
   15b70:	90a5883a 	add	r18,r18,r2
      while (len_left > 0)
   15b74:	047ff416 	blt	zero,r17,15b48 <__sfvwrite_small_dev+0x50>
      return 0;
   15b78:	0005883a 	mov	r2,zero
}
   15b7c:	dfc00417 	ldw	ra,16(sp)
   15b80:	dcc00317 	ldw	r19,12(sp)
   15b84:	dc800217 	ldw	r18,8(sp)
   15b88:	dc400117 	ldw	r17,4(sp)
   15b8c:	dc000017 	ldw	r16,0(sp)
   15b90:	dec00504 	addi	sp,sp,20
   15b94:	f800283a 	ret
    return EOF; 
   15b98:	00bfffc4 	movi	r2,-1
}
   15b9c:	f800283a 	ret

00015ba0 <_write_r>:
_ssize_t
_write_r (struct _reent *ptr,
     int fd,
     const void *buf,
     size_t cnt)
{
   15ba0:	defffe04 	addi	sp,sp,-8
   15ba4:	dc000015 	stw	r16,0(sp)
   15ba8:	2021883a 	mov	r16,r4
   15bac:	2809883a 	mov	r4,r5
   15bb0:	300b883a 	mov	r5,r6
   15bb4:	380d883a 	mov	r6,r7
   15bb8:	dfc00115 	stw	ra,4(sp)
  _ssize_t ret;

  errno = 0;
   15bbc:	d0220915 	stw	zero,-30684(gp)
  if ((ret = (_ssize_t)_write (fd, buf, cnt)) == -1 && errno != 0)
   15bc0:	0015f380 	call	15f38 <write>
   15bc4:	10ffffd8 	cmpnei	r3,r2,-1
   15bc8:	1800031e 	bne	r3,zero,15bd8 <_write_r+0x38>
   15bcc:	d0e20917 	ldw	r3,-30684(gp)
   15bd0:	18000126 	beq	r3,zero,15bd8 <_write_r+0x38>
    ptr->_errno = errno;
   15bd4:	80c00015 	stw	r3,0(r16)
  return ret;
}
   15bd8:	dfc00117 	ldw	ra,4(sp)
   15bdc:	dc000017 	ldw	r16,0(sp)
   15be0:	dec00204 	addi	sp,sp,8
   15be4:	f800283a 	ret

00015be8 <_exit>:
   15be8:	20000226 	beq	r4,zero,15bf4 <_exit+0xc>
   15bec:	002af070 	cmpltui	zero,zero,43969
   15bf0:	003fff06 	br	15bf0 <_exit+0x8>
   15bf4:	002af0b0 	cmpltui	zero,zero,43970
   15bf8:	003ffd06 	br	15bf0 <_exit+0x8>

00015bfc <getpid>:
   15bfc:	0005883a 	mov	r2,zero
   15c00:	f800283a 	ret

00015c04 <alt_ic_isr_register>:
   15c04:	0015c901 	jmpi	15c90 <alt_iic_isr_register>

00015c08 <alt_ic_irq_enable>:
   15c08:	0007303a 	rdctl	r3,status
   15c0c:	00bfff84 	movi	r2,-2
   15c10:	1884703a 	and	r2,r3,r2
   15c14:	1001703a 	wrctl	status,r2
   15c18:	00800044 	movi	r2,1
   15c1c:	d1220a17 	ldw	r4,-30680(gp)
   15c20:	114a983a 	sll	r5,r2,r5
   15c24:	290ab03a 	or	r5,r5,r4
   15c28:	d1620a15 	stw	r5,-30680(gp)
   15c2c:	d0a20a17 	ldw	r2,-30680(gp)
   15c30:	100170fa 	wrctl	ienable,r2
   15c34:	1801703a 	wrctl	status,r3
   15c38:	0005883a 	mov	r2,zero
   15c3c:	f800283a 	ret

00015c40 <alt_ic_irq_disable>:
   15c40:	0007303a 	rdctl	r3,status
   15c44:	00bfff84 	movi	r2,-2
   15c48:	1884703a 	and	r2,r3,r2
   15c4c:	1001703a 	wrctl	status,r2
   15c50:	00bfff84 	movi	r2,-2
   15c54:	d1220a17 	ldw	r4,-30680(gp)
   15c58:	114a183a 	rol	r5,r2,r5
   15c5c:	290a703a 	and	r5,r5,r4
   15c60:	d1620a15 	stw	r5,-30680(gp)
   15c64:	d0a20a17 	ldw	r2,-30680(gp)
   15c68:	100170fa 	wrctl	ienable,r2
   15c6c:	1801703a 	wrctl	status,r3
   15c70:	0005883a 	mov	r2,zero
   15c74:	f800283a 	ret

00015c78 <alt_ic_irq_enabled>:
   15c78:	000730fa 	rdctl	r3,ienable
   15c7c:	00800044 	movi	r2,1
   15c80:	1144983a 	sll	r2,r2,r5
   15c84:	10c4703a 	and	r2,r2,r3
   15c88:	1004c03a 	cmpne	r2,r2,zero
   15c8c:	f800283a 	ret

00015c90 <alt_iic_isr_register>:
   15c90:	28800808 	cmpgei	r2,r5,32
   15c94:	1000161e 	bne	r2,zero,15cf0 <alt_iic_isr_register+0x60>
   15c98:	defffe04 	addi	sp,sp,-8
   15c9c:	dfc00115 	stw	ra,4(sp)
   15ca0:	dc000015 	stw	r16,0(sp)
   15ca4:	0021303a 	rdctl	r16,status
   15ca8:	00bfff84 	movi	r2,-2
   15cac:	8084703a 	and	r2,r16,r2
   15cb0:	1001703a 	wrctl	status,r2
   15cb4:	280690fa 	slli	r3,r5,3
   15cb8:	008000b4 	movhi	r2,2
   15cbc:	10a07704 	addi	r2,r2,-32292
   15cc0:	10c5883a 	add	r2,r2,r3
   15cc4:	11800015 	stw	r6,0(r2)
   15cc8:	11c00115 	stw	r7,4(r2)
   15ccc:	30000626 	beq	r6,zero,15ce8 <alt_iic_isr_register+0x58>
   15cd0:	0015c080 	call	15c08 <alt_ic_irq_enable>
   15cd4:	8001703a 	wrctl	status,r16
   15cd8:	dfc00117 	ldw	ra,4(sp)
   15cdc:	dc000017 	ldw	r16,0(sp)
   15ce0:	dec00204 	addi	sp,sp,8
   15ce4:	f800283a 	ret
   15ce8:	0015c400 	call	15c40 <alt_ic_irq_disable>
   15cec:	003ff906 	br	15cd4 <alt_iic_isr_register+0x44>
   15cf0:	00bffa84 	movi	r2,-22
   15cf4:	f800283a 	ret

00015cf8 <kill>:
   15cf8:	defffe04 	addi	sp,sp,-8
   15cfc:	dfc00115 	stw	ra,4(sp)
   15d00:	dc000015 	stw	r16,0(sp)
   15d04:	01002916 	blt	zero,r4,15dac <kill+0xb4>
   15d08:	28800828 	cmpgeui	r2,r5,32
   15d0c:	1000311e 	bne	r2,zero,15dd4 <kill+0xdc>
   15d10:	280a90ba 	slli	r5,r5,2
   15d14:	00800074 	movhi	r2,1
   15d18:	2885883a 	add	r2,r5,r2
   15d1c:	10974917 	ldw	r2,23844(r2)
   15d20:	1000683a 	jmp	r2
   15d24:	00015de4 	muli	zero,zero,1399
   15d28:	00015dd4 	movui	zero,1399
   15d2c:	00015dd4 	movui	zero,1399
   15d30:	00015da4 	muli	zero,zero,1398
   15d34:	00015da4 	muli	zero,zero,1398
   15d38:	00015da4 	muli	zero,zero,1398
   15d3c:	00015da4 	muli	zero,zero,1398
   15d40:	00015dd4 	movui	zero,1399
   15d44:	00015da4 	muli	zero,zero,1398
   15d48:	00015da4 	muli	zero,zero,1398
   15d4c:	00015da4 	muli	zero,zero,1398
   15d50:	00015da4 	muli	zero,zero,1398
   15d54:	00015da4 	muli	zero,zero,1398
   15d58:	00015da4 	muli	zero,zero,1398
   15d5c:	00015da4 	muli	zero,zero,1398
   15d60:	00015da4 	muli	zero,zero,1398
   15d64:	00015de4 	muli	zero,zero,1399
   15d68:	00015dd4 	movui	zero,1399
   15d6c:	00015dd4 	movui	zero,1399
   15d70:	00015dd4 	movui	zero,1399
   15d74:	00015de4 	muli	zero,zero,1399
   15d78:	00015dd4 	movui	zero,1399
   15d7c:	00015dd4 	movui	zero,1399
   15d80:	00015da4 	muli	zero,zero,1398
   15d84:	00015da4 	muli	zero,zero,1398
   15d88:	00015da4 	muli	zero,zero,1398
   15d8c:	00015da4 	muli	zero,zero,1398
   15d90:	00015da4 	muli	zero,zero,1398
   15d94:	00015dd4 	movui	zero,1399
   15d98:	00015dd4 	movui	zero,1399
   15d9c:	00015da4 	muli	zero,zero,1398
   15da0:	00015da4 	muli	zero,zero,1398
   15da4:	0009883a 	mov	r4,zero
   15da8:	0015be80 	call	15be8 <_exit>
   15dac:	040000c4 	movi	r16,3
   15db0:	d0a0a017 	ldw	r2,-32128(gp)
   15db4:	10000926 	beq	r2,zero,15ddc <kill+0xe4>
   15db8:	103ee83a 	callr	r2
   15dbc:	14000015 	stw	r16,0(r2)
   15dc0:	00bfffc4 	movi	r2,-1
   15dc4:	dfc00117 	ldw	ra,4(sp)
   15dc8:	dc000017 	ldw	r16,0(sp)
   15dcc:	dec00204 	addi	sp,sp,8
   15dd0:	f800283a 	ret
   15dd4:	04000584 	movi	r16,22
   15dd8:	003ff506 	br	15db0 <kill+0xb8>
   15ddc:	d0a20904 	addi	r2,gp,-30684
   15de0:	003ff606 	br	15dbc <kill+0xc4>
   15de4:	0005883a 	mov	r2,zero
   15de8:	003ff606 	br	15dc4 <kill+0xcc>

00015dec <alt_load>:
   15dec:	deffff04 	addi	sp,sp,-4
   15df0:	01000074 	movhi	r4,1
   15df4:	01400074 	movhi	r5,1
   15df8:	dfc00015 	stw	ra,0(sp)
   15dfc:	211d9d04 	addi	r4,r4,30324
   15e00:	295ef904 	addi	r5,r5,31716
   15e04:	21400426 	beq	r4,r5,15e18 <alt_load+0x2c>
   15e08:	01800074 	movhi	r6,1
   15e0c:	319ef904 	addi	r6,r6,31716
   15e10:	310dc83a 	sub	r6,r6,r4
   15e14:	001549c0 	call	1549c <memcpy>
   15e18:	01000074 	movhi	r4,1
   15e1c:	01400074 	movhi	r5,1
   15e20:	21000804 	addi	r4,r4,32
   15e24:	29400804 	addi	r5,r5,32
   15e28:	21400426 	beq	r4,r5,15e3c <alt_load+0x50>
   15e2c:	01800074 	movhi	r6,1
   15e30:	31806004 	addi	r6,r6,384
   15e34:	310dc83a 	sub	r6,r6,r4
   15e38:	001549c0 	call	1549c <memcpy>
   15e3c:	01000074 	movhi	r4,1
   15e40:	01400074 	movhi	r5,1
   15e44:	211b1904 	addi	r4,r4,27748
   15e48:	295b1904 	addi	r5,r5,27748
   15e4c:	21400426 	beq	r4,r5,15e60 <alt_load+0x74>
   15e50:	01800074 	movhi	r6,1
   15e54:	319d9d04 	addi	r6,r6,30324
   15e58:	310dc83a 	sub	r6,r6,r4
   15e5c:	001549c0 	call	1549c <memcpy>
   15e60:	001632c0 	call	1632c <alt_dcache_flush_all>
   15e64:	dfc00017 	ldw	ra,0(sp)
   15e68:	dec00104 	addi	sp,sp,4
   15e6c:	00164341 	jmpi	16434 <alt_icache_flush_all>

00015e70 <alt_main>:
   15e70:	defffe04 	addi	sp,sp,-8
   15e74:	0009883a 	mov	r4,zero
   15e78:	dfc00115 	stw	ra,4(sp)
   15e7c:	dc000015 	stw	r16,0(sp)
   15e80:	0015fc80 	call	15fc8 <alt_irq_init>
   15e84:	0015fe80 	call	15fe8 <alt_sys_init>
   15e88:	01800074 	movhi	r6,1
   15e8c:	319d9304 	addi	r6,r6,30284
   15e90:	300b883a 	mov	r5,r6
   15e94:	3009883a 	mov	r4,r6
   15e98:	00165200 	call	16520 <alt_io_redirect>
   15e9c:	00163a40 	call	163a4 <_do_ctors>
   15ea0:	01000074 	movhi	r4,1
   15ea4:	2118fb04 	addi	r4,r4,25580
   15ea8:	001695c0 	call	1695c <atexit>
   15eac:	d1a20b17 	ldw	r6,-30676(gp)
   15eb0:	d1620c17 	ldw	r5,-30672(gp)
   15eb4:	d1220d17 	ldw	r4,-30668(gp)
   15eb8:	0011db00 	call	11db0 <main>
   15ebc:	01000044 	movi	r4,1
   15ec0:	1021883a 	mov	r16,r2
   15ec4:	00162780 	call	16278 <close>
   15ec8:	8009883a 	mov	r4,r16
   15ecc:	00169700 	call	16970 <exit>

00015ed0 <__malloc_lock>:
   15ed0:	f800283a 	ret

00015ed4 <__malloc_unlock>:
   15ed4:	f800283a 	ret

00015ed8 <sbrk>:
   15ed8:	0007303a 	rdctl	r3,status
   15edc:	00bfff84 	movi	r2,-2
   15ee0:	1884703a 	and	r2,r3,r2
   15ee4:	1001703a 	wrctl	status,r2
   15ee8:	d0a09a17 	ldw	r2,-32152(gp)
   15eec:	017fff04 	movi	r5,-4
   15ef0:	108000c4 	addi	r2,r2,3
   15ef4:	1144703a 	and	r2,r2,r5
   15ef8:	014000b4 	movhi	r5,2
   15efc:	d0a09a15 	stw	r2,-32152(gp)
   15f00:	1109883a 	add	r4,r2,r4
   15f04:	29680004 	addi	r5,r5,-24576
   15f08:	2900032e 	bgeu	r5,r4,15f18 <sbrk+0x40>
   15f0c:	1801703a 	wrctl	status,r3
   15f10:	00bfffc4 	movi	r2,-1
   15f14:	f800283a 	ret
   15f18:	d1209a15 	stw	r4,-32152(gp)
   15f1c:	1801703a 	wrctl	status,r3
   15f20:	f800283a 	ret

00015f24 <alt_get_errno>:
   15f24:	d0a0a017 	ldw	r2,-32128(gp)
   15f28:	10000126 	beq	r2,zero,15f30 <alt_get_errno+0xc>
   15f2c:	1000683a 	jmp	r2
   15f30:	d0a20904 	addi	r2,gp,-30684
   15f34:	f800283a 	ret

00015f38 <write>:
   15f38:	defffe04 	addi	sp,sp,-8
   15f3c:	dfc00115 	stw	ra,4(sp)
   15f40:	dc000015 	stw	r16,0(sp)
   15f44:	20001d16 	blt	r4,zero,15fbc <write+0x84>
   15f48:	2004907a 	slli	r2,r4,1
   15f4c:	1109883a 	add	r4,r2,r4
   15f50:	200890ba 	slli	r4,r4,2
   15f54:	00800074 	movhi	r2,1
   15f58:	109dec04 	addi	r2,r2,30640
   15f5c:	2089883a 	add	r4,r4,r2
   15f60:	20001626 	beq	r4,zero,15fbc <write+0x84>
   15f64:	20800217 	ldw	r2,8(r4)
   15f68:	108000cc 	andi	r2,r2,3
   15f6c:	10000f26 	beq	r2,zero,15fac <write+0x74>
   15f70:	20800017 	ldw	r2,0(r4)
   15f74:	10800617 	ldw	r2,24(r2)
   15f78:	10000c26 	beq	r2,zero,15fac <write+0x74>
   15f7c:	103ee83a 	callr	r2
   15f80:	1021883a 	mov	r16,r2
   15f84:	1000040e 	bge	r2,zero,15f98 <write+0x60>
   15f88:	0015f240 	call	15f24 <alt_get_errno>
   15f8c:	0421c83a 	sub	r16,zero,r16
   15f90:	14000015 	stw	r16,0(r2)
   15f94:	043fffc4 	movi	r16,-1
   15f98:	8005883a 	mov	r2,r16
   15f9c:	dfc00117 	ldw	ra,4(sp)
   15fa0:	dc000017 	ldw	r16,0(sp)
   15fa4:	dec00204 	addi	sp,sp,8
   15fa8:	f800283a 	ret
   15fac:	0015f240 	call	15f24 <alt_get_errno>
   15fb0:	00c00344 	movi	r3,13
   15fb4:	10c00015 	stw	r3,0(r2)
   15fb8:	003ff606 	br	15f94 <write+0x5c>
   15fbc:	0015f240 	call	15f24 <alt_get_errno>
   15fc0:	00c01444 	movi	r3,81
   15fc4:	003ffb06 	br	15fb4 <write+0x7c>

00015fc8 <alt_irq_init>:
   15fc8:	deffff04 	addi	sp,sp,-4
   15fcc:	dfc00015 	stw	ra,0(sp)
   15fd0:	00167f40 	call	167f4 <altera_nios2_gen2_irq_init>
   15fd4:	00800044 	movi	r2,1
   15fd8:	1001703a 	wrctl	status,r2
   15fdc:	dfc00017 	ldw	ra,0(sp)
   15fe0:	dec00104 	addi	sp,sp,4
   15fe4:	f800283a 	ret

00015fe8 <alt_sys_init>:
   15fe8:	010000b4 	movhi	r4,2
   15fec:	deffff04 	addi	sp,sp,-4
   15ff0:	01c0fa04 	movi	r7,1000
   15ff4:	01800044 	movi	r6,1
   15ff8:	000b883a 	mov	r5,zero
   15ffc:	210a1004 	addi	r4,r4,10304
   16000:	dfc00015 	stw	ra,0(sp)
   16004:	00161140 	call	16114 <alt_avalon_timer_sc_init>
   16008:	01000074 	movhi	r4,1
   1600c:	d1609c04 	addi	r5,gp,-32144
   16010:	211de104 	addi	r4,r4,30596
   16014:	00163380 	call	16338 <alt_dev_llist_insert>
   16018:	01000074 	movhi	r4,1
   1601c:	d1609c04 	addi	r5,gp,-32144
   16020:	211dd604 	addi	r4,r4,30552
   16024:	dfc00017 	ldw	ra,0(sp)
   16028:	dec00104 	addi	sp,sp,4
   1602c:	00163381 	jmpi	16338 <alt_dev_llist_insert>

00016030 <altera_avalon_jtag_uart_read_fd>:
   16030:	20800017 	ldw	r2,0(r4)
   16034:	21c00217 	ldw	r7,8(r4)
   16038:	11000a04 	addi	r4,r2,40
   1603c:	00160501 	jmpi	16050 <altera_avalon_jtag_uart_read>

00016040 <altera_avalon_jtag_uart_write_fd>:
   16040:	20800017 	ldw	r2,0(r4)
   16044:	21c00217 	ldw	r7,8(r4)
   16048:	11000a04 	addi	r4,r2,40
   1604c:	00160a81 	jmpi	160a8 <altera_avalon_jtag_uart_write>

00016050 <altera_avalon_jtag_uart_read>:
   16050:	21000017 	ldw	r4,0(r4)
   16054:	298d883a 	add	r6,r5,r6
   16058:	2805883a 	mov	r2,r5
   1605c:	3a10000c 	andi	r8,r7,16384
   16060:	11800536 	bltu	r2,r6,16078 <altera_avalon_jtag_uart_read+0x28>
   16064:	11400b1e 	bne	r2,r5,16094 <altera_avalon_jtag_uart_read+0x44>
   16068:	39d0000c 	andi	r7,r7,16384
   1606c:	38000c1e 	bne	r7,zero,160a0 <altera_avalon_jtag_uart_read+0x50>
   16070:	00bffec4 	movi	r2,-5
   16074:	f800283a 	ret
   16078:	20c00037 	ldwio	r3,0(r4)
   1607c:	1a60000c 	andi	r9,r3,32768
   16080:	48000326 	beq	r9,zero,16090 <altera_avalon_jtag_uart_read+0x40>
   16084:	10c00005 	stb	r3,0(r2)
   16088:	10800044 	addi	r2,r2,1
   1608c:	003ff406 	br	16060 <altera_avalon_jtag_uart_read+0x10>
   16090:	11400226 	beq	r2,r5,1609c <altera_avalon_jtag_uart_read+0x4c>
   16094:	1145c83a 	sub	r2,r2,r5
   16098:	f800283a 	ret
   1609c:	403ff026 	beq	r8,zero,16060 <altera_avalon_jtag_uart_read+0x10>
   160a0:	00bffd44 	movi	r2,-11
   160a4:	f800283a 	ret

000160a8 <altera_avalon_jtag_uart_write>:
   160a8:	21000017 	ldw	r4,0(r4)
   160ac:	3005883a 	mov	r2,r6
   160b0:	298d883a 	add	r6,r5,r6
   160b4:	29800136 	bltu	r5,r6,160bc <altera_avalon_jtag_uart_write+0x14>
   160b8:	f800283a 	ret
   160bc:	20c00137 	ldwio	r3,4(r4)
   160c0:	18ffffec 	andhi	r3,r3,65535
   160c4:	183ffb26 	beq	r3,zero,160b4 <altera_avalon_jtag_uart_write+0xc>
   160c8:	28c00007 	ldb	r3,0(r5)
   160cc:	29400044 	addi	r5,r5,1
   160d0:	20c00035 	stwio	r3,0(r4)
   160d4:	003ff706 	br	160b4 <altera_avalon_jtag_uart_write+0xc>

000160d8 <alt_avalon_timer_sc_irq>:
   160d8:	defffe04 	addi	sp,sp,-8
   160dc:	dfc00115 	stw	ra,4(sp)
   160e0:	dc000015 	stw	r16,0(sp)
   160e4:	20000035 	stwio	zero,0(r4)
   160e8:	20800137 	ldwio	r2,4(r4)
   160ec:	0021303a 	rdctl	r16,status
   160f0:	00bfff84 	movi	r2,-2
   160f4:	8084703a 	and	r2,r16,r2
   160f8:	1001703a 	wrctl	status,r2
   160fc:	001673c0 	call	1673c <alt_tick>
   16100:	8001703a 	wrctl	status,r16
   16104:	dfc00117 	ldw	ra,4(sp)
   16108:	dc000017 	ldw	r16,0(sp)
   1610c:	dec00204 	addi	sp,sp,8
   16110:	f800283a 	ret

00016114 <alt_avalon_timer_sc_init>:
   16114:	d0e21017 	ldw	r3,-30656(gp)
   16118:	defffe04 	addi	sp,sp,-8
   1611c:	dfc00115 	stw	ra,4(sp)
   16120:	2005883a 	mov	r2,r4
   16124:	2809883a 	mov	r4,r5
   16128:	300b883a 	mov	r5,r6
   1612c:	1800011e 	bne	r3,zero,16134 <alt_avalon_timer_sc_init+0x20>
   16130:	d1e21015 	stw	r7,-30656(gp)
   16134:	00c001c4 	movi	r3,7
   16138:	10c00135 	stwio	r3,4(r2)
   1613c:	01800074 	movhi	r6,1
   16140:	d8000015 	stw	zero,0(sp)
   16144:	100f883a 	mov	r7,r2
   16148:	31983604 	addi	r6,r6,24792
   1614c:	0015c040 	call	15c04 <alt_ic_isr_register>
   16150:	dfc00117 	ldw	ra,4(sp)
   16154:	dec00204 	addi	sp,sp,8
   16158:	f800283a 	ret

0001615c <altera_avalon_uart_read_fd>:
   1615c:	20800017 	ldw	r2,0(r4)
   16160:	21c00217 	ldw	r7,8(r4)
   16164:	11000a04 	addi	r4,r2,40
   16168:	001617c1 	jmpi	1617c <altera_avalon_uart_read>

0001616c <altera_avalon_uart_write_fd>:
   1616c:	20800017 	ldw	r2,0(r4)
   16170:	21c00217 	ldw	r7,8(r4)
   16174:	11000a04 	addi	r4,r2,40
   16178:	00161f41 	jmpi	161f4 <altera_avalon_uart_write>

0001617c <altera_avalon_uart_read>:
   1617c:	39d0000c 	andi	r7,r7,16384
   16180:	20c00017 	ldw	r3,0(r4)
   16184:	18800237 	ldwio	r2,8(r3)
   16188:	18000235 	stwio	zero,8(r3)
   1618c:	10c0200c 	andi	r3,r2,128
   16190:	18000c1e 	bne	r3,zero,161c4 <altera_avalon_uart_read+0x48>
   16194:	383ffa26 	beq	r7,zero,16180 <altera_avalon_uart_read+0x4>
   16198:	d0a0a017 	ldw	r2,-32128(gp)
   1619c:	10001026 	beq	r2,zero,161e0 <altera_avalon_uart_read+0x64>
   161a0:	deffff04 	addi	sp,sp,-4
   161a4:	dfc00015 	stw	ra,0(sp)
   161a8:	103ee83a 	callr	r2
   161ac:	00c002c4 	movi	r3,11
   161b0:	10c00015 	stw	r3,0(r2)
   161b4:	0005883a 	mov	r2,zero
   161b8:	dfc00017 	ldw	ra,0(sp)
   161bc:	dec00104 	addi	sp,sp,4
   161c0:	f800283a 	ret
   161c4:	20c00017 	ldw	r3,0(r4)
   161c8:	18c00037 	ldwio	r3,0(r3)
   161cc:	28c00005 	stb	r3,0(r5)
   161d0:	108000cc 	andi	r2,r2,3
   161d4:	103fef1e 	bne	r2,zero,16194 <altera_avalon_uart_read+0x18>
   161d8:	00800044 	movi	r2,1
   161dc:	f800283a 	ret
   161e0:	d0a20904 	addi	r2,gp,-30684
   161e4:	00c002c4 	movi	r3,11
   161e8:	10c00015 	stw	r3,0(r2)
   161ec:	0005883a 	mov	r2,zero
   161f0:	f800283a 	ret

000161f4 <altera_avalon_uart_write>:
   161f4:	defffd04 	addi	sp,sp,-12
   161f8:	dc400115 	stw	r17,4(sp)
   161fc:	dc000015 	stw	r16,0(sp)
   16200:	dfc00215 	stw	ra,8(sp)
   16204:	3023883a 	mov	r17,r6
   16208:	39d0000c 	andi	r7,r7,16384
   1620c:	3021883a 	mov	r16,r6
   16210:	20c00017 	ldw	r3,0(r4)
   16214:	18800237 	ldwio	r2,8(r3)
   16218:	1080100c 	andi	r2,r2,64
   1621c:	10000526 	beq	r2,zero,16234 <altera_avalon_uart_write+0x40>
   16220:	28800044 	addi	r2,r5,1
   16224:	29400007 	ldb	r5,0(r5)
   16228:	19400135 	stwio	r5,4(r3)
   1622c:	843fffc4 	addi	r16,r16,-1
   16230:	100b883a 	mov	r5,r2
   16234:	3800071e 	bne	r7,zero,16254 <altera_avalon_uart_write+0x60>
   16238:	803ff51e 	bne	r16,zero,16210 <altera_avalon_uart_write+0x1c>
   1623c:	8c05c83a 	sub	r2,r17,r16
   16240:	dfc00217 	ldw	ra,8(sp)
   16244:	dc400117 	ldw	r17,4(sp)
   16248:	dc000017 	ldw	r16,0(sp)
   1624c:	dec00304 	addi	sp,sp,12
   16250:	f800283a 	ret
   16254:	803ff926 	beq	r16,zero,1623c <altera_avalon_uart_write+0x48>
   16258:	d0a0a017 	ldw	r2,-32128(gp)
   1625c:	10000426 	beq	r2,zero,16270 <altera_avalon_uart_write+0x7c>
   16260:	103ee83a 	callr	r2
   16264:	00c002c4 	movi	r3,11
   16268:	10c00015 	stw	r3,0(r2)
   1626c:	003ff306 	br	1623c <altera_avalon_uart_write+0x48>
   16270:	d0a20904 	addi	r2,gp,-30684
   16274:	003ffb06 	br	16264 <altera_avalon_uart_write+0x70>

00016278 <close>:
   16278:	defffd04 	addi	sp,sp,-12
   1627c:	dfc00215 	stw	ra,8(sp)
   16280:	dc400115 	stw	r17,4(sp)
   16284:	dc000015 	stw	r16,0(sp)
   16288:	20002016 	blt	r4,zero,1630c <close+0x94>
   1628c:	2004907a 	slli	r2,r4,1
   16290:	2023883a 	mov	r17,r4
   16294:	1105883a 	add	r2,r2,r4
   16298:	100490ba 	slli	r2,r2,2
   1629c:	01000074 	movhi	r4,1
   162a0:	211dec04 	addi	r4,r4,30640
   162a4:	1109883a 	add	r4,r2,r4
   162a8:	20001826 	beq	r4,zero,1630c <close+0x94>
   162ac:	20800017 	ldw	r2,0(r4)
   162b0:	10800417 	ldw	r2,16(r2)
   162b4:	10001126 	beq	r2,zero,162fc <close+0x84>
   162b8:	103ee83a 	callr	r2
   162bc:	1021883a 	mov	r16,r2
   162c0:	8809883a 	mov	r4,r17
   162c4:	00166e00 	call	166e0 <alt_release_fd>
   162c8:	0005883a 	mov	r2,zero
   162cc:	8000060e 	bge	r16,zero,162e8 <close+0x70>
   162d0:	d0a0a017 	ldw	r2,-32128(gp)
   162d4:	10000b26 	beq	r2,zero,16304 <close+0x8c>
   162d8:	103ee83a 	callr	r2
   162dc:	0421c83a 	sub	r16,zero,r16
   162e0:	14000015 	stw	r16,0(r2)
   162e4:	00bfffc4 	movi	r2,-1
   162e8:	dfc00217 	ldw	ra,8(sp)
   162ec:	dc400117 	ldw	r17,4(sp)
   162f0:	dc000017 	ldw	r16,0(sp)
   162f4:	dec00304 	addi	sp,sp,12
   162f8:	f800283a 	ret
   162fc:	0021883a 	mov	r16,zero
   16300:	003fef06 	br	162c0 <close+0x48>
   16304:	d0a20904 	addi	r2,gp,-30684
   16308:	003ff406 	br	162dc <close+0x64>
   1630c:	d0a0a017 	ldw	r2,-32128(gp)
   16310:	10000426 	beq	r2,zero,16324 <close+0xac>
   16314:	103ee83a 	callr	r2
   16318:	00c01444 	movi	r3,81
   1631c:	10c00015 	stw	r3,0(r2)
   16320:	003ff006 	br	162e4 <close+0x6c>
   16324:	d0a20904 	addi	r2,gp,-30684
   16328:	003ffb06 	br	16318 <close+0xa0>

0001632c <alt_dcache_flush_all>:
   1632c:	f800283a 	ret

00016330 <alt_dev_null_write>:
   16330:	3005883a 	mov	r2,r6
   16334:	f800283a 	ret

00016338 <alt_dev_llist_insert>:
   16338:	20000226 	beq	r4,zero,16344 <alt_dev_llist_insert+0xc>
   1633c:	20800217 	ldw	r2,8(r4)
   16340:	10000b1e 	bne	r2,zero,16370 <alt_dev_llist_insert+0x38>
   16344:	d0a0a017 	ldw	r2,-32128(gp)
   16348:	10001126 	beq	r2,zero,16390 <alt_dev_llist_insert+0x58>
   1634c:	deffff04 	addi	sp,sp,-4
   16350:	dfc00015 	stw	ra,0(sp)
   16354:	103ee83a 	callr	r2
   16358:	00c00584 	movi	r3,22
   1635c:	10c00015 	stw	r3,0(r2)
   16360:	00bffa84 	movi	r2,-22
   16364:	dfc00017 	ldw	ra,0(sp)
   16368:	dec00104 	addi	sp,sp,4
   1636c:	f800283a 	ret
   16370:	28800017 	ldw	r2,0(r5)
   16374:	21400115 	stw	r5,4(r4)
   16378:	20800015 	stw	r2,0(r4)
   1637c:	28800017 	ldw	r2,0(r5)
   16380:	11000115 	stw	r4,4(r2)
   16384:	29000015 	stw	r4,0(r5)
   16388:	0005883a 	mov	r2,zero
   1638c:	f800283a 	ret
   16390:	d0a20904 	addi	r2,gp,-30684
   16394:	00c00584 	movi	r3,22
   16398:	10c00015 	stw	r3,0(r2)
   1639c:	00bffa84 	movi	r2,-22
   163a0:	f800283a 	ret

000163a4 <_do_ctors>:
   163a4:	defffd04 	addi	sp,sp,-12
   163a8:	dc400115 	stw	r17,4(sp)
   163ac:	dc000015 	stw	r16,0(sp)
   163b0:	04400074 	movhi	r17,1
   163b4:	04000074 	movhi	r16,1
   163b8:	dfc00215 	stw	ra,8(sp)
   163bc:	841b1804 	addi	r16,r16,27744
   163c0:	8c5b1444 	addi	r17,r17,27729
   163c4:	843fff04 	addi	r16,r16,-4
   163c8:	8440052e 	bgeu	r16,r17,163e0 <_do_ctors+0x3c>
   163cc:	dfc00217 	ldw	ra,8(sp)
   163d0:	dc400117 	ldw	r17,4(sp)
   163d4:	dc000017 	ldw	r16,0(sp)
   163d8:	dec00304 	addi	sp,sp,12
   163dc:	f800283a 	ret
   163e0:	80800017 	ldw	r2,0(r16)
   163e4:	103ee83a 	callr	r2
   163e8:	003ff606 	br	163c4 <_do_ctors+0x20>

000163ec <_do_dtors>:
   163ec:	defffd04 	addi	sp,sp,-12
   163f0:	dc400115 	stw	r17,4(sp)
   163f4:	dc000015 	stw	r16,0(sp)
   163f8:	04400074 	movhi	r17,1
   163fc:	04000074 	movhi	r16,1
   16400:	dfc00215 	stw	ra,8(sp)
   16404:	841b1904 	addi	r16,r16,27748
   16408:	8c5b1804 	addi	r17,r17,27744
   1640c:	843fff04 	addi	r16,r16,-4
   16410:	8440052e 	bgeu	r16,r17,16428 <_do_dtors+0x3c>
   16414:	dfc00217 	ldw	ra,8(sp)
   16418:	dc400117 	ldw	r17,4(sp)
   1641c:	dc000017 	ldw	r16,0(sp)
   16420:	dec00304 	addi	sp,sp,12
   16424:	f800283a 	ret
   16428:	80800017 	ldw	r2,0(r16)
   1642c:	103ee83a 	callr	r2
   16430:	003ff606 	br	1640c <_do_dtors+0x20>

00016434 <alt_icache_flush_all>:
   16434:	f800283a 	ret

00016438 <alt_exception_cause_generated_bad_addr>:
   16438:	213ffe84 	addi	r4,r4,-6
   1643c:	20800428 	cmpgeui	r2,r4,16
   16440:	1000151e 	bne	r2,zero,16498 <alt_exception_cause_generated_bad_addr+0x60>
   16444:	200890ba 	slli	r4,r4,2
   16448:	00800074 	movhi	r2,1
   1644c:	2085883a 	add	r2,r4,r2
   16450:	10991617 	ldw	r2,25688(r2)
   16454:	1000683a 	jmp	r2
   16458:	000164a0 	cmpeqi	zero,zero,1426
   1645c:	000164a0 	cmpeqi	zero,zero,1426
   16460:	00016498 	cmpnei	zero,zero,1426
   16464:	00016498 	cmpnei	zero,zero,1426
   16468:	00016498 	cmpnei	zero,zero,1426
   1646c:	000164a0 	cmpeqi	zero,zero,1426
   16470:	00016498 	cmpnei	zero,zero,1426
   16474:	00016498 	cmpnei	zero,zero,1426
   16478:	000164a0 	cmpeqi	zero,zero,1426
   1647c:	000164a0 	cmpeqi	zero,zero,1426
   16480:	00016498 	cmpnei	zero,zero,1426
   16484:	000164a0 	cmpeqi	zero,zero,1426
   16488:	00016498 	cmpnei	zero,zero,1426
   1648c:	00016498 	cmpnei	zero,zero,1426
   16490:	00016498 	cmpnei	zero,zero,1426
   16494:	000164a0 	cmpeqi	zero,zero,1426
   16498:	0005883a 	mov	r2,zero
   1649c:	f800283a 	ret
   164a0:	00800044 	movi	r2,1
   164a4:	f800283a 	ret

000164a8 <alt_open_fd.constprop.0>:
   164a8:	defffe04 	addi	sp,sp,-8
   164ac:	dc000015 	stw	r16,0(sp)
   164b0:	2021883a 	mov	r16,r4
   164b4:	2809883a 	mov	r4,r5
   164b8:	300b883a 	mov	r5,r6
   164bc:	01807fc4 	movi	r6,511
   164c0:	dfc00115 	stw	ra,4(sp)
   164c4:	00165840 	call	16584 <open>
   164c8:	10001116 	blt	r2,zero,16510 <alt_open_fd.constprop.0+0x68>
   164cc:	1009883a 	mov	r4,r2
   164d0:	1004907a 	slli	r2,r2,1
   164d4:	00c00074 	movhi	r3,1
   164d8:	18ddec04 	addi	r3,r3,30640
   164dc:	1105883a 	add	r2,r2,r4
   164e0:	100490ba 	slli	r2,r2,2
   164e4:	1887883a 	add	r3,r3,r2
   164e8:	18800017 	ldw	r2,0(r3)
   164ec:	80800015 	stw	r2,0(r16)
   164f0:	18800117 	ldw	r2,4(r3)
   164f4:	80800115 	stw	r2,4(r16)
   164f8:	18800217 	ldw	r2,8(r3)
   164fc:	80800215 	stw	r2,8(r16)
   16500:	dfc00117 	ldw	ra,4(sp)
   16504:	dc000017 	ldw	r16,0(sp)
   16508:	dec00204 	addi	sp,sp,8
   1650c:	00166e01 	jmpi	166e0 <alt_release_fd>
   16510:	dfc00117 	ldw	ra,4(sp)
   16514:	dc000017 	ldw	r16,0(sp)
   16518:	dec00204 	addi	sp,sp,8
   1651c:	f800283a 	ret

00016520 <alt_io_redirect>:
   16520:	defffd04 	addi	sp,sp,-12
   16524:	dc400115 	stw	r17,4(sp)
   16528:	2823883a 	mov	r17,r5
   1652c:	200b883a 	mov	r5,r4
   16530:	01000074 	movhi	r4,1
   16534:	dc000015 	stw	r16,0(sp)
   16538:	211def04 	addi	r4,r4,30652
   1653c:	3021883a 	mov	r16,r6
   16540:	01800044 	movi	r6,1
   16544:	dfc00215 	stw	ra,8(sp)
   16548:	00164a80 	call	164a8 <alt_open_fd.constprop.0>
   1654c:	01000074 	movhi	r4,1
   16550:	880b883a 	mov	r5,r17
   16554:	000d883a 	mov	r6,zero
   16558:	211dec04 	addi	r4,r4,30640
   1655c:	00164a80 	call	164a8 <alt_open_fd.constprop.0>
   16560:	01000074 	movhi	r4,1
   16564:	01800044 	movi	r6,1
   16568:	800b883a 	mov	r5,r16
   1656c:	211df204 	addi	r4,r4,30664
   16570:	dfc00217 	ldw	ra,8(sp)
   16574:	dc400117 	ldw	r17,4(sp)
   16578:	dc000017 	ldw	r16,0(sp)
   1657c:	dec00304 	addi	sp,sp,12
   16580:	00164a81 	jmpi	164a8 <alt_open_fd.constprop.0>

00016584 <open>:
   16584:	defff904 	addi	sp,sp,-28
   16588:	dc800215 	stw	r18,8(sp)
   1658c:	2825883a 	mov	r18,r5
   16590:	d1609c04 	addi	r5,gp,-32144
   16594:	dcc00315 	stw	r19,12(sp)
   16598:	dc400115 	stw	r17,4(sp)
   1659c:	dfc00615 	stw	ra,24(sp)
   165a0:	dd400515 	stw	r21,20(sp)
   165a4:	dd000415 	stw	r20,16(sp)
   165a8:	dc000015 	stw	r16,0(sp)
   165ac:	2023883a 	mov	r17,r4
   165b0:	3027883a 	mov	r19,r6
   165b4:	00167fc0 	call	167fc <alt_find_dev>
   165b8:	10003b1e 	bne	r2,zero,166a8 <open+0x124>
   165bc:	8809883a 	mov	r4,r17
   165c0:	001686c0 	call	1686c <alt_find_file>
   165c4:	1029883a 	mov	r20,r2
   165c8:	10003c26 	beq	r2,zero,166bc <open+0x138>
   165cc:	05400044 	movi	r21,1
   165d0:	a009883a 	mov	r4,r20
   165d4:	00169080 	call	16908 <alt_get_fd>
   165d8:	1021883a 	mov	r16,r2
   165dc:	10003a16 	blt	r2,zero,166c8 <open+0x144>
   165e0:	1006907a 	slli	r3,r2,1
   165e4:	01400074 	movhi	r5,1
   165e8:	295dec04 	addi	r5,r5,30640
   165ec:	1887883a 	add	r3,r3,r2
   165f0:	180690ba 	slli	r3,r3,2
   165f4:	00900034 	movhi	r2,16384
   165f8:	10bfffc4 	addi	r2,r2,-1
   165fc:	1949883a 	add	r4,r3,r5
   16600:	9084703a 	and	r2,r18,r2
   16604:	a8002b1e 	bne	r21,zero,166b4 <open+0x130>
   16608:	21c00017 	ldw	r7,0(r4)
   1660c:	d1a09b17 	ldw	r6,-32148(gp)
   16610:	10900034 	orhi	r2,r2,16384
   16614:	20800215 	stw	r2,8(r4)
   16618:	2807883a 	mov	r3,r5
   1661c:	0005883a 	mov	r2,zero
   16620:	19400017 	ldw	r5,0(r3)
   16624:	29c0031e 	bne	r5,r7,16634 <open+0xb0>
   16628:	19400217 	ldw	r5,8(r3)
   1662c:	2800010e 	bge	r5,zero,16634 <open+0xb0>
   16630:	20c0271e 	bne	r4,r3,166d0 <open+0x14c>
   16634:	10800044 	addi	r2,r2,1
   16638:	18c00304 	addi	r3,r3,12
   1663c:	30bff82e 	bgeu	r6,r2,16620 <open+0x9c>
   16640:	a0800317 	ldw	r2,12(r20)
   16644:	10000e26 	beq	r2,zero,16680 <open+0xfc>
   16648:	880b883a 	mov	r5,r17
   1664c:	980f883a 	mov	r7,r19
   16650:	900d883a 	mov	r6,r18
   16654:	103ee83a 	callr	r2
   16658:	1023883a 	mov	r17,r2
   1665c:	1000080e 	bge	r2,zero,16680 <open+0xfc>
   16660:	8009883a 	mov	r4,r16
   16664:	00166e00 	call	166e0 <alt_release_fd>
   16668:	d0a0a017 	ldw	r2,-32128(gp)
   1666c:	10001a26 	beq	r2,zero,166d8 <open+0x154>
   16670:	103ee83a 	callr	r2
   16674:	0463c83a 	sub	r17,zero,r17
   16678:	14400015 	stw	r17,0(r2)
   1667c:	043fffc4 	movi	r16,-1
   16680:	8005883a 	mov	r2,r16
   16684:	dfc00617 	ldw	ra,24(sp)
   16688:	dd400517 	ldw	r21,20(sp)
   1668c:	dd000417 	ldw	r20,16(sp)
   16690:	dcc00317 	ldw	r19,12(sp)
   16694:	dc800217 	ldw	r18,8(sp)
   16698:	dc400117 	ldw	r17,4(sp)
   1669c:	dc000017 	ldw	r16,0(sp)
   166a0:	dec00704 	addi	sp,sp,28
   166a4:	f800283a 	ret
   166a8:	1029883a 	mov	r20,r2
   166ac:	002b883a 	mov	r21,zero
   166b0:	003fc706 	br	165d0 <open+0x4c>
   166b4:	20800215 	stw	r2,8(r4)
   166b8:	003fe106 	br	16640 <open+0xbc>
   166bc:	047ffb44 	movi	r17,-19
   166c0:	043fffc4 	movi	r16,-1
   166c4:	003fe606 	br	16660 <open+0xdc>
   166c8:	1023883a 	mov	r17,r2
   166cc:	003fe406 	br	16660 <open+0xdc>
   166d0:	047ffcc4 	movi	r17,-13
   166d4:	003fe206 	br	16660 <open+0xdc>
   166d8:	d0a20904 	addi	r2,gp,-30684
   166dc:	003fe506 	br	16674 <open+0xf0>

000166e0 <alt_release_fd>:
   166e0:	208000d0 	cmplti	r2,r4,3
   166e4:	1000081e 	bne	r2,zero,16708 <alt_release_fd+0x28>
   166e8:	2006907a 	slli	r3,r4,1
   166ec:	00800074 	movhi	r2,1
   166f0:	109dec04 	addi	r2,r2,30640
   166f4:	1909883a 	add	r4,r3,r4
   166f8:	200890ba 	slli	r4,r4,2
   166fc:	1105883a 	add	r2,r2,r4
   16700:	10000215 	stw	zero,8(r2)
   16704:	10000015 	stw	zero,0(r2)
   16708:	f800283a 	ret

0001670c <alt_alarm_stop>:
   1670c:	0007303a 	rdctl	r3,status
   16710:	00bfff84 	movi	r2,-2
   16714:	1884703a 	and	r2,r3,r2
   16718:	1001703a 	wrctl	status,r2
   1671c:	21400017 	ldw	r5,0(r4)
   16720:	20800117 	ldw	r2,4(r4)
   16724:	28800115 	stw	r2,4(r5)
   16728:	11400015 	stw	r5,0(r2)
   1672c:	21000115 	stw	r4,4(r4)
   16730:	21000015 	stw	r4,0(r4)
   16734:	1801703a 	wrctl	status,r3
   16738:	f800283a 	ret

0001673c <alt_tick>:
   1673c:	d0a20f17 	ldw	r2,-30660(gp)
   16740:	defffb04 	addi	sp,sp,-20
   16744:	dc000015 	stw	r16,0(sp)
   16748:	d420a117 	ldw	r16,-32124(gp)
   1674c:	10800044 	addi	r2,r2,1
   16750:	dc800215 	stw	r18,8(sp)
   16754:	dc400115 	stw	r17,4(sp)
   16758:	dfc00415 	stw	ra,16(sp)
   1675c:	dcc00315 	stw	r19,12(sp)
   16760:	d0a20f15 	stw	r2,-30660(gp)
   16764:	d460a104 	addi	r17,gp,-32124
   16768:	04800044 	movi	r18,1
   1676c:	8440071e 	bne	r16,r17,1678c <alt_tick+0x50>
   16770:	dfc00417 	ldw	ra,16(sp)
   16774:	dcc00317 	ldw	r19,12(sp)
   16778:	dc800217 	ldw	r18,8(sp)
   1677c:	dc400117 	ldw	r17,4(sp)
   16780:	dc000017 	ldw	r16,0(sp)
   16784:	dec00504 	addi	sp,sp,20
   16788:	f800283a 	ret
   1678c:	80800403 	ldbu	r2,16(r16)
   16790:	84c00017 	ldw	r19,0(r16)
   16794:	10000326 	beq	r2,zero,167a4 <alt_tick+0x68>
   16798:	d0a20f17 	ldw	r2,-30660(gp)
   1679c:	1000011e 	bne	r2,zero,167a4 <alt_tick+0x68>
   167a0:	80000405 	stb	zero,16(r16)
   167a4:	d0e20f17 	ldw	r3,-30660(gp)
   167a8:	80800217 	ldw	r2,8(r16)
   167ac:	18800836 	bltu	r3,r2,167d0 <alt_tick+0x94>
   167b0:	80800403 	ldbu	r2,16(r16)
   167b4:	1000061e 	bne	r2,zero,167d0 <alt_tick+0x94>
   167b8:	80800317 	ldw	r2,12(r16)
   167bc:	81000517 	ldw	r4,20(r16)
   167c0:	103ee83a 	callr	r2
   167c4:	1000041e 	bne	r2,zero,167d8 <alt_tick+0x9c>
   167c8:	8009883a 	mov	r4,r16
   167cc:	001670c0 	call	1670c <alt_alarm_stop>
   167d0:	9821883a 	mov	r16,r19
   167d4:	003fe506 	br	1676c <alt_tick+0x30>
   167d8:	80c00217 	ldw	r3,8(r16)
   167dc:	10c5883a 	add	r2,r2,r3
   167e0:	d0e20f17 	ldw	r3,-30660(gp)
   167e4:	80800215 	stw	r2,8(r16)
   167e8:	10fff92e 	bgeu	r2,r3,167d0 <alt_tick+0x94>
   167ec:	84800405 	stb	r18,16(r16)
   167f0:	003ff706 	br	167d0 <alt_tick+0x94>

000167f4 <altera_nios2_gen2_irq_init>:
   167f4:	000170fa 	wrctl	ienable,zero
   167f8:	f800283a 	ret

000167fc <alt_find_dev>:
   167fc:	defffb04 	addi	sp,sp,-20
   16800:	dcc00315 	stw	r19,12(sp)
   16804:	dc800215 	stw	r18,8(sp)
   16808:	dc400115 	stw	r17,4(sp)
   1680c:	dc000015 	stw	r16,0(sp)
   16810:	dfc00415 	stw	ra,16(sp)
   16814:	2c000017 	ldw	r16,0(r5)
   16818:	2027883a 	mov	r19,r4
   1681c:	2823883a 	mov	r17,r5
   16820:	0015adc0 	call	15adc <strlen>
   16824:	14800044 	addi	r18,r2,1
   16828:	8440091e 	bne	r16,r17,16850 <alt_find_dev+0x54>
   1682c:	0021883a 	mov	r16,zero
   16830:	8005883a 	mov	r2,r16
   16834:	dfc00417 	ldw	ra,16(sp)
   16838:	dcc00317 	ldw	r19,12(sp)
   1683c:	dc800217 	ldw	r18,8(sp)
   16840:	dc400117 	ldw	r17,4(sp)
   16844:	dc000017 	ldw	r16,0(sp)
   16848:	dec00504 	addi	sp,sp,20
   1684c:	f800283a 	ret
   16850:	81000217 	ldw	r4,8(r16)
   16854:	900d883a 	mov	r6,r18
   16858:	980b883a 	mov	r5,r19
   1685c:	00169900 	call	16990 <memcmp>
   16860:	103ff326 	beq	r2,zero,16830 <alt_find_dev+0x34>
   16864:	84000017 	ldw	r16,0(r16)
   16868:	003fef06 	br	16828 <alt_find_dev+0x2c>

0001686c <alt_find_file>:
   1686c:	defffb04 	addi	sp,sp,-20
   16870:	dc000015 	stw	r16,0(sp)
   16874:	d4209e17 	ldw	r16,-32136(gp)
   16878:	dcc00315 	stw	r19,12(sp)
   1687c:	dc400115 	stw	r17,4(sp)
   16880:	dfc00415 	stw	ra,16(sp)
   16884:	dc800215 	stw	r18,8(sp)
   16888:	2023883a 	mov	r17,r4
   1688c:	d4e09e04 	addi	r19,gp,-32136
   16890:	84c0091e 	bne	r16,r19,168b8 <alt_find_file+0x4c>
   16894:	0021883a 	mov	r16,zero
   16898:	8005883a 	mov	r2,r16
   1689c:	dfc00417 	ldw	ra,16(sp)
   168a0:	dcc00317 	ldw	r19,12(sp)
   168a4:	dc800217 	ldw	r18,8(sp)
   168a8:	dc400117 	ldw	r17,4(sp)
   168ac:	dc000017 	ldw	r16,0(sp)
   168b0:	dec00504 	addi	sp,sp,20
   168b4:	f800283a 	ret
   168b8:	84800217 	ldw	r18,8(r16)
   168bc:	9009883a 	mov	r4,r18
   168c0:	0015adc0 	call	15adc <strlen>
   168c4:	100d883a 	mov	r6,r2
   168c8:	9085883a 	add	r2,r18,r2
   168cc:	10bfffc7 	ldb	r2,-1(r2)
   168d0:	10800bd8 	cmpnei	r2,r2,47
   168d4:	1000011e 	bne	r2,zero,168dc <alt_find_file+0x70>
   168d8:	31bfffc4 	addi	r6,r6,-1
   168dc:	8985883a 	add	r2,r17,r6
   168e0:	10800007 	ldb	r2,0(r2)
   168e4:	10c00be0 	cmpeqi	r3,r2,47
   168e8:	1800011e 	bne	r3,zero,168f0 <alt_find_file+0x84>
   168ec:	1000041e 	bne	r2,zero,16900 <alt_find_file+0x94>
   168f0:	880b883a 	mov	r5,r17
   168f4:	9009883a 	mov	r4,r18
   168f8:	00169900 	call	16990 <memcmp>
   168fc:	103fe626 	beq	r2,zero,16898 <alt_find_file+0x2c>
   16900:	84000017 	ldw	r16,0(r16)
   16904:	003fe206 	br	16890 <alt_find_file+0x24>

00016908 <alt_get_fd>:
   16908:	00c00074 	movhi	r3,1
   1690c:	18ddec04 	addi	r3,r3,30640
   16910:	0005883a 	mov	r2,zero
   16914:	19400017 	ldw	r5,0(r3)
   16918:	28000a1e 	bne	r5,zero,16944 <alt_get_fd+0x3c>
   1691c:	1006907a 	slli	r3,r2,1
   16920:	01400074 	movhi	r5,1
   16924:	1887883a 	add	r3,r3,r2
   16928:	180690ba 	slli	r3,r3,2
   1692c:	194b883a 	add	r5,r3,r5
   16930:	d0e09b17 	ldw	r3,-32148(gp)
   16934:	291dec15 	stw	r4,30640(r5)
   16938:	1880070e 	bge	r3,r2,16958 <alt_get_fd+0x50>
   1693c:	d0a09b15 	stw	r2,-32148(gp)
   16940:	f800283a 	ret
   16944:	10800044 	addi	r2,r2,1
   16948:	11400818 	cmpnei	r5,r2,32
   1694c:	18c00304 	addi	r3,r3,12
   16950:	283ff01e 	bne	r5,zero,16914 <alt_get_fd+0xc>
   16954:	00bffa04 	movi	r2,-24
   16958:	f800283a 	ret

0001695c <atexit>:
 */

int
atexit (void (*fn) (void))
{
  return __register_exitproc (__et_atexit, fn, NULL, NULL);
   1695c:	200b883a 	mov	r5,r4
   16960:	000f883a 	mov	r7,zero
   16964:	000d883a 	mov	r6,zero
   16968:	0009883a 	mov	r4,zero
   1696c:	00169c01 	jmpi	169c0 <__register_exitproc>

00016970 <exit>:
 * Exit, flushing stdio buffers if necessary.
 */

void
exit (int code)
{
   16970:	defffe04 	addi	sp,sp,-8
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs (int, void *) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
   16974:	000b883a 	mov	r5,zero
{
   16978:	dc000015 	stw	r16,0(sp)
   1697c:	dfc00115 	stw	ra,4(sp)
   16980:	2021883a 	mov	r16,r4
    __call_exitprocs (code, NULL);
   16984:	0016ad00 	call	16ad0 <__call_exitprocs>
#ifndef WANT_SMALL_STDIO        /* IntelSpecific */
  if (_GLOBAL_REENT->__cleanup)
    (*_GLOBAL_REENT->__cleanup) (_GLOBAL_REENT);
#endif                          /* IntelSpecific */
  _exit (code);
   16988:	8009883a 	mov	r4,r16
   1698c:	0015be80 	call	15be8 <_exit>

00016990 <memcmp>:
{
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  unsigned char *s1 = (unsigned char *) m1;
  unsigned char *s2 = (unsigned char *) m2;

  while (n--)
   16990:	0007883a 	mov	r3,zero
   16994:	30c0021e 	bne	r6,r3,169a0 <memcmp+0x10>
	  return *s1 - *s2;
	}
      s1++;
      s2++;
    }
  return 0;
   16998:	0005883a 	mov	r2,zero
      s2++;
    }

  return 0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   1699c:	f800283a 	ret
      if (*s1 != *s2)
   169a0:	20c5883a 	add	r2,r4,r3
   169a4:	18c00044 	addi	r3,r3,1
   169a8:	28cf883a 	add	r7,r5,r3
   169ac:	10800003 	ldbu	r2,0(r2)
   169b0:	39ffffc3 	ldbu	r7,-1(r7)
   169b4:	11fff726 	beq	r2,r7,16994 <memcmp+0x4>
	  return *s1 - *s2;
   169b8:	11c5c83a 	sub	r2,r2,r7
   169bc:	f800283a 	ret

000169c0 <__register_exitproc>:

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

  p = _GLOBAL_ATEXIT;
   169c0:	d0a09717 	ldw	r2,-32164(gp)
{
   169c4:	defff904 	addi	sp,sp,-28
   169c8:	dc000015 	stw	r16,0(sp)
  p = _GLOBAL_ATEXIT;
   169cc:	14000d17 	ldw	r16,52(r2)
{
   169d0:	dd400515 	stw	r21,20(sp)
   169d4:	dd000415 	stw	r20,16(sp)
   169d8:	dcc00315 	stw	r19,12(sp)
   169dc:	dc800215 	stw	r18,8(sp)
   169e0:	dfc00615 	stw	ra,24(sp)
   169e4:	dc400115 	stw	r17,4(sp)
   169e8:	2025883a 	mov	r18,r4
   169ec:	2827883a 	mov	r19,r5
   169f0:	302b883a 	mov	r21,r6
   169f4:	3829883a 	mov	r20,r7
  if (p == NULL)
   169f8:	8000061e 	bne	r16,zero,16a14 <__register_exitproc+0x54>
    {
      _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
   169fc:	14000e04 	addi	r16,r2,56
   16a00:	14000d15 	stw	r16,52(r2)
#ifdef _REENT_SMALL
      extern struct _on_exit_args * const __on_exit_args _ATTRIBUTE ((weak));
      if (&__on_exit_args != NULL)
   16a04:	d0c1aa04 	addi	r3,gp,1704
   16a08:	18000226 	beq	r3,zero,16a14 <__register_exitproc+0x54>
	p->_on_exit_args_ptr = __on_exit_args;
   16a0c:	d0c1aa17 	ldw	r3,1704(gp)
   16a10:	10c03015 	stw	r3,192(r2)
#endif	/* def _REENT_SMALL */
    }
  if (p->_ind >= _ATEXIT_SIZE)
   16a14:	84400117 	ldw	r17,4(r16)
   16a18:	88800810 	cmplti	r2,r17,32
   16a1c:	10000a1e 	bne	r2,zero,16a48 <__register_exitproc+0x88>
    {
#if !defined (_ATEXIT_DYNAMIC_ALLOC) || !defined (MALLOC_PROVIDED)
#ifndef __SINGLE_THREAD__
      __lock_release_recursive(__atexit_recursive_mutex);
#endif
      return -1;
   16a20:	00bfffc4 	movi	r2,-1
  p->_fns[p->_ind++] = fn;
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif
  return 0;
}
   16a24:	dfc00617 	ldw	ra,24(sp)
   16a28:	dd400517 	ldw	r21,20(sp)
   16a2c:	dd000417 	ldw	r20,16(sp)
   16a30:	dcc00317 	ldw	r19,12(sp)
   16a34:	dc800217 	ldw	r18,8(sp)
   16a38:	dc400117 	ldw	r17,4(sp)
   16a3c:	dc000017 	ldw	r16,0(sp)
   16a40:	dec00704 	addi	sp,sp,28
   16a44:	f800283a 	ret
  if (type != __et_atexit)
   16a48:	90001926 	beq	r18,zero,16ab0 <__register_exitproc+0xf0>
      args = p->_on_exit_args_ptr;
   16a4c:	80802217 	ldw	r2,136(r16)
      if (args == NULL)
   16a50:	1000091e 	bne	r2,zero,16a78 <__register_exitproc+0xb8>
	  if (malloc)
   16a54:	00800074 	movhi	r2,1
   16a58:	10952104 	addi	r2,r2,21636
   16a5c:	103ff026 	beq	r2,zero,16a20 <__register_exitproc+0x60>
	    args = malloc (sizeof * p->_on_exit_args_ptr);
   16a60:	01004204 	movi	r4,264
   16a64:	00154840 	call	15484 <malloc>
	  if (args == NULL)
   16a68:	103fed26 	beq	r2,zero,16a20 <__register_exitproc+0x60>
	  args->_fntypes = 0;
   16a6c:	10004015 	stw	zero,256(r2)
	  args->_is_cxa = 0;
   16a70:	10004115 	stw	zero,260(r2)
	  p->_on_exit_args_ptr = args;
   16a74:	80802215 	stw	r2,136(r16)
      args->_fnargs[p->_ind] = arg;
   16a78:	880890ba 	slli	r4,r17,2
      args->_fntypes |= (1 << p->_ind);
   16a7c:	00c00044 	movi	r3,1
   16a80:	1c46983a 	sll	r3,r3,r17
   16a84:	1109883a 	add	r4,r2,r4
      args->_fnargs[p->_ind] = arg;
   16a88:	25400015 	stw	r21,0(r4)
      args->_fntypes |= (1 << p->_ind);
   16a8c:	11404017 	ldw	r5,256(r2)
      if (type == __et_cxa)
   16a90:	94800098 	cmpnei	r18,r18,2
      args->_fntypes |= (1 << p->_ind);
   16a94:	28cab03a 	or	r5,r5,r3
   16a98:	11404015 	stw	r5,256(r2)
      args->_dso_handle[p->_ind] = d;
   16a9c:	25002015 	stw	r20,128(r4)
      if (type == __et_cxa)
   16aa0:	9000031e 	bne	r18,zero,16ab0 <__register_exitproc+0xf0>
	args->_is_cxa |= (1 << p->_ind);
   16aa4:	11004117 	ldw	r4,260(r2)
   16aa8:	20c6b03a 	or	r3,r4,r3
   16aac:	10c04115 	stw	r3,260(r2)
  p->_fns[p->_ind++] = fn;
   16ab0:	88800044 	addi	r2,r17,1
   16ab4:	8c400084 	addi	r17,r17,2
   16ab8:	882290ba 	slli	r17,r17,2
   16abc:	80800115 	stw	r2,4(r16)
  return 0;
   16ac0:	0005883a 	mov	r2,zero
  p->_fns[p->_ind++] = fn;
   16ac4:	8461883a 	add	r16,r16,r17
   16ac8:	84c00015 	stw	r19,0(r16)
  return 0;
   16acc:	003fd506 	br	16a24 <__register_exitproc+0x64>

00016ad0 <__call_exitprocs>:
 * otherwise only the handlers from that DSO are called.
 */

void 
__call_exitprocs (int code, void *d)
{
   16ad0:	defff604 	addi	sp,sp,-40
   16ad4:	dd800615 	stw	r22,24(sp)
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

 restart:

  p = _GLOBAL_ATEXIT;
   16ad8:	d5a09717 	ldw	r22,-32164(gp)
{
   16adc:	dd400515 	stw	r21,20(sp)
   16ae0:	dd000415 	stw	r20,16(sp)
   16ae4:	dfc00915 	stw	ra,36(sp)
   16ae8:	df000815 	stw	fp,32(sp)
   16aec:	ddc00715 	stw	r23,28(sp)
   16af0:	dcc00315 	stw	r19,12(sp)
   16af4:	dc800215 	stw	r18,8(sp)
   16af8:	dc400115 	stw	r17,4(sp)
   16afc:	dc000015 	stw	r16,0(sp)
   16b00:	202b883a 	mov	r21,r4
   16b04:	2829883a 	mov	r20,r5
  p = _GLOBAL_ATEXIT;
   16b08:	b4400d17 	ldw	r17,52(r22)
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   16b0c:	88000726 	beq	r17,zero,16b2c <__call_exitprocs+0x5c>
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   16b10:	8c000117 	ldw	r16,4(r17)
      args = p->_on_exit_args_ptr;
   16b14:	8cc02217 	ldw	r19,136(r17)
      for (n = p->_ind - 1; n >= 0; n--)
   16b18:	84bfffc4 	addi	r18,r16,-1
   16b1c:	802090ba 	slli	r16,r16,2
   16b20:	9c2f883a 	add	r23,r19,r16
   16b24:	8c21883a 	add	r16,r17,r16
   16b28:	90000c0e 	bge	r18,zero,16b5c <__call_exitprocs+0x8c>
    }
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif

}
   16b2c:	dfc00917 	ldw	ra,36(sp)
   16b30:	df000817 	ldw	fp,32(sp)
   16b34:	ddc00717 	ldw	r23,28(sp)
   16b38:	dd800617 	ldw	r22,24(sp)
   16b3c:	dd400517 	ldw	r21,20(sp)
   16b40:	dd000417 	ldw	r20,16(sp)
   16b44:	dcc00317 	ldw	r19,12(sp)
   16b48:	dc800217 	ldw	r18,8(sp)
   16b4c:	dc400117 	ldw	r17,4(sp)
   16b50:	dc000017 	ldw	r16,0(sp)
   16b54:	dec00a04 	addi	sp,sp,40
   16b58:	f800283a 	ret
	  if (d && (!args || args->_dso_handle[n] != d))
   16b5c:	a0000726 	beq	r20,zero,16b7c <__call_exitprocs+0xac>
   16b60:	9800041e 	bne	r19,zero,16b74 <__call_exitprocs+0xa4>
      for (n = p->_ind - 1; n >= 0; n--)
   16b64:	94bfffc4 	addi	r18,r18,-1
   16b68:	bdffff04 	addi	r23,r23,-4
   16b6c:	843fff04 	addi	r16,r16,-4
   16b70:	003fed06 	br	16b28 <__call_exitprocs+0x58>
	  if (d && (!args || args->_dso_handle[n] != d))
   16b74:	b8c01f17 	ldw	r3,124(r23)
   16b78:	1d3ffa1e 	bne	r3,r20,16b64 <__call_exitprocs+0x94>
	  if (n == p->_ind - 1)
   16b7c:	89000117 	ldw	r4,4(r17)
	  fn = p->_fns[n];
   16b80:	80c00117 	ldw	r3,4(r16)
	  if (n == p->_ind - 1)
   16b84:	213fffc4 	addi	r4,r4,-1
   16b88:	24800f1e 	bne	r4,r18,16bc8 <__call_exitprocs+0xf8>
	    p->_ind--;
   16b8c:	8c800115 	stw	r18,4(r17)
	  if (!fn)
   16b90:	183ff426 	beq	r3,zero,16b64 <__call_exitprocs+0x94>
	  ind = p->_ind;
   16b94:	8f000117 	ldw	fp,4(r17)
	  if (!args || (args->_fntypes & i) == 0)
   16b98:	98000526 	beq	r19,zero,16bb0 <__call_exitprocs+0xe0>
	  i = 1 << n;
   16b9c:	00800044 	movi	r2,1
   16ba0:	148c983a 	sll	r6,r2,r18
	  if (!args || (args->_fntypes & i) == 0)
   16ba4:	99004017 	ldw	r4,256(r19)
   16ba8:	3108703a 	and	r4,r6,r4
   16bac:	2000081e 	bne	r4,zero,16bd0 <__call_exitprocs+0x100>
	    fn ();
   16bb0:	183ee83a 	callr	r3
	  if (ind != p->_ind || *lastp != p)
   16bb4:	89000117 	ldw	r4,4(r17)
   16bb8:	b0c00d17 	ldw	r3,52(r22)
   16bbc:	273fd21e 	bne	r4,fp,16b08 <__call_exitprocs+0x38>
   16bc0:	88ffe826 	beq	r17,r3,16b64 <__call_exitprocs+0x94>
   16bc4:	003fd006 	br	16b08 <__call_exitprocs+0x38>
	    p->_fns[n] = NULL;
   16bc8:	80000115 	stw	zero,4(r16)
   16bcc:	003ff006 	br	16b90 <__call_exitprocs+0xc0>
	  else if ((args->_is_cxa & i) == 0)
   16bd0:	99404117 	ldw	r5,260(r19)
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   16bd4:	b93fff17 	ldw	r4,-4(r23)
	  else if ((args->_is_cxa & i) == 0)
   16bd8:	314c703a 	and	r6,r6,r5
   16bdc:	3000041e 	bne	r6,zero,16bf0 <__call_exitprocs+0x120>
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   16be0:	200b883a 	mov	r5,r4
   16be4:	a809883a 	mov	r4,r21
   16be8:	183ee83a 	callr	r3
   16bec:	003ff106 	br	16bb4 <__call_exitprocs+0xe4>
	    (*((void (*)(void *)) fn))(args->_fnargs[n]);
   16bf0:	183ee83a 	callr	r3
   16bf4:	003fef06 	br	16bb4 <__call_exitprocs+0xe4>
   16bf8:	0201ffff 	0x201ffff
   16bfc:	ffff0000 	call	ffff000 <_gp+0xffdf6a8>
   16c00:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   16c04:	0001ffff 	0x1ffff
   16c08:	0201ffff 	0x201ffff
   16c0c:	ffff0000 	call	ffff000 <_gp+0xffdf6a8>
   16c10:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   16c14:	0201ffff 	0x201ffff
   16c18:	883a0000 	call	883a000 <_gp+0x881a6a8>
   16c1c:	010d00ff 	0x10d00ff
   16c20:	01010002 	0x1010002
	...
   16c2c:	010d00ff 	0x10d00ff
   16c30:	01010004 	movi	r4,1024
   16c34:	00000100 	call	10 <__alt_mem_onchip_mem-0xfff0>
   16c38:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   16c3c:	011100ff 	0x11100ff
   16c40:	01010004 	movi	r4,1024
   16c44:	7f000105 	stb	fp,4(r15)
   16c48:	007d0000 	call	7d000 <_gp+0x5d6a8>
   16c4c:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   16c50:	01883a00 	call	1883a0 <_gp+0x168a48>
   16c54:	00011c94 	movui	zero,1138
   16c58:	0001218c 	andi	zero,zero,1158
   16c5c:	000145fc 	xorhi	zero,zero,1303
   16c60:	00012198 	cmpnei	zero,zero,1158
