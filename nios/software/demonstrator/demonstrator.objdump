
demonstrator.elf:     file format elf32-littlenios2
demonstrator.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x000091a0 memsz 0x000091a0 flags r-x
    LOAD off    0x0000a1c0 vaddr 0x000191c0 paddr 0x00019748 align 2**12
         filesz 0x00000588 memsz 0x00000588 flags rw-
    LOAD off    0x0000acd0 vaddr 0x00019cd0 paddr 0x00019cd0 align 2**12
         filesz 0x00000000 memsz 0x000002d4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000854c  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000af4  000186cc  000186cc  000096cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000588  000191c0  00019748  0000a1c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002d4  00019cd0  00019cd0  0000acd0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  00019fa4  00019fa4  0000a748  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0000a748  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000c18  00000000  00000000  0000a778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   000235ee  00000000  00000000  0000b390  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c229  00000000  00000000  0002e97e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0001156d  00000000  00000000  0003aba7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00001e64  00000000  00000000  0004c114  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000ac9a  00000000  00000000  0004df78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000f647  00000000  00000000  00058c12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000040  00000000  00000000  0006825c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002668  00000000  00000000  000682a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  00071fff  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00072002  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00072005  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00072006  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00072007  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007200b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007200f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00072013  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007201c  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00072025  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000013  00000000  00000000  0007202e  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002a  00000000  00000000  00072041  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
000186cc l    d  .rodata	00000000 .rodata
000191c0 l    d  .rwdata	00000000 .rwdata
00019cd0 l    d  .bss	00000000 .bss
00019fa4 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/gteho/Repositories/EMSYS-LAB/nios/software/demonstrator_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 xxinteg.cpp
00000000 l    df *ABS*	00000000 PositionControllerPan.cpp
00010248 l     F .text	000000f0 .LTHUNK2
00010588 l     F .text	000004e4 _ZN21PositionControllerPanC4Ev
00010a84 l     F .text	00000198 _ZN21PositionControllerPanD4Ev
00010c28 l     F .text	0000000c .LTHUNK0
00010c4c l     F .text	0000002c .LTHUNK1
00000000 l    df *ABS*	00000000 PositionControllerTilt.cpp
00010ecc l     F .text	00000104 .LTHUNK2
00011218 l     F .text	000004e4 _ZN22PositionControllerTiltC4Ev
00011714 l     F .text	00000198 _ZN22PositionControllerTiltD4Ev
000118b8 l     F .text	0000000c .LTHUNK0
000118dc l     F .text	0000002c .LTHUNK1
00000000 l    df *ABS*	00000000 main.cpp
00011f18 l     F .text	00000198 _GLOBAL__sub_I_uart
000120b0 l     F .text	0000002c _GLOBAL__sub_D_uart
00000000 l    df *ABS*	00000000 motor.cpp
00000000 l    df *ABS*	00000000 uart.cpp
00012648 l     F .text	0000000c _GLOBAL__sub_I__ZN6Serial4UART10uart_readyE
00012654 l     F .text	0000000c _GLOBAL__sub_D__ZN6Serial4UART10uart_readyE
00000000 l    df *ABS*	00000000 timer.cpp
000127e0 l     F .text	0000000c _GLOBAL__sub_I__ZN5Timer17timer_isr_contextE
000127ec l     F .text	0000000c _GLOBAL__sub_D__ZN5Timer17timer_isr_contextE
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 del_opv.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
00012aa4 l     F .text	00000090 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
00012b34 l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
00012d1c l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
00012d8c l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00012eb8 l     F .text	00000110 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
0001393c l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 function_type_info.cc
00000000 l    df *ABS*	00000000 new_opv.cc
00000000 l    df *ABS*	00000000 pointer_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 functional.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
000149d4 l     F .text	000000cc _ZN12_GLOBAL__N_14pool4freeEPv.constprop.0
00019e94 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
00014aa0 l     F .text	00000090 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.0
00014c50 l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
00019cf4 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 fundamental_type_info.cc
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 pbase_type_info.cc
0001970c l     O .rwdata	00000008 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE3pmf
00019708 l     O .rwdata	00000004 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE2pm
00000000 l    df *ABS*	00000000 pmem_type_info.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_aux_runtime.cc
00000000 l    df *ABS*	00000000 new_handler.cc
00019cfc l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 bad_array_new.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
000168e4 l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
00019d00 l     O .bss	00000004 fc_static
000169f8 l     F .text	000000d8 _Unwind_RaiseException_Phase2
00016ad0 l     F .text	0000002c uw_install_context.constprop.0.isra.0
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 impure.c
000191c0 l     O .rwdata	000000e4 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_kill.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00019724 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
000192d0 l     O .rwdata	0000002c jtag_uart
000192a4 l     O .rwdata	0000002c uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00017a6c l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00017d70 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00017ee8 l     F .text	00000078 alt_open_fd.constprop.0
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00019d20 g     O .bss	00000004 alt_instruction_exception_handler
00010398 g     F .text	00000140 _ZN21PositionControllerPan5ResetEf
00014bb8 g     F .text	00000028 __cxa_free_exception
000123d0  w    F .text	00000024 _ZN5Plant5Motor13getSecondWordEv
00013f00 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
000187b8  w    O .rodata	00000018 _ZTI22PositionControllerTilt
00018e30  w    O .rodata	00000010 _ZTIPKDs
000138c8 g     F .text	00000014 _ZSt10unexpectedv
000123f4 g     F .text	00000098 _ZN6Serial4UART10uart_0_isrEPv
000196f0  w    O .rwdata	00000008 _ZTIw
000196d0  w    O .rwdata	00000008 _ZTIc
000178a4 g     F .text	00000060 alt_main
00019ea4 g     O .bss	00000100 alt_irq
00014eec g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
000196c8  w    O .rwdata	00000008 _ZTIa
00013b3c g     F .text	00000004 _Znaj
00010ebc  w    F .text	00000004 _ZN13Submodel20sim16CalculateDynamicEv
00010234 g     F .text	00000014 _ZN8DiscreteC2Ev
000111dc g     F .text	00000004 _ZN22PositionControllerTilt14CalculateFinalEv
00016b7c g     F .text	00000020 .hidden _Unwind_GetIPInfo
00019748 g       *ABS*	00000000 __flash_rwdata_start
00012204 g     F .text	000000d8 _ZN5Plant5MotorC2Emmmmm
00018cc0  w    O .rodata	00000010 _ZTIPy
0001956c  w    O .rwdata	00000002 _ZTSa
00018a80  w    O .rodata	00000014 _ZTVSt17bad_function_call
00013a68 g     F .text	00000084 __cxa_rethrow
00018724  w    O .rodata	00000018 _ZTS21PositionControllerPan
00010234 g     F .text	00000014 _ZN8DiscreteC1Ev
00016b14 g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
0001390c g     F .text	00000024 _ZSt14set_unexpectedPFvvE
00018d50  w    O .rodata	00000010 _ZTIPKi
00016b6c g     F .text	00000010 .hidden _Unwind_GetIP
000121d4 g     F .text	00000030 _ZN5Plant5Motor7disableEv
00019fa4 g       *ABS*	00000000 __alt_heap_start
000195ac  w    O .rwdata	00000003 _ZTSPj
00017590 g     F .text	00000044 _kill_r
0001539c g     F .text	00000010 _ZNSt9bad_allocD2Ev
00017394 g     F .text	00000078 _signal_r
000195d0  w    O .rwdata	00000003 _ZTSPx
000196d8  w    O .rwdata	00000008 _ZTIDi
00019630  w    O .rwdata	00000005 _ZTSPKDd
000195c4  w    O .rwdata	00000003 _ZTSPm
00010ec4  w    F .text	00000008 _ZN13Submodel20simD0Ev
00014c24 g     F .text	0000002c __cxa_free_dependent_exception
00013c34 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
00018958  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
00010ecc g     F .text	00000104 _ZN22PositionControllerTilt16CalculateDynamicEv
00017908 g     F .text	00000004 __malloc_unlock
00019538  w    O .rwdata	00000005 _ZTSPKDu
00018f60  w    O .rodata	00000024 _ZTVN10__cxxabiv129__pointer_to_member_type_infoE
00014eec g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
000146e8 g     F .text	00000264 _ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
00014e80 g     F .text	00000020 _ZSt18uncaught_exceptionv
00010524 g     F .text	00000004 _ZN21PositionControllerPan14CalculateInputEv
00015384 g     F .text	0000000c __cxa_deleted_virtual
00018c40  w    O .rodata	00000010 _ZTIPDn
00018844  w    O .rodata	00000010 _ZTIPFvvE
000195a8  w    O .rwdata	00000002 _ZTSj
00014ebc g     F .text	00000004 _ZNSt9exceptionD2Ev
00018904  w    O .rodata	00000024 _ZTSN10__cxxabiv119__pointer_type_infoE
00019ce8 g     O .bss	00000001 timer
00013b48 g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD1Ev
00019038  w    O .rodata	0000000c _ZTISt8bad_cast
00018b40  w    O .rodata	00000014 _ZTVSt13bad_exception
00018234 g     F .text	00000008 altera_nios2_gen2_irq_init
00019554  w    O .rwdata	00000004 _ZTSPDi
000186cc  w    O .rodata	00000014 _ZTS17IntegrationMethod
000154ac g     F .text	00000010 _ZNSt20bad_array_new_lengthD1Ev
00019518  w    O .rwdata	00000002 _ZTSb
00010000 g     F .entry	0000000c __reset
00019568  w    O .rwdata	00000004 _ZTSPKc
00016bb8 g     F .text	00000008 .hidden _Unwind_GetRegionStart
000195e0  w    O .rwdata	00000004 _ZTSPKy
00019520  w    O .rwdata	00000004 _ZTSPKb
00010020 g       *ABS*	00000000 __flash_exceptions_start
00011b4c g     F .text	00000164 _Z16handleTimerEventv
00018d70  w    O .rodata	00000010 _ZTIPKt
00019570  w    O .rwdata	00000003 _ZTSPa
00019d0c g     O .bss	00000004 errno
00019ceb g     O .bss	00000004 _ZN6Serial4UART7rx_dataE
00019514  w    O .rwdata	00000004 _ZTSPKv
000187d0  w    O .rodata	00000034 _ZTV22PositionControllerTilt
00016d80 g     F .text	00000088 .hidden _Unwind_Backtrace
00018e90  w    O .rodata	00000010 _ZTIPKb
0001248c g     F .text	0000015c _ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE
00019d18 g     O .bss	00000004 alt_argv
000214a4 g       *ABS*	00000000 _gp
00017958 g     F .text	00000004 usleep
00015564 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
00014f24 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD1Ev
00019e24 g     O .bss	00000028 pan_motor
00015510 g     F .text	00000038 _ZNSt8bad_castD0Ev
00017630 g     F .text	00000008 getpid
00013660 g     F .text	0000017c __cxa_call_unexpected
00014d0c g     F .text	00000008 __cxa_get_exception_ptr
000195bc  w    O .rwdata	00000004 _ZTSPKl
000192fc g     O .rwdata	00000180 alt_fd_list
00015004 g     F .text	00000038 _ZN10__cxxabiv117__pbase_type_infoD0Ev
00018d20  w    O .rodata	00000010 _ZTIPl
00016ca0 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
00016b3c g     F .text	00000018 .hidden _Unwind_GetCFA
000196b0  w    O .rwdata	00000008 _ZTIt
000138dc g     F .text	00000024 _ZSt13set_terminatePFvvE
0001823c g     F .text	00000070 alt_find_dev
00017068 g     F .text	00000028 memcpy
00019510  w    O .rwdata	00000003 _ZTSPv
00014be0 g     F .text	00000044 __cxa_allocate_dependent_exception
00011a50 g     F .text	000000fc _ZN22PositionControllerTilt9CalculateEPfS0_
00019e74 g     O .bss	00000010 _ZN6Serial4UART8callbackE
00012870 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
00017f60 g     F .text	00000064 alt_io_redirect
00019cd8 g     O .bss	00000008 y_pan
000186cc g       *ABS*	00000000 __DTOR_END__
00018f24  w    O .rodata	0000002e _ZTSN10__cxxabiv129__pointer_to_member_type_infoE
00018ec0  w    O .rodata	00000010 _ZTIPv
00012888 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
000196f8  w    O .rwdata	00000008 _ZTIb
00018a10  w    O .rodata	0000000c _ZTIN10__cxxabiv121__vmi_class_type_infoE
00018ef4  w    O .rodata	0000000c _ZTIN10__cxxabiv117__pbase_type_infoE
00017e78 g     F .text	00000070 alt_exception_cause_generated_bad_addr
00019558  w    O .rwdata	00000005 _ZTSPKDi
00019e04 g     O .bss	00000010 u_pan
00018d10  w    O .rodata	00000010 _ZTIPKl
00012690 g     F .text	00000114 _ZN5TimerC2ESt8functionIFvvEE
00013b58 g     F .text	00000038 _ZN10__cxxabiv119__pointer_type_infoD0Ev
000154ac g     F .text	00000010 _ZNSt20bad_array_new_lengthD2Ev
000179e4 g     F .text	00000058 altera_avalon_jtag_uart_read
00017050 g     F .text	0000000c malloc
00018fe0  w    O .rodata	00000019 _ZTSSt20bad_array_new_length
00011908 g     F .text	00000018 _ZTv0_n16_N22PositionControllerTiltD0Ev
00016f50 g     F .text	00000064 .hidden __udivsi3
0001051c g     F .text	00000004 _ZN21PositionControllerPan16CalculateInitialEv
0001740c g     F .text	000000b4 _raise_r
000194cc  w    O .rwdata	00000005 _ZTSFvvE
00018c30  w    O .rodata	00000010 _ZTIPKDn
00010338 g     F .text	00000018 _ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv
00019594  w    O .rwdata	00000003 _ZTSPt
00014f34 g     F .text	00000038 _ZN10__cxxabiv123__fundamental_type_infoD0Ev
000175d4 g     F .text	00000004 _getpid_r
00014ea0 g     F .text	0000001c _ZSt19uncaught_exceptionsv
00014b30 g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
00013f5c g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD1Ev
00019650  w    O .rwdata	00000008 _ZTIDd
0001293c g     F .text	0000009c _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
000195f8  w    O .rwdata	00000004 _ZTSPKd
000174c0 g     F .text	000000a0 __sigtramp_r
00012204 g     F .text	000000d8 _ZN5Plant5MotorC1Emmmmm
000172f8 g     F .text	00000040 _sbrk_r
00014ec4 g     F .text	0000000c _ZGTtNKSt9exception4whatEv
000194dc  w    O .rwdata	00000006 _ZTSPFvvE
000189c8  w    O .rodata	00000020 _ZTVSt9type_info
0001873c  w    O .rodata	00000018 _ZTI21PositionControllerPan
00014ff4 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD1Ev
00014ec4 g     F .text	0000000c _ZNKSt9exception4whatEv
000195c8  w    O .rwdata	00000004 _ZTSPKm
00019728 g     O .rwdata	00000004 alt_max_fd
00018e20  w    O .rodata	00000010 _ZTIPDi
00018fa4  w    O .rodata	0000000c _ZTISt9bad_alloc
00018ca0  w    O .rodata	00000010 _ZTIPf
00016678 g     F .text	000000fc .hidden __extendsfdf2
00018934  w    O .rodata	00000024 _ZTVN10__cxxabiv119__pointer_type_infoE
00018c00  w    O .rodata	00000010 _ZTIPDd
00018834  w    O .rodata	00000010 _ZTIPFvRN6Serial7messageEE
00018a74  w    O .rodata	0000000c _ZTISt17bad_function_call
00010c34 g     F .text	00000018 _ZTv0_n16_N21PositionControllerPanD1Ev
00012354 g     F .text	00000020 _ZN5Plant5Motor8getAngleEv
0001898c  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
000186e0  w    O .rodata	0000000a _ZTS8Discrete
00015500 g     F .text	00000010 _ZNSt8bad_castD1Ev
000128d0 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
0001054c g     F .text	00000004 _ZN21PositionControllerPan14CalculateFinalEv
000149d0 g     F .text	00000004 _ZdlPv
00019718 g     O .rwdata	00000004 _global_impure_ptr
00013f6c g     F .text	00000038 _ZN10__cxxabiv121__vmi_class_type_infoD0Ev
00019fa4 g       *ABS*	00000000 __bss_end
00015494 g     F .text	0000000c _ZSt15get_new_handlerv
000195dc  w    O .rwdata	00000003 _ZTSPy
00019530  w    O .rwdata	00000003 _ZTSDu
000176c4 g     F .text	00000068 alt_iic_isr_register
000195a4  w    O .rwdata	00000004 _ZTSPKi
00018ea0  w    O .rodata	00000010 _ZTIPb
0001817c g     F .text	000000b8 alt_tick
00016afc g     F .text	00000018 .hidden _Unwind_SjLj_Register
00017038 g     F .text	00000018 abort
000118c4 g     F .text	00000018 _ZTv0_n16_N22PositionControllerTiltD1Ev
00011170 g     F .text	0000000c _ZN22PositionControllerTilt10IsFinishedEv
00019680  w    O .rwdata	00000008 _ZTIy
00018bd0  w    O .rodata	00000010 _ZTIPKDe
00012374 g     F .text	0000000c _ZN5Plant5Motor8readDataEv
00014dcc g     F .text	000000b4 __cxa_end_catch
00011cec  w    F .text	00000038 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
000176ac g     F .text	00000018 alt_ic_irq_enabled
00014ec0 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
00019ce0 g     O .bss	00000008 y_tilt
00018754  w    O .rodata	00000014 _ZTV13Submodel20sim
00018c90  w    O .rodata	00000010 _ZTIPKf
00011920 g     F .text	00000130 _ZN22PositionControllerTilt10InitializeEPfS0_f
0001814c g     F .text	00000030 alt_alarm_stop
00011d24  w    F .text	00000008 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
000118dc g     F .text	0000002c _ZN22PositionControllerTiltD0Ev
00018c80  w    O .rodata	00000010 _ZTIPd
00019d10 g     O .bss	00000004 alt_irq_active
000101d0 g     F .text	00000004 _ZN8Discrete9TerminateEv
000138a4 g     F .text	00000014 _ZSt9terminatev
00019584  w    O .rwdata	00000002 _ZTSs
0001960c  w    O .rwdata	00000004 _ZTSPDn
00010000 g       *ABS*	00000000 __alt_mem_onchip_mem
00018f00  w    O .rodata	00000024 _ZTVN10__cxxabiv117__pbase_type_infoE
000100fc g     F .exceptions	00000060 alt_irq_handler
00011d70  w    F .text	00000064 _ZNSt14_Function_baseD2Ev
0001947c g     O .rwdata	00000028 alt_dev_null
00013fa4 g     F .text	00000128 _ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
000195a0  w    O .rwdata	00000003 _ZTSPi
00014ef8 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
000195e8  w    O .rwdata	00000003 _ZTSPf
00018e70  w    O .rodata	00000010 _ZTIPKw
000195f4  w    O .rwdata	00000003 _ZTSPd
0001961c  w    O .rwdata	00000004 _ZTSPDf
00018854  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
00017d6c g     F .text	00000004 alt_dcache_flush_all
00019688  w    O .rwdata	00000008 _ZTIx
00019528  w    O .rwdata	00000003 _ZTSPw
000194f0  w    O .rwdata	00000008 _ZTISt9exception
00019628  w    O .rwdata	00000003 _ZTSDd
00019620  w    O .rwdata	00000005 _ZTSPKDf
00010350 g     F .text	00000024 _ZN21PositionControllerPan21CopyInputsToVariablesEPf
000195c0  w    O .rwdata	00000002 _ZTSm
00019748 g       *ABS*	00000000 __ram_rwdata_end
00018d60  w    O .rodata	00000010 _ZTIPi
0001216c g     F .text	00000034 _ZN5Plant5Motor12setDirectionENS0_9DirectionE
00013efc g     F .text	00000004 _ZNSt9type_infoD1Ev
0001972c g     O .rwdata	00000008 alt_dev_list
00014ef8 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
00013b04 g     F .text	00000038 _ZN10__cxxabiv120__function_type_infoD0Ev
00019544  w    O .rwdata	00000004 _ZTSPDs
00013f10 g     F .text	00000008 _ZNSt9type_infoD0Ev
000186ec  w    O .rodata	0000000c _ZTI8Discrete
000191c0 g       *ABS*	00000000 __ram_rodata_end
00012a9c g     F .text	00000004 _ZdlPvj
00019678  w    O .rwdata	00000008 _ZTIf
0001772c g     F .text	000000f4 kill
00019cf0 g     O .bss	00000004 _ZN5Timer17timer_isr_contextE
000195b8  w    O .rwdata	00000003 _ZTSPl
00013aec g     F .text	00000008 _ZNK10__cxxabiv120__function_type_info15__is_function_pEv
00019548  w    O .rwdata	00000005 _ZTSPKDs
00018da0  w    O .rodata	00000010 _ZTIPs
00016fb4 g     F .text	0000005c .hidden __umodsi3
00013f08 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
00019540  w    O .rwdata	00000003 _ZTSDs
000195d4  w    O .rwdata	00000004 _ZTSPKx
000139a4 g     F .text	00000064 __cxa_init_primary_exception
00010a78 g     F .text	0000000c _ZN21PositionControllerPanC1Ev
00013900 g     F .text	0000000c _ZSt13get_terminatev
00019fa4 g       *ABS*	00000000 end
00019618  w    O .rwdata	00000003 _ZTSDf
00014958 g     F .text	00000010 _ZNSt17bad_function_callD2Ev
000118b8 g     F .text	0000000c _ZN22PositionControllerTiltD1Ev
00019560  w    O .rwdata	00000002 _ZTSc
00017b88 g     F .text	00000084 altera_avalon_uart_write
00016d68 g     F .text	00000018 .hidden _Unwind_DeleteException
0001117c g     F .text	00000038 _ZN22PositionControllerTilt9TerminateEPfS0_
000195b0  w    O .rwdata	00000004 _ZTSPKj
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
000129d8 g     F .text	000000c4 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
00013f5c g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD2Ev
000186ad g       *ABS*	00000000 __CTOR_LIST__
0001b400 g       *ABS*	00000000 __alt_stack_pointer
00018d00  w    O .rodata	00000010 _ZTIPm
00017aa8 g     F .text	00000048 alt_avalon_timer_sc_init
00017b00 g     F .text	00000010 altera_avalon_uart_write_fd
00016e08 g     F .text	00000054 .hidden __clzsi2
000127f8 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
00017a3c g     F .text	00000030 altera_avalon_jtag_uart_write
00010374 g     F .text	00000024 _ZN21PositionControllerPan22CopyVariablesToOutputsEPf
00018ac8  w    O .rodata	00000012 _ZTSSt13bad_exception
00019578  w    O .rwdata	00000002 _ZTSh
000127a4 g     F .text	0000003c _ZN5Timer6enableEv
000122dc g     F .text	00000078 _ZN5Plant5Motor20setSpeedAndDirectionEa
000154a0 g     F .text	0000000c _ZNKSt20bad_array_new_length4whatEv
000170b0 g     F .text	000000f8 _free_r
000154f4 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
00011708 g     F .text	0000000c _ZN22PositionControllerTiltC1Ev
0001852c g     F .text	00000128 __call_exitprocs
00010180 g     F .text	0000003c _start
00019d28 g     O .bss	00000004 _alt_tick_rate
000189b8  w    O .rodata	0000000d _ZTSSt9type_info
00014ff4 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD2Ev
00015390 g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
00015378 g     F .text	0000000c __cxa_pure_virtual
000101bc g     F .text	00000004 _ZN8DiscreteD2Ev
00018fb0  w    O .rodata	00000014 _ZTVSt9bad_alloc
00019d24 g     O .bss	00000004 _alt_nticks
0001756c g     F .text	00000010 signal
0001797c g     F .text	00000048 alt_sys_init
0001951c  w    O .rwdata	00000003 _ZTSPb
000196e0  w    O .rwdata	00000008 _ZTIDs
00018dc0  w    O .rodata	00000010 _ZTIPh
00018e80  w    O .rodata	00000010 _ZTIPw
00019078  w    O .rodata	0000000c _ZTISt10bad_typeid
0001841c g     F .text	00000110 __register_exitproc
00019008  w    O .rodata	00000014 _ZTVSt20bad_array_new_length
00018f94  w    O .rodata	0000000d _ZTSSt9bad_alloc
00019e84 g     O .bss	00000010 _ZN5Timer8callbackE
00014ed0 g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
00013c7c g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
000196c0  w    O .rwdata	00000008 _ZTIh
00018cd0  w    O .rodata	00000010 _ZTIPKx
000121a0 g     F .text	00000034 _ZN5Plant5Motor6enableEv
00017010 g     F .text	00000028 .hidden __mulsi3
000191c0 g       *ABS*	00000000 __ram_rwdata_start
00016bd8 g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
000186cc g       *ABS*	00000000 __ram_rodata_start
00016ce4 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
00018b68  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
000196a0  w    O .rwdata	00000008 _ZTIj
000154bc g     F .text	00000038 _ZNSt20bad_array_new_lengthD0Ev
00019670  w    O .rwdata	00000008 _ZTId
0001544c g     F .text	00000034 __cxa_throw_bad_array_new_length
00013efc g     F .text	00000004 _ZNSt9type_infoD2Ev
00019608  w    O .rwdata	00000003 _ZTSDn
00014efc g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
00011d64  w    F .text	0000000c _ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_
00015298 g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD2Ev
00013e78 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
00018d30  w    O .rodata	00000010 _ZTIPKj
000189e8  w    O .rodata	00000026 _ZTSN10__cxxabiv121__vmi_class_type_infoE
00010dc0 g     F .text	000000fc _ZN21PositionControllerPan9CalculateEPfS0_
00013b40 g     F .text	00000008 _ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv
00018ba4  w    O .rodata	0000000c _ZTIN10__cxxabiv123__fundamental_type_infoE
000179c4 g     F .text	00000010 altera_avalon_jtag_uart_read_fd
00018348 g     F .text	00000054 alt_get_fd
00017c0c g     F .text	000000ac alt_busy_sleep
00019610  w    O .rwdata	00000005 _ZTSPKDn
00019500  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
000188d8  w    O .rodata	0000000c _ZTIN10__cxxabiv120__function_type_infoE
00011cb0 g     F .text	0000003c _Z15handleUartEventRN6Serial7messageE
00019cd0 g     O .bss	00000004 angle
000195ec  w    O .rwdata	00000004 _ZTSPKf
000101c0 g     F .text	00000010 _ZN8Discrete10InitializeEP13Submodel20sim
00019574  w    O .rwdata	00000004 _ZTSPKa
000183d0 g     F .text	00000030 memcmp
00019fa4 g       *ABS*	00000000 __alt_stack_base
000153ac g     F .text	00000038 _ZNSt9bad_allocD0Ev
00013c34 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
00014f24 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD2Ev
000111e0 g     F .text	00000038 _ZN22PositionControllerTilt13SetFinishTimeEf
000111c0 g     F .text	0000001c _ZN22PositionControllerTilt15CalculateOutputEv
00019534  w    O .rwdata	00000004 _ZTSPDu
00016d28 g     F .text	00000040 .hidden _Unwind_SjLj_Resume_or_Rethrow
000194d4  w    O .rwdata	00000008 _ZTIFvvE
0001559c g     F .text	00000930 .hidden __divdf3
0001902c  w    O .rodata	0000000c _ZTSSt8bad_cast
00013f00 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
00013b48 g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD2Ev
000194c4  w    O .rwdata	00000008 _ZTIFvRN6Serial7messageEE
00010fe8 g     F .text	0000002c _ZN22PositionControllerTilt21CopyInputsToVariablesEPf
00015ecc g     F .text	000007ac .hidden __muldf3
00018b2c  w    O .rodata	00000014 _ZTVSt9exception
00014ef0 g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
000182ac g     F .text	0000009c alt_find_file
00017d78 g     F .text	0000006c alt_dev_llist_insert
00017904 g     F .text	00000004 __malloc_lock
0001790c g     F .text	0000004c sbrk
000152a8 g     F .text	00000038 _ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
00018884  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
00013a08 g     F .text	00000060 __cxa_throw
00016b9c g     F .text	00000010 .hidden _Unwind_SetIP
00018c20  w    O .rodata	00000010 _ZTIPDf
00019cd4 g     O .bss	00000001 tilt_homing_done
000104d8 g     F .text	0000000c _ZN21PositionControllerPan10IsFinishedEv
000196a8  w    O .rwdata	00000008 _ZTIi
00019d2c g     O .bss	0000006c pan_model
00018cb0  w    O .rodata	00000010 _ZTIPKy
00018e60  w    O .rodata	00000010 _ZTIPDu
00019cd0 g       *ABS*	00000000 __bss_start
00017090 g     F .text	00000020 memset
00011dd4 g     F .text	00000144 main
000195fc  w    O .rwdata	00000002 _ZTSe
00019cef g     O .bss	00000001 _ZN6Serial4UART10uart_readyE
00019d14 g     O .bss	00000004 alt_envp
00019084  w    O .rodata	00000014 _ZTVSt10bad_typeid
00010ec0  w    F .text	00000004 _ZN13Submodel20simD2Ev
000179d4 g     F .text	00000010 altera_avalon_jtag_uart_write_fd
00019668  w    O .rwdata	00000008 _ZTIe
00014f04 g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
00014f0c g     F .text	0000000c __cxa_get_globals_fast
0001499c g     F .text	00000034 _ZSt25__throw_bad_function_callv
00019044  w    O .rodata	00000014 _ZTVSt8bad_cast
00012aa0 g     F .text	00000004 _ZdaPv
0001b400 g       *ABS*	00000000 __alt_heap_limit
000195e4  w    O .rwdata	00000002 _ZTSf
00015548 g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
00016774 g     F .text	00000170 .hidden __truncdfsf2
00018df0  w    O .rodata	00000010 _ZTIPKc
00012660 g     F .text	00000030 _ZN5Timer11timer_0_isrEPv
0001881c  w    O .rodata	00000017 _ZTSPFvRN6Serial7messageEE
000171a8 g     F .text	00000150 _malloc_r
0001494c g     F .text	0000000c _ZNKSt17bad_function_call4whatEv
00018cf0  w    O .rodata	00000010 _ZTIPKm
00014ed0 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
0001973c g     O .rwdata	00000004 alt_errno
000194bc  w    O .rwdata	00000008 _ZTT22PositionControllerTilt
0001757c g     F .text	00000008 _init_signal
00018878  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
000120dc g     F .text	00000090 _ZN5Plant5Motor12setDutyCycleEh
00018e10  w    O .rodata	00000010 _ZTIPKDi
000118ac g     F .text	0000000c _ZN22PositionControllerTiltD2Ev
00014ec0 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
00018ffc  w    O .rodata	0000000c _ZTISt20bad_array_new_length
00016e5c g     F .text	00000080 .hidden __divsi3
00015298 g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
00018c50  w    O .rodata	00000010 _ZTIPKe
000186c0 g       *ABS*	00000000 __CTOR_END__
00011d70  w    F .text	00000064 _ZNSt14_Function_baseD1Ev
000194b4  w    O .rwdata	00000008 _ZTT21PositionControllerPan
00010c1c g     F .text	0000000c _ZN21PositionControllerPanD2Ev
00019550  w    O .rwdata	00000003 _ZTSDi
00019cea g     O .bss	00000001 _ZN6Serial4UART6rx_lenE
000175d8 g     F .text	00000044 strcmp
00018d90  w    O .rodata	00000010 _ZTIPKs
00018e00  w    O .rodata	00000010 _ZTIPc
00019660  w    O .rwdata	00000008 _ZTIDn
000186cc g       *ABS*	00000000 __flash_rodata_start
00018b54  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
000125f8 g     F .text	00000050 _ZN6Serial4UART8sendDataENS_7messageE
000186c0 g       *ABS*	00000000 __DTOR_LIST__
00019658  w    O .rwdata	00000008 _ZTIDf
00015500 g     F .text	00000010 _ZNSt8bad_castD2Ev
00019600  w    O .rwdata	00000003 _ZTSPe
00019524  w    O .rwdata	00000002 _ZTSw
0001795c g     F .text	00000020 alt_irq_init
00019564  w    O .rwdata	00000003 _ZTSPc
00018120 g     F .text	0000002c alt_release_fd
00013c44 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
0001503c g     F .text	0000025c _ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj
00018c10  w    O .rodata	00000010 _ZTIPKDf
00019098 g     O .rodata	00000100 .hidden __clz_tab
00019640  w    O .rwdata	00000005 _ZTSPKDe
0001839c g     F .text	00000014 atexit
000153e4 g     F .text	00000034 __cxa_bad_cast
00016bd0 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
00018a1c  w    O .rodata	0000002c _ZTVN10__cxxabiv121__vmi_class_type_infoE
00014cb4 g     F .text	00000058 __cxa_call_terminate
0001879c  w    O .rodata	00000019 _ZTS22PositionControllerTilt
00019690  w    O .rwdata	00000008 _ZTIm
0001971c g     O .rwdata	00000004 _impure_ptr
000194f8  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
000188e4  w    O .rodata	00000020 _ZTVN10__cxxabiv120__function_type_infoE
00019d1c g     O .bss	00000004 alt_argc
00019d98 g     O .bss	0000006c tilt_model
00018bb0  w    O .rodata	00000020 _ZTVN10__cxxabiv123__fundamental_type_infoE
00017e2c g     F .text	00000048 _do_dtors
00018f54  w    O .rodata	0000000c _ZTIN10__cxxabiv129__pointer_to_member_type_infoE
000111bc g     F .text	00000004 _ZN22PositionControllerTilt14CalculateInputEv
00018e50  w    O .rodata	00000010 _ZTIPKDu
00010528 g     F .text	00000024 _ZN21PositionControllerPan15CalculateOutputEv
00013930 g     F .text	0000000c _ZSt14get_unexpectedv
00010020 g       .exceptions	00000000 alt_irq_entry
00019638  w    O .rwdata	00000003 _ZTSDe
00016bc0 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
00018dd0  w    O .rodata	00000010 _ZTIPKa
00019734 g     O .rwdata	00000008 alt_fs_list
00018b08  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
00019e14 g     O .bss	00000010 u_tilt
000196e8  w    O .rwdata	00000008 _ZTIDu
00018d40  w    O .rodata	00000010 _ZTIPj
00016bac g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
0001963c  w    O .rwdata	00000004 _ZTSPDe
00014d14 g     F .text	000000b8 __cxa_begin_catch
00019580  w    O .rwdata	00000004 _ZTSPKh
00012888 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
000138b8 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
00018eb0  w    O .rodata	00000010 _ZTIPKv
00019604  w    O .rwdata	00000004 _ZTSPKe
00014968 g     F .text	00000034 _ZNSt17bad_function_callD0Ev
00010020 g       *ABS*	00000000 __ram_exceptions_start
00018a5c  w    O .rodata	00000016 _ZTSSt17bad_function_call
0001950c  w    O .rwdata	00000002 _ZTSv
00014958 g     F .text	00000010 _ZNSt17bad_function_callD1Ev
00010c78 g     F .text	00000018 _ZTv0_n16_N21PositionControllerPanD0Ev
00014ee4 g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
00019508 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
00019590  w    O .rwdata	00000002 _ZTSt
00013b90 g     F .text	000000a4 _ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00018d80  w    O .rodata	00000010 _ZTIPt
000194ac  w    O .rwdata	00000008 _ZTI13Submodel20sim
00017638 g     F .text	00000004 alt_ic_isr_register
00014b60 g     F .text	00000058 __cxa_allocate_exception
00018c70  w    O .rodata	00000010 _ZTIPKd
00010ec0  w    F .text	00000004 _ZN13Submodel20simD1Ev
00018980  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
00018db0  w    O .rodata	00000010 _ZTIPKh
00015480 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
00019748 g       *ABS*	00000000 _edata
00017af0 g     F .text	00000010 altera_avalon_uart_read_fd
00019fa4 g       *ABS*	00000000 _end
00019714 g     O .rwdata	00000001 _ZSt7nothrow
000140cc g     F .text	0000061c _ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
00012fc8 g     F .text	00000698 __gxx_personality_sj0
00010180 g       *ABS*	00000000 __ram_exceptions_end
0001959c  w    O .rwdata	00000002 _ZTSi
00010248 g     F .text	000000f0 _ZN21PositionControllerPan16CalculateDynamicEv
000101d4 g     F .text	00000058 _ZN8Discrete4StepEv
000195d8  w    O .rwdata	00000002 _ZTSy
00014ebc g     F .text	00000004 _ZNSt9exceptionD1Ev
000111b8 g     F .text	00000004 _ZN22PositionControllerTilt15CalculateStaticEv
00018ed0  w    O .rodata	00000022 _ZTSN10__cxxabiv117__pbase_type_infoE
00011014 g     F .text	0000001c _ZN22PositionControllerTilt22CopyVariablesToOutputsEPf
00017674 g     F .text	00000038 alt_ic_irq_disable
000195b4  w    O .rwdata	00000002 _ZTSl
00014f6c g     F .text	00000070 _Znwj
00019700  w    O .rwdata	00000008 _ZTIv
00019588  w    O .rwdata	00000003 _ZTSPs
00018768  w    O .rodata	00000034 _ZTV21PositionControllerPan
000183b0 g     F .text	00000020 exit
00016b54 g     F .text	00000018 .hidden _Unwind_SetGR
00013ddc g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
000137dc g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
000194e2 g     O .rwdata	00000001 pan_homing_done
000188b0  w    O .rodata	00000025 _ZTSN10__cxxabiv120__function_type_infoE
00016edc g     F .text	00000074 .hidden __modsi3
0001539c g     F .text	00000010 _ZNSt9bad_allocD1Ev
0001b400 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
00019ce9 g     O .bss	00000001 uart
000195f0  w    O .rwdata	00000002 _ZTSd
00019698  w    O .rwdata	00000008 _ZTIl
0001962c  w    O .rwdata	00000004 _ZTSPDd
00018adc  w    O .rodata	0000000c _ZTISt13bad_exception
00018be0  w    O .rodata	00000010 _ZTIPDe
00012380 g     F .text	00000050 _ZN5Plant5Motor19isAtInitialPositionEv
000125e8 g     F .text	00000010 _ZN6Serial4UART14convertToArrayENS_7messageE
000101bc g     F .text	00000004 _ZN8DiscreteD1Ev
00018714  w    O .rodata	00000010 _ZTS13Submodel20sim
00014fdc  w    F .text	00000018 _ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj
00013af4 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD2Ev
00018ce0  w    O .rodata	00000010 _ZTIPx
0001761c g     F .text	00000014 _exit
000186f8  w    O .rodata	0000001c _ZTV8Discrete
00016b24 g     F .text	00000018 .hidden _Unwind_GetGR
00014f18 g     F .text	0000000c __cxa_get_globals
000194e4 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
00018400 g     F .text	0000001c strlen
00010fd0 g     F .text	00000018 _ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv
00010520 g     F .text	00000004 _ZN21PositionControllerPan15CalculateStaticEv
00017338 g     F .text	0000005c _init_signal_r
000194e8  w    O .rwdata	00000008 _ZTISt9type_info
00017fc4 g     F .text	0000015c open
00018c60  w    O .rodata	00000010 _ZTIPe
00014f08 g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
00018ab8  w    O .rodata	0000000d _ZTSSt9exception
00019d04 g     O .bss	00000004 __malloc_sbrk_start
000111b4 g     F .text	00000004 _ZN22PositionControllerTilt16CalculateInitialEv
00019068  w    O .rodata	0000000f _ZTSSt10bad_typeid
00019648  w    O .rwdata	00000008 _ZTIDe
00019e4c g     O .bss	00000028 tilt_motor
00015418 g     F .text	00000034 __cxa_bad_typeid
00014edc g     F .text	00000008 _ZNSt9exceptionD0Ev
00017e74 g     F .text	00000004 alt_icache_flush_all
00010c28 g     F .text	0000000c _ZN21PositionControllerPanD1Ev
00010a6c g     F .text	0000000c _ZN21PositionControllerPanC2Ev
000104e4 g     F .text	00000038 _ZN21PositionControllerPan9TerminateEPfS0_
000195cc  w    O .rwdata	00000002 _ZTSx
00015554 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
00016bc8 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
00019720 g     O .rwdata	00000004 alt_priority_mask
00019d08 g     O .bss	00000004 __malloc_free_list
00011d2c  w    F .text	00000038 _ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
0001763c g     F .text	00000038 alt_ic_irq_enable
000196b8  w    O .rwdata	00000008 _ZTIs
00017b10 g     F .text	00000078 altera_avalon_uart_read
00018de0  w    O .rodata	00000010 _ZTIPa
0001952c  w    O .rwdata	00000004 _ZTSPKw
00010c90 g     F .text	00000130 _ZN21PositionControllerPan10InitializeEPfS0_f
00013af4 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD1Ev
00015554 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
00018e40  w    O .rodata	00000010 _ZTIPDs
00018bf0  w    O .rodata	00000010 _ZTIPKDd
00019740 g     O .rwdata	00000008 alt_alarm_list
00018b7c  w    O .rodata	00000028 _ZTSN10__cxxabiv123__fundamental_type_infoE
00017de4 g     F .text	00000048 _do_ctors
00017584 g     F .text	0000000c __sigtramp
0001022c g     F .text	00000008 _ZN8DiscreteD0Ev
00018928  w    O .rodata	0000000c _ZTIN10__cxxabiv119__pointer_type_infoE
00017cb8 g     F .text	000000b4 close
0001957c  w    O .rwdata	00000003 _ZTSPh
00018804  w    O .rodata	00000016 _ZTSFvRN6Serial7messageEE
00011030 g     F .text	00000140 _ZN22PositionControllerTilt5ResetEf
00018ae8  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
00017820 g     F .text	00000084 alt_load
000194a4  w    O .rwdata	00000008 _ZTI17IntegrationMethod
00013f18 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
0001958c  w    O .rwdata	00000004 _ZTSPKs
000152e0 g     F .text	00000098 _ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00010c4c g     F .text	0000002c _ZN21PositionControllerPanD0Ev
00017560 g     F .text	0000000c raise
00019598  w    O .rwdata	00000004 _ZTSPKt
0001705c g     F .text	0000000c free
00012898 g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
0001248c g     F .text	0000015c _ZN6Serial4UARTC2ESt8functionIFvRNS_7messageEEE
000116fc g     F .text	0000000c _ZN22PositionControllerTiltC2Ev
00010550 g     F .text	00000038 _ZN21PositionControllerPan13SetFinishTimeEf
00012690 g     F .text	00000114 _ZN5TimerC1ESt8functionIFvvEE



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
   10108:	0009313a 	rdctl	r4,ipending
   1010c:	040000b4 	movhi	r16,2
   10110:	8427a904 	addi	r16,r16,-24924
   10114:	0005883a 	mov	r2,zero
   10118:	00c00044 	movi	r3,1
   1011c:	20ca703a 	and	r5,r4,r3
   10120:	28000b26 	beq	r5,zero,10150 <alt_irq_handler+0x54>
   10124:	100490fa 	slli	r2,r2,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0009313a 	rdctl	r4,ipending
   1013c:	203ff51e 	bne	r4,zero,10114 <alt_irq_handler+0x18>
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
   10150:	1806907a 	slli	r3,r3,1
   10154:	10800044 	addi	r2,r2,1
   10158:	003ff006 	br	1011c <alt_irq_handler+0x20>

0001015c <alt_instruction_exception_entry>:
   1015c:	d0a21f17 	ldw	r2,-30596(gp)
   10160:	200b883a 	mov	r5,r4
   10164:	10000326 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   10174:	003da03a 	break	0
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	deed0014 	ori	sp,sp,46080
    movhi gp, %hi(_gp)
   10188:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1018c:	d6852914 	ori	gp,gp,5284
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10a73414 	ori	r2,r2,40144

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18e7e914 	ori	r3,r3,40868

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	00178200 	call	17820 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	00178a40 	call	178a4 <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <alt_after_alt_main>

000101bc <_ZN8DiscreteD1Ev>:
	model = NULL;
}

Discrete::~Discrete(void)
{
}
   101bc:	f800283a 	ret

000101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>:
/*
 * the initialization of the Discrete integration method
 */
void Discrete::Initialize (Submodel20sim* themodel)
{
	model = themodel;
   101c0:	21400115 	stw	r5,4(r4)
	model->m_major = true;
   101c4:	00800044 	movi	r2,1
   101c8:	28800145 	stb	r2,5(r5)
}
   101cc:	f800283a 	ret

000101d0 <_ZN8Discrete9TerminateEv>:

/* the termination of the Discrete integration method */
void Discrete::Terminate ()
{
	/* nothing to be done */
}
   101d0:	f800283a 	ret

000101d4 <_ZN8Discrete4StepEv>:
void Discrete::Step ()
{
	XXInteger index;

	/* for each of the supplied states */
	for (index = 0; index < model->m_number_states; index++)
   101d4:	21000117 	ldw	r4,4(r4)
   101d8:	0005883a 	mov	r2,zero
   101dc:	21c00a17 	ldw	r7,40(r4)
   101e0:	11c0090e 	bge	r2,r7,10208 <_ZN8Discrete4StepEv+0x34>
	{
		/* just a move of the new state */
		model->m_s [index] = model->m_R [index];
   101e4:	100c90ba 	slli	r6,r2,2
   101e8:	21401317 	ldw	r5,76(r4)
   101ec:	20c01217 	ldw	r3,72(r4)
	for (index = 0; index < model->m_number_states; index++)
   101f0:	10800044 	addi	r2,r2,1
		model->m_s [index] = model->m_R [index];
   101f4:	298b883a 	add	r5,r5,r6
   101f8:	29400017 	ldw	r5,0(r5)
   101fc:	1987883a 	add	r3,r3,r6
   10200:	19400015 	stw	r5,0(r3)
	for (index = 0; index < model->m_number_states; index++)
   10204:	003ff606 	br	101e0 <_ZN8Discrete4StepEv+0xc>
	}

	/* increment the simulation time */
	model->m_time += model->m_step_size;
   10208:	20800517 	ldw	r2,20(r4)
   1020c:	20c00217 	ldw	r3,8(r4)
   10210:	10c5ff72 	custom	253,r2,r2,r3
   10214:	20800515 	stw	r2,20(r4)
	model->m_major = true;
   10218:	00800044 	movi	r2,1
   1021c:	20800145 	stb	r2,5(r4)

	/* evaluate the dynamic part to calculate the new rates */
	model->CalculateDynamic ();
   10220:	20800017 	ldw	r2,0(r4)
   10224:	10800017 	ldw	r2,0(r2)
   10228:	1000683a 	jmp	r2

0001022c <_ZN8DiscreteD0Ev>:
}
   1022c:	01400204 	movi	r5,8
   10230:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00010234 <_ZN8DiscreteC1Ev>:
Discrete::Discrete(void)
   10234:	008000b4 	movhi	r2,2
   10238:	10a1c004 	addi	r2,r2,-30976
   1023c:	20800015 	stw	r2,0(r4)
	model = NULL;
   10240:	20000115 	stw	zero,4(r4)
}
   10244:	f800283a 	ret

00010248 <_ZN21PositionControllerPan16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerPan::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10248:	20800017 	ldw	r2,0(r4)
   1024c:	10bffd17 	ldw	r2,-12(r2)
   10250:	2089883a 	add	r4,r4,r2
   10254:	21400f17 	ldw	r5,60(r4)
   10258:	20c01117 	ldw	r3,68(r4)

	/* corrGain\corr = corrGain\K * Splitter1\input; */
	m_V[0] = m_P[0] * m_V[5];

	/* PID1\error = PlusMinus1\plus1 - Splitter1\input; */
	m_R[1] = m_V[3] - m_V[5];
   1025c:	22801317 	ldw	r10,76(r4)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10260:	29800317 	ldw	r6,12(r5)
   10264:	28800217 	ldw	r2,8(r5)
	m_V[5] = m_V[8];
   10268:	19c00817 	ldw	r7,32(r3)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   1026c:	22c01217 	ldw	r11,72(r4)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10270:	1185ff32 	custom	252,r2,r2,r6
   10274:	21800217 	ldw	r6,8(r4)
	m_V[5] = m_V[8];
   10278:	19c00515 	stw	r7,20(r3)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   1027c:	1185ff72 	custom	253,r2,r2,r6
   10280:	018fe034 	movhi	r6,16256
   10284:	3085fff2 	custom	255,r2,r6,r2
	m_V[3] = m_V[7];
   10288:	19800717 	ldw	r6,28(r3)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   1028c:	18800215 	stw	r2,8(r3)
	m_V[3] = m_V[7];
   10290:	19800315 	stw	r6,12(r3)
	m_V[0] = m_P[0] * m_V[5];
   10294:	28800017 	ldw	r2,0(r5)
   10298:	11c5ff32 	custom	252,r2,r2,r7
   1029c:	18800015 	stw	r2,0(r3)
	m_R[1] = m_V[3] - m_V[5];
   102a0:	31cfffb2 	custom	254,r7,r6,r7
   102a4:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   102a8:	2a400217 	ldw	r9,8(r5)
   102ac:	58800017 	ldw	r2,0(r11)
   102b0:	2a000317 	ldw	r8,12(r5)
   102b4:	29800117 	ldw	r6,4(r5)
   102b8:	4885ff32 	custom	252,r2,r9,r2
   102bc:	1205ff32 	custom	252,r2,r2,r8
   102c0:	5a000117 	ldw	r8,4(r11)
   102c4:	4993ff32 	custom	252,r9,r9,r6
   102c8:	3a11ffb2 	custom	254,r8,r7,r8
   102cc:	4251ff32 	custom	252,r8,r8,r9
   102d0:	1205ff72 	custom	253,r2,r2,r8
   102d4:	22000217 	ldw	r8,8(r4)
   102d8:	320dff32 	custom	252,r6,r6,r8
   102dc:	31cdff32 	custom	252,r6,r6,r7
   102e0:	1185ff72 	custom	253,r2,r2,r6
   102e4:	19800217 	ldw	r6,8(r3)
   102e8:	1185ff32 	custom	252,r2,r2,r6
   102ec:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   102f0:	21000217 	ldw	r4,8(r4)
   102f4:	29800417 	ldw	r6,16(r5)
   102f8:	1109ff32 	custom	252,r4,r2,r4
   102fc:	2189fff2 	custom	255,r4,r4,r6
   10300:	59800217 	ldw	r6,8(r11)
   10304:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[1] = m_R[2] + m_R[0];
   10308:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   1030c:	51000215 	stw	r4,8(r10)
	m_V[1] = m_R[2] + m_R[0];
   10310:	18800115 	stw	r2,4(r3)

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10314:	29000517 	ldw	r4,20(r5)
   10318:	110df9f2 	custom	231,r6,r2,r4
   1031c:	3000041e 	bne	r6,zero,10330 <_ZN21PositionControllerPan16CalculateDynamicEv+0xe8>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) */
		((m_V[1] > m_P[6]) ? 
   10320:	29000617 	ldw	r4,24(r5)
   10324:	110bf972 	custom	229,r5,r2,r4
   10328:	2800011e 	bne	r5,zero,10330 <_ZN21PositionControllerPan16CalculateDynamicEv+0xe8>
   1032c:	1009883a 	mov	r4,r2
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10330:	19000415 	stw	r4,16(r3)
			/* PID1\output */
			m_V[1]
		)
	);

}
   10334:	f800283a 	ret

00010338 <_ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10338:	2009883a 	mov	r4,r4
   1033c:	20800017 	ldw	r2,0(r4)
   10340:	10bffd04 	addi	r2,r2,-12
   10344:	10800017 	ldw	r2,0(r2)
   10348:	2089883a 	add	r4,r4,r2
   1034c:	00102481 	jmpi	10248 <_ZN21PositionControllerPan16CalculateDynamicEv>

00010350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>:
	m_V[7] = u[0];		/* in */
   10350:	20800017 	ldw	r2,0(r4)
   10354:	28c00017 	ldw	r3,0(r5)
   10358:	10bffd17 	ldw	r2,-12(r2)
   1035c:	2089883a 	add	r4,r4,r2
   10360:	20801117 	ldw	r2,68(r4)
   10364:	10c00715 	stw	r3,28(r2)
	m_V[8] = u[1];		/* position */
   10368:	28c00117 	ldw	r3,4(r5)
   1036c:	10c00815 	stw	r3,32(r2)
}
   10370:	f800283a 	ret

00010374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[6];		/* corr */
   10374:	20800017 	ldw	r2,0(r4)
   10378:	10bffd17 	ldw	r2,-12(r2)
   1037c:	2089883a 	add	r4,r4,r2
   10380:	20801117 	ldw	r2,68(r4)
   10384:	10c00617 	ldw	r3,24(r2)
   10388:	28c00015 	stw	r3,0(r5)
	y[1] = 	m_V[9];		/* out */
   1038c:	10800917 	ldw	r2,36(r2)
   10390:	28800115 	stw	r2,4(r5)
}
   10394:	f800283a 	ret

00010398 <_ZN21PositionControllerPan5ResetEf>:
	m_start_time = starttime;
   10398:	20800017 	ldw	r2,0(r4)
{
   1039c:	defffe04 	addi	sp,sp,-8
	m_step_size = 0.0001;
   103a0:	00ce34b4 	movhi	r3,14546
	m_start_time = starttime;
   103a4:	10bffd17 	ldw	r2,-12(r2)
{
   103a8:	dfc00115 	stw	ra,4(sp)
   103ac:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   103b0:	2085883a 	add	r2,r4,r2
{
   103b4:	2021883a 	mov	r16,r4
	m_step_size = 0.0001;
   103b8:	18edc5c4 	addi	r3,r3,-18665
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103bc:	11000e17 	ldw	r4,56(r2)
	m_step_size = 0.0001;
   103c0:	10c00215 	stw	r3,8(r2)
	m_major = true;
   103c4:	00c00044 	movi	r3,1
   103c8:	10c00145 	stb	r3,5(r2)
	m_start_time = starttime;
   103cc:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   103d0:	11400515 	stw	r5,20(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103d4:	01800104 	movi	r6,4
   103d8:	000b883a 	mov	r5,zero
	m_stop_run = false;
   103dc:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103e0:	00170900 	call	17090 <memset>
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   103e4:	80800017 	ldw	r2,0(r16)
   103e8:	01800804 	movi	r6,32
   103ec:	000b883a 	mov	r5,zero
   103f0:	10bffd17 	ldw	r2,-12(r2)
   103f4:	8085883a 	add	r2,r16,r2
   103f8:	11000f17 	ldw	r4,60(r2)
   103fc:	00170900 	call	17090 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   10400:	80800017 	ldw	r2,0(r16)
   10404:	01800404 	movi	r6,16
   10408:	000b883a 	mov	r5,zero
   1040c:	10bffd17 	ldw	r2,-12(r2)
   10410:	8085883a 	add	r2,r16,r2
   10414:	11001017 	ldw	r4,64(r2)
   10418:	00170900 	call	17090 <memset>
	memset(m_V, 0, (10 + 1) * sizeof(XXDouble));
   1041c:	80800017 	ldw	r2,0(r16)
   10420:	01800b04 	movi	r6,44
   10424:	000b883a 	mov	r5,zero
   10428:	10bffd17 	ldw	r2,-12(r2)
   1042c:	8085883a 	add	r2,r16,r2
   10430:	11001117 	ldw	r4,68(r2)
   10434:	00170900 	call	17090 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   10438:	80800017 	ldw	r2,0(r16)
   1043c:	01800404 	movi	r6,16
   10440:	000b883a 	mov	r5,zero
   10444:	10bffd17 	ldw	r2,-12(r2)
   10448:	8085883a 	add	r2,r16,r2
   1044c:	11001217 	ldw	r4,72(r2)
   10450:	00170900 	call	17090 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   10454:	80800017 	ldw	r2,0(r16)
   10458:	01800404 	movi	r6,16
   1045c:	000b883a 	mov	r5,zero
   10460:	10bffd17 	ldw	r2,-12(r2)
   10464:	8085883a 	add	r2,r16,r2
   10468:	11001317 	ldw	r4,76(r2)
   1046c:	00170900 	call	17090 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   10470:	80800017 	ldw	r2,0(r16)
   10474:	01800104 	movi	r6,4
   10478:	000b883a 	mov	r5,zero
   1047c:	10bffd17 	ldw	r2,-12(r2)
   10480:	8085883a 	add	r2,r16,r2
   10484:	11001417 	ldw	r4,80(r2)
   10488:	00170900 	call	17090 <memset>
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   1048c:	80800017 	ldw	r2,0(r16)
   10490:	01800104 	movi	r6,4
   10494:	000b883a 	mov	r5,zero
   10498:	10bffd17 	ldw	r2,-12(r2)
   1049c:	8085883a 	add	r2,r16,r2
   104a0:	11001517 	ldw	r4,84(r2)
   104a4:	00170900 	call	17090 <memset>
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   104a8:	80800017 	ldw	r2,0(r16)
   104ac:	01800104 	movi	r6,4
   104b0:	000b883a 	mov	r5,zero
   104b4:	10bffd17 	ldw	r2,-12(r2)
   104b8:	8085883a 	add	r2,r16,r2
   104bc:	11001617 	ldw	r4,88(r2)
   104c0:	00170900 	call	17090 <memset>
	state = initialrun;
   104c4:	80000115 	stw	zero,4(r16)
}
   104c8:	dfc00117 	ldw	ra,4(sp)
   104cc:	dc000017 	ldw	r16,0(sp)
   104d0:	dec00204 	addi	sp,sp,8
   104d4:	f800283a 	ret

000104d8 <_ZN21PositionControllerPan10IsFinishedEv>:
	return (state == finished);
   104d8:	20800117 	ldw	r2,4(r4)
   104dc:	108000a0 	cmpeqi	r2,r2,2
}
   104e0:	f800283a 	ret

000104e4 <_ZN21PositionControllerPan9TerminateEPfS0_>:
{
   104e4:	defffd04 	addi	sp,sp,-12
   104e8:	dc400115 	stw	r17,4(sp)
   104ec:	dc000015 	stw	r16,0(sp)
   104f0:	dfc00215 	stw	ra,8(sp)
   104f4:	2021883a 	mov	r16,r4
   104f8:	3023883a 	mov	r17,r6
	CopyInputsToVariables (u);
   104fc:	00103500 	call	10350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>
	CopyVariablesToOutputs (y);
   10500:	880b883a 	mov	r5,r17
   10504:	8009883a 	mov	r4,r16
}
   10508:	dfc00217 	ldw	ra,8(sp)
   1050c:	dc400117 	ldw	r17,4(sp)
   10510:	dc000017 	ldw	r16,0(sp)
   10514:	dec00304 	addi	sp,sp,12
	CopyVariablesToOutputs (y);
   10518:	00103741 	jmpi	10374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>

0001051c <_ZN21PositionControllerPan16CalculateInitialEv>:
}
   1051c:	f800283a 	ret

00010520 <_ZN21PositionControllerPan15CalculateStaticEv>:
   10520:	f800283a 	ret

00010524 <_ZN21PositionControllerPan14CalculateInputEv>:
   10524:	f800283a 	ret

00010528 <_ZN21PositionControllerPan15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerPan::CalculateOutput (void)
{
	/* corr = corrGain\corr; */
	m_V[6] = m_V[0];
   10528:	20800017 	ldw	r2,0(r4)
   1052c:	10bffd17 	ldw	r2,-12(r2)
   10530:	2089883a 	add	r4,r4,r2
   10534:	20801117 	ldw	r2,68(r4)
   10538:	10c00017 	ldw	r3,0(r2)
   1053c:	10c00615 	stw	r3,24(r2)

	/* out = SignalLimiter2\output; */
	m_V[9] = m_V[4];
   10540:	10c00417 	ldw	r3,16(r2)
   10544:	10c00915 	stw	r3,36(r2)

}
   10548:	f800283a 	ret

0001054c <_ZN21PositionControllerPan14CalculateFinalEv>:
   1054c:	f800283a 	ret

00010550 <_ZN21PositionControllerPan13SetFinishTimeEf>:



bool PositionControllerPan::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   10550:	20800017 	ldw	r2,0(r4)
   10554:	10bffd17 	ldw	r2,-12(r2)
   10558:	2089883a 	add	r4,r4,r2
   1055c:	0005883a 	mov	r2,zero
   10560:	2885f9b2 	custom	230,r2,r5,r2
   10564:	1000031e 	bne	r2,zero,10574 <_ZN21PositionControllerPan13SetFinishTimeEf+0x24>
   10568:	20800517 	ldw	r2,20(r4)
   1056c:	1145f9f2 	custom	231,r2,r2,r5
   10570:	10000326 	beq	r2,zero,10580 <_ZN21PositionControllerPan13SetFinishTimeEf+0x30>
	{
		m_finish_time = newtime;
   10574:	21400415 	stw	r5,16(r4)
		return true;
   10578:	00800044 	movi	r2,1
   1057c:	f800283a 	ret
	}

	return false;
   10580:	0005883a 	mov	r2,zero
}
   10584:	f800283a 	ret

00010588 <_ZN21PositionControllerPanC4Ev>:
{
   10588:	00800074 	movhi	r2,1
   1058c:	deffed04 	addi	sp,sp,-76
   10590:	108bf204 	addi	r2,r2,12232
   10594:	d8800a15 	stw	r2,40(sp)
   10598:	008000b4 	movhi	r2,2
   1059c:	10a19504 	addi	r2,r2,-31148
   105a0:	d8800b15 	stw	r2,44(sp)
   105a4:	00800074 	movhi	r2,1
   105a8:	10829004 	addi	r2,r2,2624
   105ac:	d9000015 	stw	r4,0(sp)
   105b0:	d9000404 	addi	r4,sp,16
   105b4:	d8800d15 	stw	r2,52(sp)
   105b8:	dfc01215 	stw	ra,72(sp)
   105bc:	df001115 	stw	fp,68(sp)
   105c0:	d9400115 	stw	r5,4(sp)
   105c4:	d9800215 	stw	r6,8(sp)
   105c8:	df000c15 	stw	fp,48(sp)
   105cc:	dec00e15 	stw	sp,56(sp)
   105d0:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
PositionControllerPan::PositionControllerPan(void)
   105d4:	d8800117 	ldw	r2,4(sp)
   105d8:	10012126 	beq	r2,zero,10a60 <_ZN21PositionControllerPanC4Ev+0x4d8>
#ifndef SUBMODEL20SIM_H
#define SUBMODEL20SIM_H

#include "xxtypes.h"

class Submodel20sim
   105dc:	d8c00017 	ldw	r3,0(sp)
   105e0:	008000b4 	movhi	r2,2
   105e4:	10a1d704 	addi	r2,r2,-30884
   105e8:	18800415 	stw	r2,16(r3)
   105ec:	008000b4 	movhi	r2,2
   105f0:	10a1dd04 	addi	r2,r2,-30860
   105f4:	d8c00017 	ldw	r3,0(sp)
   105f8:	18800015 	stw	r2,0(r3)
   105fc:	d8c00117 	ldw	r3,4(sp)
   10600:	18005b1e 	bne	r3,zero,10770 <_ZN21PositionControllerPanC4Ev+0x1e8>
   10604:	d8c00217 	ldw	r3,8(sp)
   10608:	10bffd17 	ldw	r2,-12(r2)
   1060c:	18c00117 	ldw	r3,4(r3)
   10610:	d9000017 	ldw	r4,0(sp)
   10614:	2085883a 	add	r2,r4,r2
   10618:	10c00015 	stw	r3,0(r2)
   1061c:	20800204 	addi	r2,r4,8
   10620:	d8800215 	stw	r2,8(sp)
   10624:	d9000217 	ldw	r4,8(sp)
   10628:	00bfffc4 	movi	r2,-1
   1062c:	d8800515 	stw	r2,20(sp)
   10630:	00102340 	call	10234 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   10634:	d8800117 	ldw	r2,4(sp)
   10638:	1000511e 	bne	r2,zero,10780 <_ZN21PositionControllerPanC4Ev+0x1f8>
   1063c:	d8800017 	ldw	r2,0(sp)
   10640:	10800017 	ldw	r2,0(r2)
   10644:	10bffd17 	ldw	r2,-12(r2)
   10648:	d8c00017 	ldw	r3,0(sp)
   1064c:	1885883a 	add	r2,r3,r2
   10650:	10000615 	stw	zero,24(r2)
	m_number_parameters = 7;
   10654:	d8800117 	ldw	r2,4(sp)
   10658:	10004b1e 	bne	r2,zero,10788 <_ZN21PositionControllerPanC4Ev+0x200>
   1065c:	18800017 	ldw	r2,0(r3)
   10660:	10bffd17 	ldw	r2,-12(r2)
   10664:	d8c00017 	ldw	r3,0(sp)
   10668:	1885883a 	add	r2,r3,r2
   1066c:	00c001c4 	movi	r3,7
   10670:	10c00715 	stw	r3,28(r2)
	m_number_initialvalues = 3;
   10674:	d8800117 	ldw	r2,4(sp)
   10678:	1000451e 	bne	r2,zero,10790 <_ZN21PositionControllerPanC4Ev+0x208>
   1067c:	d8800017 	ldw	r2,0(sp)
   10680:	10800017 	ldw	r2,0(r2)
   10684:	10bffd17 	ldw	r2,-12(r2)
   10688:	d8c00017 	ldw	r3,0(sp)
   1068c:	1885883a 	add	r2,r3,r2
   10690:	00c000c4 	movi	r3,3
   10694:	10c00815 	stw	r3,32(r2)
	m_number_variables = 10;
   10698:	d8800117 	ldw	r2,4(sp)
   1069c:	10003e1e 	bne	r2,zero,10798 <_ZN21PositionControllerPanC4Ev+0x210>
   106a0:	d8800017 	ldw	r2,0(sp)
   106a4:	10800017 	ldw	r2,0(r2)
   106a8:	10bffd17 	ldw	r2,-12(r2)
   106ac:	d8c00017 	ldw	r3,0(sp)
   106b0:	1885883a 	add	r2,r3,r2
   106b4:	00c00284 	movi	r3,10
   106b8:	10c00915 	stw	r3,36(r2)
	m_number_states = 3;
   106bc:	d8800117 	ldw	r2,4(sp)
   106c0:	1000371e 	bne	r2,zero,107a0 <_ZN21PositionControllerPanC4Ev+0x218>
   106c4:	d8800017 	ldw	r2,0(sp)
   106c8:	10800017 	ldw	r2,0(r2)
   106cc:	10bffd17 	ldw	r2,-12(r2)
   106d0:	d8c00017 	ldw	r3,0(sp)
   106d4:	1885883a 	add	r2,r3,r2
   106d8:	00c000c4 	movi	r3,3
   106dc:	10c00a15 	stw	r3,40(r2)
	m_number_rates = 3;
   106e0:	d8800117 	ldw	r2,4(sp)
   106e4:	1000301e 	bne	r2,zero,107a8 <_ZN21PositionControllerPanC4Ev+0x220>
   106e8:	d8800017 	ldw	r2,0(sp)
   106ec:	10800017 	ldw	r2,0(r2)
   106f0:	10bffd17 	ldw	r2,-12(r2)
   106f4:	d8c00017 	ldw	r3,0(sp)
   106f8:	1885883a 	add	r2,r3,r2
   106fc:	00c000c4 	movi	r3,3
   10700:	10c00b15 	stw	r3,44(r2)
	m_number_matrices = 0;
   10704:	d8800117 	ldw	r2,4(sp)
   10708:	1000291e 	bne	r2,zero,107b0 <_ZN21PositionControllerPanC4Ev+0x228>
   1070c:	d8800017 	ldw	r2,0(sp)
   10710:	10800017 	ldw	r2,0(r2)
   10714:	10bffd17 	ldw	r2,-12(r2)
   10718:	d8c00017 	ldw	r3,0(sp)
   1071c:	1885883a 	add	r2,r3,r2
   10720:	10000c15 	stw	zero,48(r2)
	m_number_unnamed = 0;
   10724:	d8800117 	ldw	r2,4(sp)
   10728:	1000231e 	bne	r2,zero,107b8 <_ZN21PositionControllerPanC4Ev+0x230>
   1072c:	18800017 	ldw	r2,0(r3)
   10730:	10bffd17 	ldw	r2,-12(r2)
   10734:	d8c00017 	ldw	r3,0(sp)
   10738:	1885883a 	add	r2,r3,r2
   1073c:	10000d15 	stw	zero,52(r2)
	m_C = new XXDouble[0 + 1];		/* constants */
   10740:	d8800117 	ldw	r2,4(sp)
   10744:	10001e1e 	bne	r2,zero,107c0 <_ZN21PositionControllerPanC4Ev+0x238>
   10748:	18800017 	ldw	r2,0(r3)
   1074c:	10bffd17 	ldw	r2,-12(r2)
   10750:	d8c00017 	ldw	r3,0(sp)
   10754:	01000104 	movi	r4,4
   10758:	1885883a 	add	r2,r3,r2
   1075c:	d8800315 	stw	r2,12(sp)
   10760:	00800044 	movi	r2,1
   10764:	d8800515 	stw	r2,20(sp)
   10768:	0013b3c0 	call	13b3c <_Znaj>
   1076c:	00001606 	br	107c8 <_ZN21PositionControllerPanC4Ev+0x240>
PositionControllerPan::PositionControllerPan(void)
   10770:	00c000b4 	movhi	r3,2
   10774:	18e1e404 	addi	r3,r3,-30832
   10778:	00800404 	movi	r2,16
   1077c:	003fa406 	br	10610 <_ZN21PositionControllerPanC4Ev+0x88>
	m_number_constants = 0;
   10780:	00800404 	movi	r2,16
   10784:	003fb006 	br	10648 <_ZN21PositionControllerPanC4Ev+0xc0>
	m_number_parameters = 7;
   10788:	00800404 	movi	r2,16
   1078c:	003fb506 	br	10664 <_ZN21PositionControllerPanC4Ev+0xdc>
	m_number_initialvalues = 3;
   10790:	00800404 	movi	r2,16
   10794:	003fbc06 	br	10688 <_ZN21PositionControllerPanC4Ev+0x100>
	m_number_variables = 10;
   10798:	00800404 	movi	r2,16
   1079c:	003fc306 	br	106ac <_ZN21PositionControllerPanC4Ev+0x124>
	m_number_states = 3;
   107a0:	00800404 	movi	r2,16
   107a4:	003fca06 	br	106d0 <_ZN21PositionControllerPanC4Ev+0x148>
	m_number_rates = 3;
   107a8:	00800404 	movi	r2,16
   107ac:	003fd106 	br	106f4 <_ZN21PositionControllerPanC4Ev+0x16c>
	m_number_matrices = 0;
   107b0:	00800404 	movi	r2,16
   107b4:	003fd806 	br	10718 <_ZN21PositionControllerPanC4Ev+0x190>
	m_number_unnamed = 0;
   107b8:	00800404 	movi	r2,16
   107bc:	003fdd06 	br	10734 <_ZN21PositionControllerPanC4Ev+0x1ac>
	m_C = new XXDouble[0 + 1];		/* constants */
   107c0:	00800404 	movi	r2,16
   107c4:	003fe206 	br	10750 <_ZN21PositionControllerPanC4Ev+0x1c8>
   107c8:	d8c00317 	ldw	r3,12(sp)
   107cc:	18800e15 	stw	r2,56(r3)
	m_P = new XXDouble[7 + 1];		/* parameters */
   107d0:	d8800117 	ldw	r2,4(sp)
   107d4:	10000b1e 	bne	r2,zero,10804 <_ZN21PositionControllerPanC4Ev+0x27c>
   107d8:	d8800017 	ldw	r2,0(sp)
   107dc:	10800017 	ldw	r2,0(r2)
   107e0:	10bffd17 	ldw	r2,-12(r2)
   107e4:	d8c00017 	ldw	r3,0(sp)
   107e8:	01000804 	movi	r4,32
   107ec:	1885883a 	add	r2,r3,r2
   107f0:	d8800315 	stw	r2,12(sp)
   107f4:	00800044 	movi	r2,1
   107f8:	d8800515 	stw	r2,20(sp)
   107fc:	0013b3c0 	call	13b3c <_Znaj>
   10800:	00000206 	br	1080c <_ZN21PositionControllerPanC4Ev+0x284>
   10804:	00800404 	movi	r2,16
   10808:	003ff606 	br	107e4 <_ZN21PositionControllerPanC4Ev+0x25c>
   1080c:	d8c00317 	ldw	r3,12(sp)
   10810:	18800f15 	stw	r2,60(r3)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10814:	d8800117 	ldw	r2,4(sp)
   10818:	10000b1e 	bne	r2,zero,10848 <_ZN21PositionControllerPanC4Ev+0x2c0>
   1081c:	d8800017 	ldw	r2,0(sp)
   10820:	10800017 	ldw	r2,0(r2)
   10824:	10bffd17 	ldw	r2,-12(r2)
   10828:	d8c00017 	ldw	r3,0(sp)
   1082c:	01000404 	movi	r4,16
   10830:	1885883a 	add	r2,r3,r2
   10834:	d8800315 	stw	r2,12(sp)
   10838:	00800044 	movi	r2,1
   1083c:	d8800515 	stw	r2,20(sp)
   10840:	0013b3c0 	call	13b3c <_Znaj>
   10844:	00000206 	br	10850 <_ZN21PositionControllerPanC4Ev+0x2c8>
   10848:	00800404 	movi	r2,16
   1084c:	003ff606 	br	10828 <_ZN21PositionControllerPanC4Ev+0x2a0>
   10850:	d8c00317 	ldw	r3,12(sp)
   10854:	18801015 	stw	r2,64(r3)
	m_V = new XXDouble[10 + 1];		/* variables */
   10858:	d8800117 	ldw	r2,4(sp)
   1085c:	10000b1e 	bne	r2,zero,1088c <_ZN21PositionControllerPanC4Ev+0x304>
   10860:	d8800017 	ldw	r2,0(sp)
   10864:	10800017 	ldw	r2,0(r2)
   10868:	10bffd17 	ldw	r2,-12(r2)
   1086c:	d8c00017 	ldw	r3,0(sp)
   10870:	01000b04 	movi	r4,44
   10874:	1885883a 	add	r2,r3,r2
   10878:	d8800315 	stw	r2,12(sp)
   1087c:	00800044 	movi	r2,1
   10880:	d8800515 	stw	r2,20(sp)
   10884:	0013b3c0 	call	13b3c <_Znaj>
   10888:	00000206 	br	10894 <_ZN21PositionControllerPanC4Ev+0x30c>
   1088c:	00800404 	movi	r2,16
   10890:	003ff606 	br	1086c <_ZN21PositionControllerPanC4Ev+0x2e4>
   10894:	d8c00317 	ldw	r3,12(sp)
   10898:	18801115 	stw	r2,68(r3)
	m_s = new XXDouble[3 + 1];		/* states */
   1089c:	d8800117 	ldw	r2,4(sp)
   108a0:	10000b1e 	bne	r2,zero,108d0 <_ZN21PositionControllerPanC4Ev+0x348>
   108a4:	d8800017 	ldw	r2,0(sp)
   108a8:	10800017 	ldw	r2,0(r2)
   108ac:	10bffd17 	ldw	r2,-12(r2)
   108b0:	d8c00017 	ldw	r3,0(sp)
   108b4:	01000404 	movi	r4,16
   108b8:	1885883a 	add	r2,r3,r2
   108bc:	d8800315 	stw	r2,12(sp)
   108c0:	00800044 	movi	r2,1
   108c4:	d8800515 	stw	r2,20(sp)
   108c8:	0013b3c0 	call	13b3c <_Znaj>
   108cc:	00000206 	br	108d8 <_ZN21PositionControllerPanC4Ev+0x350>
   108d0:	00800404 	movi	r2,16
   108d4:	003ff606 	br	108b0 <_ZN21PositionControllerPanC4Ev+0x328>
   108d8:	d8c00317 	ldw	r3,12(sp)
   108dc:	18801215 	stw	r2,72(r3)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   108e0:	d8800117 	ldw	r2,4(sp)
   108e4:	10000b1e 	bne	r2,zero,10914 <_ZN21PositionControllerPanC4Ev+0x38c>
   108e8:	d8800017 	ldw	r2,0(sp)
   108ec:	10800017 	ldw	r2,0(r2)
   108f0:	10bffd17 	ldw	r2,-12(r2)
   108f4:	d8c00017 	ldw	r3,0(sp)
   108f8:	01000404 	movi	r4,16
   108fc:	1885883a 	add	r2,r3,r2
   10900:	d8800315 	stw	r2,12(sp)
   10904:	00800044 	movi	r2,1
   10908:	d8800515 	stw	r2,20(sp)
   1090c:	0013b3c0 	call	13b3c <_Znaj>
   10910:	00000206 	br	1091c <_ZN21PositionControllerPanC4Ev+0x394>
   10914:	00800404 	movi	r2,16
   10918:	003ff606 	br	108f4 <_ZN21PositionControllerPanC4Ev+0x36c>
   1091c:	d8c00317 	ldw	r3,12(sp)
   10920:	18801315 	stw	r2,76(r3)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10924:	d8800117 	ldw	r2,4(sp)
   10928:	10000b1e 	bne	r2,zero,10958 <_ZN21PositionControllerPanC4Ev+0x3d0>
   1092c:	d8800017 	ldw	r2,0(sp)
   10930:	10800017 	ldw	r2,0(r2)
   10934:	10bffd17 	ldw	r2,-12(r2)
   10938:	d8c00017 	ldw	r3,0(sp)
   1093c:	01000304 	movi	r4,12
   10940:	1885883a 	add	r2,r3,r2
   10944:	d8800315 	stw	r2,12(sp)
   10948:	00800044 	movi	r2,1
   1094c:	d8800515 	stw	r2,20(sp)
   10950:	0013b3c0 	call	13b3c <_Znaj>
   10954:	00000206 	br	10960 <_ZN21PositionControllerPanC4Ev+0x3d8>
   10958:	00800404 	movi	r2,16
   1095c:	003ff606 	br	10938 <_ZN21PositionControllerPanC4Ev+0x3b0>
   10960:	d8c00317 	ldw	r3,12(sp)
   10964:	18801415 	stw	r2,80(r3)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10968:	d8800117 	ldw	r2,4(sp)
   1096c:	10000b1e 	bne	r2,zero,1099c <_ZN21PositionControllerPanC4Ev+0x414>
   10970:	d8800017 	ldw	r2,0(sp)
   10974:	10800017 	ldw	r2,0(r2)
   10978:	10bffd17 	ldw	r2,-12(r2)
   1097c:	d8c00017 	ldw	r3,0(sp)
   10980:	01000104 	movi	r4,4
   10984:	1885883a 	add	r2,r3,r2
   10988:	d8800315 	stw	r2,12(sp)
   1098c:	00800044 	movi	r2,1
   10990:	d8800515 	stw	r2,20(sp)
   10994:	0013b3c0 	call	13b3c <_Znaj>
   10998:	00000206 	br	109a4 <_ZN21PositionControllerPanC4Ev+0x41c>
   1099c:	00800404 	movi	r2,16
   109a0:	003ff606 	br	1097c <_ZN21PositionControllerPanC4Ev+0x3f4>
   109a4:	d8c00317 	ldw	r3,12(sp)
   109a8:	18801515 	stw	r2,84(r3)
	m_workarray = new XXDouble[0 + 1];
   109ac:	d8800117 	ldw	r2,4(sp)
   109b0:	10000b1e 	bne	r2,zero,109e0 <_ZN21PositionControllerPanC4Ev+0x458>
   109b4:	d8800017 	ldw	r2,0(sp)
   109b8:	10800017 	ldw	r2,0(r2)
   109bc:	10bffd17 	ldw	r2,-12(r2)
   109c0:	d8c00017 	ldw	r3,0(sp)
   109c4:	01000104 	movi	r4,4
   109c8:	1885883a 	add	r2,r3,r2
   109cc:	d8800315 	stw	r2,12(sp)
   109d0:	00800044 	movi	r2,1
   109d4:	d8800515 	stw	r2,20(sp)
   109d8:	0013b3c0 	call	13b3c <_Znaj>
   109dc:	00000206 	br	109e8 <_ZN21PositionControllerPanC4Ev+0x460>
   109e0:	00800404 	movi	r2,16
   109e4:	003ff606 	br	109c0 <_ZN21PositionControllerPanC4Ev+0x438>
   109e8:	d8c00317 	ldw	r3,12(sp)
	Reset(0.0);
   109ec:	d9000017 	ldw	r4,0(sp)
   109f0:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   109f4:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   109f8:	00103980 	call	10398 <_ZN21PositionControllerPan5ResetEf>
	m_finish_time = 20.0;
   109fc:	d8800117 	ldw	r2,4(sp)
   10a00:	10000d1e 	bne	r2,zero,10a38 <_ZN21PositionControllerPanC4Ev+0x4b0>
   10a04:	d8800017 	ldw	r2,0(sp)
   10a08:	10800017 	ldw	r2,0(r2)
   10a0c:	10bffd17 	ldw	r2,-12(r2)
   10a10:	d8c00017 	ldw	r3,0(sp)
   10a14:	d9000404 	addi	r4,sp,16
   10a18:	1885883a 	add	r2,r3,r2
   10a1c:	00d06834 	movhi	r3,16800
   10a20:	10c00415 	stw	r3,16(r2)
   10a24:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
}
   10a28:	dfc01217 	ldw	ra,72(sp)
   10a2c:	df001117 	ldw	fp,68(sp)
   10a30:	dec01304 	addi	sp,sp,76
   10a34:	f800283a 	ret
	m_finish_time = 20.0;
   10a38:	00800404 	movi	r2,16
   10a3c:	003ff406 	br	10a10 <_ZN21PositionControllerPanC4Ev+0x488>
PositionControllerPan::PositionControllerPan(void)
   10a40:	d8800617 	ldw	r2,24(sp)
   10a44:	d9000217 	ldw	r4,8(sp)
   10a48:	d8800015 	stw	r2,0(sp)
   10a4c:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   10a50:	d9000017 	ldw	r4,0(sp)
   10a54:	00bfffc4 	movi	r2,-1
   10a58:	d8800515 	stw	r2,20(sp)
   10a5c:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>
   10a60:	d8800217 	ldw	r2,8(sp)
   10a64:	10800017 	ldw	r2,0(r2)
   10a68:	003ee206 	br	105f4 <_ZN21PositionControllerPanC4Ev+0x6c>

00010a6c <_ZN21PositionControllerPanC2Ev>:
}
   10a6c:	280d883a 	mov	r6,r5
   10a70:	000b883a 	mov	r5,zero
   10a74:	00105881 	jmpi	10588 <_ZN21PositionControllerPanC4Ev>

00010a78 <_ZN21PositionControllerPanC1Ev>:
   10a78:	000d883a 	mov	r6,zero
   10a7c:	01400044 	movi	r5,1
   10a80:	00105881 	jmpi	10588 <_ZN21PositionControllerPanC4Ev>

00010a84 <_ZN21PositionControllerPanD4Ev>:
{
   10a84:	defffd04 	addi	sp,sp,-12
   10a88:	dc400115 	stw	r17,4(sp)
   10a8c:	dc000015 	stw	r16,0(sp)
   10a90:	dfc00215 	stw	ra,8(sp)
   10a94:	2021883a 	mov	r16,r4
   10a98:	2823883a 	mov	r17,r5
PositionControllerPan::~PositionControllerPan(void)
   10a9c:	2800481e 	bne	r5,zero,10bc0 <_ZN21PositionControllerPanD4Ev+0x13c>
   10aa0:	30800017 	ldw	r2,0(r6)
   10aa4:	80800015 	stw	r2,0(r16)
   10aa8:	8800481e 	bne	r17,zero,10bcc <_ZN21PositionControllerPanD4Ev+0x148>
   10aac:	30c00117 	ldw	r3,4(r6)
   10ab0:	10bffd17 	ldw	r2,-12(r2)
   10ab4:	8085883a 	add	r2,r16,r2
	delete[] m_C;
   10ab8:	11000e17 	ldw	r4,56(r2)
PositionControllerPan::~PositionControllerPan(void)
   10abc:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   10ac0:	20000126 	beq	r4,zero,10ac8 <_ZN21PositionControllerPanD4Ev+0x44>
   10ac4:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_P;
   10ac8:	8800441e 	bne	r17,zero,10bdc <_ZN21PositionControllerPanD4Ev+0x158>
   10acc:	80800017 	ldw	r2,0(r16)
   10ad0:	10bffd17 	ldw	r2,-12(r2)
   10ad4:	8085883a 	add	r2,r16,r2
   10ad8:	11000f17 	ldw	r4,60(r2)
   10adc:	20000126 	beq	r4,zero,10ae4 <_ZN21PositionControllerPanD4Ev+0x60>
   10ae0:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_I;
   10ae4:	88003f1e 	bne	r17,zero,10be4 <_ZN21PositionControllerPanD4Ev+0x160>
   10ae8:	80800017 	ldw	r2,0(r16)
   10aec:	10bffd17 	ldw	r2,-12(r2)
   10af0:	8085883a 	add	r2,r16,r2
   10af4:	11001017 	ldw	r4,64(r2)
   10af8:	20000126 	beq	r4,zero,10b00 <_ZN21PositionControllerPanD4Ev+0x7c>
   10afc:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_V;
   10b00:	88003a1e 	bne	r17,zero,10bec <_ZN21PositionControllerPanD4Ev+0x168>
   10b04:	80800017 	ldw	r2,0(r16)
   10b08:	10bffd17 	ldw	r2,-12(r2)
   10b0c:	8085883a 	add	r2,r16,r2
   10b10:	11001117 	ldw	r4,68(r2)
   10b14:	20000126 	beq	r4,zero,10b1c <_ZN21PositionControllerPanD4Ev+0x98>
   10b18:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_s;
   10b1c:	8800351e 	bne	r17,zero,10bf4 <_ZN21PositionControllerPanD4Ev+0x170>
   10b20:	80800017 	ldw	r2,0(r16)
   10b24:	10bffd17 	ldw	r2,-12(r2)
   10b28:	8085883a 	add	r2,r16,r2
   10b2c:	11001217 	ldw	r4,72(r2)
   10b30:	20000126 	beq	r4,zero,10b38 <_ZN21PositionControllerPanD4Ev+0xb4>
   10b34:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_R;
   10b38:	8800301e 	bne	r17,zero,10bfc <_ZN21PositionControllerPanD4Ev+0x178>
   10b3c:	80800017 	ldw	r2,0(r16)
   10b40:	10bffd17 	ldw	r2,-12(r2)
   10b44:	8085883a 	add	r2,r16,r2
   10b48:	11001317 	ldw	r4,76(r2)
   10b4c:	20000126 	beq	r4,zero,10b54 <_ZN21PositionControllerPanD4Ev+0xd0>
   10b50:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_M;
   10b54:	88002b1e 	bne	r17,zero,10c04 <_ZN21PositionControllerPanD4Ev+0x180>
   10b58:	80800017 	ldw	r2,0(r16)
   10b5c:	10bffd17 	ldw	r2,-12(r2)
   10b60:	8085883a 	add	r2,r16,r2
   10b64:	11001417 	ldw	r4,80(r2)
   10b68:	20000126 	beq	r4,zero,10b70 <_ZN21PositionControllerPanD4Ev+0xec>
   10b6c:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_U;
   10b70:	8800261e 	bne	r17,zero,10c0c <_ZN21PositionControllerPanD4Ev+0x188>
   10b74:	80800017 	ldw	r2,0(r16)
   10b78:	10bffd17 	ldw	r2,-12(r2)
   10b7c:	8085883a 	add	r2,r16,r2
   10b80:	11001517 	ldw	r4,84(r2)
   10b84:	20000126 	beq	r4,zero,10b8c <_ZN21PositionControllerPanD4Ev+0x108>
   10b88:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_workarray;
   10b8c:	8800211e 	bne	r17,zero,10c14 <_ZN21PositionControllerPanD4Ev+0x190>
   10b90:	80800017 	ldw	r2,0(r16)
   10b94:	10bffd17 	ldw	r2,-12(r2)
   10b98:	8085883a 	add	r2,r16,r2
   10b9c:	11001617 	ldw	r4,88(r2)
   10ba0:	20000126 	beq	r4,zero,10ba8 <_ZN21PositionControllerPanD4Ev+0x124>
   10ba4:	0012aa00 	call	12aa0 <_ZdaPv>
PositionControllerPan::~PositionControllerPan(void)
   10ba8:	81000204 	addi	r4,r16,8
}
   10bac:	dfc00217 	ldw	ra,8(sp)
   10bb0:	dc400117 	ldw	r17,4(sp)
   10bb4:	dc000017 	ldw	r16,0(sp)
   10bb8:	dec00304 	addi	sp,sp,12
PositionControllerPan::~PositionControllerPan(void)
   10bbc:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>
   10bc0:	008000b4 	movhi	r2,2
   10bc4:	10a1dd04 	addi	r2,r2,-30860
   10bc8:	003fb606 	br	10aa4 <_ZN21PositionControllerPanD4Ev+0x20>
   10bcc:	00c000b4 	movhi	r3,2
   10bd0:	18e1e404 	addi	r3,r3,-30832
   10bd4:	00800404 	movi	r2,16
   10bd8:	003fb606 	br	10ab4 <_ZN21PositionControllerPanD4Ev+0x30>
	delete[] m_P;
   10bdc:	00800404 	movi	r2,16
   10be0:	003fbc06 	br	10ad4 <_ZN21PositionControllerPanD4Ev+0x50>
	delete[] m_I;
   10be4:	00800404 	movi	r2,16
   10be8:	003fc106 	br	10af0 <_ZN21PositionControllerPanD4Ev+0x6c>
	delete[] m_V;
   10bec:	00800404 	movi	r2,16
   10bf0:	003fc606 	br	10b0c <_ZN21PositionControllerPanD4Ev+0x88>
	delete[] m_s;
   10bf4:	00800404 	movi	r2,16
   10bf8:	003fcb06 	br	10b28 <_ZN21PositionControllerPanD4Ev+0xa4>
	delete[] m_R;
   10bfc:	00800404 	movi	r2,16
   10c00:	003fd006 	br	10b44 <_ZN21PositionControllerPanD4Ev+0xc0>
	delete[] m_M;
   10c04:	00800404 	movi	r2,16
   10c08:	003fd506 	br	10b60 <_ZN21PositionControllerPanD4Ev+0xdc>
	delete[] m_U;
   10c0c:	00800404 	movi	r2,16
   10c10:	003fda06 	br	10b7c <_ZN21PositionControllerPanD4Ev+0xf8>
	delete[] m_workarray;
   10c14:	00800404 	movi	r2,16
   10c18:	003fdf06 	br	10b98 <_ZN21PositionControllerPanD4Ev+0x114>

00010c1c <_ZN21PositionControllerPanD2Ev>:
}
   10c1c:	280d883a 	mov	r6,r5
   10c20:	000b883a 	mov	r5,zero
   10c24:	0010a841 	jmpi	10a84 <_ZN21PositionControllerPanD4Ev>

00010c28 <_ZN21PositionControllerPanD1Ev>:
   10c28:	000d883a 	mov	r6,zero
   10c2c:	01400084 	movi	r5,2
   10c30:	0010a841 	jmpi	10a84 <_ZN21PositionControllerPanD4Ev>

00010c34 <_ZTv0_n16_N21PositionControllerPanD1Ev>:
		virtual ~PositionControllerPan(void);
   10c34:	2009883a 	mov	r4,r4
   10c38:	20800017 	ldw	r2,0(r4)
   10c3c:	10bffc04 	addi	r2,r2,-16
   10c40:	10800017 	ldw	r2,0(r2)
   10c44:	2089883a 	add	r4,r4,r2
   10c48:	0010c281 	jmpi	10c28 <_ZN21PositionControllerPanD1Ev>

00010c4c <_ZN21PositionControllerPanD0Ev>:
PositionControllerPan::~PositionControllerPan(void)
   10c4c:	defffe04 	addi	sp,sp,-8
   10c50:	dc000015 	stw	r16,0(sp)
   10c54:	dfc00115 	stw	ra,4(sp)
   10c58:	2021883a 	mov	r16,r4
}
   10c5c:	0010c280 	call	10c28 <_ZN21PositionControllerPanD1Ev>
   10c60:	01401b04 	movi	r5,108
   10c64:	8009883a 	mov	r4,r16
   10c68:	dfc00117 	ldw	ra,4(sp)
   10c6c:	dc000017 	ldw	r16,0(sp)
   10c70:	dec00204 	addi	sp,sp,8
   10c74:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00010c78 <_ZTv0_n16_N21PositionControllerPanD0Ev>:
   10c78:	2009883a 	mov	r4,r4
   10c7c:	20800017 	ldw	r2,0(r4)
   10c80:	10bffc04 	addi	r2,r2,-16
   10c84:	10800017 	ldw	r2,0(r2)
   10c88:	2089883a 	add	r4,r4,r2
   10c8c:	0010c4c1 	jmpi	10c4c <_ZN21PositionControllerPanD0Ev>

00010c90 <_ZN21PositionControllerPan10InitializeEPfS0_f>:
	m_initialize = true;
   10c90:	20800017 	ldw	r2,0(r4)
{
   10c94:	defffb04 	addi	sp,sp,-20
   10c98:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   10c9c:	10bffd17 	ldw	r2,-12(r2)
{
   10ca0:	dcc00315 	stw	r19,12(sp)
   10ca4:	dc800215 	stw	r18,8(sp)
   10ca8:	dc400115 	stw	r17,4(sp)
   10cac:	dc000015 	stw	r16,0(sp)
   10cb0:	2825883a 	mov	r18,r5
	m_initialize = true;
   10cb4:	208b883a 	add	r5,r4,r2
   10cb8:	00800044 	movi	r2,1
   10cbc:	28800105 	stb	r2,4(r5)
	m_P[0] = 0.0;		/* corrGain\K */
   10cc0:	28800f17 	ldw	r2,60(r5)
	m_P[1] = 2.6;		/* PID1\kp */
   10cc4:	00d009b4 	movhi	r3,16422
	m_stop_run = false;
   10cc8:	28000185 	stb	zero,6(r5)
	m_P[1] = 2.6;		/* PID1\kp */
   10ccc:	18d99984 	addi	r3,r3,26214
   10cd0:	10c00115 	stw	r3,4(r2)
	m_P[2] = 0.05;		/* PID1\tauD */
   10cd4:	00cf5374 	movhi	r3,15693
   10cd8:	18f33344 	addi	r3,r3,-13107
   10cdc:	10c00215 	stw	r3,8(r2)
	m_P[3] = 0.17;		/* PID1\beta */
   10ce0:	00cf8bb4 	movhi	r3,15918
   10ce4:	18c51ec4 	addi	r3,r3,5243
   10ce8:	10c00315 	stw	r3,12(r2)
	m_P[4] = 9.0;		/* PID1\tauI */
   10cec:	00d04434 	movhi	r3,16656
   10cf0:	10c00415 	stw	r3,16(r2)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10cf4:	00efdf74 	movhi	r3,49021
   10cf8:	18dc2904 	addi	r3,r3,28836
   10cfc:	10c00515 	stw	r3,20(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10d00:	00cfdf74 	movhi	r3,16253
   10d04:	18dc2904 	addi	r3,r3,28836
	m_P[0] = 0.0;		/* corrGain\K */
   10d08:	10000015 	stw	zero,0(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10d0c:	10c00615 	stw	r3,24(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10d10:	28801017 	ldw	r2,64(r5)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10d14:	28c01217 	ldw	r3,72(r5)
{
   10d18:	2021883a 	mov	r16,r4
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   10d1c:	10000115 	stw	zero,4(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10d20:	10000015 	stw	zero,0(r2)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   10d24:	10000215 	stw	zero,8(r2)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10d28:	18000015 	stw	zero,0(r3)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10d2c:	11000117 	ldw	r4,4(r2)
{
   10d30:	3023883a 	mov	r17,r6
   10d34:	3827883a 	mov	r19,r7
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10d38:	19000115 	stw	r4,4(r3)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10d3c:	10800217 	ldw	r2,8(r2)
	myintegmethod.Initialize(this);
   10d40:	81000204 	addi	r4,r16,8
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10d44:	18800215 	stw	r2,8(r3)
	myintegmethod.Initialize(this);
   10d48:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   10d4c:	80800017 	ldw	r2,0(r16)
	CopyInputsToVariables (u);
   10d50:	900b883a 	mov	r5,r18
   10d54:	8009883a 	mov	r4,r16
	m_time = t;
   10d58:	10bffd17 	ldw	r2,-12(r2)
   10d5c:	8085883a 	add	r2,r16,r2
   10d60:	14c00515 	stw	r19,20(r2)
	CopyInputsToVariables (u);
   10d64:	00103500 	call	10350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>
	CalculateDynamic ();
   10d68:	80800017 	ldw	r2,0(r16)
   10d6c:	8009883a 	mov	r4,r16
   10d70:	10800217 	ldw	r2,8(r2)
   10d74:	103ee83a 	callr	r2
	CalculateOutput ();
   10d78:	8009883a 	mov	r4,r16
   10d7c:	00105280 	call	10528 <_ZN21PositionControllerPan15CalculateOutputEv>
	CopyVariablesToOutputs (y);
   10d80:	880b883a 	mov	r5,r17
   10d84:	8009883a 	mov	r4,r16
   10d88:	00103740 	call	10374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>
	m_initialize = false;
   10d8c:	80800017 	ldw	r2,0(r16)
   10d90:	10bffd17 	ldw	r2,-12(r2)
   10d94:	8085883a 	add	r2,r16,r2
   10d98:	10000105 	stb	zero,4(r2)
	state = mainrun;
   10d9c:	00800044 	movi	r2,1
   10da0:	80800115 	stw	r2,4(r16)
}
   10da4:	dfc00417 	ldw	ra,16(sp)
   10da8:	dcc00317 	ldw	r19,12(sp)
   10dac:	dc800217 	ldw	r18,8(sp)
   10db0:	dc400117 	ldw	r17,4(sp)
   10db4:	dc000017 	ldw	r16,0(sp)
   10db8:	dec00504 	addi	sp,sp,20
   10dbc:	f800283a 	ret

00010dc0 <_ZN21PositionControllerPan9CalculateEPfS0_>:
	switch (state)
   10dc0:	20800117 	ldw	r2,4(r4)
   10dc4:	10000326 	beq	r2,zero,10dd4 <_ZN21PositionControllerPan9CalculateEPfS0_+0x14>
   10dc8:	10800060 	cmpeqi	r2,r2,1
   10dcc:	1000031e 	bne	r2,zero,10ddc <_ZN21PositionControllerPan9CalculateEPfS0_+0x1c>
   10dd0:	f800283a 	ret
			Initialize(u, y, 0.0);
   10dd4:	000f883a 	mov	r7,zero
   10dd8:	0010c901 	jmpi	10c90 <_ZN21PositionControllerPan10InitializeEPfS0_f>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10ddc:	20800017 	ldw	r2,0(r4)
{
   10de0:	defffd04 	addi	sp,sp,-12
   10de4:	dc400115 	stw	r17,4(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10de8:	10fffd17 	ldw	r3,-12(r2)
{
   10dec:	dc000015 	stw	r16,0(sp)
   10df0:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10df4:	20c7883a 	add	r3,r4,r3
   10df8:	18800217 	ldw	r2,8(r3)
   10dfc:	2021883a 	mov	r16,r4
   10e00:	19000417 	ldw	r4,16(r3)
   10e04:	280f883a 	mov	r7,r5
   10e08:	18c00517 	ldw	r3,20(r3)
   10e0c:	014cf5f4 	movhi	r5,13271
   10e10:	2085ffb2 	custom	254,r2,r4,r2
   10e14:	296fe544 	addi	r5,r5,-16491
   10e18:	1145ff72 	custom	253,r2,r2,r5
   10e1c:	1885f9b2 	custom	230,r2,r3,r2
   10e20:	3023883a 	mov	r17,r6
   10e24:	1000021e 	bne	r2,zero,10e30 <_ZN21PositionControllerPan9CalculateEPfS0_+0x70>
   10e28:	2089f8b2 	custom	226,r4,r4,r2
   10e2c:	2000201e 	bne	r4,zero,10eb0 <_ZN21PositionControllerPan9CalculateEPfS0_+0xf0>
				CopyInputsToVariables (u);
   10e30:	380b883a 	mov	r5,r7
   10e34:	8009883a 	mov	r4,r16
   10e38:	00103500 	call	10350 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>
				myintegmethod.Step();
   10e3c:	81000204 	addi	r4,r16,8
   10e40:	00101d40 	call	101d4 <_ZN8Discrete4StepEv>
				CalculateOutput ();
   10e44:	8009883a 	mov	r4,r16
   10e48:	00105280 	call	10528 <_ZN21PositionControllerPan15CalculateOutputEv>
				CopyVariablesToOutputs (y);
   10e4c:	880b883a 	mov	r5,r17
   10e50:	8009883a 	mov	r4,r16
   10e54:	00103740 	call	10374 <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10e58:	80800017 	ldw	r2,0(r16)
   10e5c:	10bffd17 	ldw	r2,-12(r2)
   10e60:	8085883a 	add	r2,r16,r2
   10e64:	10c00183 	ldbu	r3,6(r2)
   10e68:	18000a1e 	bne	r3,zero,10e94 <_ZN21PositionControllerPan9CalculateEPfS0_+0xd4>
   10e6c:	10c00417 	ldw	r3,16(r2)
   10e70:	0009883a 	mov	r4,zero
   10e74:	1909f8f2 	custom	227,r4,r3,r4
   10e78:	2000081e 	bne	r4,zero,10e9c <_ZN21PositionControllerPan9CalculateEPfS0_+0xdc>
   10e7c:	10800517 	ldw	r2,20(r2)
   10e80:	010cf5f4 	movhi	r4,13271
   10e84:	212fe544 	addi	r4,r4,-16491
   10e88:	1105ff72 	custom	253,r2,r2,r4
   10e8c:	1887f9b2 	custom	230,r3,r3,r2
   10e90:	18000226 	beq	r3,zero,10e9c <_ZN21PositionControllerPan9CalculateEPfS0_+0xdc>
				state = finished;
   10e94:	00800084 	movi	r2,2
   10e98:	80800115 	stw	r2,4(r16)
}
   10e9c:	dfc00217 	ldw	ra,8(sp)
   10ea0:	dc400117 	ldw	r17,4(sp)
   10ea4:	dc000017 	ldw	r16,0(sp)
   10ea8:	dec00304 	addi	sp,sp,12
   10eac:	f800283a 	ret
				state = finished;
   10eb0:	00800084 	movi	r2,2
   10eb4:	80800115 	stw	r2,4(r16)
   10eb8:	003fe706 	br	10e58 <_ZN21PositionControllerPan9CalculateEPfS0_+0x98>

00010ebc <_ZN13Submodel20sim16CalculateDynamicEv>:
		friend class IntegrationMethod;
		friend class Discrete;
		friend class Euler;
		friend class RungeKutta2;
		friend class RungeKutta4;
		virtual void CalculateDynamic (void) {};
   10ebc:	f800283a 	ret

00010ec0 <_ZN13Submodel20simD1Ev>:
		XXDouble m_start_time;
		XXDouble m_finish_time;
		XXDouble m_time;

	public:
		virtual ~Submodel20sim(){};
   10ec0:	f800283a 	ret

00010ec4 <_ZN13Submodel20simD0Ev>:
   10ec4:	01401704 	movi	r5,92
   10ec8:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00010ecc <_ZN22PositionControllerTilt16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerTilt::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10ecc:	20800017 	ldw	r2,0(r4)
   10ed0:	10bffd17 	ldw	r2,-12(r2)
   10ed4:	2089883a 	add	r4,r4,r2
   10ed8:	21400f17 	ldw	r5,60(r4)
   10edc:	20c01117 	ldw	r3,68(r4)

	/* corrGain\output = corrGain\K * corrGain\input; */
	m_V[1] = m_P[0] * m_V[0];

	/* PID1\error = PlusMinus2\plus1 - PlusMinus2\minus1; */
	m_R[1] = m_V[5] - m_V[6];
   10ee0:	22801317 	ldw	r10,76(r4)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10ee4:	29800317 	ldw	r6,12(r5)
   10ee8:	28800217 	ldw	r2,8(r5)
	m_V[6] = m_V[10];
   10eec:	19c00a17 	ldw	r7,40(r3)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10ef0:	22c01217 	ldw	r11,72(r4)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10ef4:	1185ff32 	custom	252,r2,r2,r6
   10ef8:	21800217 	ldw	r6,8(r4)
	m_V[6] = m_V[10];
   10efc:	19c00615 	stw	r7,24(r3)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10f00:	1185ff72 	custom	253,r2,r2,r6
   10f04:	018fe034 	movhi	r6,16256
   10f08:	3085fff2 	custom	255,r2,r6,r2
   10f0c:	18800315 	stw	r2,12(r3)
	m_V[5] = m_V[9];
   10f10:	19800917 	ldw	r6,36(r3)
	m_V[0] = m_V[8];
   10f14:	18800817 	ldw	r2,32(r3)
	m_V[5] = m_V[9];
   10f18:	19800515 	stw	r6,20(r3)
	m_V[0] = m_V[8];
   10f1c:	18800015 	stw	r2,0(r3)
	m_V[1] = m_P[0] * m_V[0];
   10f20:	2a000017 	ldw	r8,0(r5)
	m_R[1] = m_V[5] - m_V[6];
   10f24:	31cfffb2 	custom	254,r7,r6,r7
	m_V[1] = m_P[0] * m_V[0];
   10f28:	4091ff32 	custom	252,r8,r8,r2
   10f2c:	1a000115 	stw	r8,4(r3)
	m_R[1] = m_V[5] - m_V[6];
   10f30:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10f34:	2a400217 	ldw	r9,8(r5)
   10f38:	58800017 	ldw	r2,0(r11)
   10f3c:	2a000317 	ldw	r8,12(r5)
   10f40:	29800117 	ldw	r6,4(r5)
   10f44:	4885ff32 	custom	252,r2,r9,r2
   10f48:	1205ff32 	custom	252,r2,r2,r8
   10f4c:	5a000117 	ldw	r8,4(r11)
   10f50:	4993ff32 	custom	252,r9,r9,r6
   10f54:	3a11ffb2 	custom	254,r8,r7,r8
   10f58:	4251ff32 	custom	252,r8,r8,r9
   10f5c:	1205ff72 	custom	253,r2,r2,r8
   10f60:	22000217 	ldw	r8,8(r4)
   10f64:	320dff32 	custom	252,r6,r6,r8
   10f68:	31cdff32 	custom	252,r6,r6,r7
   10f6c:	1185ff72 	custom	253,r2,r2,r6
   10f70:	19800317 	ldw	r6,12(r3)
   10f74:	1185ff32 	custom	252,r2,r2,r6
   10f78:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f7c:	21000217 	ldw	r4,8(r4)
   10f80:	29800417 	ldw	r6,16(r5)
   10f84:	1109ff32 	custom	252,r4,r2,r4
   10f88:	2189fff2 	custom	255,r4,r4,r6
   10f8c:	59800217 	ldw	r6,8(r11)
   10f90:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[2] = m_R[2] + m_R[0];
   10f94:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f98:	51000215 	stw	r4,8(r10)
	m_V[2] = m_R[2] + m_R[0];
   10f9c:	18800215 	stw	r2,8(r3)

	/* PlusMinus1\output = corrGain\output + PID1\output; */
	m_V[4] = m_V[1] + m_V[2];
   10fa0:	19000117 	ldw	r4,4(r3)
   10fa4:	1105ff72 	custom	253,r2,r2,r4
   10fa8:	18800415 	stw	r2,16(r3)

	/* SignalLimiter2\output = (if PlusMinus1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) end); */
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10fac:	29000517 	ldw	r4,20(r5)
   10fb0:	110df9f2 	custom	231,r6,r2,r4
   10fb4:	3000041e 	bne	r6,zero,10fc8 <_ZN22PositionControllerTilt16CalculateDynamicEv+0xfc>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) */
		((m_V[4] > m_P[6]) ? 
   10fb8:	29000617 	ldw	r4,24(r5)
   10fbc:	110bf972 	custom	229,r5,r2,r4
   10fc0:	2800011e 	bne	r5,zero,10fc8 <_ZN22PositionControllerTilt16CalculateDynamicEv+0xfc>
   10fc4:	1009883a 	mov	r4,r2
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10fc8:	19000715 	stw	r4,28(r3)
			/* PlusMinus1\output */
			m_V[4]
		)
	);

}
   10fcc:	f800283a 	ret

00010fd0 <_ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10fd0:	2009883a 	mov	r4,r4
   10fd4:	20800017 	ldw	r2,0(r4)
   10fd8:	10bffd04 	addi	r2,r2,-12
   10fdc:	10800017 	ldw	r2,0(r2)
   10fe0:	2089883a 	add	r4,r4,r2
   10fe4:	0010ecc1 	jmpi	10ecc <_ZN22PositionControllerTilt16CalculateDynamicEv>

00010fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>:
	m_V[8] = u[0];		/* corr */
   10fe8:	20800017 	ldw	r2,0(r4)
   10fec:	28c00017 	ldw	r3,0(r5)
   10ff0:	10bffd17 	ldw	r2,-12(r2)
   10ff4:	2089883a 	add	r4,r4,r2
   10ff8:	20801117 	ldw	r2,68(r4)
   10ffc:	10c00815 	stw	r3,32(r2)
	m_V[9] = u[1];		/* in */
   11000:	28c00117 	ldw	r3,4(r5)
   11004:	10c00915 	stw	r3,36(r2)
	m_V[10] = u[2];		/* position */
   11008:	28c00217 	ldw	r3,8(r5)
   1100c:	10c00a15 	stw	r3,40(r2)
}
   11010:	f800283a 	ret

00011014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[11];		/* out */
   11014:	20800017 	ldw	r2,0(r4)
   11018:	10bffd17 	ldw	r2,-12(r2)
   1101c:	2089883a 	add	r4,r4,r2
   11020:	20801117 	ldw	r2,68(r4)
   11024:	10800b17 	ldw	r2,44(r2)
   11028:	28800015 	stw	r2,0(r5)
}
   1102c:	f800283a 	ret

00011030 <_ZN22PositionControllerTilt5ResetEf>:
	m_start_time = starttime;
   11030:	20800017 	ldw	r2,0(r4)
{
   11034:	defffe04 	addi	sp,sp,-8
	m_step_size = 0.0001;
   11038:	00ce34b4 	movhi	r3,14546
	m_start_time = starttime;
   1103c:	10bffd17 	ldw	r2,-12(r2)
{
   11040:	dfc00115 	stw	ra,4(sp)
   11044:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   11048:	2085883a 	add	r2,r4,r2
{
   1104c:	2021883a 	mov	r16,r4
	m_step_size = 0.0001;
   11050:	18edc5c4 	addi	r3,r3,-18665
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   11054:	11000e17 	ldw	r4,56(r2)
	m_step_size = 0.0001;
   11058:	10c00215 	stw	r3,8(r2)
	m_major = true;
   1105c:	00c00044 	movi	r3,1
   11060:	10c00145 	stb	r3,5(r2)
	m_start_time = starttime;
   11064:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   11068:	11400515 	stw	r5,20(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   1106c:	01800104 	movi	r6,4
   11070:	000b883a 	mov	r5,zero
	m_stop_run = false;
   11074:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   11078:	00170900 	call	17090 <memset>
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   1107c:	80800017 	ldw	r2,0(r16)
   11080:	01800804 	movi	r6,32
   11084:	000b883a 	mov	r5,zero
   11088:	10bffd17 	ldw	r2,-12(r2)
   1108c:	8085883a 	add	r2,r16,r2
   11090:	11000f17 	ldw	r4,60(r2)
   11094:	00170900 	call	17090 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   11098:	80800017 	ldw	r2,0(r16)
   1109c:	01800404 	movi	r6,16
   110a0:	000b883a 	mov	r5,zero
   110a4:	10bffd17 	ldw	r2,-12(r2)
   110a8:	8085883a 	add	r2,r16,r2
   110ac:	11001017 	ldw	r4,64(r2)
   110b0:	00170900 	call	17090 <memset>
	memset(m_V, 0, (12 + 1) * sizeof(XXDouble));
   110b4:	80800017 	ldw	r2,0(r16)
   110b8:	01800d04 	movi	r6,52
   110bc:	000b883a 	mov	r5,zero
   110c0:	10bffd17 	ldw	r2,-12(r2)
   110c4:	8085883a 	add	r2,r16,r2
   110c8:	11001117 	ldw	r4,68(r2)
   110cc:	00170900 	call	17090 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   110d0:	80800017 	ldw	r2,0(r16)
   110d4:	01800404 	movi	r6,16
   110d8:	000b883a 	mov	r5,zero
   110dc:	10bffd17 	ldw	r2,-12(r2)
   110e0:	8085883a 	add	r2,r16,r2
   110e4:	11001217 	ldw	r4,72(r2)
   110e8:	00170900 	call	17090 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   110ec:	80800017 	ldw	r2,0(r16)
   110f0:	01800404 	movi	r6,16
   110f4:	000b883a 	mov	r5,zero
   110f8:	10bffd17 	ldw	r2,-12(r2)
   110fc:	8085883a 	add	r2,r16,r2
   11100:	11001317 	ldw	r4,76(r2)
   11104:	00170900 	call	17090 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   11108:	80800017 	ldw	r2,0(r16)
   1110c:	01800104 	movi	r6,4
   11110:	000b883a 	mov	r5,zero
   11114:	10bffd17 	ldw	r2,-12(r2)
   11118:	8085883a 	add	r2,r16,r2
   1111c:	11001417 	ldw	r4,80(r2)
   11120:	00170900 	call	17090 <memset>
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   11124:	80800017 	ldw	r2,0(r16)
   11128:	01800104 	movi	r6,4
   1112c:	000b883a 	mov	r5,zero
   11130:	10bffd17 	ldw	r2,-12(r2)
   11134:	8085883a 	add	r2,r16,r2
   11138:	11001517 	ldw	r4,84(r2)
   1113c:	00170900 	call	17090 <memset>
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   11140:	80800017 	ldw	r2,0(r16)
   11144:	01800104 	movi	r6,4
   11148:	000b883a 	mov	r5,zero
   1114c:	10bffd17 	ldw	r2,-12(r2)
   11150:	8085883a 	add	r2,r16,r2
   11154:	11001617 	ldw	r4,88(r2)
   11158:	00170900 	call	17090 <memset>
	state = initialrun;
   1115c:	80000115 	stw	zero,4(r16)
}
   11160:	dfc00117 	ldw	ra,4(sp)
   11164:	dc000017 	ldw	r16,0(sp)
   11168:	dec00204 	addi	sp,sp,8
   1116c:	f800283a 	ret

00011170 <_ZN22PositionControllerTilt10IsFinishedEv>:
	return (state == finished);
   11170:	20800117 	ldw	r2,4(r4)
   11174:	108000a0 	cmpeqi	r2,r2,2
}
   11178:	f800283a 	ret

0001117c <_ZN22PositionControllerTilt9TerminateEPfS0_>:
{
   1117c:	defffd04 	addi	sp,sp,-12
   11180:	dc400115 	stw	r17,4(sp)
   11184:	dc000015 	stw	r16,0(sp)
   11188:	dfc00215 	stw	ra,8(sp)
   1118c:	2021883a 	mov	r16,r4
   11190:	3023883a 	mov	r17,r6
	CopyInputsToVariables (u);
   11194:	0010fe80 	call	10fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>
	CopyVariablesToOutputs (y);
   11198:	880b883a 	mov	r5,r17
   1119c:	8009883a 	mov	r4,r16
}
   111a0:	dfc00217 	ldw	ra,8(sp)
   111a4:	dc400117 	ldw	r17,4(sp)
   111a8:	dc000017 	ldw	r16,0(sp)
   111ac:	dec00304 	addi	sp,sp,12
	CopyVariablesToOutputs (y);
   111b0:	00110141 	jmpi	11014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>

000111b4 <_ZN22PositionControllerTilt16CalculateInitialEv>:
}
   111b4:	f800283a 	ret

000111b8 <_ZN22PositionControllerTilt15CalculateStaticEv>:
   111b8:	f800283a 	ret

000111bc <_ZN22PositionControllerTilt14CalculateInputEv>:
   111bc:	f800283a 	ret

000111c0 <_ZN22PositionControllerTilt15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerTilt::CalculateOutput (void)
{
	/* out = SignalLimiter2\output; */
	m_V[11] = m_V[7];
   111c0:	20800017 	ldw	r2,0(r4)
   111c4:	10bffd17 	ldw	r2,-12(r2)
   111c8:	2089883a 	add	r4,r4,r2
   111cc:	20801117 	ldw	r2,68(r4)
   111d0:	10c00717 	ldw	r3,28(r2)
   111d4:	10c00b15 	stw	r3,44(r2)

}
   111d8:	f800283a 	ret

000111dc <_ZN22PositionControllerTilt14CalculateFinalEv>:
   111dc:	f800283a 	ret

000111e0 <_ZN22PositionControllerTilt13SetFinishTimeEf>:



bool PositionControllerTilt::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   111e0:	20800017 	ldw	r2,0(r4)
   111e4:	10bffd17 	ldw	r2,-12(r2)
   111e8:	2089883a 	add	r4,r4,r2
   111ec:	0005883a 	mov	r2,zero
   111f0:	2885f9b2 	custom	230,r2,r5,r2
   111f4:	1000031e 	bne	r2,zero,11204 <_ZN22PositionControllerTilt13SetFinishTimeEf+0x24>
   111f8:	20800517 	ldw	r2,20(r4)
   111fc:	1145f9f2 	custom	231,r2,r2,r5
   11200:	10000326 	beq	r2,zero,11210 <_ZN22PositionControllerTilt13SetFinishTimeEf+0x30>
	{
		m_finish_time = newtime;
   11204:	21400415 	stw	r5,16(r4)
		return true;
   11208:	00800044 	movi	r2,1
   1120c:	f800283a 	ret
	}

	return false;
   11210:	0005883a 	mov	r2,zero
}
   11214:	f800283a 	ret

00011218 <_ZN22PositionControllerTiltC4Ev>:
{
   11218:	00800074 	movhi	r2,1
   1121c:	deffed04 	addi	sp,sp,-76
   11220:	108bf204 	addi	r2,r2,12232
   11224:	d8800a15 	stw	r2,40(sp)
   11228:	008000b4 	movhi	r2,2
   1122c:	10a19684 	addi	r2,r2,-31142
   11230:	d8800b15 	stw	r2,44(sp)
   11234:	00800074 	movhi	r2,1
   11238:	1085b404 	addi	r2,r2,5840
   1123c:	d9000015 	stw	r4,0(sp)
   11240:	d9000404 	addi	r4,sp,16
   11244:	d8800d15 	stw	r2,52(sp)
   11248:	dfc01215 	stw	ra,72(sp)
   1124c:	df001115 	stw	fp,68(sp)
   11250:	d9400115 	stw	r5,4(sp)
   11254:	d9800215 	stw	r6,8(sp)
   11258:	df000c15 	stw	fp,48(sp)
   1125c:	dec00e15 	stw	sp,56(sp)
   11260:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
PositionControllerTilt::PositionControllerTilt(void)
   11264:	d8800117 	ldw	r2,4(sp)
   11268:	10012126 	beq	r2,zero,116f0 <_ZN22PositionControllerTiltC4Ev+0x4d8>
#ifndef SUBMODEL20SIM_H
#define SUBMODEL20SIM_H

#include "xxtypes.h"

class Submodel20sim
   1126c:	d8c00017 	ldw	r3,0(sp)
   11270:	008000b4 	movhi	r2,2
   11274:	10a1d704 	addi	r2,r2,-30884
   11278:	18800415 	stw	r2,16(r3)
   1127c:	008000b4 	movhi	r2,2
   11280:	10a1f704 	addi	r2,r2,-30756
   11284:	d8c00017 	ldw	r3,0(sp)
   11288:	18800015 	stw	r2,0(r3)
   1128c:	d8c00117 	ldw	r3,4(sp)
   11290:	18005b1e 	bne	r3,zero,11400 <_ZN22PositionControllerTiltC4Ev+0x1e8>
   11294:	d8c00217 	ldw	r3,8(sp)
   11298:	10bffd17 	ldw	r2,-12(r2)
   1129c:	18c00117 	ldw	r3,4(r3)
   112a0:	d9000017 	ldw	r4,0(sp)
   112a4:	2085883a 	add	r2,r4,r2
   112a8:	10c00015 	stw	r3,0(r2)
   112ac:	20800204 	addi	r2,r4,8
   112b0:	d8800215 	stw	r2,8(sp)
   112b4:	d9000217 	ldw	r4,8(sp)
   112b8:	00bfffc4 	movi	r2,-1
   112bc:	d8800515 	stw	r2,20(sp)
   112c0:	00102340 	call	10234 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   112c4:	d8800117 	ldw	r2,4(sp)
   112c8:	1000511e 	bne	r2,zero,11410 <_ZN22PositionControllerTiltC4Ev+0x1f8>
   112cc:	d8800017 	ldw	r2,0(sp)
   112d0:	10800017 	ldw	r2,0(r2)
   112d4:	10bffd17 	ldw	r2,-12(r2)
   112d8:	d8c00017 	ldw	r3,0(sp)
   112dc:	1885883a 	add	r2,r3,r2
   112e0:	10000615 	stw	zero,24(r2)
	m_number_parameters = 7;
   112e4:	d8800117 	ldw	r2,4(sp)
   112e8:	10004b1e 	bne	r2,zero,11418 <_ZN22PositionControllerTiltC4Ev+0x200>
   112ec:	18800017 	ldw	r2,0(r3)
   112f0:	10bffd17 	ldw	r2,-12(r2)
   112f4:	d8c00017 	ldw	r3,0(sp)
   112f8:	1885883a 	add	r2,r3,r2
   112fc:	00c001c4 	movi	r3,7
   11300:	10c00715 	stw	r3,28(r2)
	m_number_initialvalues = 3;
   11304:	d8800117 	ldw	r2,4(sp)
   11308:	1000451e 	bne	r2,zero,11420 <_ZN22PositionControllerTiltC4Ev+0x208>
   1130c:	d8800017 	ldw	r2,0(sp)
   11310:	10800017 	ldw	r2,0(r2)
   11314:	10bffd17 	ldw	r2,-12(r2)
   11318:	d8c00017 	ldw	r3,0(sp)
   1131c:	1885883a 	add	r2,r3,r2
   11320:	00c000c4 	movi	r3,3
   11324:	10c00815 	stw	r3,32(r2)
	m_number_variables = 12;
   11328:	d8800117 	ldw	r2,4(sp)
   1132c:	10003e1e 	bne	r2,zero,11428 <_ZN22PositionControllerTiltC4Ev+0x210>
   11330:	d8800017 	ldw	r2,0(sp)
   11334:	10800017 	ldw	r2,0(r2)
   11338:	10bffd17 	ldw	r2,-12(r2)
   1133c:	d8c00017 	ldw	r3,0(sp)
   11340:	1885883a 	add	r2,r3,r2
   11344:	00c00304 	movi	r3,12
   11348:	10c00915 	stw	r3,36(r2)
	m_number_states = 3;
   1134c:	d8800117 	ldw	r2,4(sp)
   11350:	1000371e 	bne	r2,zero,11430 <_ZN22PositionControllerTiltC4Ev+0x218>
   11354:	d8800017 	ldw	r2,0(sp)
   11358:	10800017 	ldw	r2,0(r2)
   1135c:	10bffd17 	ldw	r2,-12(r2)
   11360:	d8c00017 	ldw	r3,0(sp)
   11364:	1885883a 	add	r2,r3,r2
   11368:	00c000c4 	movi	r3,3
   1136c:	10c00a15 	stw	r3,40(r2)
	m_number_rates = 3;
   11370:	d8800117 	ldw	r2,4(sp)
   11374:	1000301e 	bne	r2,zero,11438 <_ZN22PositionControllerTiltC4Ev+0x220>
   11378:	d8800017 	ldw	r2,0(sp)
   1137c:	10800017 	ldw	r2,0(r2)
   11380:	10bffd17 	ldw	r2,-12(r2)
   11384:	d8c00017 	ldw	r3,0(sp)
   11388:	1885883a 	add	r2,r3,r2
   1138c:	00c000c4 	movi	r3,3
   11390:	10c00b15 	stw	r3,44(r2)
	m_number_matrices = 0;
   11394:	d8800117 	ldw	r2,4(sp)
   11398:	1000291e 	bne	r2,zero,11440 <_ZN22PositionControllerTiltC4Ev+0x228>
   1139c:	d8800017 	ldw	r2,0(sp)
   113a0:	10800017 	ldw	r2,0(r2)
   113a4:	10bffd17 	ldw	r2,-12(r2)
   113a8:	d8c00017 	ldw	r3,0(sp)
   113ac:	1885883a 	add	r2,r3,r2
   113b0:	10000c15 	stw	zero,48(r2)
	m_number_unnamed = 0;
   113b4:	d8800117 	ldw	r2,4(sp)
   113b8:	1000231e 	bne	r2,zero,11448 <_ZN22PositionControllerTiltC4Ev+0x230>
   113bc:	18800017 	ldw	r2,0(r3)
   113c0:	10bffd17 	ldw	r2,-12(r2)
   113c4:	d8c00017 	ldw	r3,0(sp)
   113c8:	1885883a 	add	r2,r3,r2
   113cc:	10000d15 	stw	zero,52(r2)
	m_C = new XXDouble[0 + 1];		/* constants */
   113d0:	d8800117 	ldw	r2,4(sp)
   113d4:	10001e1e 	bne	r2,zero,11450 <_ZN22PositionControllerTiltC4Ev+0x238>
   113d8:	18800017 	ldw	r2,0(r3)
   113dc:	10bffd17 	ldw	r2,-12(r2)
   113e0:	d8c00017 	ldw	r3,0(sp)
   113e4:	01000104 	movi	r4,4
   113e8:	1885883a 	add	r2,r3,r2
   113ec:	d8800315 	stw	r2,12(sp)
   113f0:	00800044 	movi	r2,1
   113f4:	d8800515 	stw	r2,20(sp)
   113f8:	0013b3c0 	call	13b3c <_Znaj>
   113fc:	00001606 	br	11458 <_ZN22PositionControllerTiltC4Ev+0x240>
PositionControllerTilt::PositionControllerTilt(void)
   11400:	00c000b4 	movhi	r3,2
   11404:	18e1fe04 	addi	r3,r3,-30728
   11408:	00800404 	movi	r2,16
   1140c:	003fa406 	br	112a0 <_ZN22PositionControllerTiltC4Ev+0x88>
	m_number_constants = 0;
   11410:	00800404 	movi	r2,16
   11414:	003fb006 	br	112d8 <_ZN22PositionControllerTiltC4Ev+0xc0>
	m_number_parameters = 7;
   11418:	00800404 	movi	r2,16
   1141c:	003fb506 	br	112f4 <_ZN22PositionControllerTiltC4Ev+0xdc>
	m_number_initialvalues = 3;
   11420:	00800404 	movi	r2,16
   11424:	003fbc06 	br	11318 <_ZN22PositionControllerTiltC4Ev+0x100>
	m_number_variables = 12;
   11428:	00800404 	movi	r2,16
   1142c:	003fc306 	br	1133c <_ZN22PositionControllerTiltC4Ev+0x124>
	m_number_states = 3;
   11430:	00800404 	movi	r2,16
   11434:	003fca06 	br	11360 <_ZN22PositionControllerTiltC4Ev+0x148>
	m_number_rates = 3;
   11438:	00800404 	movi	r2,16
   1143c:	003fd106 	br	11384 <_ZN22PositionControllerTiltC4Ev+0x16c>
	m_number_matrices = 0;
   11440:	00800404 	movi	r2,16
   11444:	003fd806 	br	113a8 <_ZN22PositionControllerTiltC4Ev+0x190>
	m_number_unnamed = 0;
   11448:	00800404 	movi	r2,16
   1144c:	003fdd06 	br	113c4 <_ZN22PositionControllerTiltC4Ev+0x1ac>
	m_C = new XXDouble[0 + 1];		/* constants */
   11450:	00800404 	movi	r2,16
   11454:	003fe206 	br	113e0 <_ZN22PositionControllerTiltC4Ev+0x1c8>
   11458:	d8c00317 	ldw	r3,12(sp)
   1145c:	18800e15 	stw	r2,56(r3)
	m_P = new XXDouble[7 + 1];		/* parameters */
   11460:	d8800117 	ldw	r2,4(sp)
   11464:	10000b1e 	bne	r2,zero,11494 <_ZN22PositionControllerTiltC4Ev+0x27c>
   11468:	d8800017 	ldw	r2,0(sp)
   1146c:	10800017 	ldw	r2,0(r2)
   11470:	10bffd17 	ldw	r2,-12(r2)
   11474:	d8c00017 	ldw	r3,0(sp)
   11478:	01000804 	movi	r4,32
   1147c:	1885883a 	add	r2,r3,r2
   11480:	d8800315 	stw	r2,12(sp)
   11484:	00800044 	movi	r2,1
   11488:	d8800515 	stw	r2,20(sp)
   1148c:	0013b3c0 	call	13b3c <_Znaj>
   11490:	00000206 	br	1149c <_ZN22PositionControllerTiltC4Ev+0x284>
   11494:	00800404 	movi	r2,16
   11498:	003ff606 	br	11474 <_ZN22PositionControllerTiltC4Ev+0x25c>
   1149c:	d8c00317 	ldw	r3,12(sp)
   114a0:	18800f15 	stw	r2,60(r3)
	m_I = new XXDouble[3 + 1];		/* initial values */
   114a4:	d8800117 	ldw	r2,4(sp)
   114a8:	10000b1e 	bne	r2,zero,114d8 <_ZN22PositionControllerTiltC4Ev+0x2c0>
   114ac:	d8800017 	ldw	r2,0(sp)
   114b0:	10800017 	ldw	r2,0(r2)
   114b4:	10bffd17 	ldw	r2,-12(r2)
   114b8:	d8c00017 	ldw	r3,0(sp)
   114bc:	01000404 	movi	r4,16
   114c0:	1885883a 	add	r2,r3,r2
   114c4:	d8800315 	stw	r2,12(sp)
   114c8:	00800044 	movi	r2,1
   114cc:	d8800515 	stw	r2,20(sp)
   114d0:	0013b3c0 	call	13b3c <_Znaj>
   114d4:	00000206 	br	114e0 <_ZN22PositionControllerTiltC4Ev+0x2c8>
   114d8:	00800404 	movi	r2,16
   114dc:	003ff606 	br	114b8 <_ZN22PositionControllerTiltC4Ev+0x2a0>
   114e0:	d8c00317 	ldw	r3,12(sp)
   114e4:	18801015 	stw	r2,64(r3)
	m_V = new XXDouble[12 + 1];		/* variables */
   114e8:	d8800117 	ldw	r2,4(sp)
   114ec:	10000b1e 	bne	r2,zero,1151c <_ZN22PositionControllerTiltC4Ev+0x304>
   114f0:	d8800017 	ldw	r2,0(sp)
   114f4:	10800017 	ldw	r2,0(r2)
   114f8:	10bffd17 	ldw	r2,-12(r2)
   114fc:	d8c00017 	ldw	r3,0(sp)
   11500:	01000d04 	movi	r4,52
   11504:	1885883a 	add	r2,r3,r2
   11508:	d8800315 	stw	r2,12(sp)
   1150c:	00800044 	movi	r2,1
   11510:	d8800515 	stw	r2,20(sp)
   11514:	0013b3c0 	call	13b3c <_Znaj>
   11518:	00000206 	br	11524 <_ZN22PositionControllerTiltC4Ev+0x30c>
   1151c:	00800404 	movi	r2,16
   11520:	003ff606 	br	114fc <_ZN22PositionControllerTiltC4Ev+0x2e4>
   11524:	d8c00317 	ldw	r3,12(sp)
   11528:	18801115 	stw	r2,68(r3)
	m_s = new XXDouble[3 + 1];		/* states */
   1152c:	d8800117 	ldw	r2,4(sp)
   11530:	10000b1e 	bne	r2,zero,11560 <_ZN22PositionControllerTiltC4Ev+0x348>
   11534:	d8800017 	ldw	r2,0(sp)
   11538:	10800017 	ldw	r2,0(r2)
   1153c:	10bffd17 	ldw	r2,-12(r2)
   11540:	d8c00017 	ldw	r3,0(sp)
   11544:	01000404 	movi	r4,16
   11548:	1885883a 	add	r2,r3,r2
   1154c:	d8800315 	stw	r2,12(sp)
   11550:	00800044 	movi	r2,1
   11554:	d8800515 	stw	r2,20(sp)
   11558:	0013b3c0 	call	13b3c <_Znaj>
   1155c:	00000206 	br	11568 <_ZN22PositionControllerTiltC4Ev+0x350>
   11560:	00800404 	movi	r2,16
   11564:	003ff606 	br	11540 <_ZN22PositionControllerTiltC4Ev+0x328>
   11568:	d8c00317 	ldw	r3,12(sp)
   1156c:	18801215 	stw	r2,72(r3)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11570:	d8800117 	ldw	r2,4(sp)
   11574:	10000b1e 	bne	r2,zero,115a4 <_ZN22PositionControllerTiltC4Ev+0x38c>
   11578:	d8800017 	ldw	r2,0(sp)
   1157c:	10800017 	ldw	r2,0(r2)
   11580:	10bffd17 	ldw	r2,-12(r2)
   11584:	d8c00017 	ldw	r3,0(sp)
   11588:	01000404 	movi	r4,16
   1158c:	1885883a 	add	r2,r3,r2
   11590:	d8800315 	stw	r2,12(sp)
   11594:	00800044 	movi	r2,1
   11598:	d8800515 	stw	r2,20(sp)
   1159c:	0013b3c0 	call	13b3c <_Znaj>
   115a0:	00000206 	br	115ac <_ZN22PositionControllerTiltC4Ev+0x394>
   115a4:	00800404 	movi	r2,16
   115a8:	003ff606 	br	11584 <_ZN22PositionControllerTiltC4Ev+0x36c>
   115ac:	d8c00317 	ldw	r3,12(sp)
   115b0:	18801315 	stw	r2,76(r3)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   115b4:	d8800117 	ldw	r2,4(sp)
   115b8:	10000b1e 	bne	r2,zero,115e8 <_ZN22PositionControllerTiltC4Ev+0x3d0>
   115bc:	d8800017 	ldw	r2,0(sp)
   115c0:	10800017 	ldw	r2,0(r2)
   115c4:	10bffd17 	ldw	r2,-12(r2)
   115c8:	d8c00017 	ldw	r3,0(sp)
   115cc:	01000304 	movi	r4,12
   115d0:	1885883a 	add	r2,r3,r2
   115d4:	d8800315 	stw	r2,12(sp)
   115d8:	00800044 	movi	r2,1
   115dc:	d8800515 	stw	r2,20(sp)
   115e0:	0013b3c0 	call	13b3c <_Znaj>
   115e4:	00000206 	br	115f0 <_ZN22PositionControllerTiltC4Ev+0x3d8>
   115e8:	00800404 	movi	r2,16
   115ec:	003ff606 	br	115c8 <_ZN22PositionControllerTiltC4Ev+0x3b0>
   115f0:	d8c00317 	ldw	r3,12(sp)
   115f4:	18801415 	stw	r2,80(r3)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   115f8:	d8800117 	ldw	r2,4(sp)
   115fc:	10000b1e 	bne	r2,zero,1162c <_ZN22PositionControllerTiltC4Ev+0x414>
   11600:	d8800017 	ldw	r2,0(sp)
   11604:	10800017 	ldw	r2,0(r2)
   11608:	10bffd17 	ldw	r2,-12(r2)
   1160c:	d8c00017 	ldw	r3,0(sp)
   11610:	01000104 	movi	r4,4
   11614:	1885883a 	add	r2,r3,r2
   11618:	d8800315 	stw	r2,12(sp)
   1161c:	00800044 	movi	r2,1
   11620:	d8800515 	stw	r2,20(sp)
   11624:	0013b3c0 	call	13b3c <_Znaj>
   11628:	00000206 	br	11634 <_ZN22PositionControllerTiltC4Ev+0x41c>
   1162c:	00800404 	movi	r2,16
   11630:	003ff606 	br	1160c <_ZN22PositionControllerTiltC4Ev+0x3f4>
   11634:	d8c00317 	ldw	r3,12(sp)
   11638:	18801515 	stw	r2,84(r3)
	m_workarray = new XXDouble[0 + 1];
   1163c:	d8800117 	ldw	r2,4(sp)
   11640:	10000b1e 	bne	r2,zero,11670 <_ZN22PositionControllerTiltC4Ev+0x458>
   11644:	d8800017 	ldw	r2,0(sp)
   11648:	10800017 	ldw	r2,0(r2)
   1164c:	10bffd17 	ldw	r2,-12(r2)
   11650:	d8c00017 	ldw	r3,0(sp)
   11654:	01000104 	movi	r4,4
   11658:	1885883a 	add	r2,r3,r2
   1165c:	d8800315 	stw	r2,12(sp)
   11660:	00800044 	movi	r2,1
   11664:	d8800515 	stw	r2,20(sp)
   11668:	0013b3c0 	call	13b3c <_Znaj>
   1166c:	00000206 	br	11678 <_ZN22PositionControllerTiltC4Ev+0x460>
   11670:	00800404 	movi	r2,16
   11674:	003ff606 	br	11650 <_ZN22PositionControllerTiltC4Ev+0x438>
   11678:	d8c00317 	ldw	r3,12(sp)
	Reset(0.0);
   1167c:	d9000017 	ldw	r4,0(sp)
   11680:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   11684:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   11688:	00110300 	call	11030 <_ZN22PositionControllerTilt5ResetEf>
	m_finish_time = 20.0;
   1168c:	d8800117 	ldw	r2,4(sp)
   11690:	10000d1e 	bne	r2,zero,116c8 <_ZN22PositionControllerTiltC4Ev+0x4b0>
   11694:	d8800017 	ldw	r2,0(sp)
   11698:	10800017 	ldw	r2,0(r2)
   1169c:	10bffd17 	ldw	r2,-12(r2)
   116a0:	d8c00017 	ldw	r3,0(sp)
   116a4:	d9000404 	addi	r4,sp,16
   116a8:	1885883a 	add	r2,r3,r2
   116ac:	00d06834 	movhi	r3,16800
   116b0:	10c00415 	stw	r3,16(r2)
   116b4:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
}
   116b8:	dfc01217 	ldw	ra,72(sp)
   116bc:	df001117 	ldw	fp,68(sp)
   116c0:	dec01304 	addi	sp,sp,76
   116c4:	f800283a 	ret
	m_finish_time = 20.0;
   116c8:	00800404 	movi	r2,16
   116cc:	003ff406 	br	116a0 <_ZN22PositionControllerTiltC4Ev+0x488>
PositionControllerTilt::PositionControllerTilt(void)
   116d0:	d8800617 	ldw	r2,24(sp)
   116d4:	d9000217 	ldw	r4,8(sp)
   116d8:	d8800015 	stw	r2,0(sp)
   116dc:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   116e0:	d9000017 	ldw	r4,0(sp)
   116e4:	00bfffc4 	movi	r2,-1
   116e8:	d8800515 	stw	r2,20(sp)
   116ec:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>
   116f0:	d8800217 	ldw	r2,8(sp)
   116f4:	10800017 	ldw	r2,0(r2)
   116f8:	003ee206 	br	11284 <_ZN22PositionControllerTiltC4Ev+0x6c>

000116fc <_ZN22PositionControllerTiltC2Ev>:
}
   116fc:	280d883a 	mov	r6,r5
   11700:	000b883a 	mov	r5,zero
   11704:	00112181 	jmpi	11218 <_ZN22PositionControllerTiltC4Ev>

00011708 <_ZN22PositionControllerTiltC1Ev>:
   11708:	000d883a 	mov	r6,zero
   1170c:	01400044 	movi	r5,1
   11710:	00112181 	jmpi	11218 <_ZN22PositionControllerTiltC4Ev>

00011714 <_ZN22PositionControllerTiltD4Ev>:
{
   11714:	defffd04 	addi	sp,sp,-12
   11718:	dc400115 	stw	r17,4(sp)
   1171c:	dc000015 	stw	r16,0(sp)
   11720:	dfc00215 	stw	ra,8(sp)
   11724:	2021883a 	mov	r16,r4
   11728:	2823883a 	mov	r17,r5
PositionControllerTilt::~PositionControllerTilt(void)
   1172c:	2800481e 	bne	r5,zero,11850 <_ZN22PositionControllerTiltD4Ev+0x13c>
   11730:	30800017 	ldw	r2,0(r6)
   11734:	80800015 	stw	r2,0(r16)
   11738:	8800481e 	bne	r17,zero,1185c <_ZN22PositionControllerTiltD4Ev+0x148>
   1173c:	30c00117 	ldw	r3,4(r6)
   11740:	10bffd17 	ldw	r2,-12(r2)
   11744:	8085883a 	add	r2,r16,r2
	delete[] m_C;
   11748:	11000e17 	ldw	r4,56(r2)
PositionControllerTilt::~PositionControllerTilt(void)
   1174c:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   11750:	20000126 	beq	r4,zero,11758 <_ZN22PositionControllerTiltD4Ev+0x44>
   11754:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_P;
   11758:	8800441e 	bne	r17,zero,1186c <_ZN22PositionControllerTiltD4Ev+0x158>
   1175c:	80800017 	ldw	r2,0(r16)
   11760:	10bffd17 	ldw	r2,-12(r2)
   11764:	8085883a 	add	r2,r16,r2
   11768:	11000f17 	ldw	r4,60(r2)
   1176c:	20000126 	beq	r4,zero,11774 <_ZN22PositionControllerTiltD4Ev+0x60>
   11770:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_I;
   11774:	88003f1e 	bne	r17,zero,11874 <_ZN22PositionControllerTiltD4Ev+0x160>
   11778:	80800017 	ldw	r2,0(r16)
   1177c:	10bffd17 	ldw	r2,-12(r2)
   11780:	8085883a 	add	r2,r16,r2
   11784:	11001017 	ldw	r4,64(r2)
   11788:	20000126 	beq	r4,zero,11790 <_ZN22PositionControllerTiltD4Ev+0x7c>
   1178c:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_V;
   11790:	88003a1e 	bne	r17,zero,1187c <_ZN22PositionControllerTiltD4Ev+0x168>
   11794:	80800017 	ldw	r2,0(r16)
   11798:	10bffd17 	ldw	r2,-12(r2)
   1179c:	8085883a 	add	r2,r16,r2
   117a0:	11001117 	ldw	r4,68(r2)
   117a4:	20000126 	beq	r4,zero,117ac <_ZN22PositionControllerTiltD4Ev+0x98>
   117a8:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_s;
   117ac:	8800351e 	bne	r17,zero,11884 <_ZN22PositionControllerTiltD4Ev+0x170>
   117b0:	80800017 	ldw	r2,0(r16)
   117b4:	10bffd17 	ldw	r2,-12(r2)
   117b8:	8085883a 	add	r2,r16,r2
   117bc:	11001217 	ldw	r4,72(r2)
   117c0:	20000126 	beq	r4,zero,117c8 <_ZN22PositionControllerTiltD4Ev+0xb4>
   117c4:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_R;
   117c8:	8800301e 	bne	r17,zero,1188c <_ZN22PositionControllerTiltD4Ev+0x178>
   117cc:	80800017 	ldw	r2,0(r16)
   117d0:	10bffd17 	ldw	r2,-12(r2)
   117d4:	8085883a 	add	r2,r16,r2
   117d8:	11001317 	ldw	r4,76(r2)
   117dc:	20000126 	beq	r4,zero,117e4 <_ZN22PositionControllerTiltD4Ev+0xd0>
   117e0:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_M;
   117e4:	88002b1e 	bne	r17,zero,11894 <_ZN22PositionControllerTiltD4Ev+0x180>
   117e8:	80800017 	ldw	r2,0(r16)
   117ec:	10bffd17 	ldw	r2,-12(r2)
   117f0:	8085883a 	add	r2,r16,r2
   117f4:	11001417 	ldw	r4,80(r2)
   117f8:	20000126 	beq	r4,zero,11800 <_ZN22PositionControllerTiltD4Ev+0xec>
   117fc:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_U;
   11800:	8800261e 	bne	r17,zero,1189c <_ZN22PositionControllerTiltD4Ev+0x188>
   11804:	80800017 	ldw	r2,0(r16)
   11808:	10bffd17 	ldw	r2,-12(r2)
   1180c:	8085883a 	add	r2,r16,r2
   11810:	11001517 	ldw	r4,84(r2)
   11814:	20000126 	beq	r4,zero,1181c <_ZN22PositionControllerTiltD4Ev+0x108>
   11818:	0012aa00 	call	12aa0 <_ZdaPv>
	delete[] m_workarray;
   1181c:	8800211e 	bne	r17,zero,118a4 <_ZN22PositionControllerTiltD4Ev+0x190>
   11820:	80800017 	ldw	r2,0(r16)
   11824:	10bffd17 	ldw	r2,-12(r2)
   11828:	8085883a 	add	r2,r16,r2
   1182c:	11001617 	ldw	r4,88(r2)
   11830:	20000126 	beq	r4,zero,11838 <_ZN22PositionControllerTiltD4Ev+0x124>
   11834:	0012aa00 	call	12aa0 <_ZdaPv>
PositionControllerTilt::~PositionControllerTilt(void)
   11838:	81000204 	addi	r4,r16,8
}
   1183c:	dfc00217 	ldw	ra,8(sp)
   11840:	dc400117 	ldw	r17,4(sp)
   11844:	dc000017 	ldw	r16,0(sp)
   11848:	dec00304 	addi	sp,sp,12
PositionControllerTilt::~PositionControllerTilt(void)
   1184c:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>
   11850:	008000b4 	movhi	r2,2
   11854:	10a1f704 	addi	r2,r2,-30756
   11858:	003fb606 	br	11734 <_ZN22PositionControllerTiltD4Ev+0x20>
   1185c:	00c000b4 	movhi	r3,2
   11860:	18e1fe04 	addi	r3,r3,-30728
   11864:	00800404 	movi	r2,16
   11868:	003fb606 	br	11744 <_ZN22PositionControllerTiltD4Ev+0x30>
	delete[] m_P;
   1186c:	00800404 	movi	r2,16
   11870:	003fbc06 	br	11764 <_ZN22PositionControllerTiltD4Ev+0x50>
	delete[] m_I;
   11874:	00800404 	movi	r2,16
   11878:	003fc106 	br	11780 <_ZN22PositionControllerTiltD4Ev+0x6c>
	delete[] m_V;
   1187c:	00800404 	movi	r2,16
   11880:	003fc606 	br	1179c <_ZN22PositionControllerTiltD4Ev+0x88>
	delete[] m_s;
   11884:	00800404 	movi	r2,16
   11888:	003fcb06 	br	117b8 <_ZN22PositionControllerTiltD4Ev+0xa4>
	delete[] m_R;
   1188c:	00800404 	movi	r2,16
   11890:	003fd006 	br	117d4 <_ZN22PositionControllerTiltD4Ev+0xc0>
	delete[] m_M;
   11894:	00800404 	movi	r2,16
   11898:	003fd506 	br	117f0 <_ZN22PositionControllerTiltD4Ev+0xdc>
	delete[] m_U;
   1189c:	00800404 	movi	r2,16
   118a0:	003fda06 	br	1180c <_ZN22PositionControllerTiltD4Ev+0xf8>
	delete[] m_workarray;
   118a4:	00800404 	movi	r2,16
   118a8:	003fdf06 	br	11828 <_ZN22PositionControllerTiltD4Ev+0x114>

000118ac <_ZN22PositionControllerTiltD2Ev>:
}
   118ac:	280d883a 	mov	r6,r5
   118b0:	000b883a 	mov	r5,zero
   118b4:	00117141 	jmpi	11714 <_ZN22PositionControllerTiltD4Ev>

000118b8 <_ZN22PositionControllerTiltD1Ev>:
   118b8:	000d883a 	mov	r6,zero
   118bc:	01400084 	movi	r5,2
   118c0:	00117141 	jmpi	11714 <_ZN22PositionControllerTiltD4Ev>

000118c4 <_ZTv0_n16_N22PositionControllerTiltD1Ev>:
		virtual ~PositionControllerTilt(void);
   118c4:	2009883a 	mov	r4,r4
   118c8:	20800017 	ldw	r2,0(r4)
   118cc:	10bffc04 	addi	r2,r2,-16
   118d0:	10800017 	ldw	r2,0(r2)
   118d4:	2089883a 	add	r4,r4,r2
   118d8:	00118b81 	jmpi	118b8 <_ZN22PositionControllerTiltD1Ev>

000118dc <_ZN22PositionControllerTiltD0Ev>:
PositionControllerTilt::~PositionControllerTilt(void)
   118dc:	defffe04 	addi	sp,sp,-8
   118e0:	dc000015 	stw	r16,0(sp)
   118e4:	dfc00115 	stw	ra,4(sp)
   118e8:	2021883a 	mov	r16,r4
}
   118ec:	00118b80 	call	118b8 <_ZN22PositionControllerTiltD1Ev>
   118f0:	01401b04 	movi	r5,108
   118f4:	8009883a 	mov	r4,r16
   118f8:	dfc00117 	ldw	ra,4(sp)
   118fc:	dc000017 	ldw	r16,0(sp)
   11900:	dec00204 	addi	sp,sp,8
   11904:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00011908 <_ZTv0_n16_N22PositionControllerTiltD0Ev>:
   11908:	2009883a 	mov	r4,r4
   1190c:	20800017 	ldw	r2,0(r4)
   11910:	10bffc04 	addi	r2,r2,-16
   11914:	10800017 	ldw	r2,0(r2)
   11918:	2089883a 	add	r4,r4,r2
   1191c:	00118dc1 	jmpi	118dc <_ZN22PositionControllerTiltD0Ev>

00011920 <_ZN22PositionControllerTilt10InitializeEPfS0_f>:
	m_initialize = true;
   11920:	20800017 	ldw	r2,0(r4)
{
   11924:	defffb04 	addi	sp,sp,-20
   11928:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   1192c:	10bffd17 	ldw	r2,-12(r2)
{
   11930:	dcc00315 	stw	r19,12(sp)
   11934:	dc800215 	stw	r18,8(sp)
   11938:	dc400115 	stw	r17,4(sp)
   1193c:	dc000015 	stw	r16,0(sp)
   11940:	2825883a 	mov	r18,r5
	m_initialize = true;
   11944:	208b883a 	add	r5,r4,r2
   11948:	00800044 	movi	r2,1
   1194c:	28800105 	stb	r2,4(r5)
	m_P[0] = 0.0;		/* corrGain\K */
   11950:	28800f17 	ldw	r2,60(r5)
	m_P[1] = 1.6;		/* PID1\kp */
   11954:	00cff374 	movhi	r3,16333
	m_stop_run = false;
   11958:	28000185 	stb	zero,6(r5)
	m_P[1] = 1.6;		/* PID1\kp */
   1195c:	18f33344 	addi	r3,r3,-13107
   11960:	10c00115 	stw	r3,4(r2)
	m_P[2] = 0.05;		/* PID1\tauD */
   11964:	00cf5374 	movhi	r3,15693
   11968:	18f33344 	addi	r3,r3,-13107
   1196c:	10c00215 	stw	r3,8(r2)
	m_P[3] = 0.001;		/* PID1\beta */
   11970:	00cea0f4 	movhi	r3,14979
   11974:	18c49bc4 	addi	r3,r3,4719
   11978:	10c00315 	stw	r3,12(r2)
	m_P[4] = 10.5;		/* PID1\tauI */
   1197c:	00d04a34 	movhi	r3,16680
   11980:	10c00415 	stw	r3,16(r2)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   11984:	00efdf74 	movhi	r3,49021
   11988:	18dc2904 	addi	r3,r3,28836
   1198c:	10c00515 	stw	r3,20(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11990:	00cfdf74 	movhi	r3,16253
   11994:	18dc2904 	addi	r3,r3,28836
	m_P[0] = 0.0;		/* corrGain\K */
   11998:	10000015 	stw	zero,0(r2)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   1199c:	10c00615 	stw	r3,24(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   119a0:	28801017 	ldw	r2,64(r5)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   119a4:	28c01217 	ldw	r3,72(r5)
{
   119a8:	2021883a 	mov	r16,r4
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   119ac:	10000115 	stw	zero,4(r2)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   119b0:	10000015 	stw	zero,0(r2)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   119b4:	10000215 	stw	zero,8(r2)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   119b8:	18000015 	stw	zero,0(r3)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   119bc:	11000117 	ldw	r4,4(r2)
{
   119c0:	3023883a 	mov	r17,r6
   119c4:	3827883a 	mov	r19,r7
	m_s[1] = m_I[1];		/* PID1\error_previous */
   119c8:	19000115 	stw	r4,4(r3)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   119cc:	10800217 	ldw	r2,8(r2)
	myintegmethod.Initialize(this);
   119d0:	81000204 	addi	r4,r16,8
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   119d4:	18800215 	stw	r2,8(r3)
	myintegmethod.Initialize(this);
   119d8:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   119dc:	80800017 	ldw	r2,0(r16)
	CopyInputsToVariables (u);
   119e0:	900b883a 	mov	r5,r18
   119e4:	8009883a 	mov	r4,r16
	m_time = t;
   119e8:	10bffd17 	ldw	r2,-12(r2)
   119ec:	8085883a 	add	r2,r16,r2
   119f0:	14c00515 	stw	r19,20(r2)
	CopyInputsToVariables (u);
   119f4:	0010fe80 	call	10fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>
	CalculateDynamic ();
   119f8:	80800017 	ldw	r2,0(r16)
   119fc:	8009883a 	mov	r4,r16
   11a00:	10800217 	ldw	r2,8(r2)
   11a04:	103ee83a 	callr	r2
	CalculateOutput ();
   11a08:	8009883a 	mov	r4,r16
   11a0c:	00111c00 	call	111c0 <_ZN22PositionControllerTilt15CalculateOutputEv>
	CopyVariablesToOutputs (y);
   11a10:	880b883a 	mov	r5,r17
   11a14:	8009883a 	mov	r4,r16
   11a18:	00110140 	call	11014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>
	m_initialize = false;
   11a1c:	80800017 	ldw	r2,0(r16)
   11a20:	10bffd17 	ldw	r2,-12(r2)
   11a24:	8085883a 	add	r2,r16,r2
   11a28:	10000105 	stb	zero,4(r2)
	state = mainrun;
   11a2c:	00800044 	movi	r2,1
   11a30:	80800115 	stw	r2,4(r16)
}
   11a34:	dfc00417 	ldw	ra,16(sp)
   11a38:	dcc00317 	ldw	r19,12(sp)
   11a3c:	dc800217 	ldw	r18,8(sp)
   11a40:	dc400117 	ldw	r17,4(sp)
   11a44:	dc000017 	ldw	r16,0(sp)
   11a48:	dec00504 	addi	sp,sp,20
   11a4c:	f800283a 	ret

00011a50 <_ZN22PositionControllerTilt9CalculateEPfS0_>:
	switch (state)
   11a50:	20800117 	ldw	r2,4(r4)
   11a54:	10000326 	beq	r2,zero,11a64 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x14>
   11a58:	10800060 	cmpeqi	r2,r2,1
   11a5c:	1000031e 	bne	r2,zero,11a6c <_ZN22PositionControllerTilt9CalculateEPfS0_+0x1c>
   11a60:	f800283a 	ret
			Initialize(u, y, 0.0);
   11a64:	000f883a 	mov	r7,zero
   11a68:	00119201 	jmpi	11920 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11a6c:	20800017 	ldw	r2,0(r4)
{
   11a70:	defffd04 	addi	sp,sp,-12
   11a74:	dc400115 	stw	r17,4(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11a78:	10fffd17 	ldw	r3,-12(r2)
{
   11a7c:	dc000015 	stw	r16,0(sp)
   11a80:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11a84:	20c7883a 	add	r3,r4,r3
   11a88:	18800217 	ldw	r2,8(r3)
   11a8c:	2021883a 	mov	r16,r4
   11a90:	19000417 	ldw	r4,16(r3)
   11a94:	280f883a 	mov	r7,r5
   11a98:	18c00517 	ldw	r3,20(r3)
   11a9c:	014cf5f4 	movhi	r5,13271
   11aa0:	2085ffb2 	custom	254,r2,r4,r2
   11aa4:	296fe544 	addi	r5,r5,-16491
   11aa8:	1145ff72 	custom	253,r2,r2,r5
   11aac:	1885f9b2 	custom	230,r2,r3,r2
   11ab0:	3023883a 	mov	r17,r6
   11ab4:	1000021e 	bne	r2,zero,11ac0 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x70>
   11ab8:	2089f8b2 	custom	226,r4,r4,r2
   11abc:	2000201e 	bne	r4,zero,11b40 <_ZN22PositionControllerTilt9CalculateEPfS0_+0xf0>
				CopyInputsToVariables (u);
   11ac0:	380b883a 	mov	r5,r7
   11ac4:	8009883a 	mov	r4,r16
   11ac8:	0010fe80 	call	10fe8 <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>
				myintegmethod.Step();
   11acc:	81000204 	addi	r4,r16,8
   11ad0:	00101d40 	call	101d4 <_ZN8Discrete4StepEv>
				CalculateOutput ();
   11ad4:	8009883a 	mov	r4,r16
   11ad8:	00111c00 	call	111c0 <_ZN22PositionControllerTilt15CalculateOutputEv>
				CopyVariablesToOutputs (y);
   11adc:	880b883a 	mov	r5,r17
   11ae0:	8009883a 	mov	r4,r16
   11ae4:	00110140 	call	11014 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   11ae8:	80800017 	ldw	r2,0(r16)
   11aec:	10bffd17 	ldw	r2,-12(r2)
   11af0:	8085883a 	add	r2,r16,r2
   11af4:	10c00183 	ldbu	r3,6(r2)
   11af8:	18000a1e 	bne	r3,zero,11b24 <_ZN22PositionControllerTilt9CalculateEPfS0_+0xd4>
   11afc:	10c00417 	ldw	r3,16(r2)
   11b00:	0009883a 	mov	r4,zero
   11b04:	1909f8f2 	custom	227,r4,r3,r4
   11b08:	2000081e 	bne	r4,zero,11b2c <_ZN22PositionControllerTilt9CalculateEPfS0_+0xdc>
   11b0c:	10800517 	ldw	r2,20(r2)
   11b10:	010cf5f4 	movhi	r4,13271
   11b14:	212fe544 	addi	r4,r4,-16491
   11b18:	1105ff72 	custom	253,r2,r2,r4
   11b1c:	1887f9b2 	custom	230,r3,r3,r2
   11b20:	18000226 	beq	r3,zero,11b2c <_ZN22PositionControllerTilt9CalculateEPfS0_+0xdc>
				state = finished;
   11b24:	00800084 	movi	r2,2
   11b28:	80800115 	stw	r2,4(r16)
}
   11b2c:	dfc00217 	ldw	ra,8(sp)
   11b30:	dc400117 	ldw	r17,4(sp)
   11b34:	dc000017 	ldw	r16,0(sp)
   11b38:	dec00304 	addi	sp,sp,12
   11b3c:	f800283a 	ret
				state = finished;
   11b40:	00800084 	movi	r2,2
   11b44:	80800115 	stw	r2,4(r16)
   11b48:	003fe706 	br	11ae8 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x98>

00011b4c <_Z16handleTimerEventv>:
volatile bool tilt_homing_done = false;
volatile bool pan_homing_done = true;

void handleTimerEvent()
{
	if(tilt_homing_done && pan_homing_done)
   11b4c:	d0a20c03 	ldbu	r2,-30672(gp)
{
   11b50:	defffe04 	addi	sp,sp,-8
	{
		u_tilt[2] = tilt_motor.getAngle();
   11b54:	010000b4 	movhi	r4,2
{
   11b58:	dfc00115 	stw	ra,4(sp)
	if(tilt_homing_done && pan_homing_done)
   11b5c:	10803fcc 	andi	r2,r2,255
		u_tilt[2] = tilt_motor.getAngle();
   11b60:	21279304 	addi	r4,r4,-25012
	if(tilt_homing_done && pan_homing_done)
   11b64:	10004326 	beq	r2,zero,11c74 <_Z16handleTimerEventv+0x128>
   11b68:	d0a00f83 	ldbu	r2,-32706(gp)
   11b6c:	10803fcc 	andi	r2,r2,255
   11b70:	10004026 	beq	r2,zero,11c74 <_Z16handleTimerEventv+0x128>
		u_tilt[2] = tilt_motor.getAngle();
   11b74:	00123540 	call	12354 <_ZN5Plant5Motor8getAngleEv>
   11b78:	014000b4 	movhi	r5,2
   11b7c:	29678504 	addi	r5,r5,-25068
		u_pan[2] = pan_motor.getAngle();
   11b80:	010000b4 	movhi	r4,2
		u_tilt[2] = tilt_motor.getAngle();
   11b84:	28800215 	stw	r2,8(r5)
		u_pan[2] = pan_motor.getAngle();
   11b88:	21278904 	addi	r4,r4,-25052
		u_tilt[2] = tilt_motor.getAngle();
   11b8c:	d9400015 	stw	r5,0(sp)
		u_pan[2] = pan_motor.getAngle();
   11b90:	00123540 	call	12354 <_ZN5Plant5Motor8getAngleEv>

		// Tilt motor.
		if (!tilt_model.IsFinished())
   11b94:	010000b4 	movhi	r4,2
		u_pan[2] = pan_motor.getAngle();
   11b98:	00c000b4 	movhi	r3,2
		if (!tilt_model.IsFinished())
   11b9c:	21276604 	addi	r4,r4,-25192
		u_pan[2] = pan_motor.getAngle();
   11ba0:	18a78315 	stw	r2,-25076(r3)
		if (!tilt_model.IsFinished())
   11ba4:	00111700 	call	11170 <_ZN22PositionControllerTilt10IsFinishedEv>
		{
			tilt_model.Calculate(u_tilt, y_tilt);
   11ba8:	010000b4 	movhi	r4,2
		if (!tilt_model.IsFinished())
   11bac:	10803fcc 	andi	r2,r2,255
   11bb0:	d9400017 	ldw	r5,0(sp)
			tilt_model.Calculate(u_tilt, y_tilt);
   11bb4:	d1a20f04 	addi	r6,gp,-30660
   11bb8:	21276604 	addi	r4,r4,-25192
		if (!tilt_model.IsFinished())
   11bbc:	1000221e 	bne	r2,zero,11c48 <_Z16handleTimerEventv+0xfc>
			tilt_model.Calculate(u_tilt, y_tilt);
   11bc0:	0011a500 	call	11a50 <_ZN22PositionControllerTilt9CalculateEPfS0_>
			tilt_motor.setSpeedAndDirection(int8_t (y_tilt[0] * 100));
   11bc4:	d1620f17 	ldw	r5,-30660(gp)
   11bc8:	0090b234 	movhi	r2,17096
   11bcc:	010000b4 	movhi	r4,2
   11bd0:	288bff32 	custom	252,r5,r5,r2
   11bd4:	280bfe72 	custom	249,r5,r5,zero
   11bd8:	29403fcc 	andi	r5,r5,255
   11bdc:	2940201c 	xori	r5,r5,128
   11be0:	297fe004 	addi	r5,r5,-128
   11be4:	21279304 	addi	r4,r4,-25012
   11be8:	00122dc0 	call	122dc <_ZN5Plant5Motor20setSpeedAndDirectionEa>
			tilt_model.Terminate(u_tilt, y_tilt);
			tilt_motor.disable();
		}

		// Pan motor.
		if (!pan_model.IsFinished())
   11bec:	010000b4 	movhi	r4,2
   11bf0:	21274b04 	addi	r4,r4,-25300
   11bf4:	00104d80 	call	104d8 <_ZN21PositionControllerPan10IsFinishedEv>
		{
			pan_model.Calculate(u_pan, y_pan);
   11bf8:	014000b4 	movhi	r5,2
   11bfc:	010000b4 	movhi	r4,2
		if (!pan_model.IsFinished())
   11c00:	10803fcc 	andi	r2,r2,255
			pan_model.Calculate(u_pan, y_pan);
   11c04:	d1a20d04 	addi	r6,gp,-30668
   11c08:	29678104 	addi	r5,r5,-25084
   11c0c:	21274b04 	addi	r4,r4,-25300
		if (!pan_model.IsFinished())
   11c10:	1000121e 	bne	r2,zero,11c5c <_Z16handleTimerEventv+0x110>
			pan_model.Calculate(u_pan, y_pan);
   11c14:	0010dc00 	call	10dc0 <_ZN21PositionControllerPan9CalculateEPfS0_>
			pan_motor.setSpeedAndDirection(int8_t (y_pan[0] * 100));
   11c18:	d1620d17 	ldw	r5,-30668(gp)
   11c1c:	0090b234 	movhi	r2,17096
   11c20:	010000b4 	movhi	r4,2
   11c24:	288bff32 	custom	252,r5,r5,r2
   11c28:	280bfe72 	custom	249,r5,r5,zero
   11c2c:	29403fcc 	andi	r5,r5,255
   11c30:	2940201c 	xori	r5,r5,128
   11c34:	297fe004 	addi	r5,r5,-128
   11c38:	21278904 	addi	r4,r4,-25052
		if(pan_motor.isAtInitialPosition() == true)
		{
			pan_homing_done = true;
		}
	}
}
   11c3c:	dfc00117 	ldw	ra,4(sp)
   11c40:	dec00204 	addi	sp,sp,8
			pan_motor.setSpeedAndDirection(int8_t (y_pan[0] * 100));
   11c44:	00122dc1 	jmpi	122dc <_ZN5Plant5Motor20setSpeedAndDirectionEa>
			tilt_model.Terminate(u_tilt, y_tilt);
   11c48:	001117c0 	call	1117c <_ZN22PositionControllerTilt9TerminateEPfS0_>
			tilt_motor.disable();
   11c4c:	010000b4 	movhi	r4,2
   11c50:	21279304 	addi	r4,r4,-25012
   11c54:	00121d40 	call	121d4 <_ZN5Plant5Motor7disableEv>
   11c58:	003fe406 	br	11bec <_Z16handleTimerEventv+0xa0>
			pan_model.Terminate(u_pan, y_pan);
   11c5c:	00104e40 	call	104e4 <_ZN21PositionControllerPan9TerminateEPfS0_>
			pan_motor.disable();
   11c60:	010000b4 	movhi	r4,2
   11c64:	21278904 	addi	r4,r4,-25052
}
   11c68:	dfc00117 	ldw	ra,4(sp)
   11c6c:	dec00204 	addi	sp,sp,8
			pan_motor.disable();
   11c70:	00121d41 	jmpi	121d4 <_ZN5Plant5Motor7disableEv>
		if(tilt_motor.isAtInitialPosition() == true)
   11c74:	00123800 	call	12380 <_ZN5Plant5Motor19isAtInitialPositionEv>
   11c78:	10803fcc 	andi	r2,r2,255
   11c7c:	10000226 	beq	r2,zero,11c88 <_Z16handleTimerEventv+0x13c>
			tilt_homing_done = true;
   11c80:	00800044 	movi	r2,1
   11c84:	d0a20c05 	stb	r2,-30672(gp)
		if(pan_motor.isAtInitialPosition() == true)
   11c88:	010000b4 	movhi	r4,2
   11c8c:	21278904 	addi	r4,r4,-25052
   11c90:	00123800 	call	12380 <_ZN5Plant5Motor19isAtInitialPositionEv>
   11c94:	10803fcc 	andi	r2,r2,255
   11c98:	10000226 	beq	r2,zero,11ca4 <_Z16handleTimerEventv+0x158>
			pan_homing_done = true;
   11c9c:	00800044 	movi	r2,1
   11ca0:	d0a00f85 	stb	r2,-32706(gp)
}
   11ca4:	dfc00117 	ldw	ra,4(sp)
   11ca8:	dec00204 	addi	sp,sp,8
   11cac:	f800283a 	ret

00011cb0 <_Z15handleUartEventRN6Serial7messageE>:
			encoder_value = r >> 1;
		}

		[[nodiscard]] float getAngle() const
		{
			unsigned int x = encoder_value;
   11cb0:	20800017 	ldw	r2,0(r4)
			x <<= 1;
   11cb4:	1004907a 	slli	r2,r2,1

// Prevent optimization.
volatile float angle = 0;
void handleUartEvent(Serial::message &received_message)
{
	angle = received_message.getAngle();
   11cb8:	d0a20b15 	stw	r2,-30676(gp)

	// Determine for which motor this message is intended.
	switch (received_message.motor)
   11cbc:	20800017 	ldw	r2,0(r4)
   11cc0:	10000916 	blt	r2,zero,11ce8 <_Z15handleUartEventRN6Serial7messageE+0x38>
	{
		case 0:
		{
			u_tilt[1] = angle;
   11cc4:	d0a20b17 	ldw	r2,-30676(gp)
   11cc8:	014000b4 	movhi	r5,2
			tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11ccc:	010000b4 	movhi	r4,2
			u_tilt[1] = angle;
   11cd0:	29678504 	addi	r5,r5,-25068
			tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11cd4:	000f883a 	mov	r7,zero
   11cd8:	d1a20f04 	addi	r6,gp,-30660
   11cdc:	21276604 	addi	r4,r4,-25192
			u_tilt[1] = angle;
   11ce0:	28800115 	stw	r2,4(r5)
			tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11ce4:	00119201 	jmpi	11920 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
			//pan_motor.setFrequency(received_message.getFirstWord());
			//pan_motor.setSecondWord(received_message.getSecondWord());
			break;
		}
	}
}
   11ce8:	f800283a 	ret

00011cec <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    public:
      static bool
      _M_manager(_Any_data& __dest, const _Any_data& __source,
		 _Manager_operation __op)
      {
	switch (__op)
   11cec:	30000626 	beq	r6,zero,11d08 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x1c>
   11cf0:	30800060 	cmpeqi	r2,r6,1
   11cf4:	1000081e 	bne	r2,zero,11d18 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x2c>
	  switch (__op)
   11cf8:	31800098 	cmpnei	r6,r6,2
   11cfc:	3000071e 	bne	r6,zero,11d1c <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x30>
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11d00:	28800017 	ldw	r2,0(r5)
   11d04:	00000206 	br	11d10 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x24>
	  {
#if __cpp_rtti
	  case __get_type_info:
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11d08:	008000b4 	movhi	r2,2
   11d0c:	10a21104 	addi	r2,r2,-30652
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11d10:	20800015 	stw	r2,0(r4)
	      break;
   11d14:	00000106 	br	11d1c <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x30>
	    break;
#endif
	  case __get_functor_ptr:
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11d18:	21400015 	stw	r5,0(r4)

	  default:
	    _Base::_M_manager(__dest, __source, __op);
	  }
	return false;
      }
   11d1c:	0005883a 	mov	r2,zero
   11d20:	f800283a 	ret

00011d24 <_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data>:
    { return static_cast<_Up&&>(__t); }

  template<typename _Res, typename _Fn, typename... _Args>
    constexpr _Res
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
   11d24:	20800017 	ldw	r2,0(r4)
   11d28:	1000683a 	jmp	r2

00011d2c <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation>:
	switch (__op)
   11d2c:	30000626 	beq	r6,zero,11d48 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x1c>
   11d30:	30800060 	cmpeqi	r2,r6,1
   11d34:	1000081e 	bne	r2,zero,11d58 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x2c>
	  switch (__op)
   11d38:	31800098 	cmpnei	r6,r6,2
   11d3c:	3000071e 	bne	r6,zero,11d5c <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x30>
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11d40:	28800017 	ldw	r2,0(r5)
   11d44:	00000206 	br	11d50 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x24>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11d48:	008000b4 	movhi	r2,2
   11d4c:	10a20d04 	addi	r2,r2,-30668
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11d50:	20800015 	stw	r2,0(r4)
	      break;
   11d54:	00000106 	br	11d5c <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x30>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11d58:	21400015 	stw	r5,0(r4)
      }
   11d5c:	0005883a 	mov	r2,zero
   11d60:	f800283a 	ret

00011d64 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_>:
   11d64:	20800017 	ldw	r2,0(r4)
   11d68:	2809883a 	mov	r4,r5
   11d6c:	1000683a 	jmp	r2

00011d70 <_ZNSt14_Function_baseD1Ev>:
    ~_Function_base()
   11d70:	00800074 	movhi	r2,1
   11d74:	defff104 	addi	sp,sp,-60
   11d78:	108bf204 	addi	r2,r2,12232
   11d7c:	d8800615 	stw	r2,24(sp)
   11d80:	008000b4 	movhi	r2,2
   11d84:	10a19804 	addi	r2,r2,-31136
   11d88:	dc000d15 	stw	r16,52(sp)
   11d8c:	2021883a 	mov	r16,r4
   11d90:	d809883a 	mov	r4,sp
   11d94:	d8800715 	stw	r2,28(sp)
   11d98:	dfc00e15 	stw	ra,56(sp)
   11d9c:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
      if (_M_manager)
   11da0:	80800217 	ldw	r2,8(r16)
   11da4:	10000526 	beq	r2,zero,11dbc <_ZNSt14_Function_baseD1Ev+0x4c>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   11da8:	d8000115 	stw	zero,4(sp)
   11dac:	018000c4 	movi	r6,3
   11db0:	800b883a 	mov	r5,r16
   11db4:	8009883a 	mov	r4,r16
   11db8:	103ee83a 	callr	r2
   11dbc:	d809883a 	mov	r4,sp
   11dc0:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
    }
   11dc4:	dfc00e17 	ldw	ra,56(sp)
   11dc8:	dc000d17 	ldw	r16,52(sp)
   11dcc:	dec00f04 	addi	sp,sp,60
   11dd0:	f800283a 	ret

00011dd4 <main>:
 * Motor 1 = pan
 */
int main()
{

	u_pan[0] = 0.0;		/* corr */
   11dd4:	008000b4 	movhi	r2,2
   11dd8:	10278115 	stw	zero,-25084(r2)
	u_pan[1] = 0.0;		/* in */
   11ddc:	008000b4 	movhi	r2,2
   11de0:	10278215 	stw	zero,-25080(r2)
	u_pan[2] = 0.0;		/* position */
   11de4:	008000b4 	movhi	r2,2
   11de8:	10278315 	stw	zero,-25076(r2)

	u_tilt[0] = 0.0;		/* corr */
   11dec:	008000b4 	movhi	r2,2
   11df0:	10278515 	stw	zero,-25068(r2)
	u_tilt[1] = 0.0;		/* in */
	u_tilt[2] = 0.0;		/* position */

	pan_model.Initialize(u_pan, y_pan, 0.0);
   11df4:	014000b4 	movhi	r5,2
	u_tilt[1] = 0.0;		/* in */
   11df8:	008000b4 	movhi	r2,2
	pan_model.Initialize(u_pan, y_pan, 0.0);
   11dfc:	010000b4 	movhi	r4,2
{
   11e00:	defff904 	addi	sp,sp,-28
	u_tilt[1] = 0.0;		/* in */
   11e04:	10278615 	stw	zero,-25064(r2)
	pan_model.Initialize(u_pan, y_pan, 0.0);
   11e08:	000f883a 	mov	r7,zero
	u_tilt[2] = 0.0;		/* position */
   11e0c:	008000b4 	movhi	r2,2
	pan_model.Initialize(u_pan, y_pan, 0.0);
   11e10:	d1a20d04 	addi	r6,gp,-30668
   11e14:	29678104 	addi	r5,r5,-25084
   11e18:	21274b04 	addi	r4,r4,-25300
{
   11e1c:	dfc00615 	stw	ra,24(sp)
	u_tilt[2] = 0.0;		/* position */
   11e20:	10278715 	stw	zero,-25060(r2)
{
   11e24:	dd400515 	stw	r21,20(sp)
   11e28:	dd000415 	stw	r20,16(sp)
   11e2c:	dcc00315 	stw	r19,12(sp)
   11e30:	dc800215 	stw	r18,8(sp)
   11e34:	dc400115 	stw	r17,4(sp)
   11e38:	dc000015 	stw	r16,0(sp)
	pan_model.Initialize(u_pan, y_pan, 0.0);
   11e3c:	0010c900 	call	10c90 <_ZN21PositionControllerPan10InitializeEPfS0_f>
	tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11e40:	014000b4 	movhi	r5,2
   11e44:	010000b4 	movhi	r4,2
   11e48:	000f883a 	mov	r7,zero
   11e4c:	d1a20f04 	addi	r6,gp,-30660
   11e50:	29678504 	addi	r5,r5,-25068
   11e54:	21276604 	addi	r4,r4,-25192
   11e58:	00119200 	call	11920 <_ZN22PositionControllerTilt10InitializeEPfS0_f>

	pan_model.SetFinishTime(1);
   11e5c:	010000b4 	movhi	r4,2
   11e60:	014fe034 	movhi	r5,16256
   11e64:	21274b04 	addi	r4,r4,-25300
   11e68:	00105500 	call	10550 <_ZN21PositionControllerPan13SetFinishTimeEf>
	tilt_model.SetFinishTime(1);
   11e6c:	010000b4 	movhi	r4,2
   11e70:	014fe034 	movhi	r5,16256
   11e74:	21276604 	addi	r4,r4,-25192
   11e78:	00111e00 	call	111e0 <_ZN22PositionControllerTilt13SetFinishTimeEf>

	// Let the motor run to the origin position.
	pan_motor.setSpeedAndDirection(-50);
   11e7c:	010000b4 	movhi	r4,2
   11e80:	017ff384 	movi	r5,-50
   11e84:	21278904 	addi	r4,r4,-25052
   11e88:	00122dc0 	call	122dc <_ZN5Plant5Motor20setSpeedAndDirectionEa>
	tilt_motor.setSpeedAndDirection(-50);
   11e8c:	010000b4 	movhi	r4,2
   11e90:	017ff384 	movi	r5,-50
   11e94:	21279304 	addi	r4,r4,-25012
   11e98:	00122dc0 	call	122dc <_ZN5Plant5Motor20setSpeedAndDirectionEa>

	usleep(10000);
   11e9c:	0109c404 	movi	r4,10000
   11ea0:	00179580 	call	17958 <usleep>

	timer.enable();
   11ea4:	d1221104 	addi	r4,gp,-30652
	while(1)
	{
		//u_tilt[1] += 3.14159265;
		//tilt_model.Initialize(u_tilt, y_tilt, 0.0);

		float tilt = tilt_motor.getAngle();
   11ea8:	044000b4 	movhi	r17,2
			message.motor = 0;
			message.setAngle(tilt);
			uart.sendData(message);
		}

		float pan = pan_motor.getAngle();
   11eac:	048000b4 	movhi	r18,2
	timer.enable();
   11eb0:	00127a40 	call	127a4 <_ZN5Timer6enableEv>
	float prev_pan = 0;
   11eb4:	0027883a 	mov	r19,zero
	float prev_tilt = 0;
   11eb8:	002b883a 	mov	r21,zero
		float tilt = tilt_motor.getAngle();
   11ebc:	8c679304 	addi	r17,r17,-25012
			uart.sendData(message);
   11ec0:	d5221144 	addi	r20,gp,-30651
		float pan = pan_motor.getAngle();
   11ec4:	94a78904 	addi	r18,r18,-25052
		float tilt = tilt_motor.getAngle();
   11ec8:	8809883a 	mov	r4,r17
   11ecc:	00123540 	call	12354 <_ZN5Plant5Motor8getAngleEv>
   11ed0:	1021883a 	mov	r16,r2
		if (tilt != prev_tilt)
   11ed4:	a885f8f2 	custom	227,r2,r21,r2
   11ed8:	1000041e 	bne	r2,zero,11eec <main+0x118>
			uart.sendData(message);
   11edc:	800ad07a 	srli	r5,r16,1
   11ee0:	a009883a 	mov	r4,r20
			prev_tilt = tilt;
   11ee4:	802b883a 	mov	r21,r16
			uart.sendData(message);
   11ee8:	00125f80 	call	125f8 <_ZN6Serial4UART8sendDataENS_7messageE>
		float pan = pan_motor.getAngle();
   11eec:	9009883a 	mov	r4,r18
   11ef0:	00123540 	call	12354 <_ZN5Plant5Motor8getAngleEv>
   11ef4:	1021883a 	mov	r16,r2

		if (pan != prev_pan)
   11ef8:	9885f8f2 	custom	227,r2,r19,r2
   11efc:	103ff21e 	bne	r2,zero,11ec8 <main+0xf4>
			encoder_value = r >> 1;
   11f00:	800ad07a 	srli	r5,r16,1
		{
			prev_pan = pan;
			Serial::message message;
			message.motor = 1;
			message.setAngle(pan);
			uart.sendData(message);
   11f04:	a009883a 	mov	r4,r20
			prev_pan = pan;
   11f08:	8027883a 	mov	r19,r16
			uart.sendData(message);
   11f0c:	29600034 	orhi	r5,r5,32768
   11f10:	00125f80 	call	125f8 <_ZN6Serial4UART8sendDataENS_7messageE>
   11f14:	003fec06 	br	11ec8 <main+0xf4>

00011f18 <_GLOBAL__sub_I_uart>:
		}
	}

	return 0;
}
   11f18:	00800074 	movhi	r2,1
   11f1c:	deffea04 	addi	sp,sp,-88
   11f20:	108bf204 	addi	r2,r2,12232
   11f24:	d8800915 	stw	r2,36(sp)
   11f28:	008000b4 	movhi	r2,2
   11f2c:	10a19904 	addi	r2,r2,-31132
   11f30:	d8800a15 	stw	r2,40(sp)
   11f34:	00800074 	movhi	r2,1
   11f38:	1087f504 	addi	r2,r2,8148
   11f3c:	d9000304 	addi	r4,sp,12
   11f40:	d8800c15 	stw	r2,48(sp)
   11f44:	dfc01515 	stw	ra,84(sp)
   11f48:	df001415 	stw	fp,80(sp)
   11f4c:	df000b15 	stw	fp,44(sp)
   11f50:	dec00d15 	stw	sp,52(sp)
   11f54:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f58:	00800074 	movhi	r2,1
   11f5c:	10872c04 	addi	r2,r2,7344
   11f60:	d8801015 	stw	r2,64(sp)
	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;

	if (_My_handler::_M_not_empty_function(__f))
	  {
	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
	    _M_invoker = &_My_handler::_M_invoke;
   11f64:	00800074 	movhi	r2,1
   11f68:	10875904 	addi	r2,r2,7524
   11f6c:	d8801315 	stw	r2,76(sp)
	    _M_manager = &_My_handler::_M_manager;
   11f70:	00800074 	movhi	r2,1
   11f74:	10874b04 	addi	r2,r2,7468
   11f78:	d8801215 	stw	r2,72(sp)
Serial::UART uart = Serial::UART(handleUartEvent);
   11f7c:	d9401004 	addi	r5,sp,64
   11f80:	00800044 	movi	r2,1
   11f84:	d1221144 	addi	r4,gp,-30651
   11f88:	d8800415 	stw	r2,16(sp)
   11f8c:	001248c0 	call	1248c <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE>
    class function<_Res(_ArgTypes...)>
   11f90:	d9001004 	addi	r4,sp,64
   11f94:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f98:	00800074 	movhi	r2,1
   11f9c:	1086d304 	addi	r2,r2,6988
   11fa0:	d8801015 	stw	r2,64(sp)
	    _M_invoker = &_My_handler::_M_invoke;
   11fa4:	00800074 	movhi	r2,1
   11fa8:	10874904 	addi	r2,r2,7460
   11fac:	d8801315 	stw	r2,76(sp)
	    _M_manager = &_My_handler::_M_manager;
   11fb0:	00800074 	movhi	r2,1
   11fb4:	10873b04 	addi	r2,r2,7404
   11fb8:	d8801215 	stw	r2,72(sp)
Timer timer = Timer(handleTimerEvent);
   11fbc:	d9401004 	addi	r5,sp,64
   11fc0:	00800084 	movi	r2,2
   11fc4:	d1221104 	addi	r4,gp,-30652
   11fc8:	d8800415 	stw	r2,16(sp)
   11fcc:	00126900 	call	12690 <_ZN5TimerC1ESt8functionIFvvEE>
   11fd0:	00000d06 	br	12008 <_GLOBAL__sub_I_uart+0xf0>
    class function<_Res(_ArgTypes...)>
   11fd4:	d8800517 	ldw	r2,20(sp)
   11fd8:	d8800215 	stw	r2,8(sp)
   11fdc:	d8800417 	ldw	r2,16(sp)
   11fe0:	10000326 	beq	r2,zero,11ff0 <_GLOBAL__sub_I_uart+0xd8>
   11fe4:	10bfffc4 	addi	r2,r2,-1
   11fe8:	10000126 	beq	r2,zero,11ff0 <_GLOBAL__sub_I_uart+0xd8>
   11fec:	003b68fa 	trap	3
   11ff0:	d9001004 	addi	r4,sp,64
   11ff4:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
   11ff8:	d9000217 	ldw	r4,8(sp)
   11ffc:	00bfffc4 	movi	r2,-1
   12000:	d8800415 	stw	r2,16(sp)
   12004:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>
   12008:	d9001004 	addi	r4,sp,64
   1200c:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
Plant::Motor tilt_motor = Plant::Motor(MOTOR_PWM_0_SLAVE_1_BASE, MOTOR_PWM_0_SLAVE_2_BASE, PWM_FREQUENCY, QUADRATURE_ENCODER_0_BASE, 80);
   12010:	00801404 	movi	r2,80
   12014:	d8800115 	stw	r2,4(sp)
   12018:	008000b4 	movhi	r2,2
   1201c:	10890004 	addi	r2,r2,9216
   12020:	018000b4 	movhi	r6,2
   12024:	014000b4 	movhi	r5,2
   12028:	010000b4 	movhi	r4,2
   1202c:	d8800015 	stw	r2,0(sp)
   12030:	01c27104 	movi	r7,2500
   12034:	00bfffc4 	movi	r2,-1
   12038:	31850004 	addi	r6,r6,5120
   1203c:	29470004 	addi	r5,r5,7168
   12040:	21279304 	addi	r4,r4,-25012
   12044:	d8800415 	stw	r2,16(sp)
   12048:	00122040 	call	12204 <_ZN5Plant5MotorC1Emmmmm>
Plant::Motor pan_motor = Plant::Motor(MOTOR_PWM_1_SLAVE_1_BASE, MOTOR_PWM_1_SLAVE_2_BASE, PWM_FREQUENCY, QUADRATURE_ENCODER_1_BASE, 80);
   1204c:	00801404 	movi	r2,80
   12050:	d8800115 	stw	r2,4(sp)
   12054:	008000b4 	movhi	r2,2
   12058:	10880004 	addi	r2,r2,8192
   1205c:	018000b4 	movhi	r6,2
   12060:	014000b4 	movhi	r5,2
   12064:	010000b4 	movhi	r4,2
   12068:	d8800015 	stw	r2,0(sp)
   1206c:	01c27104 	movi	r7,2500
   12070:	31840004 	addi	r6,r6,4096
   12074:	29460004 	addi	r5,r5,6144
   12078:	21278904 	addi	r4,r4,-25052
   1207c:	00122040 	call	12204 <_ZN5Plant5MotorC1Emmmmm>
PositionControllerTilt tilt_model;
   12080:	010000b4 	movhi	r4,2
   12084:	21276604 	addi	r4,r4,-25192
   12088:	00117080 	call	11708 <_ZN22PositionControllerTiltC1Ev>
PositionControllerPan pan_model;
   1208c:	010000b4 	movhi	r4,2
   12090:	21274b04 	addi	r4,r4,-25300
   12094:	0010a780 	call	10a78 <_ZN21PositionControllerPanC1Ev>
   12098:	d9000304 	addi	r4,sp,12
   1209c:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
}
   120a0:	dfc01517 	ldw	ra,84(sp)
   120a4:	df001417 	ldw	fp,80(sp)
   120a8:	dec01604 	addi	sp,sp,88
   120ac:	f800283a 	ret

000120b0 <_GLOBAL__sub_D_uart>:
PositionControllerPan pan_model;
   120b0:	010000b4 	movhi	r4,2
}
   120b4:	deffff04 	addi	sp,sp,-4
PositionControllerPan pan_model;
   120b8:	21274b04 	addi	r4,r4,-25300
}
   120bc:	dfc00015 	stw	ra,0(sp)
PositionControllerPan pan_model;
   120c0:	0010c280 	call	10c28 <_ZN21PositionControllerPanD1Ev>
PositionControllerTilt tilt_model;
   120c4:	010000b4 	movhi	r4,2
   120c8:	21276604 	addi	r4,r4,-25192
   120cc:	00118b80 	call	118b8 <_ZN22PositionControllerTiltD1Ev>
}
   120d0:	dfc00017 	ldw	ra,0(sp)
   120d4:	dec00104 	addi	sp,sp,4
   120d8:	f800283a 	ret

000120dc <_ZN5Plant5Motor12setDutyCycleEh>:
    enable();
}

void Plant::Motor::setDutyCycle (uint8_t duty)
{
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   120dc:	20c00317 	ldw	r3,12(r4)
{
   120e0:	defffe04 	addi	sp,sp,-8
   120e4:	dc000015 	stw	r16,0(sp)
   120e8:	dfc00115 	stw	ra,4(sp)
   120ec:	2021883a 	mov	r16,r4
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   120f0:	18001316 	blt	r3,zero,12140 <_ZN5Plant5Motor12setDutyCycleEh+0x64>
   120f4:	1805feb2 	custom	250,r2,r3,zero
   120f8:	28c03fcc 	andi	r3,r5,255
   120fc:	1807feb2 	custom	250,r3,r3,zero
   12100:	0110b234 	movhi	r4,17096
   12104:	1907fff2 	custom	255,r3,r3,r4
   12108:	10c5ff32 	custom	252,r2,r2,r3
   1210c:	00d3c034 	movhi	r3,20224
   12110:	10c7f932 	custom	228,r3,r2,r3
   12114:	1800101e 	bne	r3,zero,12158 <_ZN5Plant5Motor12setDutyCycleEh+0x7c>
   12118:	1005fe72 	custom	249,r2,r2,zero
   1211c:	80800615 	stw	r2,24(r16)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12120:	8009883a 	mov	r4,r16
   12124:	00123d00 	call	123d0 <_ZN5Plant5Motor13getSecondWordEv>
   12128:	80c00217 	ldw	r3,8(r16)
   1212c:	18800035 	stwio	r2,0(r3)
}
   12130:	dfc00117 	ldw	ra,4(sp)
   12134:	dc000017 	ldw	r16,0(sp)
   12138:	dec00204 	addi	sp,sp,8
   1213c:	f800283a 	ret
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12140:	1880004c 	andi	r2,r3,1
   12144:	1806d07a 	srli	r3,r3,1
   12148:	10c4b03a 	or	r2,r2,r3
   1214c:	1005feb2 	custom	250,r2,r2,zero
   12150:	1085ff72 	custom	253,r2,r2,r2
   12154:	003fe806 	br	120f8 <_ZN5Plant5Motor12setDutyCycleEh+0x1c>
   12158:	00d3c034 	movhi	r3,20224
   1215c:	10c5ffb2 	custom	254,r2,r2,r3
   12160:	1005fe72 	custom	249,r2,r2,zero
   12164:	10a0003c 	xorhi	r2,r2,32768
   12168:	003fec06 	br	1211c <_ZN5Plant5Motor12setDutyCycleEh+0x40>

0001216c <_ZN5Plant5Motor12setDirectionENS0_9DirectionE>:

void Plant::Motor::setDirection(Direction dir)
{
	direction = static_cast<uint32_t>(dir);
   1216c:	29403fcc 	andi	r5,r5,255
{
   12170:	defffe04 	addi	sp,sp,-8
	direction = static_cast<uint32_t>(dir);
   12174:	21400715 	stw	r5,28(r4)
{
   12178:	dc000015 	stw	r16,0(sp)
   1217c:	dfc00115 	stw	ra,4(sp)
   12180:	2021883a 	mov	r16,r4
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12184:	00123d00 	call	123d0 <_ZN5Plant5Motor13getSecondWordEv>
   12188:	80c00217 	ldw	r3,8(r16)
   1218c:	18800035 	stwio	r2,0(r3)
}
   12190:	dfc00117 	ldw	ra,4(sp)
   12194:	dc000017 	ldw	r16,0(sp)
   12198:	dec00204 	addi	sp,sp,8
   1219c:	f800283a 	ret

000121a0 <_ZN5Plant5Motor6enableEv>:

void Plant::Motor::enable()
{
	en = 1;
   121a0:	00800044 	movi	r2,1
{
   121a4:	defffe04 	addi	sp,sp,-8
	en = 1;
   121a8:	20800815 	stw	r2,32(r4)
{
   121ac:	dc000015 	stw	r16,0(sp)
   121b0:	dfc00115 	stw	ra,4(sp)
   121b4:	2021883a 	mov	r16,r4
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   121b8:	00123d00 	call	123d0 <_ZN5Plant5Motor13getSecondWordEv>
   121bc:	80c00217 	ldw	r3,8(r16)
   121c0:	18800035 	stwio	r2,0(r3)
}
   121c4:	dfc00117 	ldw	ra,4(sp)
   121c8:	dc000017 	ldw	r16,0(sp)
   121cc:	dec00204 	addi	sp,sp,8
   121d0:	f800283a 	ret

000121d4 <_ZN5Plant5Motor7disableEv>:

void Plant::Motor::disable()
{
   121d4:	defffe04 	addi	sp,sp,-8
	en = 0;
   121d8:	20000815 	stw	zero,32(r4)
{
   121dc:	dc000015 	stw	r16,0(sp)
   121e0:	dfc00115 	stw	ra,4(sp)
   121e4:	2021883a 	mov	r16,r4
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   121e8:	00123d00 	call	123d0 <_ZN5Plant5Motor13getSecondWordEv>
   121ec:	80c00217 	ldw	r3,8(r16)
   121f0:	18800035 	stwio	r2,0(r3)
}
   121f4:	dfc00117 	ldw	ra,4(sp)
   121f8:	dc000017 	ldw	r16,0(sp)
   121fc:	dec00204 	addi	sp,sp,8
   12200:	f800283a 	ret

00012204 <_ZN5Plant5MotorC1Emmmmm>:
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   12204:	defffc04 	addi	sp,sp,-16
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   12208:	d8c00417 	ldw	r3,16(sp)
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   1220c:	d8800517 	ldw	r2,20(sp)
   12210:	dc800215 	stw	r18,8(sp)
   12214:	dc400115 	stw	r17,4(sp)
   12218:	dc000015 	stw	r16,0(sp)
   1221c:	dfc00315 	stw	ra,12(sp)
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   12220:	20000015 	stw	zero,0(r4)
   12224:	21400115 	stw	r5,4(r4)
   12228:	21800215 	stw	r6,8(r4)
   1222c:	21c00315 	stw	r7,12(r4)
   12230:	20c00415 	stw	r3,16(r4)
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   12234:	2021883a 	mov	r16,r4
   12238:	2823883a 	mov	r17,r5
   1223c:	3825883a 	mov	r18,r7
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   12240:	10002016 	blt	r2,zero,122c4 <_ZN5Plant5MotorC1Emmmmm+0xc0>
   12244:	1009feb2 	custom	250,r4,r2,zero
   12248:	00166780 	call	16678 <__extendsfdf2>
   1224c:	01501df4 	movhi	r5,16503
   12250:	100d883a 	mov	r6,r2
   12254:	180f883a 	mov	r7,r3
   12258:	0009883a 	mov	r4,zero
   1225c:	29600004 	addi	r5,r5,-32768
   12260:	001559c0 	call	1559c <__divdf3>
   12264:	01a894f4 	movhi	r6,41555
   12268:	01cfe4b4 	movhi	r7,16274
   1226c:	31a74e44 	addi	r6,r6,-25287
   12270:	39f7d184 	addi	r7,r7,-8378
   12274:	1009883a 	mov	r4,r2
   12278:	180b883a 	mov	r5,r3
   1227c:	0015ecc0 	call	15ecc <__muldf3>
   12280:	180b883a 	mov	r5,r3
   12284:	1009883a 	mov	r4,r2
   12288:	00167740 	call	16774 <__truncdfsf2>
   1228c:	80800515 	stw	r2,20(r16)
   12290:	80000615 	stw	zero,24(r16)
   12294:	80000715 	stw	zero,28(r16)
   12298:	80000815 	stw	zero,32(r16)
   1229c:	80000915 	stw	zero,36(r16)
	disable();
   122a0:	8009883a 	mov	r4,r16
   122a4:	00121d40 	call	121d4 <_ZN5Plant5Motor7disableEv>
	IOWR_32DIRECT(base_address_first_word, 0, frequency);
   122a8:	8c800035 	stwio	r18,0(r17)
}
   122ac:	dfc00317 	ldw	ra,12(sp)
   122b0:	dc800217 	ldw	r18,8(sp)
   122b4:	dc400117 	ldw	r17,4(sp)
   122b8:	dc000017 	ldw	r16,0(sp)
   122bc:	dec00404 	addi	sp,sp,16
   122c0:	f800283a 	ret
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   122c4:	1100004c 	andi	r4,r2,1
   122c8:	1004d07a 	srli	r2,r2,1
   122cc:	2088b03a 	or	r4,r4,r2
   122d0:	2009feb2 	custom	250,r4,r4,zero
   122d4:	2109ff72 	custom	253,r4,r4,r4
   122d8:	003fdb06 	br	12248 <_ZN5Plant5MotorC1Emmmmm+0x44>

000122dc <_ZN5Plant5Motor20setSpeedAndDirectionEa>:
	if (percentage == 0)
   122dc:	28803fcc 	andi	r2,r5,255
   122e0:	1080201c 	xori	r2,r2,128
   122e4:	10bfe004 	addi	r2,r2,-128
   122e8:	1000011e 	bne	r2,zero,122f0 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x14>
		disable();
   122ec:	00121d41 	jmpi	121d4 <_ZN5Plant5Motor7disableEv>
{
   122f0:	defffc04 	addi	sp,sp,-16
   122f4:	dc400115 	stw	r17,4(sp)
   122f8:	dfc00315 	stw	ra,12(sp)
   122fc:	dc800215 	stw	r18,8(sp)
   12300:	dc000015 	stw	r16,0(sp)
   12304:	2023883a 	mov	r17,r4
	if (percentage > 0)
   12308:	00800d0e 	bge	zero,r2,12340 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x64>
   1230c:	2825883a 	mov	r18,r5
		setDirection(Plant::Motor::Direction::CLOCKWISE);
   12310:	01400044 	movi	r5,1
   12314:	001216c0 	call	1216c <_ZN5Plant5Motor12setDirectionENS0_9DirectionE>
	setDutyCycle(percentage);
   12318:	8809883a 	mov	r4,r17
   1231c:	91403fcc 	andi	r5,r18,255
   12320:	00120dc0 	call	120dc <_ZN5Plant5Motor12setDutyCycleEh>
    enable();
   12324:	8809883a 	mov	r4,r17
}
   12328:	dfc00317 	ldw	ra,12(sp)
   1232c:	dc800217 	ldw	r18,8(sp)
   12330:	dc400117 	ldw	r17,4(sp)
   12334:	dc000017 	ldw	r16,0(sp)
   12338:	dec00404 	addi	sp,sp,16
    enable();
   1233c:	00121a01 	jmpi	121a0 <_ZN5Plant5Motor6enableEv>
   12340:	2821883a 	mov	r16,r5
		setDirection(Plant::Motor::Direction::COUNTERCLOCKWISE);
   12344:	01400084 	movi	r5,2
   12348:	001216c0 	call	1216c <_ZN5Plant5Motor12setDirectionENS0_9DirectionE>
		percentage = percentage * -1;
   1234c:	0425c83a 	sub	r18,zero,r16
   12350:	003ff106 	br	12318 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x3c>

00012354 <_ZN5Plant5Motor8getAngleEv>:
    return (readData() - encoder_start_position) * radians_per_step;
}

int32_t Plant::Motor::readData()
{
	return IORD_32DIRECT(base_address_encoder, 0);
   12354:	20800417 	ldw	r2,16(r4)
   12358:	10800037 	ldwio	r2,0(r2)
    return (readData() - encoder_start_position) * radians_per_step;
   1235c:	20c00017 	ldw	r3,0(r4)
   12360:	10c5c83a 	sub	r2,r2,r3
   12364:	20c00517 	ldw	r3,20(r4)
   12368:	1005feb2 	custom	250,r2,r2,zero
}
   1236c:	10c5ff32 	custom	252,r2,r2,r3
   12370:	f800283a 	ret

00012374 <_ZN5Plant5Motor8readDataEv>:
	return IORD_32DIRECT(base_address_encoder, 0);
   12374:	20800417 	ldw	r2,16(r4)
}
   12378:	10800037 	ldwio	r2,0(r2)
   1237c:	f800283a 	ret

00012380 <_ZN5Plant5Motor19isAtInitialPositionEv>:
	return IORD_32DIRECT(base_address_encoder, 0);
   12380:	20c00417 	ldw	r3,16(r4)
   12384:	18c00037 	ldwio	r3,0(r3)

bool Plant::Motor::isAtInitialPosition()
{
	int32_t value = readData();

	if (value != encoder_start_position)
   12388:	21400017 	ldw	r5,0(r4)
   1238c:	28c00426 	beq	r5,r3,123a0 <_ZN5Plant5Motor19isAtInitialPositionEv+0x20>
	{
		encoder_start_position = value;
   12390:	20c00015 	stw	r3,0(r4)
		occurences = 0;
   12394:	20000915 	stw	zero,36(r4)
	{
		disable();
		return true;
	}

	return false;
   12398:	0005883a 	mov	r2,zero
}
   1239c:	f800283a 	ret
		occurences++;
   123a0:	20c00917 	ldw	r3,36(r4)
   123a4:	18c00044 	addi	r3,r3,1
   123a8:	20c00915 	stw	r3,36(r4)
	if (occurences > 500)
   123ac:	18c07d70 	cmpltui	r3,r3,501
   123b0:	183ff91e 	bne	r3,zero,12398 <_ZN5Plant5Motor19isAtInitialPositionEv+0x18>
{
   123b4:	deffff04 	addi	sp,sp,-4
   123b8:	dfc00015 	stw	ra,0(sp)
		disable();
   123bc:	00121d40 	call	121d4 <_ZN5Plant5Motor7disableEv>
		return true;
   123c0:	00800044 	movi	r2,1
}
   123c4:	dfc00017 	ldw	ra,0(sp)
   123c8:	dec00104 	addi	sp,sp,4
   123cc:	f800283a 	ret

000123d0 <_ZN5Plant5Motor13getSecondWordEv>:
			const uint32_t base_address_encoder;
			const float radians_per_step;

			uint32_t getSecondWord()
			{
				return (duty_cycle << 16) | (direction << 14) | en << 13;
   123d0:	20c00617 	ldw	r3,24(r4)
   123d4:	20800717 	ldw	r2,28(r4)
   123d8:	1806943a 	slli	r3,r3,16
   123dc:	100493ba 	slli	r2,r2,14
   123e0:	1886b03a 	or	r3,r3,r2
   123e4:	20800817 	ldw	r2,32(r4)
   123e8:	1004937a 	slli	r2,r2,13
			}
   123ec:	1884b03a 	or	r2,r3,r2
   123f0:	f800283a 	ret

000123f4 <_ZN6Serial4UART10uart_0_isrEPv>:
std::function<void(Serial::message &received_message)> Serial::UART::callback;

void Serial::UART::uart_0_isr(void *)
{
	// Check if the UART buffer is empty or if there are more messages waiting.
	alt_u16 status = IORD_ALTERA_AVALON_UART_STATUS(UART_0_BASE);
   123f4:	008000b4 	movhi	r2,2
   123f8:	108a0a37 	ldwio	r2,10280(r2)

	if(status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
   123fc:	1080200c 	andi	r2,r2,128
   12400:	10001926 	beq	r2,zero,12468 <_ZN6Serial4UART10uart_0_isrEPv+0x74>
	{
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   12404:	008000b4 	movhi	r2,2
   12408:	110a0837 	ldwio	r4,10272(r2)
   1240c:	d0a21183 	ldbu	r2,-30650(gp)
   12410:	d0e211c4 	addi	r3,gp,-30649
   12414:	11403fcc 	andi	r5,r2,255
		rx_len ++ ;
   12418:	10800044 	addi	r2,r2,1
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   1241c:	1947883a 	add	r3,r3,r5
		rx_len ++ ;
   12420:	d0a21185 	stb	r2,-30650(gp)

		if (rx_len >= MESSAGE_SIZE)
   12424:	10803fcc 	andi	r2,r2,255
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   12428:	19000005 	stb	r4,0(r3)
		if (rx_len >= MESSAGE_SIZE)
   1242c:	10800130 	cmpltui	r2,r2,4
   12430:	10000d1e 	bne	r2,zero,12468 <_ZN6Serial4UART10uart_0_isrEPv+0x74>
		{
			uart_ready = true;
			rx_len = 0;
   12434:	d0221185 	stb	zero,-30650(gp)
{
   12438:	defffe04 	addi	sp,sp,-8
	if (uart_ready)
	{
		uart_ready = 0;

		message received_message;
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   1243c:	d809883a 	mov	r4,sp
   12440:	01800104 	movi	r6,4
   12444:	d16211c4 	addi	r5,gp,-30649
{
   12448:	dfc00115 	stw	ra,4(sp)
		uart_ready = 0;
   1244c:	d02212c5 	stb	zero,-30645(gp)
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   12450:	00170680 	call	17068 <memcpy>
    bool _M_empty() const { return !_M_manager; }
   12454:	010000b4 	movhi	r4,2
   12458:	21279d04 	addi	r4,r4,-24972
  template<typename _Res, typename... _ArgTypes>
    _Res
    function<_Res(_ArgTypes...)>::
    operator()(_ArgTypes... __args) const
    {
      if (_M_empty())
   1245c:	20800217 	ldw	r2,8(r4)
   12460:	1000041e 	bne	r2,zero,12474 <_ZN6Serial4UART10uart_0_isrEPv+0x80>
	__throw_bad_function_call();
   12464:	001499c0 	call	1499c <_ZSt25__throw_bad_function_callv>
	if (uart_ready)
   12468:	d0a212c3 	ldbu	r2,-30645(gp)
   1246c:	103ff21e 	bne	r2,zero,12438 <_ZN6Serial4UART10uart_0_isrEPv+0x44>
   12470:	f800283a 	ret
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   12474:	20800317 	ldw	r2,12(r4)
   12478:	d80b883a 	mov	r5,sp
   1247c:	103ee83a 	callr	r2

		callback(received_message);
	}
}
   12480:	dfc00117 	ldw	ra,4(sp)
   12484:	dec00204 	addi	sp,sp,8
   12488:	f800283a 	ret

0001248c <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE>:

Serial::UART::UART(std::function<void(Serial::message &received_message)> func)
   1248c:	00800074 	movhi	r2,1
   12490:	deffeb04 	addi	sp,sp,-84
   12494:	108bf204 	addi	r2,r2,12232
   12498:	d8800815 	stw	r2,32(sp)
   1249c:	008000b4 	movhi	r2,2
   124a0:	10a19b04 	addi	r2,r2,-31124
   124a4:	d8800915 	stw	r2,36(sp)
   124a8:	00800074 	movhi	r2,1
   124ac:	10897204 	addi	r2,r2,9672
   124b0:	d9000204 	addi	r4,sp,8
   124b4:	d8800b15 	stw	r2,44(sp)
   124b8:	dfc01415 	stw	ra,80(sp)
   124bc:	df001315 	stw	fp,76(sp)
   124c0:	d9400115 	stw	r5,4(sp)
   124c4:	df000a15 	stw	fp,40(sp)
   124c8:	dec00c15 	stw	sp,48(sp)
   124cc:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   124d0:	d8800117 	ldw	r2,4(sp)
    _Function_base() : _M_manager(nullptr) { }
   124d4:	d8001115 	stw	zero,68(sp)
    bool _M_empty() const { return !_M_manager; }
   124d8:	10800217 	ldw	r2,8(r2)
      if (static_cast<bool>(__x))
   124dc:	10000c26 	beq	r2,zero,12510 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0x84>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   124e0:	d9400117 	ldw	r5,4(sp)
   124e4:	00c00044 	movi	r3,1
   124e8:	d8c00315 	stw	r3,12(sp)
   124ec:	01800084 	movi	r6,2
   124f0:	d9000f04 	addi	r4,sp,60
   124f4:	103ee83a 	callr	r2
	  _M_invoker = __x._M_invoker;
   124f8:	d8800117 	ldw	r2,4(sp)
   124fc:	10800317 	ldw	r2,12(r2)
   12500:	d8801215 	stw	r2,72(sp)
	  _M_manager = __x._M_manager;
   12504:	d8800117 	ldw	r2,4(sp)
   12508:	10800217 	ldw	r2,8(r2)
   1250c:	d8801115 	stw	r2,68(sp)
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
      __a = _GLIBCXX_MOVE(__b);
   12510:	010000b4 	movhi	r4,2
   12514:	21279d17 	ldw	r4,-24972(r4)
   12518:	008000b4 	movhi	r2,2
   1251c:	10a79d04 	addi	r2,r2,-24972
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12520:	d9400f17 	ldw	r5,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   12524:	d9000f15 	stw	r4,60(sp)
   12528:	11000117 	ldw	r4,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   1252c:	d8c01017 	ldw	r3,64(sp)
      __a = _GLIBCXX_MOVE(__b);
   12530:	d9001015 	stw	r4,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12534:	010000b4 	movhi	r4,2
   12538:	21679d15 	stw	r5,-24972(r4)
   1253c:	10c00115 	stw	r3,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   12540:	11000217 	ldw	r4,8(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12544:	d8c01117 	ldw	r3,68(sp)
      __a = _GLIBCXX_MOVE(__b);
   12548:	d9001115 	stw	r4,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   1254c:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   12550:	11000317 	ldw	r4,12(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12554:	d8c01217 	ldw	r3,72(sp)
      __a = _GLIBCXX_MOVE(__b);
   12558:	d9001215 	stw	r4,72(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   1255c:	10c00315 	stw	r3,12(r2)
    class function<_Res(_ArgTypes...)>
   12560:	d9000f04 	addi	r4,sp,60
   12564:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
{
	callback = func;

	// Clear status flag.
	IOWR_ALTERA_AVALON_UART_STATUS(UART_0_BASE, 0x00);
   12568:	008000b4 	movhi	r2,2
   1256c:	100a0a35 	stwio	zero,10280(r2)

	// Read the useless value in the empty receive register.
	IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   12570:	108a0837 	ldwio	r2,10272(r2)

	// Setup RX IRQ routine.
	alt_u16 control = ALTERA_AVALON_UART_CONTROL_RRDY_MSK | ALTERA_AVALON_UART_CONTROL_E_MSK;
	IOWR_ALTERA_AVALON_UART_CONTROL (UART_0_BASE, control);
   12574:	00c06004 	movi	r3,384
   12578:	008000b4 	movhi	r2,2
   1257c:	10ca0b35 	stwio	r3,10284(r2)

	// Install IRQ service routine.
    alt_ic_isr_register(UART_0_IRQ_INTERRUPT_CONTROLLER_ID, UART_0_IRQ, uart_0_isr, NULL, NULL);
   12580:	01800074 	movhi	r6,1
   12584:	d8000015 	stw	zero,0(sp)
   12588:	00bfffc4 	movi	r2,-1
   1258c:	000f883a 	mov	r7,zero
   12590:	3188fd04 	addi	r6,r6,9204
   12594:	01400104 	movi	r5,4
   12598:	0009883a 	mov	r4,zero
   1259c:	d8800315 	stw	r2,12(sp)
   125a0:	00176380 	call	17638 <alt_ic_isr_register>

    // Enable interrupt.
	IOWR_ALTERA_AVALON_UART_CONTROL(UART_0_BASE, ALTERA_AVALON_UART_CONTROL_RRDY_MSK);
   125a4:	00c02004 	movi	r3,128
   125a8:	008000b4 	movhi	r2,2
   125ac:	10ca0b35 	stwio	r3,10284(r2)
   125b0:	d9000204 	addi	r4,sp,8
   125b4:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
}
   125b8:	dfc01417 	ldw	ra,80(sp)
   125bc:	df001317 	ldw	fp,76(sp)
   125c0:	dec01504 	addi	sp,sp,84
   125c4:	f800283a 	ret
    : _Function_base()
   125c8:	d8800417 	ldw	r2,16(sp)
   125cc:	d9000f04 	addi	r4,sp,60
   125d0:	d8800115 	stw	r2,4(sp)
   125d4:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
   125d8:	d9000117 	ldw	r4,4(sp)
   125dc:	00bfffc4 	movi	r2,-1
   125e0:	d8800315 	stw	r2,12(sp)
   125e4:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>

000125e8 <_ZN6Serial4UART14convertToArrayENS_7messageE>:
		IOWR_ALTERA_AVALON_UART_TXDATA(UART_0_BASE, data_byte);
	}
}

std::array<uint8_t, 4> Serial::UART::convertToArray(message msg)
{
   125e8:	defffd04 	addi	sp,sp,-12
   125ec:	2805883a 	mov	r2,r5
            reinterpret_cast<uint8_t *>(&msg),
            reinterpret_cast<uint8_t *>(&msg) + 4,
            &temp[0]
    );
    return temp;
}
   125f0:	dec00304 	addi	sp,sp,12
   125f4:	f800283a 	ret

000125f8 <_ZN6Serial4UART8sendDataENS_7messageE>:
{
   125f8:	defffe04 	addi	sp,sp,-8
   125fc:	dfc00115 	stw	ra,4(sp)
	std::array<uint8_t, 4> data	= convertToArray(msg);
   12600:	00125e80 	call	125e8 <_ZN6Serial4UART14convertToArrayENS_7messageE>
   12604:	d8800015 	stw	r2,0(sp)
   12608:	0005883a 	mov	r2,zero
	for (uint8_t data_byte : data)
   1260c:	d887883a 	add	r3,sp,r2
   12610:	19000003 	ldbu	r4,0(r3)
		alt_u8 status = IORD_ALTERA_AVALON_UART_STATUS (UART_0_BASE);
   12614:	00c000b4 	movhi	r3,2
   12618:	18ca0a37 	ldwio	r3,10280(r3)
		while (! (status & ALTERA_AVALON_UART_STATUS_TRDY_MSK))
   1261c:	18c0100c 	andi	r3,r3,64
   12620:	183ffc26 	beq	r3,zero,12614 <_ZN6Serial4UART8sendDataENS_7messageE+0x1c>
		IOWR_ALTERA_AVALON_UART_TXDATA(UART_0_BASE, data_byte);
   12624:	20c03fcc 	andi	r3,r4,255
   12628:	010000b4 	movhi	r4,2
   1262c:	20ca0935 	stwio	r3,10276(r4)
	for (uint8_t data_byte : data)
   12630:	10800044 	addi	r2,r2,1
   12634:	10c00118 	cmpnei	r3,r2,4
   12638:	183ff41e 	bne	r3,zero,1260c <_ZN6Serial4UART8sendDataENS_7messageE+0x14>
}
   1263c:	dfc00117 	ldw	ra,4(sp)
   12640:	dec00204 	addi	sp,sp,8
   12644:	f800283a 	ret

00012648 <_GLOBAL__sub_I__ZN6Serial4UART10uart_readyE>:
    _Function_base() : _M_manager(nullptr) { }
   12648:	008000b4 	movhi	r2,2
   1264c:	10279f15 	stw	zero,-24964(r2)
}
   12650:	f800283a 	ret

00012654 <_GLOBAL__sub_D__ZN6Serial4UART10uart_readyE>:
    class function<_Res(_ArgTypes...)>
   12654:	010000b4 	movhi	r4,2
   12658:	21279d04 	addi	r4,r4,-24972
   1265c:	0011d701 	jmpi	11d70 <_ZNSt14_Function_baseD1Ev>

00012660 <_ZN5Timer11timer_0_isrEPv>:
std::function<void()> Timer::callback;

void Timer::timer_0_isr(void* timer_isr_context)
{
    // Answer interrupt, clear STATUS register.
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE,
   12660:	00ffff84 	movi	r3,-2
   12664:	008000b4 	movhi	r2,2
   12668:	10ca0035 	stwio	r3,10240(r2)
    bool _M_empty() const { return !_M_manager; }
   1266c:	010000b4 	movhi	r4,2
   12670:	2127a104 	addi	r4,r4,-24956
      if (_M_empty())
   12674:	20800217 	ldw	r2,8(r4)
   12678:	1000031e 	bne	r2,zero,12688 <_ZN5Timer11timer_0_isrEPv+0x28>
{
   1267c:	deffff04 	addi	sp,sp,-4
   12680:	dfc00015 	stw	ra,0(sp)
	__throw_bad_function_call();
   12684:	001499c0 	call	1499c <_ZSt25__throw_bad_function_callv>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   12688:	20800317 	ldw	r2,12(r4)
   1268c:	1000683a 	jmp	r2

00012690 <_ZN5TimerC1ESt8functionIFvvEE>:

	// Call callback.
	callback();
}

Timer::Timer(std::function<void ()> func)
   12690:	00800074 	movhi	r2,1
   12694:	deffec04 	addi	sp,sp,-80
   12698:	108bf204 	addi	r2,r2,12232
   1269c:	d8800715 	stw	r2,28(sp)
   126a0:	008000b4 	movhi	r2,2
   126a4:	10a19c84 	addi	r2,r2,-31118
   126a8:	d8800815 	stw	r2,32(sp)
   126ac:	00800074 	movhi	r2,1
   126b0:	1089e104 	addi	r2,r2,10116
   126b4:	d9000104 	addi	r4,sp,4
   126b8:	d8800a15 	stw	r2,40(sp)
   126bc:	dfc01315 	stw	ra,76(sp)
   126c0:	df001215 	stw	fp,72(sp)
   126c4:	d9400015 	stw	r5,0(sp)
   126c8:	df000915 	stw	fp,36(sp)
   126cc:	dec00b15 	stw	sp,44(sp)
   126d0:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   126d4:	d8800017 	ldw	r2,0(sp)
    _Function_base() : _M_manager(nullptr) { }
   126d8:	d8001015 	stw	zero,64(sp)
    bool _M_empty() const { return !_M_manager; }
   126dc:	10800217 	ldw	r2,8(r2)
      if (static_cast<bool>(__x))
   126e0:	10000c26 	beq	r2,zero,12714 <_ZN5TimerC1ESt8functionIFvvEE+0x84>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   126e4:	d9400017 	ldw	r5,0(sp)
   126e8:	00c00044 	movi	r3,1
   126ec:	d8c00215 	stw	r3,8(sp)
   126f0:	01800084 	movi	r6,2
   126f4:	d9000e04 	addi	r4,sp,56
   126f8:	103ee83a 	callr	r2
	  _M_invoker = __x._M_invoker;
   126fc:	d8800017 	ldw	r2,0(sp)
   12700:	10800317 	ldw	r2,12(r2)
   12704:	d8801115 	stw	r2,68(sp)
	  _M_manager = __x._M_manager;
   12708:	d8800017 	ldw	r2,0(sp)
   1270c:	10800217 	ldw	r2,8(r2)
   12710:	d8801015 	stw	r2,64(sp)
      __a = _GLIBCXX_MOVE(__b);
   12714:	010000b4 	movhi	r4,2
   12718:	2127a117 	ldw	r4,-24956(r4)
   1271c:	008000b4 	movhi	r2,2
   12720:	10a7a104 	addi	r2,r2,-24956
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12724:	d9400e17 	ldw	r5,56(sp)
      __a = _GLIBCXX_MOVE(__b);
   12728:	d9000e15 	stw	r4,56(sp)
   1272c:	11000117 	ldw	r4,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12730:	d8c00f17 	ldw	r3,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   12734:	d9000f15 	stw	r4,60(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12738:	010000b4 	movhi	r4,2
   1273c:	2167a115 	stw	r5,-24956(r4)
   12740:	10c00115 	stw	r3,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   12744:	11000217 	ldw	r4,8(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12748:	d8c01017 	ldw	r3,64(sp)
      __a = _GLIBCXX_MOVE(__b);
   1274c:	d9001015 	stw	r4,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12750:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   12754:	11000317 	ldw	r4,12(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12758:	d8c01117 	ldw	r3,68(sp)
      __a = _GLIBCXX_MOVE(__b);
   1275c:	d9001115 	stw	r4,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12760:	10c00315 	stw	r3,12(r2)
    class function<_Res(_ArgTypes...)>
   12764:	d9000e04 	addi	r4,sp,56
   12768:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
   1276c:	d9000104 	addi	r4,sp,4
   12770:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
{
	callback = func;
}
   12774:	dfc01317 	ldw	ra,76(sp)
   12778:	df001217 	ldw	fp,72(sp)
   1277c:	dec01404 	addi	sp,sp,80
   12780:	f800283a 	ret
    : _Function_base()
   12784:	d8800317 	ldw	r2,12(sp)
   12788:	d9000e04 	addi	r4,sp,56
   1278c:	d8800015 	stw	r2,0(sp)
   12790:	0011d700 	call	11d70 <_ZNSt14_Function_baseD1Ev>
   12794:	d9000017 	ldw	r4,0(sp)
   12798:	00bfffc4 	movi	r2,-1
   1279c:	d8800215 	stw	r2,8(sp)
   127a0:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>

000127a4 <_ZN5Timer6enableEv>:

void Timer::enable()
{
   127a4:	defffe04 	addi	sp,sp,-8
   127a8:	dfc00115 	stw	ra,4(sp)
	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE,
   127ac:	00c001c4 	movi	r3,7
   127b0:	008000b4 	movhi	r2,2
   127b4:	10ca0135 	stwio	r3,10244(r2)
		ALTERA_AVALON_TIMER_CONTROL_CONT_MSK  | // CONT  = 1
		ALTERA_AVALON_TIMER_CONTROL_ITO_MSK);   // ITO   = 1

	void* isr_context_ptr = (void*) &timer_isr_context;

	alt_ic_isr_register(
   127b8:	01800074 	movhi	r6,1
   127bc:	d8000015 	stw	zero,0(sp)
   127c0:	d1e21304 	addi	r7,gp,-30644
   127c4:	31899804 	addi	r6,r6,9824
   127c8:	014000c4 	movi	r5,3
   127cc:	0009883a 	mov	r4,zero
   127d0:	00176380 	call	17638 <alt_ic_isr_register>
		TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, // interrupt controller label, copied from system.h
		TIMER_0_IRQ, // hardware interrupt number, copied from system.h
		timer_0_isr, // interrupt service subfunction
		isr_context_ptr, // points to the data structure related to the device driver instance
		0x0); // flags, reserved unused
}
   127d4:	dfc00117 	ldw	ra,4(sp)
   127d8:	dec00204 	addi	sp,sp,8
   127dc:	f800283a 	ret

000127e0 <_GLOBAL__sub_I__ZN5Timer17timer_isr_contextE>:
    _Function_base() : _M_manager(nullptr) { }
   127e0:	008000b4 	movhi	r2,2
   127e4:	1027a315 	stw	zero,-24948(r2)
   127e8:	f800283a 	ret

000127ec <_GLOBAL__sub_D__ZN5Timer17timer_isr_contextE>:
    class function<_Res(_ArgTypes...)>
   127ec:	010000b4 	movhi	r4,2
   127f0:	2127a104 	addi	r4,r4,-24956
   127f4:	0011d701 	jmpi	11d70 <_ZNSt14_Function_baseD1Ev>

000127f8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   127f8:	20800017 	ldw	r2,0(r4)
   127fc:	defffa04 	addi	sp,sp,-24
   12800:	dc000415 	stw	r16,16(sp)
   12804:	10800617 	ldw	r2,24(r2)
   12808:	3021883a 	mov	r16,r6
   1280c:	31800017 	ldw	r6,0(r6)
   12810:	00c00404 	movi	r3,16
   12814:	dfc00515 	stw	ra,20(sp)
   12818:	d8000015 	stw	zero,0(sp)
   1281c:	d8000115 	stw	zero,4(sp)
   12820:	d8c00215 	stw	r3,8(sp)
   12824:	d8000315 	stw	zero,12(sp)
   12828:	d80f883a 	mov	r7,sp
   1282c:	103ee83a 	callr	r2
   12830:	d8800117 	ldw	r2,4(sp)
   12834:	1080018c 	andi	r2,r2,6
   12838:	10800198 	cmpnei	r2,r2,6
   1283c:	1000071e 	bne	r2,zero,1285c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
   12840:	d8c00017 	ldw	r3,0(sp)
   12844:	00800044 	movi	r2,1
   12848:	80c00015 	stw	r3,0(r16)
   1284c:	dfc00517 	ldw	ra,20(sp)
   12850:	dc000417 	ldw	r16,16(sp)
   12854:	dec00604 	addi	sp,sp,24
   12858:	f800283a 	ret
   1285c:	0005883a 	mov	r2,zero
   12860:	dfc00517 	ldw	ra,20(sp)
   12864:	dc000417 	ldw	r16,16(sp)
   12868:	dec00604 	addi	sp,sp,24
   1286c:	f800283a 	ret

00012870 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
   12870:	d8c00017 	ldw	r3,0(sp)
   12874:	00800044 	movi	r2,1
   12878:	19800126 	beq	r3,r6,12880 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
   1287c:	f800283a 	ret
   12880:	00800184 	movi	r2,6
   12884:	f800283a 	ret

00012888 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   12888:	008000b4 	movhi	r2,2
   1288c:	10a22304 	addi	r2,r2,-30580
   12890:	20800015 	stw	r2,0(r4)
   12894:	0013efc1 	jmpi	13efc <_ZNSt9type_infoD1Ev>

00012898 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   12898:	defffe04 	addi	sp,sp,-8
   1289c:	008000b4 	movhi	r2,2
   128a0:	dc000015 	stw	r16,0(sp)
   128a4:	dfc00115 	stw	ra,4(sp)
   128a8:	10a22304 	addi	r2,r2,-30580
   128ac:	20800015 	stw	r2,0(r4)
   128b0:	2021883a 	mov	r16,r4
   128b4:	0013efc0 	call	13efc <_ZNSt9type_infoD1Ev>
   128b8:	01400204 	movi	r5,8
   128bc:	8009883a 	mov	r4,r16
   128c0:	dfc00117 	ldw	ra,4(sp)
   128c4:	dc000017 	ldw	r16,0(sp)
   128c8:	dec00204 	addi	sp,sp,8
   128cc:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

000128d0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
   128d0:	21000117 	ldw	r4,4(r4)
   128d4:	29400117 	ldw	r5,4(r5)
   128d8:	defffd04 	addi	sp,sp,-12
   128dc:	dc400115 	stw	r17,4(sp)
   128e0:	dc000015 	stw	r16,0(sp)
   128e4:	dfc00215 	stw	ra,8(sp)
   128e8:	3023883a 	mov	r17,r6
   128ec:	3821883a 	mov	r16,r7
   128f0:	21400526 	beq	r4,r5,12908 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
   128f4:	20800007 	ldb	r2,0(r4)
   128f8:	10800aa0 	cmpeqi	r2,r2,42
   128fc:	10000d1e 	bne	r2,zero,12934 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   12900:	00175d80 	call	175d8 <strcmp>
   12904:	10000b1e 	bne	r2,zero,12934 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   12908:	00800204 	movi	r2,8
   1290c:	80800315 	stw	r2,12(r16)
   12910:	00800184 	movi	r2,6
   12914:	80800115 	stw	r2,4(r16)
   12918:	84400015 	stw	r17,0(r16)
   1291c:	00800044 	movi	r2,1
   12920:	dfc00217 	ldw	ra,8(sp)
   12924:	dc400117 	ldw	r17,4(sp)
   12928:	dc000017 	ldw	r16,0(sp)
   1292c:	dec00304 	addi	sp,sp,12
   12930:	f800283a 	ret
   12934:	0005883a 	mov	r2,zero
   12938:	003ff906 	br	12920 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>

0001293c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
   1293c:	defffb04 	addi	sp,sp,-20
   12940:	dc800315 	stw	r18,12(sp)
   12944:	dc400215 	stw	r17,8(sp)
   12948:	2025883a 	mov	r18,r4
   1294c:	2823883a 	mov	r17,r5
   12950:	21000117 	ldw	r4,4(r4)
   12954:	29400117 	ldw	r5,4(r5)
   12958:	dfc00415 	stw	ra,16(sp)
   1295c:	dc000115 	stw	r16,4(sp)
   12960:	21400826 	beq	r4,r5,12984 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x48>
   12964:	20800007 	ldb	r2,0(r4)
   12968:	3821883a 	mov	r16,r7
   1296c:	10800aa0 	cmpeqi	r2,r2,42
   12970:	10000b1e 	bne	r2,zero,129a0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12974:	d9800015 	stw	r6,0(sp)
   12978:	00175d80 	call	175d8 <strcmp>
   1297c:	d9800017 	ldw	r6,0(sp)
   12980:	1000071e 	bne	r2,zero,129a0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12984:	00800044 	movi	r2,1
   12988:	dfc00417 	ldw	ra,16(sp)
   1298c:	dc800317 	ldw	r18,12(sp)
   12990:	dc400217 	ldw	r17,8(sp)
   12994:	dc000117 	ldw	r16,4(sp)
   12998:	dec00504 	addi	sp,sp,20
   1299c:	f800283a 	ret
   129a0:	81c00128 	cmpgeui	r7,r16,4
   129a4:	38000a1e 	bne	r7,zero,129d0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x94>
   129a8:	88800017 	ldw	r2,0(r17)
   129ac:	900b883a 	mov	r5,r18
   129b0:	8809883a 	mov	r4,r17
   129b4:	10800517 	ldw	r2,20(r2)
   129b8:	dfc00417 	ldw	ra,16(sp)
   129bc:	dc800317 	ldw	r18,12(sp)
   129c0:	dc400217 	ldw	r17,8(sp)
   129c4:	dc000117 	ldw	r16,4(sp)
   129c8:	dec00504 	addi	sp,sp,20
   129cc:	1000683a 	jmp	r2
   129d0:	0005883a 	mov	r2,zero
   129d4:	003fec06 	br	12988 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x4c>

000129d8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
   129d8:	defffa04 	addi	sp,sp,-24
   129dc:	dc400315 	stw	r17,12(sp)
   129e0:	d8800817 	ldw	r2,32(sp)
   129e4:	dc400617 	ldw	r17,24(sp)
   129e8:	dc800415 	stw	r18,16(sp)
   129ec:	dc000215 	stw	r16,8(sp)
   129f0:	dfc00515 	stw	ra,20(sp)
   129f4:	dc800917 	ldw	r18,36(sp)
   129f8:	21000117 	ldw	r4,4(r4)
   129fc:	3021883a 	mov	r16,r6
   12a00:	88801226 	beq	r17,r2,12a4c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x74>
   12a04:	39400117 	ldw	r5,4(r7)
   12a08:	21400526 	beq	r4,r5,12a20 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12a0c:	20800007 	ldb	r2,0(r4)
   12a10:	10800aa0 	cmpeqi	r2,r2,42
   12a14:	1000061e 	bne	r2,zero,12a30 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12a18:	00175d80 	call	175d8 <strcmp>
   12a1c:	1000041e 	bne	r2,zero,12a30 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12a20:	00800044 	movi	r2,1
   12a24:	94400015 	stw	r17,0(r18)
   12a28:	94000115 	stw	r16,4(r18)
   12a2c:	90800315 	stw	r2,12(r18)
   12a30:	0005883a 	mov	r2,zero
   12a34:	dfc00517 	ldw	ra,20(sp)
   12a38:	dc800417 	ldw	r18,16(sp)
   12a3c:	dc400317 	ldw	r17,12(sp)
   12a40:	dc000217 	ldw	r16,8(sp)
   12a44:	dec00604 	addi	sp,sp,24
   12a48:	f800283a 	ret
   12a4c:	d8800717 	ldw	r2,28(sp)
   12a50:	11400117 	ldw	r5,4(r2)
   12a54:	21400f26 	beq	r4,r5,12a94 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12a58:	20800007 	ldb	r2,0(r4)
   12a5c:	10800aa0 	cmpeqi	r2,r2,42
   12a60:	1000091e 	bne	r2,zero,12a88 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
   12a64:	d9c00115 	stw	r7,4(sp)
   12a68:	d9000015 	stw	r4,0(sp)
   12a6c:	00175d80 	call	175d8 <strcmp>
   12a70:	d9000017 	ldw	r4,0(sp)
   12a74:	d9c00117 	ldw	r7,4(sp)
   12a78:	10000626 	beq	r2,zero,12a94 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12a7c:	39400117 	ldw	r5,4(r7)
   12a80:	217fe51e 	bne	r4,r5,12a18 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x40>
   12a84:	003fe606 	br	12a20 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12a88:	38800117 	ldw	r2,4(r7)
   12a8c:	20bfe81e 	bne	r4,r2,12a30 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12a90:	003fe306 	br	12a20 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12a94:	94000215 	stw	r16,8(r18)
   12a98:	003fe506 	br	12a30 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>

00012a9c <_ZdlPvj>:
   12a9c:	00149d01 	jmpi	149d0 <_ZdlPv>

00012aa0 <_ZdaPv>:
   12aa0:	00149d01 	jmpi	149d0 <_ZdlPv>

00012aa4 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
   12aa4:	28800017 	ldw	r2,0(r5)
   12aa8:	30c00017 	ldw	r3,0(r6)
   12aac:	defffb04 	addi	sp,sp,-20
   12ab0:	10800217 	ldw	r2,8(r2)
   12ab4:	dc800315 	stw	r18,12(sp)
   12ab8:	dc400215 	stw	r17,8(sp)
   12abc:	dc000115 	stw	r16,4(sp)
   12ac0:	dfc00415 	stw	ra,16(sp)
   12ac4:	2023883a 	mov	r17,r4
   12ac8:	d8c00015 	stw	r3,0(sp)
   12acc:	2809883a 	mov	r4,r5
   12ad0:	2821883a 	mov	r16,r5
   12ad4:	3025883a 	mov	r18,r6
   12ad8:	103ee83a 	callr	r2
   12adc:	10803fcc 	andi	r2,r2,255
   12ae0:	10000326 	beq	r2,zero,12af0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
   12ae4:	d8800017 	ldw	r2,0(sp)
   12ae8:	10800017 	ldw	r2,0(r2)
   12aec:	d8800015 	stw	r2,0(sp)
   12af0:	88800017 	ldw	r2,0(r17)
   12af4:	01c00044 	movi	r7,1
   12af8:	d80d883a 	mov	r6,sp
   12afc:	10800417 	ldw	r2,16(r2)
   12b00:	800b883a 	mov	r5,r16
   12b04:	8809883a 	mov	r4,r17
   12b08:	103ee83a 	callr	r2
   12b0c:	10c03fcc 	andi	r3,r2,255
   12b10:	18000226 	beq	r3,zero,12b1c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x78>
   12b14:	d8c00017 	ldw	r3,0(sp)
   12b18:	90c00015 	stw	r3,0(r18)
   12b1c:	dfc00417 	ldw	ra,16(sp)
   12b20:	dc800317 	ldw	r18,12(sp)
   12b24:	dc400217 	ldw	r17,8(sp)
   12b28:	dc000117 	ldw	r16,4(sp)
   12b2c:	dec00504 	addi	sp,sp,20
   12b30:	f800283a 	ret

00012b34 <_ZL28read_encoded_value_with_basehjPKhPj>:
   12b34:	20803fcc 	andi	r2,r4,255
   12b38:	10801418 	cmpnei	r2,r2,80
   12b3c:	10002c26 	beq	r2,zero,12bf0 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
   12b40:	208003cc 	andi	r2,r4,15
   12b44:	10c00368 	cmpgeui	r3,r2,13
   12b48:	1800711e 	bne	r3,zero,12d10 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
   12b4c:	100490ba 	slli	r2,r2,2
   12b50:	00c00074 	movhi	r3,1
   12b54:	10c7883a 	add	r3,r2,r3
   12b58:	188ad817 	ldw	r2,11104(r3)
   12b5c:	1000683a 	jmp	r2
   12b60:	00012b94 	movui	zero,1198
   12b64:	00012c84 	movi	zero,1202
   12b68:	00012c48 	cmpgei	zero,zero,1201
   12b6c:	00012b94 	movui	zero,1198
   12b70:	00012c18 	cmpnei	zero,zero,1200
   12b74:	00012d10 	cmplti	zero,zero,1204
   12b78:	00012d10 	cmplti	zero,zero,1204
   12b7c:	00012d10 	cmplti	zero,zero,1204
   12b80:	00012d10 	cmplti	zero,zero,1204
   12b84:	00012cbc 	xorhi	zero,zero,1202
   12b88:	00012c60 	cmpeqi	zero,zero,1201
   12b8c:	00012b94 	movui	zero,1198
   12b90:	00012c18 	cmpnei	zero,zero,1200
   12b94:	32000043 	ldbu	r8,1(r6)
   12b98:	30800083 	ldbu	r2,2(r6)
   12b9c:	30c000c3 	ldbu	r3,3(r6)
   12ba0:	32400003 	ldbu	r9,0(r6)
   12ba4:	4010923a 	slli	r8,r8,8
   12ba8:	1004943a 	slli	r2,r2,16
   12bac:	1806963a 	slli	r3,r3,24
   12bb0:	4250b03a 	or	r8,r8,r9
   12bb4:	1204b03a 	or	r2,r2,r8
   12bb8:	1886b03a 	or	r3,r3,r2
   12bbc:	30800104 	addi	r2,r6,4
   12bc0:	18000926 	beq	r3,zero,12be8 <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
   12bc4:	22001c0c 	andi	r8,r4,112
   12bc8:	42000418 	cmpnei	r8,r8,16
   12bcc:	4000011e 	bne	r8,zero,12bd4 <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
   12bd0:	300b883a 	mov	r5,r6
   12bd4:	21003fcc 	andi	r4,r4,255
   12bd8:	2100201c 	xori	r4,r4,128
   12bdc:	213fe004 	addi	r4,r4,-128
   12be0:	1947883a 	add	r3,r3,r5
   12be4:	20000916 	blt	r4,zero,12c0c <_ZL28read_encoded_value_with_basehjPKhPj+0xd8>
   12be8:	38c00015 	stw	r3,0(r7)
   12bec:	f800283a 	ret
   12bf0:	308000c4 	addi	r2,r6,3
   12bf4:	01bfff04 	movi	r6,-4
   12bf8:	1184703a 	and	r2,r2,r6
   12bfc:	10c00017 	ldw	r3,0(r2)
   12c00:	10800104 	addi	r2,r2,4
   12c04:	38c00015 	stw	r3,0(r7)
   12c08:	f800283a 	ret
   12c0c:	18c00017 	ldw	r3,0(r3)
   12c10:	38c00015 	stw	r3,0(r7)
   12c14:	f800283a 	ret
   12c18:	32000043 	ldbu	r8,1(r6)
   12c1c:	30800083 	ldbu	r2,2(r6)
   12c20:	30c000c3 	ldbu	r3,3(r6)
   12c24:	32400003 	ldbu	r9,0(r6)
   12c28:	4010923a 	slli	r8,r8,8
   12c2c:	1004943a 	slli	r2,r2,16
   12c30:	1806963a 	slli	r3,r3,24
   12c34:	4250b03a 	or	r8,r8,r9
   12c38:	1204b03a 	or	r2,r2,r8
   12c3c:	1886b03a 	or	r3,r3,r2
   12c40:	30800204 	addi	r2,r6,8
   12c44:	003fde06 	br	12bc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12c48:	30c00043 	ldbu	r3,1(r6)
   12c4c:	32000003 	ldbu	r8,0(r6)
   12c50:	30800084 	addi	r2,r6,2
   12c54:	1806923a 	slli	r3,r3,8
   12c58:	1a06b03a 	or	r3,r3,r8
   12c5c:	003fd806 	br	12bc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12c60:	30c00043 	ldbu	r3,1(r6)
   12c64:	32000003 	ldbu	r8,0(r6)
   12c68:	30800084 	addi	r2,r6,2
   12c6c:	1806923a 	slli	r3,r3,8
   12c70:	1a06b03a 	or	r3,r3,r8
   12c74:	18ffffcc 	andi	r3,r3,65535
   12c78:	18e0001c 	xori	r3,r3,32768
   12c7c:	18e00004 	addi	r3,r3,-32768
   12c80:	003fcf06 	br	12bc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12c84:	3005883a 	mov	r2,r6
   12c88:	0007883a 	mov	r3,zero
   12c8c:	0015883a 	mov	r10,zero
   12c90:	12000003 	ldbu	r8,0(r2)
   12c94:	10800044 	addi	r2,r2,1
   12c98:	42401fcc 	andi	r9,r8,127
   12c9c:	4a92983a 	sll	r9,r9,r10
   12ca0:	42003fcc 	andi	r8,r8,255
   12ca4:	4200201c 	xori	r8,r8,128
   12ca8:	423fe004 	addi	r8,r8,-128
   12cac:	1a46b03a 	or	r3,r3,r9
   12cb0:	528001c4 	addi	r10,r10,7
   12cb4:	403ff616 	blt	r8,zero,12c90 <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
   12cb8:	003fc106 	br	12bc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12cbc:	3005883a 	mov	r2,r6
   12cc0:	0007883a 	mov	r3,zero
   12cc4:	0013883a 	mov	r9,zero
   12cc8:	12800003 	ldbu	r10,0(r2)
   12ccc:	10800044 	addi	r2,r2,1
   12cd0:	52001fcc 	andi	r8,r10,127
   12cd4:	4250983a 	sll	r8,r8,r9
   12cd8:	52c03fcc 	andi	r11,r10,255
   12cdc:	5ac0201c 	xori	r11,r11,128
   12ce0:	5affe004 	addi	r11,r11,-128
   12ce4:	1a06b03a 	or	r3,r3,r8
   12ce8:	4a4001c4 	addi	r9,r9,7
   12cec:	583ff616 	blt	r11,zero,12cc8 <_ZL28read_encoded_value_with_basehjPKhPj+0x194>
   12cf0:	4a000828 	cmpgeui	r8,r9,32
   12cf4:	403fb21e 	bne	r8,zero,12bc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12cf8:	5280100c 	andi	r10,r10,64
   12cfc:	503fb026 	beq	r10,zero,12bc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d00:	023fffc4 	movi	r8,-1
   12d04:	4252983a 	sll	r9,r8,r9
   12d08:	1a46b03a 	or	r3,r3,r9
   12d0c:	003fad06 	br	12bc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
   12d10:	deffff04 	addi	sp,sp,-4
   12d14:	dfc00015 	stw	ra,0(sp)
   12d18:	00170380 	call	17038 <abort>

00012d1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
   12d1c:	20803fcc 	andi	r2,r4,255
   12d20:	10803fe0 	cmpeqi	r2,r2,255
   12d24:	1000161e 	bne	r2,zero,12d80 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12d28:	2007883a 	mov	r3,r4
   12d2c:	18801c0c 	andi	r2,r3,112
   12d30:	2809883a 	mov	r4,r5
   12d34:	11400c20 	cmpeqi	r5,r2,48
   12d38:	2800131e 	bne	r5,zero,12d88 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
   12d3c:	11400c68 	cmpgeui	r5,r2,49
   12d40:	2800031e 	bne	r5,zero,12d50 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
   12d44:	11400820 	cmpeqi	r5,r2,32
   12d48:	28000426 	beq	r5,zero,12d5c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
   12d4c:	0016bd01 	jmpi	16bd0 <_Unwind_GetTextRelBase>
   12d50:	10c01020 	cmpeqi	r3,r2,64
   12d54:	18000826 	beq	r3,zero,12d78 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
   12d58:	0016bb81 	jmpi	16bb8 <_Unwind_GetRegionStart>
   12d5c:	10800868 	cmpgeui	r2,r2,33
   12d60:	1000021e 	bne	r2,zero,12d6c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12d64:	18c0180c 	andi	r3,r3,96
   12d68:	18000526 	beq	r3,zero,12d80 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12d6c:	deffff04 	addi	sp,sp,-4
   12d70:	dfc00015 	stw	ra,0(sp)
   12d74:	00170380 	call	17038 <abort>
   12d78:	10801420 	cmpeqi	r2,r2,80
   12d7c:	103ffb26 	beq	r2,zero,12d6c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12d80:	0005883a 	mov	r2,zero
   12d84:	f800283a 	ret
   12d88:	0016bc81 	jmpi	16bc8 <_Unwind_GetDataRelBase>

00012d8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
   12d8c:	defffb04 	addi	sp,sp,-20
   12d90:	dc800215 	stw	r18,8(sp)
   12d94:	dc400115 	stw	r17,4(sp)
   12d98:	dc000015 	stw	r16,0(sp)
   12d9c:	dfc00415 	stw	ra,16(sp)
   12da0:	dcc00315 	stw	r19,12(sp)
   12da4:	2025883a 	mov	r18,r4
   12da8:	2821883a 	mov	r16,r5
   12dac:	3023883a 	mov	r17,r6
   12db0:	20003d26 	beq	r4,zero,12ea8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
   12db4:	0016bb80 	call	16bb8 <_Unwind_GetRegionStart>
   12db8:	88800015 	stw	r2,0(r17)
   12dbc:	84c00003 	ldbu	r19,0(r16)
   12dc0:	84000044 	addi	r16,r16,1
   12dc4:	98c03fe0 	cmpeqi	r3,r19,255
   12dc8:	18002d26 	beq	r3,zero,12e80 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
   12dcc:	88800115 	stw	r2,4(r17)
   12dd0:	81000003 	ldbu	r4,0(r16)
   12dd4:	80800044 	addi	r2,r16,1
   12dd8:	20c03fcc 	andi	r3,r4,255
   12ddc:	89000505 	stb	r4,20(r17)
   12de0:	18c03fe0 	cmpeqi	r3,r3,255
   12de4:	1800321e 	bne	r3,zero,12eb0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
   12de8:	000d883a 	mov	r6,zero
   12dec:	000b883a 	mov	r5,zero
   12df0:	10c00003 	ldbu	r3,0(r2)
   12df4:	10800044 	addi	r2,r2,1
   12df8:	19001fcc 	andi	r4,r3,127
   12dfc:	2148983a 	sll	r4,r4,r5
   12e00:	18c03fcc 	andi	r3,r3,255
   12e04:	18c0201c 	xori	r3,r3,128
   12e08:	18ffe004 	addi	r3,r3,-128
   12e0c:	310cb03a 	or	r6,r6,r4
   12e10:	294001c4 	addi	r5,r5,7
   12e14:	183ff616 	blt	r3,zero,12df0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
   12e18:	118d883a 	add	r6,r2,r6
   12e1c:	89800315 	stw	r6,12(r17)
   12e20:	10c00003 	ldbu	r3,0(r2)
   12e24:	000f883a 	mov	r7,zero
   12e28:	10800044 	addi	r2,r2,1
   12e2c:	88c00545 	stb	r3,21(r17)
   12e30:	000b883a 	mov	r5,zero
   12e34:	10c00003 	ldbu	r3,0(r2)
   12e38:	10800044 	addi	r2,r2,1
   12e3c:	19001fcc 	andi	r4,r3,127
   12e40:	2148983a 	sll	r4,r4,r5
   12e44:	18c03fcc 	andi	r3,r3,255
   12e48:	18c0201c 	xori	r3,r3,128
   12e4c:	18ffe004 	addi	r3,r3,-128
   12e50:	390eb03a 	or	r7,r7,r4
   12e54:	294001c4 	addi	r5,r5,7
   12e58:	183ff616 	blt	r3,zero,12e34 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
   12e5c:	11cf883a 	add	r7,r2,r7
   12e60:	89c00415 	stw	r7,16(r17)
   12e64:	dfc00417 	ldw	ra,16(sp)
   12e68:	dcc00317 	ldw	r19,12(sp)
   12e6c:	dc800217 	ldw	r18,8(sp)
   12e70:	dc400117 	ldw	r17,4(sp)
   12e74:	dc000017 	ldw	r16,0(sp)
   12e78:	dec00504 	addi	sp,sp,20
   12e7c:	f800283a 	ret
   12e80:	900b883a 	mov	r5,r18
   12e84:	9809883a 	mov	r4,r19
   12e88:	0012d1c0 	call	12d1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12e8c:	800d883a 	mov	r6,r16
   12e90:	89c00104 	addi	r7,r17,4
   12e94:	100b883a 	mov	r5,r2
   12e98:	9809883a 	mov	r4,r19
   12e9c:	0012b340 	call	12b34 <_ZL28read_encoded_value_with_basehjPKhPj>
   12ea0:	1021883a 	mov	r16,r2
   12ea4:	003fca06 	br	12dd0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
   12ea8:	0005883a 	mov	r2,zero
   12eac:	003fc206 	br	12db8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
   12eb0:	88000315 	stw	zero,12(r17)
   12eb4:	003fda06 	br	12e20 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

00012eb8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
   12eb8:	defffa04 	addi	sp,sp,-24
   12ebc:	dc000215 	stw	r16,8(sp)
   12ec0:	24000317 	ldw	r16,12(r4)
   12ec4:	01ce303a 	nor	r7,zero,r7
   12ec8:	dc800415 	stw	r18,16(sp)
   12ecc:	dc400315 	stw	r17,12(sp)
   12ed0:	dfc00515 	stw	ra,20(sp)
   12ed4:	2025883a 	mov	r18,r4
   12ed8:	2823883a 	mov	r17,r5
   12edc:	d9800015 	stw	r6,0(sp)
   12ee0:	81e1883a 	add	r16,r16,r7
   12ee4:	000f883a 	mov	r7,zero
   12ee8:	000d883a 	mov	r6,zero
   12eec:	80800003 	ldbu	r2,0(r16)
   12ef0:	84000044 	addi	r16,r16,1
   12ef4:	10c01fcc 	andi	r3,r2,127
   12ef8:	1986983a 	sll	r3,r3,r6
   12efc:	10803fcc 	andi	r2,r2,255
   12f00:	1080201c 	xori	r2,r2,128
   12f04:	10bfe004 	addi	r2,r2,-128
   12f08:	38ceb03a 	or	r7,r7,r3
   12f0c:	318001c4 	addi	r6,r6,7
   12f10:	103ff616 	blt	r2,zero,12eec <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
   12f14:	38002926 	beq	r7,zero,12fbc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x104>
   12f18:	90800503 	ldbu	r2,20(r18)
   12f1c:	11003fcc 	andi	r4,r2,255
   12f20:	20c03fe0 	cmpeqi	r3,r4,255
   12f24:	1800231e 	bne	r3,zero,12fb4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xfc>
   12f28:	108001cc 	andi	r2,r2,7
   12f2c:	10c000a0 	cmpeqi	r3,r2,2
   12f30:	18001d1e 	bne	r3,zero,12fa8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xf0>
   12f34:	10c000e8 	cmpgeui	r3,r2,3
   12f38:	18001726 	beq	r3,zero,12f98 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe0>
   12f3c:	10c000e0 	cmpeqi	r3,r2,3
   12f40:	1800161e 	bne	r3,zero,12f9c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe4>
   12f44:	10800120 	cmpeqi	r2,r2,4
   12f48:	10001e26 	beq	r2,zero,12fc4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   12f4c:	380e90fa 	slli	r7,r7,3
   12f50:	01c5c83a 	sub	r2,zero,r7
   12f54:	91800317 	ldw	r6,12(r18)
   12f58:	91400217 	ldw	r5,8(r18)
   12f5c:	d9c00104 	addi	r7,sp,4
   12f60:	308d883a 	add	r6,r6,r2
   12f64:	0012b340 	call	12b34 <_ZL28read_encoded_value_with_basehjPKhPj>
   12f68:	d9000117 	ldw	r4,4(sp)
   12f6c:	d80d883a 	mov	r6,sp
   12f70:	880b883a 	mov	r5,r17
   12f74:	0012aa40 	call	12aa4 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   12f78:	10c03fcc 	andi	r3,r2,255
   12f7c:	183fd926 	beq	r3,zero,12ee4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
   12f80:	dfc00517 	ldw	ra,20(sp)
   12f84:	dc800417 	ldw	r18,16(sp)
   12f88:	dc400317 	ldw	r17,12(sp)
   12f8c:	dc000217 	ldw	r16,8(sp)
   12f90:	dec00604 	addi	sp,sp,24
   12f94:	f800283a 	ret
   12f98:	10000a1e 	bne	r2,zero,12fc4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   12f9c:	380e90ba 	slli	r7,r7,2
   12fa0:	01c5c83a 	sub	r2,zero,r7
   12fa4:	003feb06 	br	12f54 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   12fa8:	39cf883a 	add	r7,r7,r7
   12fac:	01c5c83a 	sub	r2,zero,r7
   12fb0:	003fe806 	br	12f54 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   12fb4:	0005883a 	mov	r2,zero
   12fb8:	003fe606 	br	12f54 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   12fbc:	0005883a 	mov	r2,zero
   12fc0:	003fef06 	br	12f80 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xc8>
   12fc4:	00170380 	call	17038 <abort>

00012fc8 <__gxx_personality_sj0>:
   12fc8:	deffdb04 	addi	sp,sp,-148
   12fcc:	02000074 	movhi	r8,1
   12fd0:	00c000b4 	movhi	r3,2
   12fd4:	00800074 	movhi	r2,1
   12fd8:	108d8f04 	addi	r2,r2,13884
   12fdc:	d9000015 	stw	r4,0(sp)
   12fe0:	420bf204 	addi	r8,r8,12232
   12fe4:	18e19e04 	addi	r3,r3,-31112
   12fe8:	d9000d04 	addi	r4,sp,52
   12fec:	d8801615 	stw	r2,88(sp)
   12ff0:	dfc02415 	stw	ra,144(sp)
   12ff4:	df002315 	stw	fp,140(sp)
   12ff8:	d9400315 	stw	r5,12(sp)
   12ffc:	d9800115 	stw	r6,4(sp)
   13000:	d9c00215 	stw	r7,8(sp)
   13004:	da001315 	stw	r8,76(sp)
   13008:	d8c01415 	stw	r3,80(sp)
   1300c:	df001515 	stw	fp,84(sp)
   13010:	dec01715 	stw	sp,92(sp)
   13014:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
   13018:	d8800017 	ldw	r2,0(sp)
   1301c:	d8001a15 	stw	zero,104(sp)
   13020:	d8001b15 	stw	zero,108(sp)
   13024:	10800058 	cmpnei	r2,r2,1
   13028:	1000471e 	bne	r2,zero,13148 <__gxx_personality_sj0+0x180>
   1302c:	d9800117 	ldw	r6,4(sp)
   13030:	00af3574 	movhi	r2,48341
   13034:	10b54004 	addi	r2,r2,-11008
   13038:	3085883a 	add	r2,r6,r2
   1303c:	d8800715 	stw	r2,28(sp)
   13040:	1185803a 	cmpltu	r2,r2,r6
   13044:	d9800217 	ldw	r6,8(sp)
   13048:	00ee2cb4 	movhi	r3,47282
   1304c:	d9000317 	ldw	r4,12(sp)
   13050:	18eaaf04 	addi	r3,r3,-21828
   13054:	30c7883a 	add	r3,r6,r3
   13058:	10c7883a 	add	r3,r2,r3
   1305c:	21000198 	cmpnei	r4,r4,6
   13060:	d8c00615 	stw	r3,24(sp)
   13064:	2000011e 	bne	r4,zero,1306c <__gxx_personality_sj0+0xa4>
   13068:	1800d026 	beq	r3,zero,133ac <__gxx_personality_sj0+0x3e4>
   1306c:	d9002617 	ldw	r4,152(sp)
   13070:	00bfffc4 	movi	r2,-1
   13074:	d8800e15 	stw	r2,56(sp)
   13078:	0016bac0 	call	16bac <_Unwind_GetLanguageSpecificData>
   1307c:	d8800515 	stw	r2,20(sp)
   13080:	10005d26 	beq	r2,zero,131f8 <__gxx_personality_sj0+0x230>
   13084:	d9400517 	ldw	r5,20(sp)
   13088:	d9002617 	ldw	r4,152(sp)
   1308c:	d9801d04 	addi	r6,sp,116
   13090:	00bfffc4 	movi	r2,-1
   13094:	d8800e15 	stw	r2,56(sp)
   13098:	0012d8c0 	call	12d8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   1309c:	d9002203 	ldbu	r4,136(sp)
   130a0:	d9402617 	ldw	r5,152(sp)
   130a4:	d8800015 	stw	r2,0(sp)
   130a8:	0012d1c0 	call	12d1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   130ac:	d9002617 	ldw	r4,152(sp)
   130b0:	d9401b04 	addi	r5,sp,108
   130b4:	d8801f15 	stw	r2,124(sp)
   130b8:	0016b7c0 	call	16b7c <_Unwind_GetIPInfo>
   130bc:	d8c01b17 	ldw	r3,108(sp)
   130c0:	d8800115 	stw	r2,4(sp)
   130c4:	18004f26 	beq	r3,zero,13204 <__gxx_personality_sj0+0x23c>
   130c8:	d8800117 	ldw	r2,4(sp)
   130cc:	10004a16 	blt	r2,zero,131f8 <__gxx_personality_sj0+0x230>
   130d0:	1000381e 	bne	r2,zero,131b4 <__gxx_personality_sj0+0x1ec>
   130d4:	d8000415 	stw	zero,16(sp)
   130d8:	d8000215 	stw	zero,8(sp)
   130dc:	00800044 	movi	r2,1
   130e0:	d8c00317 	ldw	r3,12(sp)
   130e4:	18c0004c 	andi	r3,r3,1
   130e8:	1801061e 	bne	r3,zero,13504 <__gxx_personality_sj0+0x53c>
   130ec:	d8c00317 	ldw	r3,12(sp)
   130f0:	18c0020c 	andi	r3,r3,8
   130f4:	18010a26 	beq	r3,zero,13520 <__gxx_personality_sj0+0x558>
   130f8:	10800058 	cmpnei	r2,r2,1
   130fc:	10015126 	beq	r2,zero,13644 <__gxx_personality_sj0+0x67c>
   13100:	d8800417 	ldw	r2,16(sp)
   13104:	10014a16 	blt	r2,zero,13630 <__gxx_personality_sj0+0x668>
   13108:	d9002617 	ldw	r4,152(sp)
   1310c:	d9802517 	ldw	r6,148(sp)
   13110:	00bfffc4 	movi	r2,-1
   13114:	000b883a 	mov	r5,zero
   13118:	d8800e15 	stw	r2,56(sp)
   1311c:	0016b540 	call	16b54 <_Unwind_SetGR>
   13120:	d9800417 	ldw	r6,16(sp)
   13124:	d9002617 	ldw	r4,152(sp)
   13128:	01400044 	movi	r5,1
   1312c:	0016b540 	call	16b54 <_Unwind_SetGR>
   13130:	d9400117 	ldw	r5,4(sp)
   13134:	d9002617 	ldw	r4,152(sp)
   13138:	0016b9c0 	call	16b9c <_Unwind_SetIP>
   1313c:	008001c4 	movi	r2,7
   13140:	d8800015 	stw	r2,0(sp)
   13144:	00000206 	br	13150 <__gxx_personality_sj0+0x188>
   13148:	008000c4 	movi	r2,3
   1314c:	d8800015 	stw	r2,0(sp)
   13150:	d9000d04 	addi	r4,sp,52
   13154:	0016b140 	call	16b14 <_Unwind_SjLj_Unregister>
   13158:	d8800017 	ldw	r2,0(sp)
   1315c:	dfc02417 	ldw	ra,144(sp)
   13160:	df002317 	ldw	fp,140(sp)
   13164:	dec02504 	addi	sp,sp,148
   13168:	f800283a 	ret
   1316c:	000b883a 	mov	r5,zero
   13170:	0009883a 	mov	r4,zero
   13174:	d8c00017 	ldw	r3,0(sp)
   13178:	18800003 	ldbu	r2,0(r3)
   1317c:	18c00044 	addi	r3,r3,1
   13180:	d8c00015 	stw	r3,0(sp)
   13184:	10c01fcc 	andi	r3,r2,127
   13188:	1906983a 	sll	r3,r3,r4
   1318c:	10803fcc 	andi	r2,r2,255
   13190:	1080201c 	xori	r2,r2,128
   13194:	10bfe004 	addi	r2,r2,-128
   13198:	28cab03a 	or	r5,r5,r3
   1319c:	210001c4 	addi	r4,r4,7
   131a0:	103ff416 	blt	r2,zero,13174 <__gxx_personality_sj0+0x1ac>
   131a4:	d8800117 	ldw	r2,4(sp)
   131a8:	10bfffc4 	addi	r2,r2,-1
   131ac:	d8800115 	stw	r2,4(sp)
   131b0:	10001726 	beq	r2,zero,13210 <__gxx_personality_sj0+0x248>
   131b4:	000d883a 	mov	r6,zero
   131b8:	0009883a 	mov	r4,zero
   131bc:	d8c00017 	ldw	r3,0(sp)
   131c0:	18800003 	ldbu	r2,0(r3)
   131c4:	18c00044 	addi	r3,r3,1
   131c8:	d8c00015 	stw	r3,0(sp)
   131cc:	10c01fcc 	andi	r3,r2,127
   131d0:	1906983a 	sll	r3,r3,r4
   131d4:	10803fcc 	andi	r2,r2,255
   131d8:	1080201c 	xori	r2,r2,128
   131dc:	10bfe004 	addi	r2,r2,-128
   131e0:	30ccb03a 	or	r6,r6,r3
   131e4:	210001c4 	addi	r4,r4,7
   131e8:	103ff416 	blt	r2,zero,131bc <__gxx_personality_sj0+0x1f4>
   131ec:	003fdf06 	br	1316c <__gxx_personality_sj0+0x1a4>
   131f0:	d88008c3 	ldbu	r2,35(sp)
   131f4:	10008c1e 	bne	r2,zero,13428 <__gxx_personality_sj0+0x460>
   131f8:	00800204 	movi	r2,8
   131fc:	d8800015 	stw	r2,0(sp)
   13200:	003fd306 	br	13150 <__gxx_personality_sj0+0x188>
   13204:	10bfffc4 	addi	r2,r2,-1
   13208:	d8800115 	stw	r2,4(sp)
   1320c:	003fae06 	br	130c8 <__gxx_personality_sj0+0x100>
   13210:	30800044 	addi	r2,r6,1
   13214:	d8800a15 	stw	r2,40(sp)
   13218:	283ff626 	beq	r5,zero,131f4 <__gxx_personality_sj0+0x22c>
   1321c:	d8800a17 	ldw	r2,40(sp)
   13220:	103ff526 	beq	r2,zero,131f8 <__gxx_personality_sj0+0x230>
   13224:	d8802117 	ldw	r2,132(sp)
   13228:	297fffc4 	addi	r5,r5,-1
   1322c:	1145883a 	add	r2,r2,r5
   13230:	d8800215 	stw	r2,8(sp)
   13234:	10007c26 	beq	r2,zero,13428 <__gxx_personality_sj0+0x460>
   13238:	d8800317 	ldw	r2,12(sp)
   1323c:	1080020c 	andi	r2,r2,8
   13240:	d8800b15 	stw	r2,44(sp)
   13244:	1000bf1e 	bne	r2,zero,13544 <__gxx_personality_sj0+0x57c>
   13248:	d8800617 	ldw	r2,24(sp)
   1324c:	1000e526 	beq	r2,zero,135e4 <__gxx_personality_sj0+0x61c>
   13250:	008000b4 	movhi	r2,2
   13254:	10a54004 	addi	r2,r2,-27392
   13258:	d8800915 	stw	r2,36(sp)
   1325c:	d8800717 	ldw	r2,28(sp)
   13260:	d80008c5 	stb	zero,35(sp)
   13264:	108000a8 	cmpgeui	r2,r2,2
   13268:	d8800c15 	stw	r2,48(sp)
   1326c:	d8800217 	ldw	r2,8(sp)
   13270:	000f883a 	mov	r7,zero
   13274:	0007883a 	mov	r3,zero
   13278:	d8800015 	stw	r2,0(sp)
   1327c:	d8800017 	ldw	r2,0(sp)
   13280:	11000003 	ldbu	r4,0(r2)
   13284:	10800044 	addi	r2,r2,1
   13288:	d8800015 	stw	r2,0(sp)
   1328c:	20801fcc 	andi	r2,r4,127
   13290:	10c4983a 	sll	r2,r2,r3
   13294:	21403fcc 	andi	r5,r4,255
   13298:	2940201c 	xori	r5,r5,128
   1329c:	297fe004 	addi	r5,r5,-128
   132a0:	388eb03a 	or	r7,r7,r2
   132a4:	18c001c4 	addi	r3,r3,7
   132a8:	283ff416 	blt	r5,zero,1327c <__gxx_personality_sj0+0x2b4>
   132ac:	18800828 	cmpgeui	r2,r3,32
   132b0:	1000061e 	bne	r2,zero,132cc <__gxx_personality_sj0+0x304>
   132b4:	2100100c 	andi	r4,r4,64
   132b8:	20000426 	beq	r4,zero,132cc <__gxx_personality_sj0+0x304>
   132bc:	00800044 	movi	r2,1
   132c0:	10c6983a 	sll	r3,r2,r3
   132c4:	00c7c83a 	sub	r3,zero,r3
   132c8:	38ceb03a 	or	r7,r7,r3
   132cc:	d9400017 	ldw	r5,0(sp)
   132d0:	d9c00415 	stw	r7,16(sp)
   132d4:	d8000115 	stw	zero,4(sp)
   132d8:	0007883a 	mov	r3,zero
   132dc:	29000003 	ldbu	r4,0(r5)
   132e0:	da000117 	ldw	r8,4(sp)
   132e4:	29400044 	addi	r5,r5,1
   132e8:	20801fcc 	andi	r2,r4,127
   132ec:	10c4983a 	sll	r2,r2,r3
   132f0:	21803fcc 	andi	r6,r4,255
   132f4:	3180201c 	xori	r6,r6,128
   132f8:	4084b03a 	or	r2,r8,r2
   132fc:	31bfe004 	addi	r6,r6,-128
   13300:	d8800115 	stw	r2,4(sp)
   13304:	18c001c4 	addi	r3,r3,7
   13308:	303ff416 	blt	r6,zero,132dc <__gxx_personality_sj0+0x314>
   1330c:	18800828 	cmpgeui	r2,r3,32
   13310:	1000081e 	bne	r2,zero,13334 <__gxx_personality_sj0+0x36c>
   13314:	2100100c 	andi	r4,r4,64
   13318:	20000626 	beq	r4,zero,13334 <__gxx_personality_sj0+0x36c>
   1331c:	00800044 	movi	r2,1
   13320:	10c6983a 	sll	r3,r2,r3
   13324:	d8800117 	ldw	r2,4(sp)
   13328:	00c7c83a 	sub	r3,zero,r3
   1332c:	10c4b03a 	or	r2,r2,r3
   13330:	d8800115 	stw	r2,4(sp)
   13334:	38004726 	beq	r7,zero,13454 <__gxx_personality_sj0+0x48c>
   13338:	01c04916 	blt	zero,r7,13460 <__gxx_personality_sj0+0x498>
   1333c:	d8800917 	ldw	r2,36(sp)
   13340:	10000426 	beq	r2,zero,13354 <__gxx_personality_sj0+0x38c>
   13344:	d8800b17 	ldw	r2,44(sp)
   13348:	1000021e 	bne	r2,zero,13354 <__gxx_personality_sj0+0x38c>
   1334c:	d8800617 	ldw	r2,24(sp)
   13350:	10008026 	beq	r2,zero,13554 <__gxx_personality_sj0+0x58c>
   13354:	d8802017 	ldw	r2,128(sp)
   13358:	01ce303a 	nor	r7,zero,r7
   1335c:	000b883a 	mov	r5,zero
   13360:	11cf883a 	add	r7,r2,r7
   13364:	0009883a 	mov	r4,zero
   13368:	38800003 	ldbu	r2,0(r7)
   1336c:	39c00044 	addi	r7,r7,1
   13370:	10c01fcc 	andi	r3,r2,127
   13374:	1906983a 	sll	r3,r3,r4
   13378:	10803fcc 	andi	r2,r2,255
   1337c:	1080201c 	xori	r2,r2,128
   13380:	10bfe004 	addi	r2,r2,-128
   13384:	28cab03a 	or	r5,r5,r3
   13388:	210001c4 	addi	r4,r4,7
   1338c:	103ff616 	blt	r2,zero,13368 <__gxx_personality_sj0+0x3a0>
   13390:	28005126 	beq	r5,zero,134d8 <__gxx_personality_sj0+0x510>
   13394:	d8800117 	ldw	r2,4(sp)
   13398:	103f9526 	beq	r2,zero,131f0 <__gxx_personality_sj0+0x228>
   1339c:	d8c00017 	ldw	r3,0(sp)
   133a0:	1885883a 	add	r2,r3,r2
   133a4:	d8800215 	stw	r2,8(sp)
   133a8:	003fb006 	br	1326c <__gxx_personality_sj0+0x2a4>
   133ac:	d8800717 	ldw	r2,28(sp)
   133b0:	108000a8 	cmpgeui	r2,r2,2
   133b4:	103f2d1e 	bne	r2,zero,1306c <__gxx_personality_sj0+0xa4>
   133b8:	d8802517 	ldw	r2,148(sp)
   133bc:	10bffe17 	ldw	r2,-8(r2)
   133c0:	d8800115 	stw	r2,4(sp)
   133c4:	10005d26 	beq	r2,zero,1353c <__gxx_personality_sj0+0x574>
   133c8:	d8802517 	ldw	r2,148(sp)
   133cc:	10bffb17 	ldw	r2,-20(r2)
   133d0:	d8800415 	stw	r2,16(sp)
   133d4:	d8802517 	ldw	r2,148(sp)
   133d8:	10bffd17 	ldw	r2,-12(r2)
   133dc:	d8800515 	stw	r2,20(sp)
   133e0:	d8800417 	ldw	r2,16(sp)
   133e4:	103f480e 	bge	r2,zero,13108 <__gxx_personality_sj0+0x140>
   133e8:	d9002617 	ldw	r4,152(sp)
   133ec:	d9400517 	ldw	r5,20(sp)
   133f0:	d9801d04 	addi	r6,sp,116
   133f4:	00bfffc4 	movi	r2,-1
   133f8:	d8800e15 	stw	r2,56(sp)
   133fc:	0012d8c0 	call	12d8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   13400:	d9402617 	ldw	r5,152(sp)
   13404:	d9002203 	ldbu	r4,136(sp)
   13408:	0012d1c0 	call	12d1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   1340c:	d9002203 	ldbu	r4,136(sp)
   13410:	d9402617 	ldw	r5,152(sp)
   13414:	d8801f15 	stw	r2,124(sp)
   13418:	0012d1c0 	call	12d1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   1341c:	d8c02517 	ldw	r3,148(sp)
   13420:	18bffe15 	stw	r2,-8(r3)
   13424:	003f3806 	br	13108 <__gxx_personality_sj0+0x140>
   13428:	d8800317 	ldw	r2,12(sp)
   1342c:	1080004c 	andi	r2,r2,1
   13430:	103f711e 	bne	r2,zero,131f8 <__gxx_personality_sj0+0x230>
   13434:	d8800317 	ldw	r2,12(sp)
   13438:	1080020c 	andi	r2,r2,8
   1343c:	d8800415 	stw	r2,16(sp)
   13440:	10008126 	beq	r2,zero,13648 <__gxx_personality_sj0+0x680>
   13444:	d8800a17 	ldw	r2,40(sp)
   13448:	d8000415 	stw	zero,16(sp)
   1344c:	d8800115 	stw	r2,4(sp)
   13450:	003f2d06 	br	13108 <__gxx_personality_sj0+0x140>
   13454:	00800044 	movi	r2,1
   13458:	d88008c5 	stb	r2,35(sp)
   1345c:	003fcd06 	br	13394 <__gxx_personality_sj0+0x3cc>
   13460:	d8802203 	ldbu	r2,136(sp)
   13464:	11003fcc 	andi	r4,r2,255
   13468:	20c03fe0 	cmpeqi	r3,r4,255
   1346c:	18002a1e 	bne	r3,zero,13518 <__gxx_personality_sj0+0x550>
   13470:	108001cc 	andi	r2,r2,7
   13474:	10c000a0 	cmpeqi	r3,r2,2
   13478:	18001f1e 	bne	r3,zero,134f8 <__gxx_personality_sj0+0x530>
   1347c:	10c000e8 	cmpgeui	r3,r2,3
   13480:	18001926 	beq	r3,zero,134e8 <__gxx_personality_sj0+0x520>
   13484:	10c000e0 	cmpeqi	r3,r2,3
   13488:	1800181e 	bne	r3,zero,134ec <__gxx_personality_sj0+0x524>
   1348c:	10800120 	cmpeqi	r2,r2,4
   13490:	10007026 	beq	r2,zero,13654 <__gxx_personality_sj0+0x68c>
   13494:	380490fa 	slli	r2,r7,3
   13498:	0085c83a 	sub	r2,zero,r2
   1349c:	d9802017 	ldw	r6,128(sp)
   134a0:	d9401f17 	ldw	r5,124(sp)
   134a4:	d9c01c04 	addi	r7,sp,112
   134a8:	308d883a 	add	r6,r6,r2
   134ac:	00bfffc4 	movi	r2,-1
   134b0:	d8800e15 	stw	r2,56(sp)
   134b4:	0012b340 	call	12b34 <_ZL28read_encoded_value_with_basehjPKhPj>
   134b8:	d9001c17 	ldw	r4,112(sp)
   134bc:	20000626 	beq	r4,zero,134d8 <__gxx_personality_sj0+0x510>
   134c0:	d9400917 	ldw	r5,36(sp)
   134c4:	283fb326 	beq	r5,zero,13394 <__gxx_personality_sj0+0x3cc>
   134c8:	d9801a04 	addi	r6,sp,104
   134cc:	0012aa40 	call	12aa4 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   134d0:	10803fcc 	andi	r2,r2,255
   134d4:	103faf26 	beq	r2,zero,13394 <__gxx_personality_sj0+0x3cc>
   134d8:	d8800a17 	ldw	r2,40(sp)
   134dc:	d8800115 	stw	r2,4(sp)
   134e0:	008000c4 	movi	r2,3
   134e4:	003efe06 	br	130e0 <__gxx_personality_sj0+0x118>
   134e8:	10005a1e 	bne	r2,zero,13654 <__gxx_personality_sj0+0x68c>
   134ec:	380490ba 	slli	r2,r7,2
   134f0:	0085c83a 	sub	r2,zero,r2
   134f4:	003fe906 	br	1349c <__gxx_personality_sj0+0x4d4>
   134f8:	39cf883a 	add	r7,r7,r7
   134fc:	01c5c83a 	sub	r2,zero,r7
   13500:	003fe606 	br	1349c <__gxx_personality_sj0+0x4d4>
   13504:	d8800617 	ldw	r2,24(sp)
   13508:	10002326 	beq	r2,zero,13598 <__gxx_personality_sj0+0x5d0>
   1350c:	00800184 	movi	r2,6
   13510:	d8800015 	stw	r2,0(sp)
   13514:	003f0e06 	br	13150 <__gxx_personality_sj0+0x188>
   13518:	0005883a 	mov	r2,zero
   1351c:	003fdf06 	br	1349c <__gxx_personality_sj0+0x4d4>
   13520:	d8c00617 	ldw	r3,24(sp)
   13524:	183ef41e 	bne	r3,zero,130f8 <__gxx_personality_sj0+0x130>
   13528:	d8c00717 	ldw	r3,28(sp)
   1352c:	18c000a8 	cmpgeui	r3,r3,2
   13530:	183ef11e 	bne	r3,zero,130f8 <__gxx_personality_sj0+0x130>
   13534:	10800060 	cmpeqi	r2,r2,1
   13538:	103fa926 	beq	r2,zero,133e0 <__gxx_personality_sj0+0x418>
   1353c:	d9002517 	ldw	r4,148(sp)
   13540:	0014cb40 	call	14cb4 <__cxa_call_terminate>
   13544:	008000b4 	movhi	r2,2
   13548:	10a53e04 	addi	r2,r2,-27400
   1354c:	d8800915 	stw	r2,36(sp)
   13550:	003f4206 	br	1325c <__gxx_personality_sj0+0x294>
   13554:	d8800c17 	ldw	r2,48(sp)
   13558:	103f7e1e 	bne	r2,zero,13354 <__gxx_personality_sj0+0x38c>
   1355c:	d9801a17 	ldw	r6,104(sp)
   13560:	d9400917 	ldw	r5,36(sp)
   13564:	00bfffc4 	movi	r2,-1
   13568:	d9001d04 	addi	r4,sp,116
   1356c:	d8800e15 	stw	r2,56(sp)
   13570:	0012eb80 	call	12eb8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13574:	10803fcc 	andi	r2,r2,255
   13578:	103f861e 	bne	r2,zero,13394 <__gxx_personality_sj0+0x3cc>
   1357c:	d8800317 	ldw	r2,12(sp)
   13580:	1080004c 	andi	r2,r2,1
   13584:	1000271e 	bne	r2,zero,13624 <__gxx_personality_sj0+0x65c>
   13588:	d8800a17 	ldw	r2,40(sp)
   1358c:	d8800115 	stw	r2,4(sp)
   13590:	008000c4 	movi	r2,3
   13594:	003fe406 	br	13528 <__gxx_personality_sj0+0x560>
   13598:	d8800717 	ldw	r2,28(sp)
   1359c:	108000a8 	cmpgeui	r2,r2,2
   135a0:	103fda1e 	bne	r2,zero,1350c <__gxx_personality_sj0+0x544>
   135a4:	d8802517 	ldw	r2,148(sp)
   135a8:	d8c00417 	ldw	r3,16(sp)
   135ac:	10fffb15 	stw	r3,-20(r2)
   135b0:	d8c00217 	ldw	r3,8(sp)
   135b4:	10fffc15 	stw	r3,-16(r2)
   135b8:	d8c00517 	ldw	r3,20(sp)
   135bc:	10fffd15 	stw	r3,-12(r2)
   135c0:	d8c02517 	ldw	r3,148(sp)
   135c4:	d8801a17 	ldw	r2,104(sp)
   135c8:	18bfff15 	stw	r2,-4(r3)
   135cc:	1805883a 	mov	r2,r3
   135d0:	d8c00117 	ldw	r3,4(sp)
   135d4:	10fffe15 	stw	r3,-8(r2)
   135d8:	00800184 	movi	r2,6
   135dc:	d8800015 	stw	r2,0(sp)
   135e0:	003edb06 	br	13150 <__gxx_personality_sj0+0x188>
   135e4:	d8800717 	ldw	r2,28(sp)
   135e8:	108000a8 	cmpgeui	r2,r2,2
   135ec:	103f181e 	bne	r2,zero,13250 <__gxx_personality_sj0+0x288>
   135f0:	d8802517 	ldw	r2,148(sp)
   135f4:	10800003 	ldbu	r2,0(r2)
   135f8:	1080004c 	andi	r2,r2,1
   135fc:	10000626 	beq	r2,zero,13618 <__gxx_personality_sj0+0x650>
   13600:	d8802517 	ldw	r2,148(sp)
   13604:	10bff517 	ldw	r2,-44(r2)
   13608:	10fff017 	ldw	r3,-64(r2)
   1360c:	d8801a15 	stw	r2,104(sp)
   13610:	d8c00915 	stw	r3,36(sp)
   13614:	003f1106 	br	1325c <__gxx_personality_sj0+0x294>
   13618:	d8802517 	ldw	r2,148(sp)
   1361c:	10800504 	addi	r2,r2,20
   13620:	003ff906 	br	13608 <__gxx_personality_sj0+0x640>
   13624:	d8800a17 	ldw	r2,40(sp)
   13628:	d8800115 	stw	r2,4(sp)
   1362c:	003fdd06 	br	135a4 <__gxx_personality_sj0+0x5dc>
   13630:	00800044 	movi	r2,1
   13634:	d8800e15 	stw	r2,56(sp)
   13638:	00138c80 	call	138c8 <_ZSt10unexpectedv>
   1363c:	d9000f17 	ldw	r4,60(sp)
   13640:	0014d140 	call	14d14 <__cxa_begin_catch>
   13644:	00138a40 	call	138a4 <_ZSt9terminatev>
   13648:	d8800a17 	ldw	r2,40(sp)
   1364c:	d8800115 	stw	r2,4(sp)
   13650:	003ead06 	br	13108 <__gxx_personality_sj0+0x140>
   13654:	00bfffc4 	movi	r2,-1
   13658:	d8800e15 	stw	r2,56(sp)
   1365c:	00170380 	call	17038 <abort>

00013660 <__cxa_call_unexpected>:
   13660:	deffe704 	addi	sp,sp,-100
   13664:	01400074 	movhi	r5,1
   13668:	00c000b4 	movhi	r3,2
   1366c:	00800074 	movhi	r2,1
   13670:	294bf204 	addi	r5,r5,12232
   13674:	18e1a204 	addi	r3,r3,-31096
   13678:	108db804 	addi	r2,r2,14048
   1367c:	d9000015 	stw	r4,0(sp)
   13680:	d9000404 	addi	r4,sp,16
   13684:	d9400a15 	stw	r5,40(sp)
   13688:	d8c00b15 	stw	r3,44(sp)
   1368c:	dfc01815 	stw	ra,96(sp)
   13690:	d8800d15 	stw	r2,52(sp)
   13694:	df001715 	stw	fp,92(sp)
   13698:	df000c15 	stw	fp,48(sp)
   1369c:	dec00e15 	stw	sp,56(sp)
   136a0:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
   136a4:	d9000017 	ldw	r4,0(sp)
   136a8:	0014d140 	call	14d14 <__cxa_begin_catch>
   136ac:	d8c00017 	ldw	r3,0(sp)
   136b0:	197ffd17 	ldw	r5,-12(r3)
   136b4:	18bffe17 	ldw	r2,-8(r3)
   136b8:	193ff717 	ldw	r4,-36(r3)
   136bc:	d9400115 	stw	r5,4(sp)
   136c0:	197ffb17 	ldw	r5,-20(r3)
   136c4:	18fff817 	ldw	r3,-32(r3)
   136c8:	d8801315 	stw	r2,76(sp)
   136cc:	00800044 	movi	r2,1
   136d0:	d9400015 	stw	r5,0(sp)
   136d4:	d8c00215 	stw	r3,8(sp)
   136d8:	d8800515 	stw	r2,20(sp)
   136dc:	00138b80 	call	138b8 <_ZN10__cxxabiv112__unexpectedEPFvvE>
   136e0:	d8c00617 	ldw	r3,24(sp)
   136e4:	d8800517 	ldw	r2,20(sp)
   136e8:	d8c00315 	stw	r3,12(sp)
   136ec:	10002b1e 	bne	r2,zero,1379c <__cxa_call_unexpected+0x13c>
   136f0:	d9000317 	ldw	r4,12(sp)
   136f4:	0014d140 	call	14d14 <__cxa_begin_catch>
   136f8:	0014f0c0 	call	14f0c <__cxa_get_globals_fast>
   136fc:	10800017 	ldw	r2,0(r2)
   13700:	10c00b03 	ldbu	r3,44(r2)
   13704:	18c0004c 	andi	r3,r3,1
   13708:	18002e26 	beq	r3,zero,137c4 <__cxa_call_unexpected+0x164>
   1370c:	10800017 	ldw	r2,0(r2)
   13710:	d8800315 	stw	r2,12(sp)
   13714:	d9400117 	ldw	r5,4(sp)
   13718:	00800084 	movi	r2,2
   1371c:	d9801104 	addi	r6,sp,68
   13720:	0009883a 	mov	r4,zero
   13724:	d8800515 	stw	r2,20(sp)
   13728:	0012d8c0 	call	12d8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   1372c:	d9800317 	ldw	r6,12(sp)
   13730:	d9c00017 	ldw	r7,0(sp)
   13734:	d9001104 	addi	r4,sp,68
   13738:	317ff017 	ldw	r5,-64(r6)
   1373c:	0012eb80 	call	12eb8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13740:	10803fcc 	andi	r2,r2,255
   13744:	1000221e 	bne	r2,zero,137d0 <__cxa_call_unexpected+0x170>
   13748:	d9c00017 	ldw	r7,0(sp)
   1374c:	014000b4 	movhi	r5,2
   13750:	00800084 	movi	r2,2
   13754:	000d883a 	mov	r6,zero
   13758:	2962b704 	addi	r5,r5,-29988
   1375c:	d9001104 	addi	r4,sp,68
   13760:	d8800515 	stw	r2,20(sp)
   13764:	0012eb80 	call	12eb8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13768:	10803fcc 	andi	r2,r2,255
   1376c:	10001926 	beq	r2,zero,137d4 <__cxa_call_unexpected+0x174>
   13770:	01000104 	movi	r4,4
   13774:	0014b600 	call	14b60 <__cxa_allocate_exception>
   13778:	1009883a 	mov	r4,r2
   1377c:	008000b4 	movhi	r2,2
   13780:	01800074 	movhi	r6,1
   13784:	014000b4 	movhi	r5,2
   13788:	10a2d204 	addi	r2,r2,-29880
   1378c:	3193b004 	addi	r6,r6,20160
   13790:	2962b704 	addi	r5,r5,-29988
   13794:	20800015 	stw	r2,0(r4)
   13798:	0013a080 	call	13a08 <__cxa_throw>
   1379c:	10bfffc4 	addi	r2,r2,-1
   137a0:	10000126 	beq	r2,zero,137a8 <__cxa_call_unexpected+0x148>
   137a4:	003b68fa 	trap	3
   137a8:	d8000515 	stw	zero,20(sp)
   137ac:	0014dcc0 	call	14dcc <__cxa_end_catch>
   137b0:	0014dcc0 	call	14dcc <__cxa_end_catch>
   137b4:	d9000317 	ldw	r4,12(sp)
   137b8:	00bfffc4 	movi	r2,-1
   137bc:	d8800515 	stw	r2,20(sp)
   137c0:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>
   137c4:	10801004 	addi	r2,r2,64
   137c8:	d8800315 	stw	r2,12(sp)
   137cc:	003fd106 	br	13714 <__cxa_call_unexpected+0xb4>
   137d0:	0013a680 	call	13a68 <__cxa_rethrow>
   137d4:	d9000217 	ldw	r4,8(sp)
   137d8:	00137dc0 	call	137dc <_ZN10__cxxabiv111__terminateEPFvvE>

000137dc <_ZN10__cxxabiv111__terminateEPFvvE>:
   137dc:	deffef04 	addi	sp,sp,-68
   137e0:	01400074 	movhi	r5,1
   137e4:	00c000b4 	movhi	r3,2
   137e8:	00800074 	movhi	r2,1
   137ec:	200d883a 	mov	r6,r4
   137f0:	108e0e04 	addi	r2,r2,14392
   137f4:	294bf204 	addi	r5,r5,12232
   137f8:	18e1a604 	addi	r3,r3,-31080
   137fc:	d9000204 	addi	r4,sp,8
   13800:	d8800b15 	stw	r2,44(sp)
   13804:	dfc01015 	stw	ra,64(sp)
   13808:	df000f15 	stw	fp,60(sp)
   1380c:	d9800015 	stw	r6,0(sp)
   13810:	d9400815 	stw	r5,32(sp)
   13814:	d8c00915 	stw	r3,36(sp)
   13818:	df000a15 	stw	fp,40(sp)
   1381c:	dec00c15 	stw	sp,48(sp)
   13820:	0016afc0 	call	16afc <_Unwind_SjLj_Register>
   13824:	00800044 	movi	r2,1
   13828:	d8800315 	stw	r2,12(sp)
   1382c:	d8800017 	ldw	r2,0(sp)
   13830:	103ee83a 	callr	r2
   13834:	00170380 	call	17038 <abort>
   13838:	d8c00417 	ldw	r3,16(sp)
   1383c:	d8800317 	ldw	r2,12(sp)
   13840:	d8c00015 	stw	r3,0(sp)
   13844:	d8c00517 	ldw	r3,20(sp)
   13848:	d8c00115 	stw	r3,4(sp)
   1384c:	1000051e 	bne	r2,zero,13864 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
   13850:	d9000017 	ldw	r4,0(sp)
   13854:	0014d140 	call	14d14 <__cxa_begin_catch>
   13858:	00800084 	movi	r2,2
   1385c:	d8800315 	stw	r2,12(sp)
   13860:	00170380 	call	17038 <abort>
   13864:	10bfffc4 	addi	r2,r2,-1
   13868:	10000126 	beq	r2,zero,13870 <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
   1386c:	003b68fa 	trap	3
   13870:	d8000315 	stw	zero,12(sp)
   13874:	0014dcc0 	call	14dcc <__cxa_end_catch>
   13878:	d8c00117 	ldw	r3,4(sp)
   1387c:	18bfffe0 	cmpeqi	r2,r3,-1
   13880:	10000426 	beq	r2,zero,13894 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
   13884:	d8800117 	ldw	r2,4(sp)
   13888:	d9000017 	ldw	r4,0(sp)
   1388c:	d8800315 	stw	r2,12(sp)
   13890:	00136600 	call	13660 <__cxa_call_unexpected>
   13894:	d9000017 	ldw	r4,0(sp)
   13898:	00bfffc4 	movi	r2,-1
   1389c:	d8800315 	stw	r2,12(sp)
   138a0:	0016ce40 	call	16ce4 <_Unwind_SjLj_Resume>

000138a4 <_ZSt9terminatev>:
   138a4:	008000b4 	movhi	r2,2
   138a8:	11254217 	ldw	r4,-27384(r2)
   138ac:	deffff04 	addi	sp,sp,-4
   138b0:	dfc00015 	stw	ra,0(sp)
   138b4:	00137dc0 	call	137dc <_ZN10__cxxabiv111__terminateEPFvvE>

000138b8 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
   138b8:	deffff04 	addi	sp,sp,-4
   138bc:	dfc00015 	stw	ra,0(sp)
   138c0:	203ee83a 	callr	r4
   138c4:	00138a40 	call	138a4 <_ZSt9terminatev>

000138c8 <_ZSt10unexpectedv>:
   138c8:	008000b4 	movhi	r2,2
   138cc:	11253917 	ldw	r4,-27420(r2)
   138d0:	deffff04 	addi	sp,sp,-4
   138d4:	dfc00015 	stw	ra,0(sp)
   138d8:	00138b80 	call	138b8 <_ZN10__cxxabiv112__unexpectedEPFvvE>

000138dc <_ZSt13set_terminatePFvvE>:
   138dc:	20000526 	beq	r4,zero,138f4 <_ZSt13set_terminatePFvvE+0x18>
   138e0:	00c000b4 	movhi	r3,2
   138e4:	008000b4 	movhi	r2,2
   138e8:	10a54217 	ldw	r2,-27384(r2)
   138ec:	19254215 	stw	r4,-27384(r3)
   138f0:	f800283a 	ret
   138f4:	01000074 	movhi	r4,1
   138f8:	211c0e04 	addi	r4,r4,28728
   138fc:	003ff806 	br	138e0 <_ZSt13set_terminatePFvvE+0x4>

00013900 <_ZSt13get_terminatev>:
   13900:	008000b4 	movhi	r2,2
   13904:	10a54217 	ldw	r2,-27384(r2)
   13908:	f800283a 	ret

0001390c <_ZSt14set_unexpectedPFvvE>:
   1390c:	20000526 	beq	r4,zero,13924 <_ZSt14set_unexpectedPFvvE+0x18>
   13910:	00c000b4 	movhi	r3,2
   13914:	008000b4 	movhi	r2,2
   13918:	10a53917 	ldw	r2,-27420(r2)
   1391c:	19253915 	stw	r4,-27420(r3)
   13920:	f800283a 	ret
   13924:	01000074 	movhi	r4,1
   13928:	210e2904 	addi	r4,r4,14500
   1392c:	003ff806 	br	13910 <_ZSt14set_unexpectedPFvvE+0x4>

00013930 <_ZSt14get_unexpectedv>:
   13930:	008000b4 	movhi	r2,2
   13934:	10a53917 	ldw	r2,-27420(r2)
   13938:	f800283a 	ret

0001393c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   1393c:	defffe04 	addi	sp,sp,-8
   13940:	dfc00115 	stw	ra,4(sp)
   13944:	dc000015 	stw	r16,0(sp)
   13948:	210000b0 	cmpltui	r4,r4,2
   1394c:	20001326 	beq	r4,zero,1399c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
   13950:	28bff417 	ldw	r2,-48(r5)
   13954:	10ffffc4 	addi	r3,r2,-1
   13958:	28fff415 	stw	r3,-48(r5)
   1395c:	10800058 	cmpnei	r2,r2,1
   13960:	10000426 	beq	r2,zero,13974 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
   13964:	dfc00117 	ldw	ra,4(sp)
   13968:	dc000017 	ldw	r16,0(sp)
   1396c:	dec00204 	addi	sp,sp,8
   13970:	f800283a 	ret
   13974:	28bff617 	ldw	r2,-40(r5)
   13978:	2c000504 	addi	r16,r5,20
   1397c:	10000226 	beq	r2,zero,13988 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
   13980:	8009883a 	mov	r4,r16
   13984:	103ee83a 	callr	r2
   13988:	8009883a 	mov	r4,r16
   1398c:	dfc00117 	ldw	ra,4(sp)
   13990:	dc000017 	ldw	r16,0(sp)
   13994:	dec00204 	addi	sp,sp,8
   13998:	0014bb81 	jmpi	14bb8 <__cxa_free_exception>
   1399c:	293ff817 	ldw	r4,-32(r5)
   139a0:	00137dc0 	call	137dc <_ZN10__cxxabiv111__terminateEPFvvE>

000139a4 <__cxa_init_primary_exception>:
   139a4:	defffe04 	addi	sp,sp,-8
   139a8:	dfc00115 	stw	ra,4(sp)
   139ac:	dc000015 	stw	r16,0(sp)
   139b0:	217ff015 	stw	r5,-64(r4)
   139b4:	21bff115 	stw	r6,-60(r4)
   139b8:	203fef15 	stw	zero,-68(r4)
   139bc:	2021883a 	mov	r16,r4
   139c0:	00139300 	call	13930 <_ZSt14get_unexpectedv>
   139c4:	80bff215 	stw	r2,-56(r16)
   139c8:	00139000 	call	13900 <_ZSt13get_terminatev>
   139cc:	0150caf4 	movhi	r5,17195
   139d0:	0111d3b4 	movhi	r4,18254
   139d4:	00c00074 	movhi	r3,1
   139d8:	294ac004 	addi	r5,r5,11008
   139dc:	211550c4 	addi	r4,r4,21827
   139e0:	18ce4f04 	addi	r3,r3,14652
   139e4:	80bff315 	stw	r2,-52(r16)
   139e8:	80bfef04 	addi	r2,r16,-68
   139ec:	817ffb15 	stw	r5,-20(r16)
   139f0:	813ffc15 	stw	r4,-16(r16)
   139f4:	80fffd15 	stw	r3,-12(r16)
   139f8:	dfc00117 	ldw	ra,4(sp)
   139fc:	dc000017 	ldw	r16,0(sp)
   13a00:	dec00204 	addi	sp,sp,8
   13a04:	f800283a 	ret

00013a08 <__cxa_throw>:
   13a08:	defffc04 	addi	sp,sp,-16
   13a0c:	dfc00315 	stw	ra,12(sp)
   13a10:	dc800215 	stw	r18,8(sp)
   13a14:	dc400115 	stw	r17,4(sp)
   13a18:	dc000015 	stw	r16,0(sp)
   13a1c:	2823883a 	mov	r17,r5
   13a20:	2021883a 	mov	r16,r4
   13a24:	3025883a 	mov	r18,r6
   13a28:	0014f180 	call	14f18 <__cxa_get_globals>
   13a2c:	10c00117 	ldw	r3,4(r2)
   13a30:	900d883a 	mov	r6,r18
   13a34:	880b883a 	mov	r5,r17
   13a38:	18c00044 	addi	r3,r3,1
   13a3c:	8009883a 	mov	r4,r16
   13a40:	10c00115 	stw	r3,4(r2)
   13a44:	00139a40 	call	139a4 <__cxa_init_primary_exception>
   13a48:	14000c04 	addi	r16,r2,48
   13a4c:	00c00044 	movi	r3,1
   13a50:	10c00015 	stw	r3,0(r2)
   13a54:	8009883a 	mov	r4,r16
   13a58:	0016bd80 	call	16bd8 <_Unwind_SjLj_RaiseException>
   13a5c:	8009883a 	mov	r4,r16
   13a60:	0014d140 	call	14d14 <__cxa_begin_catch>
   13a64:	00138a40 	call	138a4 <_ZSt9terminatev>

00013a68 <__cxa_rethrow>:
   13a68:	defffe04 	addi	sp,sp,-8
   13a6c:	dfc00115 	stw	ra,4(sp)
   13a70:	dc000015 	stw	r16,0(sp)
   13a74:	0014f180 	call	14f18 <__cxa_get_globals>
   13a78:	10c00117 	ldw	r3,4(r2)
   13a7c:	11000017 	ldw	r4,0(r2)
   13a80:	18c00044 	addi	r3,r3,1
   13a84:	10c00115 	stw	r3,4(r2)
   13a88:	20001126 	beq	r4,zero,13ad0 <__cxa_rethrow+0x68>
   13a8c:	20c00b17 	ldw	r3,44(r4)
   13a90:	21800c17 	ldw	r6,48(r4)
   13a94:	016f3574 	movhi	r5,48341
   13a98:	29754004 	addi	r5,r5,-11008
   13a9c:	01ee2cb4 	movhi	r7,47282
   13aa0:	39eaaf04 	addi	r7,r7,-21828
   13aa4:	194b883a 	add	r5,r3,r5
   13aa8:	28c7803a 	cmpltu	r3,r5,r3
   13aac:	31cd883a 	add	r6,r6,r7
   13ab0:	1987883a 	add	r3,r3,r6
   13ab4:	18000726 	beq	r3,zero,13ad4 <__cxa_rethrow+0x6c>
   13ab8:	10000015 	stw	zero,0(r2)
   13abc:	24000b04 	addi	r16,r4,44
   13ac0:	8009883a 	mov	r4,r16
   13ac4:	0016d280 	call	16d28 <_Unwind_SjLj_Resume_or_Rethrow>
   13ac8:	8009883a 	mov	r4,r16
   13acc:	0014d140 	call	14d14 <__cxa_begin_catch>
   13ad0:	00138a40 	call	138a4 <_ZSt9terminatev>
   13ad4:	294000a8 	cmpgeui	r5,r5,2
   13ad8:	283ff71e 	bne	r5,zero,13ab8 <__cxa_rethrow+0x50>
   13adc:	20800517 	ldw	r2,20(r4)
   13ae0:	0085c83a 	sub	r2,zero,r2
   13ae4:	20800515 	stw	r2,20(r4)
   13ae8:	003ff406 	br	13abc <__cxa_rethrow+0x54>

00013aec <_ZNK10__cxxabiv120__function_type_info15__is_function_pEv>:
   13aec:	00800044 	movi	r2,1
   13af0:	f800283a 	ret

00013af4 <_ZN10__cxxabiv120__function_type_infoD1Ev>:
   13af4:	008000b4 	movhi	r2,2
   13af8:	10a23b04 	addi	r2,r2,-30484
   13afc:	20800015 	stw	r2,0(r4)
   13b00:	0013efc1 	jmpi	13efc <_ZNSt9type_infoD1Ev>

00013b04 <_ZN10__cxxabiv120__function_type_infoD0Ev>:
   13b04:	defffe04 	addi	sp,sp,-8
   13b08:	008000b4 	movhi	r2,2
   13b0c:	dc000015 	stw	r16,0(sp)
   13b10:	dfc00115 	stw	ra,4(sp)
   13b14:	10a23b04 	addi	r2,r2,-30484
   13b18:	20800015 	stw	r2,0(r4)
   13b1c:	2021883a 	mov	r16,r4
   13b20:	0013efc0 	call	13efc <_ZNSt9type_infoD1Ev>
   13b24:	01400204 	movi	r5,8
   13b28:	8009883a 	mov	r4,r16
   13b2c:	dfc00117 	ldw	ra,4(sp)
   13b30:	dc000017 	ldw	r16,0(sp)
   13b34:	dec00204 	addi	sp,sp,8
   13b38:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00013b3c <_Znaj>:
   13b3c:	0014f6c1 	jmpi	14f6c <_Znwj>

00013b40 <_ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv>:
   13b40:	00800044 	movi	r2,1
   13b44:	f800283a 	ret

00013b48 <_ZN10__cxxabiv119__pointer_type_infoD1Ev>:
   13b48:	008000b4 	movhi	r2,2
   13b4c:	10a24f04 	addi	r2,r2,-30404
   13b50:	20800015 	stw	r2,0(r4)
   13b54:	0014ff41 	jmpi	14ff4 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

00013b58 <_ZN10__cxxabiv119__pointer_type_infoD0Ev>:
   13b58:	defffe04 	addi	sp,sp,-8
   13b5c:	008000b4 	movhi	r2,2
   13b60:	dc000015 	stw	r16,0(sp)
   13b64:	dfc00115 	stw	ra,4(sp)
   13b68:	10a24f04 	addi	r2,r2,-30404
   13b6c:	20800015 	stw	r2,0(r4)
   13b70:	2021883a 	mov	r16,r4
   13b74:	0014ff40 	call	14ff4 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   13b78:	01400404 	movi	r5,16
   13b7c:	8009883a 	mov	r4,r16
   13b80:	dfc00117 	ldw	ra,4(sp)
   13b84:	dc000017 	ldw	r16,0(sp)
   13b88:	dec00204 	addi	sp,sp,8
   13b8c:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00013b90 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   13b90:	defffb04 	addi	sp,sp,-20
   13b94:	dc800315 	stw	r18,12(sp)
   13b98:	dc400215 	stw	r17,8(sp)
   13b9c:	dfc00415 	stw	ra,16(sp)
   13ba0:	388000a8 	cmpgeui	r2,r7,2
   13ba4:	24800317 	ldw	r18,12(r4)
   13ba8:	2823883a 	mov	r17,r5
   13bac:	10000a26 	beq	r2,zero,13bd8 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x48>
   13bb0:	90800017 	ldw	r2,0(r18)
   13bb4:	89400317 	ldw	r5,12(r17)
   13bb8:	39c00084 	addi	r7,r7,2
   13bbc:	10800417 	ldw	r2,16(r2)
   13bc0:	9009883a 	mov	r4,r18
   13bc4:	dfc00417 	ldw	ra,16(sp)
   13bc8:	dc800317 	ldw	r18,12(sp)
   13bcc:	dc400217 	ldw	r17,8(sp)
   13bd0:	dec00504 	addi	sp,sp,20
   13bd4:	1000683a 	jmp	r2
   13bd8:	008000b4 	movhi	r2,2
   13bdc:	91000117 	ldw	r4,4(r18)
   13be0:	1165c117 	ldw	r5,-26876(r2)
   13be4:	21400926 	beq	r4,r5,13c0c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x7c>
   13be8:	20800007 	ldb	r2,0(r4)
   13bec:	10800aa0 	cmpeqi	r2,r2,42
   13bf0:	103fef1e 	bne	r2,zero,13bb0 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   13bf4:	d9c00115 	stw	r7,4(sp)
   13bf8:	d9800015 	stw	r6,0(sp)
   13bfc:	00175d80 	call	175d8 <strcmp>
   13c00:	d9800017 	ldw	r6,0(sp)
   13c04:	d9c00117 	ldw	r7,4(sp)
   13c08:	103fe91e 	bne	r2,zero,13bb0 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   13c0c:	89000317 	ldw	r4,12(r17)
   13c10:	20800017 	ldw	r2,0(r4)
   13c14:	10800317 	ldw	r2,12(r2)
   13c18:	103ee83a 	callr	r2
   13c1c:	1080005c 	xori	r2,r2,1
   13c20:	dfc00417 	ldw	ra,16(sp)
   13c24:	dc800317 	ldw	r18,12(sp)
   13c28:	dc400217 	ldw	r17,8(sp)
   13c2c:	dec00504 	addi	sp,sp,20
   13c30:	f800283a 	ret

00013c34 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   13c34:	008000b4 	movhi	r2,2
   13c38:	10a26504 	addi	r2,r2,-30316
   13c3c:	20800015 	stw	r2,0(r4)
   13c40:	00128881 	jmpi	12888 <_ZN10__cxxabiv117__class_type_infoD1Ev>

00013c44 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   13c44:	defffe04 	addi	sp,sp,-8
   13c48:	008000b4 	movhi	r2,2
   13c4c:	dc000015 	stw	r16,0(sp)
   13c50:	dfc00115 	stw	ra,4(sp)
   13c54:	10a26504 	addi	r2,r2,-30316
   13c58:	20800015 	stw	r2,0(r4)
   13c5c:	2021883a 	mov	r16,r4
   13c60:	00128880 	call	12888 <_ZN10__cxxabiv117__class_type_infoD1Ev>
   13c64:	01400304 	movi	r5,12
   13c68:	8009883a 	mov	r4,r16
   13c6c:	dfc00117 	ldw	ra,4(sp)
   13c70:	dc000017 	ldw	r16,0(sp)
   13c74:	dec00204 	addi	sp,sp,8
   13c78:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00013c7c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   13c7c:	defff504 	addi	sp,sp,-44
   13c80:	dcc00415 	stw	r19,16(sp)
   13c84:	38800117 	ldw	r2,4(r7)
   13c88:	24c00117 	ldw	r19,4(r4)
   13c8c:	df000915 	stw	fp,36(sp)
   13c90:	dd800715 	stw	r22,28(sp)
   13c94:	dd400615 	stw	r21,24(sp)
   13c98:	dd000515 	stw	r20,20(sp)
   13c9c:	dc000115 	stw	r16,4(sp)
   13ca0:	dfc00a15 	stw	ra,40(sp)
   13ca4:	ddc00815 	stw	r23,32(sp)
   13ca8:	dc800315 	stw	r18,12(sp)
   13cac:	dc400215 	stw	r17,8(sp)
   13cb0:	dd000b17 	ldw	r20,44(sp)
   13cb4:	df000c17 	ldw	fp,48(sp)
   13cb8:	dd800d17 	ldw	r22,52(sp)
   13cbc:	dd400e17 	ldw	r21,56(sp)
   13cc0:	2821883a 	mov	r16,r5
   13cc4:	98800b26 	beq	r19,r2,13cf4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
   13cc8:	9dc00007 	ldb	r23,0(r19)
   13ccc:	2025883a 	mov	r18,r4
   13cd0:	3823883a 	mov	r17,r7
   13cd4:	b8c00aa0 	cmpeqi	r3,r23,42
   13cd8:	18001a1e 	bne	r3,zero,13d44 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13cdc:	100b883a 	mov	r5,r2
   13ce0:	9809883a 	mov	r4,r19
   13ce4:	d9800015 	stw	r6,0(sp)
   13ce8:	00175d80 	call	175d8 <strcmp>
   13cec:	d9800017 	ldw	r6,0(sp)
   13cf0:	1000141e 	bne	r2,zero,13d44 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13cf4:	ad000015 	stw	r20,0(r21)
   13cf8:	a9800115 	stw	r6,4(r21)
   13cfc:	80003416 	blt	r16,zero,13dd0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
   13d00:	a421883a 	add	r16,r20,r16
   13d04:	b4003026 	beq	r22,r16,13dc8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
   13d08:	00800044 	movi	r2,1
   13d0c:	a8800315 	stw	r2,12(r21)
   13d10:	0005883a 	mov	r2,zero
   13d14:	dfc00a17 	ldw	ra,40(sp)
   13d18:	df000917 	ldw	fp,36(sp)
   13d1c:	ddc00817 	ldw	r23,32(sp)
   13d20:	dd800717 	ldw	r22,28(sp)
   13d24:	dd400617 	ldw	r21,24(sp)
   13d28:	dd000517 	ldw	r20,20(sp)
   13d2c:	dcc00417 	ldw	r19,16(sp)
   13d30:	dc800317 	ldw	r18,12(sp)
   13d34:	dc400217 	ldw	r17,8(sp)
   13d38:	dc000117 	ldw	r16,4(sp)
   13d3c:	dec00b04 	addi	sp,sp,44
   13d40:	f800283a 	ret
   13d44:	a5801526 	beq	r20,r22,13d9c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
   13d48:	91000217 	ldw	r4,8(r18)
   13d4c:	880f883a 	mov	r7,r17
   13d50:	800b883a 	mov	r5,r16
   13d54:	20800017 	ldw	r2,0(r4)
   13d58:	dd400e15 	stw	r21,56(sp)
   13d5c:	dd800d15 	stw	r22,52(sp)
   13d60:	df000c15 	stw	fp,48(sp)
   13d64:	dd000b15 	stw	r20,44(sp)
   13d68:	10800717 	ldw	r2,28(r2)
   13d6c:	dfc00a17 	ldw	ra,40(sp)
   13d70:	df000917 	ldw	fp,36(sp)
   13d74:	ddc00817 	ldw	r23,32(sp)
   13d78:	dd800717 	ldw	r22,28(sp)
   13d7c:	dd400617 	ldw	r21,24(sp)
   13d80:	dd000517 	ldw	r20,20(sp)
   13d84:	dcc00417 	ldw	r19,16(sp)
   13d88:	dc800317 	ldw	r18,12(sp)
   13d8c:	dc400217 	ldw	r17,8(sp)
   13d90:	dc000117 	ldw	r16,4(sp)
   13d94:	dec00b04 	addi	sp,sp,44
   13d98:	1000683a 	jmp	r2
   13d9c:	e1400117 	ldw	r5,4(fp)
   13da0:	99400726 	beq	r19,r5,13dc0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x144>
   13da4:	bdc00aa0 	cmpeqi	r23,r23,42
   13da8:	b83fe71e 	bne	r23,zero,13d48 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13dac:	9809883a 	mov	r4,r19
   13db0:	d9800015 	stw	r6,0(sp)
   13db4:	00175d80 	call	175d8 <strcmp>
   13db8:	d9800017 	ldw	r6,0(sp)
   13dbc:	103fe21e 	bne	r2,zero,13d48 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13dc0:	a9800215 	stw	r6,8(r21)
   13dc4:	003fd206 	br	13d10 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13dc8:	00800184 	movi	r2,6
   13dcc:	003fcf06 	br	13d0c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x90>
   13dd0:	843fff98 	cmpnei	r16,r16,-2
   13dd4:	803fce1e 	bne	r16,zero,13d10 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13dd8:	003fcb06 	br	13d08 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x8c>

00013ddc <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   13ddc:	defffa04 	addi	sp,sp,-24
   13de0:	dc800415 	stw	r18,16(sp)
   13de4:	dc800617 	ldw	r18,24(sp)
   13de8:	dc400315 	stw	r17,12(sp)
   13dec:	dc000215 	stw	r16,8(sp)
   13df0:	dfc00515 	stw	ra,20(sp)
   13df4:	2021883a 	mov	r16,r4
   13df8:	2823883a 	mov	r17,r5
   13dfc:	91800b26 	beq	r18,r6,13e2c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
   13e00:	81000217 	ldw	r4,8(r16)
   13e04:	880b883a 	mov	r5,r17
   13e08:	20800017 	ldw	r2,0(r4)
   13e0c:	dc800615 	stw	r18,24(sp)
   13e10:	10800817 	ldw	r2,32(r2)
   13e14:	dfc00517 	ldw	ra,20(sp)
   13e18:	dc800417 	ldw	r18,16(sp)
   13e1c:	dc400317 	ldw	r17,12(sp)
   13e20:	dc000217 	ldw	r16,8(sp)
   13e24:	dec00604 	addi	sp,sp,24
   13e28:	1000683a 	jmp	r2
   13e2c:	21000117 	ldw	r4,4(r4)
   13e30:	39400117 	ldw	r5,4(r7)
   13e34:	21400926 	beq	r4,r5,13e5c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
   13e38:	20800007 	ldb	r2,0(r4)
   13e3c:	10800aa0 	cmpeqi	r2,r2,42
   13e40:	103fef1e 	bne	r2,zero,13e00 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13e44:	d9c00115 	stw	r7,4(sp)
   13e48:	d9800015 	stw	r6,0(sp)
   13e4c:	00175d80 	call	175d8 <strcmp>
   13e50:	d9800017 	ldw	r6,0(sp)
   13e54:	d9c00117 	ldw	r7,4(sp)
   13e58:	103fe91e 	bne	r2,zero,13e00 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13e5c:	00800184 	movi	r2,6
   13e60:	dfc00517 	ldw	ra,20(sp)
   13e64:	dc800417 	ldw	r18,16(sp)
   13e68:	dc400317 	ldw	r17,12(sp)
   13e6c:	dc000217 	ldw	r16,8(sp)
   13e70:	dec00604 	addi	sp,sp,24
   13e74:	f800283a 	ret

00013e78 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   13e78:	defffb04 	addi	sp,sp,-20
   13e7c:	dcc00315 	stw	r19,12(sp)
   13e80:	dc800215 	stw	r18,8(sp)
   13e84:	dc400115 	stw	r17,4(sp)
   13e88:	dc000015 	stw	r16,0(sp)
   13e8c:	dfc00415 	stw	ra,16(sp)
   13e90:	2025883a 	mov	r18,r4
   13e94:	2827883a 	mov	r19,r5
   13e98:	3021883a 	mov	r16,r6
   13e9c:	3823883a 	mov	r17,r7
   13ea0:	00128d00 	call	128d0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   13ea4:	10c03fcc 	andi	r3,r2,255
   13ea8:	18000d1e 	bne	r3,zero,13ee0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
   13eac:	91000217 	ldw	r4,8(r18)
   13eb0:	880f883a 	mov	r7,r17
   13eb4:	800d883a 	mov	r6,r16
   13eb8:	20800017 	ldw	r2,0(r4)
   13ebc:	980b883a 	mov	r5,r19
   13ec0:	10800617 	ldw	r2,24(r2)
   13ec4:	dfc00417 	ldw	ra,16(sp)
   13ec8:	dcc00317 	ldw	r19,12(sp)
   13ecc:	dc800217 	ldw	r18,8(sp)
   13ed0:	dc400117 	ldw	r17,4(sp)
   13ed4:	dc000017 	ldw	r16,0(sp)
   13ed8:	dec00504 	addi	sp,sp,20
   13edc:	1000683a 	jmp	r2
   13ee0:	dfc00417 	ldw	ra,16(sp)
   13ee4:	dcc00317 	ldw	r19,12(sp)
   13ee8:	dc800217 	ldw	r18,8(sp)
   13eec:	dc400117 	ldw	r17,4(sp)
   13ef0:	dc000017 	ldw	r16,0(sp)
   13ef4:	dec00504 	addi	sp,sp,20
   13ef8:	f800283a 	ret

00013efc <_ZNSt9type_infoD1Ev>:
   13efc:	f800283a 	ret

00013f00 <_ZNKSt9type_info14__is_pointer_pEv>:
   13f00:	0005883a 	mov	r2,zero
   13f04:	f800283a 	ret

00013f08 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
   13f08:	0005883a 	mov	r2,zero
   13f0c:	f800283a 	ret

00013f10 <_ZNSt9type_infoD0Ev>:
   13f10:	01400204 	movi	r5,8
   13f14:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00013f18 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   13f18:	21000117 	ldw	r4,4(r4)
   13f1c:	29400117 	ldw	r5,4(r5)
   13f20:	21400c26 	beq	r4,r5,13f54 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
   13f24:	20800007 	ldb	r2,0(r4)
   13f28:	10800aa0 	cmpeqi	r2,r2,42
   13f2c:	1000071e 	bne	r2,zero,13f4c <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
   13f30:	deffff04 	addi	sp,sp,-4
   13f34:	dfc00015 	stw	ra,0(sp)
   13f38:	00175d80 	call	175d8 <strcmp>
   13f3c:	1005003a 	cmpeq	r2,r2,zero
   13f40:	dfc00017 	ldw	ra,0(sp)
   13f44:	dec00104 	addi	sp,sp,4
   13f48:	f800283a 	ret
   13f4c:	0005883a 	mov	r2,zero
   13f50:	f800283a 	ret
   13f54:	00800044 	movi	r2,1
   13f58:	f800283a 	ret

00013f5c <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
   13f5c:	008000b4 	movhi	r2,2
   13f60:	10a28904 	addi	r2,r2,-30172
   13f64:	20800015 	stw	r2,0(r4)
   13f68:	00128881 	jmpi	12888 <_ZN10__cxxabiv117__class_type_infoD1Ev>

00013f6c <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
   13f6c:	defffe04 	addi	sp,sp,-8
   13f70:	008000b4 	movhi	r2,2
   13f74:	dc000015 	stw	r16,0(sp)
   13f78:	dfc00115 	stw	ra,4(sp)
   13f7c:	10a28904 	addi	r2,r2,-30172
   13f80:	20800015 	stw	r2,0(r4)
   13f84:	2021883a 	mov	r16,r4
   13f88:	00128880 	call	12888 <_ZN10__cxxabiv117__class_type_infoD1Ev>
   13f8c:	01400604 	movi	r5,24
   13f90:	8009883a 	mov	r4,r16
   13f94:	dfc00117 	ldw	ra,4(sp)
   13f98:	dc000017 	ldw	r16,0(sp)
   13f9c:	dec00204 	addi	sp,sp,8
   13fa0:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00013fa4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   13fa4:	defff604 	addi	sp,sp,-40
   13fa8:	dc800315 	stw	r18,12(sp)
   13fac:	dc800a17 	ldw	r18,40(sp)
   13fb0:	ddc00815 	stw	r23,32(sp)
   13fb4:	dd800715 	stw	r22,28(sp)
   13fb8:	dd400615 	stw	r21,24(sp)
   13fbc:	dc000115 	stw	r16,4(sp)
   13fc0:	dfc00915 	stw	ra,36(sp)
   13fc4:	dd000515 	stw	r20,20(sp)
   13fc8:	dcc00415 	stw	r19,16(sp)
   13fcc:	dc400215 	stw	r17,8(sp)
   13fd0:	302f883a 	mov	r23,r6
   13fd4:	2021883a 	mov	r16,r4
   13fd8:	282b883a 	mov	r21,r5
   13fdc:	382d883a 	mov	r22,r7
   13fe0:	34803026 	beq	r6,r18,140a4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x100>
   13fe4:	80800317 	ldw	r2,12(r16)
   13fe8:	147fffc4 	addi	r17,r2,-1
   13fec:	10001d26 	beq	r2,zero,14064 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc0>
   13ff0:	10800044 	addi	r2,r2,1
   13ff4:	100490fa 	slli	r2,r2,3
   13ff8:	acffff60 	cmpeqi	r19,r21,-3
   13ffc:	80a1883a 	add	r16,r16,r2
   14000:	80800117 	ldw	r2,4(r16)
   14004:	b00f883a 	mov	r7,r22
   14008:	a80b883a 	mov	r5,r21
   1400c:	1100008c 	andi	r4,r2,2
   14010:	8c7fffc4 	addi	r17,r17,-1
   14014:	10c0004c 	andi	r3,r2,1
   14018:	20000f26 	beq	r4,zero,14058 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   1401c:	1005d23a 	srai	r2,r2,8
   14020:	1829883a 	mov	r20,r3
   14024:	18000426 	beq	r3,zero,14038 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x94>
   14028:	98000b1e 	bne	r19,zero,14058 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   1402c:	b9800017 	ldw	r6,0(r23)
   14030:	3085883a 	add	r2,r6,r2
   14034:	10800017 	ldw	r2,0(r2)
   14038:	81000017 	ldw	r4,0(r16)
   1403c:	b88d883a 	add	r6,r23,r2
   14040:	20800017 	ldw	r2,0(r4)
   14044:	dc800015 	stw	r18,0(sp)
   14048:	10800817 	ldw	r2,32(r2)
   1404c:	103ee83a 	callr	r2
   14050:	10c00110 	cmplti	r3,r2,4
   14054:	18000f26 	beq	r3,zero,14094 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xf0>
   14058:	88bfffe0 	cmpeqi	r2,r17,-1
   1405c:	843ffe04 	addi	r16,r16,-8
   14060:	103fe726 	beq	r2,zero,14000 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5c>
   14064:	00800044 	movi	r2,1
   14068:	dfc00917 	ldw	ra,36(sp)
   1406c:	ddc00817 	ldw	r23,32(sp)
   14070:	dd800717 	ldw	r22,28(sp)
   14074:	dd400617 	ldw	r21,24(sp)
   14078:	dd000517 	ldw	r20,20(sp)
   1407c:	dcc00417 	ldw	r19,16(sp)
   14080:	dc800317 	ldw	r18,12(sp)
   14084:	dc400217 	ldw	r17,8(sp)
   14088:	dc000117 	ldw	r16,4(sp)
   1408c:	dec00a04 	addi	sp,sp,40
   14090:	f800283a 	ret
   14094:	a5003fcc 	andi	r20,r20,255
   14098:	a03ff326 	beq	r20,zero,14068 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   1409c:	10800054 	ori	r2,r2,1
   140a0:	003ff106 	br	14068 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   140a4:	21000117 	ldw	r4,4(r4)
   140a8:	39400117 	ldw	r5,4(r7)
   140ac:	21400526 	beq	r4,r5,140c4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x120>
   140b0:	20800007 	ldb	r2,0(r4)
   140b4:	10800aa0 	cmpeqi	r2,r2,42
   140b8:	103fca1e 	bne	r2,zero,13fe4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   140bc:	00175d80 	call	175d8 <strcmp>
   140c0:	103fc81e 	bne	r2,zero,13fe4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   140c4:	00800184 	movi	r2,6
   140c8:	003fe706 	br	14068 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>

000140cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   140cc:	deffe504 	addi	sp,sp,-108
   140d0:	dc001115 	stw	r16,68(sp)
   140d4:	dc001e17 	ldw	r16,120(sp)
   140d8:	df001915 	stw	fp,100(sp)
   140dc:	dd401615 	stw	r21,88(sp)
   140e0:	80800417 	ldw	r2,16(r16)
   140e4:	dcc01415 	stw	r19,80(sp)
   140e8:	dc801315 	stw	r18,76(sp)
   140ec:	dfc01a15 	stw	ra,104(sp)
   140f0:	ddc01815 	stw	r23,96(sp)
   140f4:	dd801715 	stw	r22,92(sp)
   140f8:	dd001515 	stw	r20,84(sp)
   140fc:	dc401215 	stw	r17,72(sp)
   14100:	1080040c 	andi	r2,r2,16
   14104:	d9000615 	stw	r4,24(sp)
   14108:	dd401b17 	ldw	r21,108(sp)
   1410c:	2839883a 	mov	fp,r5
   14110:	3025883a 	mov	r18,r6
   14114:	3827883a 	mov	r19,r7
   14118:	10000226 	beq	r2,zero,14124 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58>
   1411c:	20800217 	ldw	r2,8(r4)
   14120:	80800415 	stw	r2,16(r16)
   14124:	d8800617 	ldw	r2,24(sp)
   14128:	11000117 	ldw	r4,4(r2)
   1412c:	d8801d17 	ldw	r2,116(sp)
   14130:	a8801d26 	beq	r21,r2,141a8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
   14134:	99400117 	ldw	r5,4(r19)
   14138:	29000526 	beq	r5,r4,14150 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   1413c:	20800007 	ldb	r2,0(r4)
   14140:	10800aa0 	cmpeqi	r2,r2,42
   14144:	1000201e 	bne	r2,zero,141c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   14148:	00175d80 	call	175d8 <strcmp>
   1414c:	10001e1e 	bne	r2,zero,141c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   14150:	85400015 	stw	r21,0(r16)
   14154:	84800115 	stw	r18,4(r16)
   14158:	e0011d16 	blt	fp,zero,145d0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x504>
   1415c:	d8801d17 	ldw	r2,116(sp)
   14160:	af15883a 	add	r10,r21,fp
   14164:	12814026 	beq	r2,r10,14668 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x59c>
   14168:	00800044 	movi	r2,1
   1416c:	80800315 	stw	r2,12(r16)
   14170:	0023883a 	mov	r17,zero
   14174:	8805883a 	mov	r2,r17
   14178:	dfc01a17 	ldw	ra,104(sp)
   1417c:	df001917 	ldw	fp,100(sp)
   14180:	ddc01817 	ldw	r23,96(sp)
   14184:	dd801717 	ldw	r22,92(sp)
   14188:	dd401617 	ldw	r21,88(sp)
   1418c:	dd001517 	ldw	r20,84(sp)
   14190:	dcc01417 	ldw	r19,80(sp)
   14194:	dc801317 	ldw	r18,76(sp)
   14198:	dc401217 	ldw	r17,72(sp)
   1419c:	dc001117 	ldw	r16,68(sp)
   141a0:	dec01b04 	addi	sp,sp,108
   141a4:	f800283a 	ret
   141a8:	d8801c17 	ldw	r2,112(sp)
   141ac:	11400117 	ldw	r5,4(r2)
   141b0:	29012626 	beq	r5,r4,1464c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   141b4:	20800007 	ldb	r2,0(r4)
   141b8:	10800aa0 	cmpeqi	r2,r2,42
   141bc:	1000ea26 	beq	r2,zero,14568 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x49c>
   141c0:	98800117 	ldw	r2,4(r19)
   141c4:	113fe226 	beq	r2,r4,14150 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   141c8:	e000b516 	blt	fp,zero,144a0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3d4>
   141cc:	d8801d17 	ldw	r2,116(sp)
   141d0:	172fc83a 	sub	r23,r2,fp
   141d4:	dc001e15 	stw	r16,120(sp)
   141d8:	00800084 	movi	r2,2
   141dc:	b821883a 	mov	r16,r23
   141e0:	a82f883a 	mov	r23,r21
   141e4:	dd401e17 	ldw	r21,120(sp)
   141e8:	d8800915 	stw	r2,36(sp)
   141ec:	e0bfff98 	cmpnei	r2,fp,-2
   141f0:	0023883a 	mov	r17,zero
   141f4:	d80007c5 	stb	zero,31(sp)
   141f8:	05800044 	movi	r22,1
   141fc:	d8800515 	stw	r2,20(sp)
   14200:	d8800617 	ldw	r2,24(sp)
   14204:	12400317 	ldw	r9,12(r2)
   14208:	4d3fffc4 	addi	r20,r9,-1
   1420c:	48007226 	beq	r9,zero,143d8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30c>
   14210:	4a400044 	addi	r9,r9,1
   14214:	481290fa 	slli	r9,r9,3
   14218:	ddc01b15 	stw	r23,108(sp)
   1421c:	e0ffffa0 	cmpeqi	r3,fp,-2
   14220:	a02f883a 	mov	r23,r20
   14224:	dd001b17 	ldw	r20,108(sp)
   14228:	d8c00815 	stw	r3,32(sp)
   1422c:	b0c03fcc 	andi	r3,r22,255
   14230:	126d883a 	add	r22,r2,r9
   14234:	e005883a 	mov	r2,fp
   14238:	d8c00415 	stw	r3,16(sp)
   1423c:	8039883a 	mov	fp,r16
   14240:	b021883a 	mov	r16,r22
   14244:	102d883a 	mov	r22,r2
   14248:	80800117 	ldw	r2,4(r16)
   1424c:	a9000417 	ldw	r4,16(r21)
   14250:	d8000c15 	stw	zero,48(sp)
   14254:	d8000d15 	stw	zero,52(sp)
   14258:	d8000e15 	stw	zero,56(sp)
   1425c:	d8000f15 	stw	zero,60(sp)
   14260:	d9001015 	stw	r4,64(sp)
   14264:	1180004c 	andi	r6,r2,1
   14268:	1007d23a 	srai	r3,r2,8
   1426c:	30009626 	beq	r6,zero,144c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3fc>
   14270:	a1c00017 	ldw	r7,0(r20)
   14274:	91800054 	ori	r6,r18,1
   14278:	38c7883a 	add	r3,r7,r3
   1427c:	18c00017 	ldw	r3,0(r3)
   14280:	a0c7883a 	add	r3,r20,r3
   14284:	e0000326 	beq	fp,zero,14294 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c8>
   14288:	d9400417 	ldw	r5,16(sp)
   1428c:	e0cf803a 	cmpltu	r7,fp,r3
   14290:	29c09526 	beq	r5,r7,144e8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x41c>
   14294:	1080008c 	andi	r2,r2,2
   14298:	1000041e 	bne	r2,zero,142ac <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e0>
   1429c:	d8800517 	ldw	r2,20(sp)
   142a0:	10008e26 	beq	r2,zero,144dc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x410>
   142a4:	00bfff44 	movi	r2,-3
   142a8:	308c703a 	and	r6,r6,r2
   142ac:	81000017 	ldw	r4,0(r16)
   142b0:	d9400c04 	addi	r5,sp,48
   142b4:	980f883a 	mov	r7,r19
   142b8:	20800017 	ldw	r2,0(r4)
   142bc:	d9400315 	stw	r5,12(sp)
   142c0:	d9401d17 	ldw	r5,116(sp)
   142c4:	d8c00015 	stw	r3,0(sp)
   142c8:	d9400215 	stw	r5,8(sp)
   142cc:	d9401c17 	ldw	r5,112(sp)
   142d0:	d9400115 	stw	r5,4(sp)
   142d4:	10800717 	ldw	r2,28(r2)
   142d8:	b00b883a 	mov	r5,r22
   142dc:	103ee83a 	callr	r2
   142e0:	a9800217 	ldw	r6,8(r21)
   142e4:	d9000e17 	ldw	r4,56(sp)
   142e8:	d8c00f17 	ldw	r3,60(sp)
   142ec:	3108b03a 	or	r4,r6,r4
   142f0:	a9000215 	stw	r4,8(r21)
   142f4:	19800198 	cmpnei	r6,r3,6
   142f8:	3000ca26 	beq	r6,zero,14624 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x558>
   142fc:	d9800c17 	ldw	r6,48(sp)
   14300:	1a800098 	cmpnei	r10,r3,2
   14304:	300f883a 	mov	r7,r6
   14308:	5000ce26 	beq	r10,zero,14644 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x578>
   1430c:	89c03fcc 	andi	r7,r17,255
   14310:	abc00017 	ldw	r15,0(r21)
   14314:	38006e1e 	bne	r7,zero,144d0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x404>
   14318:	78001c26 	beq	r15,zero,1438c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c0>
   1431c:	79807526 	beq	r15,r6,144f4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x428>
   14320:	30007926 	beq	r6,zero,14508 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x43c>
   14324:	20800110 	cmplti	r2,r4,4
   14328:	ab000317 	ldw	r12,12(r21)
   1432c:	1000331e 	bne	r2,zero,143fc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   14330:	2080004c 	andi	r2,r4,1
   14334:	10000326 	beq	r2,zero,14344 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x278>
   14338:	a8800417 	ldw	r2,16(r21)
   1433c:	1080008c 	andi	r2,r2,2
   14340:	10002e1e 	bne	r2,zero,143fc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   14344:	6000011e 	bne	r12,zero,1434c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x280>
   14348:	03000044 	movi	r12,1
   1434c:	1800011e 	bne	r3,zero,14354 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x288>
   14350:	00c00044 	movi	r3,1
   14354:	6015883a 	mov	r10,r12
   14358:	50c4f03a 	xor	r2,r10,r3
   1435c:	10800110 	cmplti	r2,r2,4
   14360:	181d883a 	mov	r14,r3
   14364:	10002c26 	beq	r2,zero,14418 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>
   14368:	7294703a 	and	r10,r14,r10
   1436c:	52800110 	cmplti	r10,r10,4
   14370:	5000cb26 	beq	r10,zero,146a0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5d4>
   14374:	a9000217 	ldw	r4,8(r21)
   14378:	00800044 	movi	r2,1
   1437c:	a8000015 	stw	zero,0(r21)
   14380:	a8800315 	stw	r2,12(r21)
   14384:	04400044 	movi	r17,1
   14388:	00000a06 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   1438c:	d8c00d17 	ldw	r3,52(sp)
   14390:	a9800015 	stw	r6,0(r21)
   14394:	a8c00115 	stw	r3,4(r21)
   14398:	30007126 	beq	r6,zero,14560 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x494>
   1439c:	20006e26 	beq	r4,zero,14558 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x48c>
   143a0:	d8c00617 	ldw	r3,24(sp)
   143a4:	1023883a 	mov	r17,r2
   143a8:	18c00217 	ldw	r3,8(r3)
   143ac:	18c0004c 	andi	r3,r3,1
   143b0:	183f7026 	beq	r3,zero,14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   143b4:	21000120 	cmpeqi	r4,r4,4
   143b8:	203f6e1e 	bne	r4,zero,14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   143bc:	bdffffc4 	addi	r23,r23,-1
   143c0:	b8bfffe0 	cmpeqi	r2,r23,-1
   143c4:	843ffe04 	addi	r16,r16,-8
   143c8:	103f9f26 	beq	r2,zero,14248 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17c>
   143cc:	e021883a 	mov	r16,fp
   143d0:	a02f883a 	mov	r23,r20
   143d4:	b039883a 	mov	fp,r22
   143d8:	d88007c3 	ldbu	r2,31(sp)
   143dc:	103f6526 	beq	r2,zero,14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   143e0:	d8800917 	ldw	r2,36(sp)
   143e4:	002d883a 	mov	r22,zero
   143e8:	10800058 	cmpnei	r2,r2,1
   143ec:	103f6126 	beq	r2,zero,14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   143f0:	00800044 	movi	r2,1
   143f4:	d8800915 	stw	r2,36(sp)
   143f8:	003f8106 	br	14200 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
   143fc:	6015883a 	mov	r10,r12
   14400:	181d883a 	mov	r14,r3
   14404:	0300120e 	bge	zero,r12,14450 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x384>
   14408:	00c0420e 	bge	zero,r3,14514 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x448>
   1440c:	50c4f03a 	xor	r2,r10,r3
   14410:	10800110 	cmplti	r2,r2,4
   14414:	103fd41e 	bne	r2,zero,14368 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   14418:	18800108 	cmpgei	r2,r3,4
   1441c:	10004b26 	beq	r2,zero,1454c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x480>
   14420:	d9800c17 	ldw	r6,48(sp)
   14424:	1a80008c 	andi	r10,r3,2
   14428:	d8800d17 	ldw	r2,52(sp)
   1442c:	a9800015 	stw	r6,0(r21)
   14430:	0023883a 	mov	r17,zero
   14434:	a8800115 	stw	r2,4(r21)
   14438:	a8c00315 	stw	r3,12(r21)
   1443c:	503f4c1e 	bne	r10,zero,14170 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   14440:	1880004c 	andi	r2,r3,1
   14444:	10009b26 	beq	r2,zero,146b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e8>
   14448:	a9000217 	ldw	r4,8(r21)
   1444c:	003fd906 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14450:	18800110 	cmplti	r2,r3,4
   14454:	1000061e 	bne	r2,zero,14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3a4>
   14458:	1880004c 	andi	r2,r3,1
   1445c:	10001226 	beq	r2,zero,144a8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   14460:	d8800617 	ldw	r2,24(sp)
   14464:	10800217 	ldw	r2,8(r2)
   14468:	1080008c 	andi	r2,r2,2
   1446c:	10000e26 	beq	r2,zero,144a8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   14470:	b0005a16 	blt	r22,zero,145dc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x510>
   14474:	d8801d17 	ldw	r2,116(sp)
   14478:	7d9f883a 	add	r15,r15,r22
   1447c:	13c07c26 	beq	r2,r15,14670 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5a4>
   14480:	00c09416 	blt	zero,r3,146d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   14484:	d8c01d17 	ldw	r3,116(sp)
   14488:	3585883a 	add	r2,r6,r22
   1448c:	18808b26 	beq	r3,r2,146bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   14490:	02800044 	movi	r10,1
   14494:	03000044 	movi	r12,1
   14498:	5080005c 	xori	r2,r10,1
   1449c:	00002606 	br	14538 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x46c>
   144a0:	002f883a 	mov	r23,zero
   144a4:	003f4b06 	br	141d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x108>
   144a8:	1880005c 	xori	r2,r3,1
   144ac:	10800108 	cmpgei	r2,r2,4
   144b0:	103fdc1e 	bne	r2,zero,14424 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x358>
   144b4:	00800044 	movi	r2,1
   144b8:	a8000015 	stw	zero,0(r21)
   144bc:	a8800315 	stw	r2,12(r21)
   144c0:	04400044 	movi	r17,1
   144c4:	003fbb06 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   144c8:	900d883a 	mov	r6,r18
   144cc:	003f6c06 	br	14280 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b4>
   144d0:	783f921e 	bne	r15,zero,1431c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x250>
   144d4:	303f931e 	bne	r6,zero,14324 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   144d8:	003fb606 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   144dc:	210000cc 	andi	r4,r4,3
   144e0:	203f701e 	bne	r4,zero,142a4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1d8>
   144e4:	003fb506 	br	143bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   144e8:	00800044 	movi	r2,1
   144ec:	d88007c5 	stb	r2,31(sp)
   144f0:	003fb206 	br	143bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   144f4:	a8800117 	ldw	r2,4(r21)
   144f8:	d8c00d17 	ldw	r3,52(sp)
   144fc:	10c4b03a 	or	r2,r2,r3
   14500:	a8800115 	stw	r2,4(r21)
   14504:	003fab06 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14508:	10803fcc 	andi	r2,r2,255
   1450c:	103f851e 	bne	r2,zero,14324 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   14510:	003fa806 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14514:	60800108 	cmpgei	r2,r12,4
   14518:	10001a26 	beq	r2,zero,14584 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   1451c:	6080004c 	andi	r2,r12,1
   14520:	10000426 	beq	r2,zero,14534 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x468>
   14524:	d8800617 	ldw	r2,24(sp)
   14528:	10800217 	ldw	r2,8(r2)
   1452c:	1080008c 	andi	r2,r2,2
   14530:	1000141e 	bne	r2,zero,14584 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   14534:	6080005c 	xori	r2,r12,1
   14538:	10800108 	cmpgei	r2,r2,4
   1453c:	103f8d26 	beq	r2,zero,14374 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2a8>
   14540:	5280008c 	andi	r10,r10,2
   14544:	6007883a 	mov	r3,r12
   14548:	003fbb06 	br	14438 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   1454c:	6280008c 	andi	r10,r12,2
   14550:	6007883a 	mov	r3,r12
   14554:	003fb806 	br	14438 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   14558:	1023883a 	mov	r17,r2
   1455c:	003f9706 	br	143bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   14560:	1023883a 	mov	r17,r2
   14564:	003f9306 	br	143b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14568:	d9000415 	stw	r4,16(sp)
   1456c:	00175d80 	call	175d8 <strcmp>
   14570:	d9000417 	ldw	r4,16(sp)
   14574:	10003526 	beq	r2,zero,1464c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   14578:	99400117 	ldw	r5,4(r19)
   1457c:	293ef21e 	bne	r5,r4,14148 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
   14580:	003ef306 	br	14150 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   14584:	d9800c17 	ldw	r6,48(sp)
   14588:	b0003d0e 	bge	r22,zero,14680 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5b4>
   1458c:	d8800517 	ldw	r2,20(sp)
   14590:	103fc126 	beq	r2,zero,14498 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14594:	d8c01d17 	ldw	r3,116(sp)
   14598:	98800017 	ldw	r2,0(r19)
   1459c:	d9c01c17 	ldw	r7,112(sp)
   145a0:	d8c00015 	stw	r3,0(sp)
   145a4:	10800817 	ldw	r2,32(r2)
   145a8:	db000b15 	stw	r12,44(sp)
   145ac:	da800a15 	stw	r10,40(sp)
   145b0:	b00b883a 	mov	r5,r22
   145b4:	9809883a 	mov	r4,r19
   145b8:	103ee83a 	callr	r2
   145bc:	da800a17 	ldw	r10,40(sp)
   145c0:	db000b17 	ldw	r12,44(sp)
   145c4:	1007883a 	mov	r3,r2
   145c8:	101d883a 	mov	r14,r2
   145cc:	003f8f06 	br	1440c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   145d0:	e33fff98 	cmpnei	r12,fp,-2
   145d4:	603ee61e 	bne	r12,zero,14170 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   145d8:	003ee306 	br	14168 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9c>
   145dc:	d8800817 	ldw	r2,32(sp)
   145e0:	db800a15 	stw	r14,40(sp)
   145e4:	10001c1e 	bne	r2,zero,14658 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58c>
   145e8:	d8c00b15 	stw	r3,44(sp)
   145ec:	d8c01d17 	ldw	r3,116(sp)
   145f0:	98800017 	ldw	r2,0(r19)
   145f4:	d9c01c17 	ldw	r7,112(sp)
   145f8:	d8c00015 	stw	r3,0(sp)
   145fc:	10800817 	ldw	r2,32(r2)
   14600:	780d883a 	mov	r6,r15
   14604:	b00b883a 	mov	r5,r22
   14608:	9809883a 	mov	r4,r19
   1460c:	103ee83a 	callr	r2
   14610:	db800a17 	ldw	r14,40(sp)
   14614:	d8c00b17 	ldw	r3,44(sp)
   14618:	1019883a 	mov	r12,r2
   1461c:	1015883a 	mov	r10,r2
   14620:	003f7906 	br	14408 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x33c>
   14624:	d9c00c17 	ldw	r7,48(sp)
   14628:	a821883a 	mov	r16,r21
   1462c:	80c00315 	stw	r3,12(r16)
   14630:	d8c00d17 	ldw	r3,52(sp)
   14634:	81c00015 	stw	r7,0(r16)
   14638:	1023883a 	mov	r17,r2
   1463c:	80c00115 	stw	r3,4(r16)
   14640:	003ecc06 	br	14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14644:	a821883a 	mov	r16,r21
   14648:	003ff806 	br	1462c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x560>
   1464c:	84800215 	stw	r18,8(r16)
   14650:	0023883a 	mov	r17,zero
   14654:	003ec706 	br	14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14658:	00c01e16 	blt	zero,r3,146d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   1465c:	03000044 	movi	r12,1
   14660:	02800044 	movi	r10,1
   14664:	003f8c06 	br	14498 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14668:	00800184 	movi	r2,6
   1466c:	003ebf06 	br	1416c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa0>
   14670:	00c0150e 	bge	zero,r3,146c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5fc>
   14674:	02800184 	movi	r10,6
   14678:	03000184 	movi	r12,6
   1467c:	003f6306 	br	1440c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   14680:	d8c01d17 	ldw	r3,116(sp)
   14684:	3585883a 	add	r2,r6,r22
   14688:	18bf831e 	bne	r3,r2,14498 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   1468c:	6080019c 	xori	r2,r12,6
   14690:	10800108 	cmpgei	r2,r2,4
   14694:	1000091e 	bne	r2,zero,146bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   14698:	03800184 	movi	r14,6
   1469c:	003f3206 	br	14368 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   146a0:	00800084 	movi	r2,2
   146a4:	a8000015 	stw	zero,0(r21)
   146a8:	a8800315 	stw	r2,12(r21)
   146ac:	04400044 	movi	r17,1
   146b0:	003eb006 	br	14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   146b4:	1023883a 	mov	r17,r2
   146b8:	003eae06 	br	14174 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   146bc:	02800084 	movi	r10,2
   146c0:	00c00184 	movi	r3,6
   146c4:	003f5806 	br	14428 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x35c>
   146c8:	03000184 	movi	r12,6
   146cc:	02800184 	movi	r10,6
   146d0:	003f9b06 	br	14540 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x474>
   146d4:	1880005c 	xori	r2,r3,1
   146d8:	10800108 	cmpgei	r2,r2,4
   146dc:	103f2626 	beq	r2,zero,14378 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2ac>
   146e0:	03000044 	movi	r12,1
   146e4:	003f4c06 	br	14418 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>

000146e8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   146e8:	defff004 	addi	sp,sp,-64
   146ec:	dd800c15 	stw	r22,48(sp)
   146f0:	dd400b15 	stw	r21,44(sp)
   146f4:	dd000a15 	stw	r20,40(sp)
   146f8:	dcc00915 	stw	r19,36(sp)
   146fc:	dc000615 	stw	r16,24(sp)
   14700:	dfc00f15 	stw	ra,60(sp)
   14704:	df000e15 	stw	fp,56(sp)
   14708:	ddc00d15 	stw	r23,52(sp)
   1470c:	dc800815 	stw	r18,32(sp)
   14710:	dc400715 	stw	r17,28(sp)
   14714:	2021883a 	mov	r16,r4
   14718:	d9000115 	stw	r4,4(sp)
   1471c:	2827883a 	mov	r19,r5
   14720:	3029883a 	mov	r20,r6
   14724:	382b883a 	mov	r21,r7
   14728:	00128d00 	call	128d0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   1472c:	102d883a 	mov	r22,r2
   14730:	10803fcc 	andi	r2,r2,255
   14734:	1000551e 	bne	r2,zero,1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14738:	ac400217 	ldw	r17,8(r21)
   1473c:	8880040c 	andi	r2,r17,16
   14740:	10007c1e 	bne	r2,zero,14934 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x24c>
   14744:	d8c00117 	ldw	r3,4(sp)
   14748:	18800317 	ldw	r2,12(r3)
   1474c:	15ffffc4 	addi	r23,r2,-1
   14750:	10007526 	beq	r2,zero,14928 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   14754:	14000044 	addi	r16,r2,1
   14758:	802090fa 	slli	r16,r16,3
   1475c:	8880004c 	andi	r2,r17,1
   14760:	d8800015 	stw	r2,0(sp)
   14764:	1c21883a 	add	r16,r3,r16
   14768:	00002706 	br	14808 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   1476c:	1005d23a 	srai	r2,r2,8
   14770:	90000326 	beq	r18,zero,14780 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x98>
   14774:	a1800017 	ldw	r6,0(r20)
   14778:	3085883a 	add	r2,r6,r2
   1477c:	10800017 	ldw	r2,0(r2)
   14780:	a08d883a 	add	r6,r20,r2
   14784:	81000017 	ldw	r4,0(r16)
   14788:	d9c00204 	addi	r7,sp,8
   1478c:	980b883a 	mov	r5,r19
   14790:	20800017 	ldw	r2,0(r4)
   14794:	10800617 	ldw	r2,24(r2)
   14798:	103ee83a 	callr	r2
   1479c:	102d883a 	mov	r22,r2
   147a0:	10803fcc 	andi	r2,r2,255
   147a4:	10001426 	beq	r2,zero,147f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   147a8:	d8800517 	ldw	r2,20(sp)
   147ac:	10800218 	cmpnei	r2,r2,8
   147b0:	10002226 	beq	r2,zero,1483c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x154>
   147b4:	d8800317 	ldw	r2,12(sp)
   147b8:	11000110 	cmplti	r4,r2,4
   147bc:	2000041e 	bne	r4,zero,147d0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   147c0:	e000031e 	bne	fp,zero,147d0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   147c4:	00ffff44 	movi	r3,-3
   147c8:	10c4703a 	and	r2,r2,r3
   147cc:	d8800315 	stw	r2,12(sp)
   147d0:	a8800317 	ldw	r2,12(r21)
   147d4:	10001d26 	beq	r2,zero,1484c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x164>
   147d8:	a9000017 	ldw	r4,0(r21)
   147dc:	d9400217 	ldw	r5,8(sp)
   147e0:	2140561e 	bne	r4,r5,1493c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x254>
   147e4:	20003626 	beq	r4,zero,148c0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1d8>
   147e8:	a8800117 	ldw	r2,4(r21)
   147ec:	d9000317 	ldw	r4,12(sp)
   147f0:	1104b03a 	or	r2,r2,r4
   147f4:	a8800115 	stw	r2,4(r21)
   147f8:	bdffffc4 	addi	r23,r23,-1
   147fc:	b8bfffd8 	cmpnei	r2,r23,-1
   14800:	843ffe04 	addi	r16,r16,-8
   14804:	10004826 	beq	r2,zero,14928 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   14808:	80800117 	ldw	r2,4(r16)
   1480c:	d8c00017 	ldw	r3,0(sp)
   14810:	d8000215 	stw	zero,8(sp)
   14814:	1700008c 	andi	fp,r2,2
   14818:	d8000315 	stw	zero,12(sp)
   1481c:	dc400415 	stw	r17,16(sp)
   14820:	d8000515 	stw	zero,20(sp)
   14824:	e0c8b03a 	or	r4,fp,r3
   14828:	1480004c 	andi	r18,r2,1
   1482c:	203ff226 	beq	r4,zero,147f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14830:	a03fce1e 	bne	r20,zero,1476c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x84>
   14834:	000d883a 	mov	r6,zero
   14838:	003fd206 	br	14784 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x9c>
   1483c:	903fdd26 	beq	r18,zero,147b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   14840:	80800017 	ldw	r2,0(r16)
   14844:	d8800515 	stw	r2,20(sp)
   14848:	003fda06 	br	147b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   1484c:	d9000217 	ldw	r4,8(sp)
   14850:	d8800317 	ldw	r2,12(sp)
   14854:	a9000015 	stw	r4,0(r21)
   14858:	d9000417 	ldw	r4,16(sp)
   1485c:	a8800115 	stw	r2,4(r21)
   14860:	a9000215 	stw	r4,8(r21)
   14864:	d9000517 	ldw	r4,20(sp)
   14868:	a9000315 	stw	r4,12(r21)
   1486c:	11000110 	cmplti	r4,r2,4
   14870:	2000061e 	bne	r4,zero,1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14874:	1100008c 	andi	r4,r2,2
   14878:	20002126 	beq	r4,zero,14900 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x218>
   1487c:	d8800117 	ldw	r2,4(sp)
   14880:	10800217 	ldw	r2,8(r2)
   14884:	1080004c 	andi	r2,r2,1
   14888:	103fdb1e 	bne	r2,zero,147f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   1488c:	b005883a 	mov	r2,r22
   14890:	dfc00f17 	ldw	ra,60(sp)
   14894:	df000e17 	ldw	fp,56(sp)
   14898:	ddc00d17 	ldw	r23,52(sp)
   1489c:	dd800c17 	ldw	r22,48(sp)
   148a0:	dd400b17 	ldw	r21,44(sp)
   148a4:	dd000a17 	ldw	r20,40(sp)
   148a8:	dcc00917 	ldw	r19,36(sp)
   148ac:	dc800817 	ldw	r18,32(sp)
   148b0:	dc400717 	ldw	r17,28(sp)
   148b4:	dc000617 	ldw	r16,24(sp)
   148b8:	dec01004 	addi	sp,sp,64
   148bc:	f800283a 	ret
   148c0:	d9000517 	ldw	r4,20(sp)
   148c4:	21400220 	cmpeqi	r5,r4,8
   148c8:	28000a1e 	bne	r5,zero,148f4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   148cc:	11400220 	cmpeqi	r5,r2,8
   148d0:	2800081e 	bne	r5,zero,148f4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   148d4:	21000117 	ldw	r4,4(r4)
   148d8:	11400117 	ldw	r5,4(r2)
   148dc:	217fc226 	beq	r4,r5,147e8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   148e0:	20800007 	ldb	r2,0(r4)
   148e4:	10800aa0 	cmpeqi	r2,r2,42
   148e8:	1000021e 	bne	r2,zero,148f4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   148ec:	00175d80 	call	175d8 <strcmp>
   148f0:	103fbd26 	beq	r2,zero,147e8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   148f4:	00800084 	movi	r2,2
   148f8:	a8800115 	stw	r2,4(r21)
   148fc:	003fe306 	br	1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14900:	1080004c 	andi	r2,r2,1
   14904:	103fe126 	beq	r2,zero,1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14908:	d8800117 	ldw	r2,4(sp)
   1490c:	10800217 	ldw	r2,8(r2)
   14910:	1080008c 	andi	r2,r2,2
   14914:	103fdd26 	beq	r2,zero,1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14918:	bdffffc4 	addi	r23,r23,-1
   1491c:	b8bfffd8 	cmpnei	r2,r23,-1
   14920:	843ffe04 	addi	r16,r16,-8
   14924:	103fb81e 	bne	r2,zero,14808 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   14928:	ad800117 	ldw	r22,4(r21)
   1492c:	b02cc03a 	cmpne	r22,r22,zero
   14930:	003fd606 	br	1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14934:	84400217 	ldw	r17,8(r16)
   14938:	003f8206 	br	14744 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x5c>
   1493c:	00800084 	movi	r2,2
   14940:	a8000015 	stw	zero,0(r21)
   14944:	a8800115 	stw	r2,4(r21)
   14948:	003fd006 	br	1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>

0001494c <_ZNKSt17bad_function_call4whatEv>:
   1494c:	008000b4 	movhi	r2,2
   14950:	10a29204 	addi	r2,r2,-30136
   14954:	f800283a 	ret

00014958 <_ZNSt17bad_function_callD1Ev>:
   14958:	008000b4 	movhi	r2,2
   1495c:	10a2a204 	addi	r2,r2,-30072
   14960:	20800015 	stw	r2,0(r4)
   14964:	0014ebc1 	jmpi	14ebc <_ZNSt9exceptionD1Ev>

00014968 <_ZNSt17bad_function_callD0Ev>:
   14968:	defffe04 	addi	sp,sp,-8
   1496c:	008000b4 	movhi	r2,2
   14970:	dc000015 	stw	r16,0(sp)
   14974:	dfc00115 	stw	ra,4(sp)
   14978:	10a2a204 	addi	r2,r2,-30072
   1497c:	20800015 	stw	r2,0(r4)
   14980:	2021883a 	mov	r16,r4
   14984:	0014ebc0 	call	14ebc <_ZNSt9exceptionD1Ev>
   14988:	8009883a 	mov	r4,r16
   1498c:	dfc00117 	ldw	ra,4(sp)
   14990:	dc000017 	ldw	r16,0(sp)
   14994:	dec00204 	addi	sp,sp,8
   14998:	00149d01 	jmpi	149d0 <_ZdlPv>

0001499c <_ZSt25__throw_bad_function_callv>:
   1499c:	deffff04 	addi	sp,sp,-4
   149a0:	01000104 	movi	r4,4
   149a4:	dfc00015 	stw	ra,0(sp)
   149a8:	0014b600 	call	14b60 <__cxa_allocate_exception>
   149ac:	1009883a 	mov	r4,r2
   149b0:	008000b4 	movhi	r2,2
   149b4:	01800074 	movhi	r6,1
   149b8:	014000b4 	movhi	r5,2
   149bc:	10a2a204 	addi	r2,r2,-30072
   149c0:	31925604 	addi	r6,r6,18776
   149c4:	29629d04 	addi	r5,r5,-30092
   149c8:	20800015 	stw	r2,0(r4)
   149cc:	0013a080 	call	13a08 <__cxa_throw>

000149d0 <_ZdlPv>:
   149d0:	001705c1 	jmpi	1705c <free>

000149d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
   149d4:	014000b4 	movhi	r5,2
   149d8:	2967a504 	addi	r5,r5,-24940
   149dc:	28c00117 	ldw	r3,4(r5)
   149e0:	223fff04 	addi	r8,r4,-4
   149e4:	18001a26 	beq	r3,zero,14a50 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   149e8:	227fff17 	ldw	r9,-4(r4)
   149ec:	424d883a 	add	r6,r8,r9
   149f0:	30c01736 	bltu	r6,r3,14a50 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   149f4:	18800117 	ldw	r2,4(r3)
   149f8:	19802326 	beq	r3,r6,14a88 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xb4>
   149fc:	01c000b4 	movhi	r7,2
   14a00:	39e7a604 	addi	r7,r7,-24936
   14a04:	10000726 	beq	r2,zero,14a24 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   14a08:	3080062e 	bgeu	r6,r2,14a24 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   14a0c:	11400117 	ldw	r5,4(r2)
   14a10:	19c00104 	addi	r7,r3,4
   14a14:	1007883a 	mov	r3,r2
   14a18:	28001826 	beq	r5,zero,14a7c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xa8>
   14a1c:	2805883a 	mov	r2,r5
   14a20:	30bffa36 	bltu	r6,r2,14a0c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x38>
   14a24:	30801026 	beq	r6,r2,14a68 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14a28:	38800017 	ldw	r2,0(r7)
   14a2c:	10c00017 	ldw	r3,0(r2)
   14a30:	10cb883a 	add	r5,r2,r3
   14a34:	41400926 	beq	r8,r5,14a5c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x88>
   14a38:	10800117 	ldw	r2,4(r2)
   14a3c:	227fff15 	stw	r9,-4(r4)
   14a40:	20800015 	stw	r2,0(r4)
   14a44:	38800017 	ldw	r2,0(r7)
   14a48:	12000115 	stw	r8,4(r2)
   14a4c:	f800283a 	ret
   14a50:	20c00015 	stw	r3,0(r4)
   14a54:	2a000115 	stw	r8,4(r5)
   14a58:	f800283a 	ret
   14a5c:	1a47883a 	add	r3,r3,r9
   14a60:	10c00015 	stw	r3,0(r2)
   14a64:	f800283a 	ret
   14a68:	31400017 	ldw	r5,0(r6)
   14a6c:	30800117 	ldw	r2,4(r6)
   14a70:	4953883a 	add	r9,r9,r5
   14a74:	18800115 	stw	r2,4(r3)
   14a78:	003feb06 	br	14a28 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14a7c:	0005883a 	mov	r2,zero
   14a80:	30bfe91e 	bne	r6,r2,14a28 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14a84:	003ff806 	br	14a68 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14a88:	18c00017 	ldw	r3,0(r3)
   14a8c:	20800015 	stw	r2,0(r4)
   14a90:	1a53883a 	add	r9,r3,r9
   14a94:	227fff15 	stw	r9,-4(r4)
   14a98:	2a000115 	stw	r8,4(r5)
   14a9c:	f800283a 	ret

00014aa0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
   14aa0:	21000104 	addi	r4,r4,4
   14aa4:	20800228 	cmpgeui	r2,r4,8
   14aa8:	1000011e 	bne	r2,zero,14ab0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x10>
   14aac:	01000204 	movi	r4,8
   14ab0:	008000b4 	movhi	r2,2
   14ab4:	10a7a617 	ldw	r2,-24936(r2)
   14ab8:	210000c4 	addi	r4,r4,3
   14abc:	00ffff04 	movi	r3,-4
   14ac0:	20c8703a 	and	r4,r4,r3
   14ac4:	10001026 	beq	r2,zero,14b08 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x68>
   14ac8:	018000b4 	movhi	r6,2
   14acc:	31a7a604 	addi	r6,r6,-24936
   14ad0:	00000206 	br	14adc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3c>
   14ad4:	19800104 	addi	r6,r3,4
   14ad8:	10001426 	beq	r2,zero,14b2c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x8c>
   14adc:	11400017 	ldw	r5,0(r2)
   14ae0:	1007883a 	mov	r3,r2
   14ae4:	10800117 	ldw	r2,4(r2)
   14ae8:	293ffa36 	bltu	r5,r4,14ad4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x34>
   14aec:	290fc83a 	sub	r7,r5,r4
   14af0:	3a000228 	cmpgeui	r8,r7,8
   14af4:	4000051e 	bne	r8,zero,14b0c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x6c>
   14af8:	19400015 	stw	r5,0(r3)
   14afc:	30800015 	stw	r2,0(r6)
   14b00:	18800104 	addi	r2,r3,4
   14b04:	f800283a 	ret
   14b08:	f800283a 	ret
   14b0c:	190b883a 	add	r5,r3,r4
   14b10:	28800115 	stw	r2,4(r5)
   14b14:	30c00017 	ldw	r3,0(r6)
   14b18:	29c00015 	stw	r7,0(r5)
   14b1c:	19000015 	stw	r4,0(r3)
   14b20:	31400015 	stw	r5,0(r6)
   14b24:	18800104 	addi	r2,r3,4
   14b28:	f800283a 	ret
   14b2c:	f800283a 	ret

00014b30 <_ZN9__gnu_cxx9__freeresEv>:
   14b30:	008000b4 	movhi	r2,2
   14b34:	1127a717 	ldw	r4,-24932(r2)
   14b38:	20000826 	beq	r4,zero,14b5c <_ZN9__gnu_cxx9__freeresEv+0x2c>
   14b3c:	deffff04 	addi	sp,sp,-4
   14b40:	dfc00015 	stw	ra,0(sp)
   14b44:	001705c0 	call	1705c <free>
   14b48:	008000b4 	movhi	r2,2
   14b4c:	1027a715 	stw	zero,-24932(r2)
   14b50:	dfc00017 	ldw	ra,0(sp)
   14b54:	dec00104 	addi	sp,sp,4
   14b58:	f800283a 	ret
   14b5c:	f800283a 	ret

00014b60 <__cxa_allocate_exception>:
   14b60:	defffe04 	addi	sp,sp,-8
   14b64:	dc000015 	stw	r16,0(sp)
   14b68:	24001104 	addi	r16,r4,68
   14b6c:	8009883a 	mov	r4,r16
   14b70:	dfc00115 	stw	ra,4(sp)
   14b74:	00170500 	call	17050 <malloc>
   14b78:	1007883a 	mov	r3,r2
   14b7c:	10000926 	beq	r2,zero,14ba4 <__cxa_allocate_exception+0x44>
   14b80:	01801104 	movi	r6,68
   14b84:	000b883a 	mov	r5,zero
   14b88:	1809883a 	mov	r4,r3
   14b8c:	00170900 	call	17090 <memset>
   14b90:	10801104 	addi	r2,r2,68
   14b94:	dfc00117 	ldw	ra,4(sp)
   14b98:	dc000017 	ldw	r16,0(sp)
   14b9c:	dec00204 	addi	sp,sp,8
   14ba0:	f800283a 	ret
   14ba4:	8009883a 	mov	r4,r16
   14ba8:	0014aa00 	call	14aa0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14bac:	1007883a 	mov	r3,r2
   14bb0:	103ff31e 	bne	r2,zero,14b80 <__cxa_allocate_exception+0x20>
   14bb4:	00138a40 	call	138a4 <_ZSt9terminatev>

00014bb8 <__cxa_free_exception>:
   14bb8:	008000b4 	movhi	r2,2
   14bbc:	10a7a504 	addi	r2,r2,-24940
   14bc0:	10c00217 	ldw	r3,8(r2)
   14bc4:	213fef04 	addi	r4,r4,-68
   14bc8:	1900042e 	bgeu	r3,r4,14bdc <__cxa_free_exception+0x24>
   14bcc:	10800317 	ldw	r2,12(r2)
   14bd0:	1887883a 	add	r3,r3,r2
   14bd4:	20c0012e 	bgeu	r4,r3,14bdc <__cxa_free_exception+0x24>
   14bd8:	00149d41 	jmpi	149d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14bdc:	001705c1 	jmpi	1705c <free>

00014be0 <__cxa_allocate_dependent_exception>:
   14be0:	deffff04 	addi	sp,sp,-4
   14be4:	01001004 	movi	r4,64
   14be8:	dfc00015 	stw	ra,0(sp)
   14bec:	00170500 	call	17050 <malloc>
   14bf0:	1009883a 	mov	r4,r2
   14bf4:	10000626 	beq	r2,zero,14c10 <__cxa_allocate_dependent_exception+0x30>
   14bf8:	01801004 	movi	r6,64
   14bfc:	000b883a 	mov	r5,zero
   14c00:	00170900 	call	17090 <memset>
   14c04:	dfc00017 	ldw	ra,0(sp)
   14c08:	dec00104 	addi	sp,sp,4
   14c0c:	f800283a 	ret
   14c10:	01001004 	movi	r4,64
   14c14:	0014aa00 	call	14aa0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14c18:	1009883a 	mov	r4,r2
   14c1c:	103ff61e 	bne	r2,zero,14bf8 <__cxa_allocate_dependent_exception+0x18>
   14c20:	00138a40 	call	138a4 <_ZSt9terminatev>

00014c24 <__cxa_free_dependent_exception>:
   14c24:	00c000b4 	movhi	r3,2
   14c28:	18e7a504 	addi	r3,r3,-24940
   14c2c:	19400217 	ldw	r5,8(r3)
   14c30:	2005883a 	mov	r2,r4
   14c34:	2900042e 	bgeu	r5,r4,14c48 <__cxa_free_dependent_exception+0x24>
   14c38:	18c00317 	ldw	r3,12(r3)
   14c3c:	28cb883a 	add	r5,r5,r3
   14c40:	2140012e 	bgeu	r4,r5,14c48 <__cxa_free_dependent_exception+0x24>
   14c44:	00149d41 	jmpi	149d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14c48:	1009883a 	mov	r4,r2
   14c4c:	001705c1 	jmpi	1705c <free>

00014c50 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
   14c50:	defffd04 	addi	sp,sp,-12
   14c54:	dc000015 	stw	r16,0(sp)
   14c58:	040000b4 	movhi	r16,2
   14c5c:	dc400115 	stw	r17,4(sp)
   14c60:	8427a504 	addi	r16,r16,-24940
   14c64:	04424004 	movi	r17,2304
   14c68:	01024004 	movi	r4,2304
   14c6c:	dfc00215 	stw	ra,8(sp)
   14c70:	84400315 	stw	r17,12(r16)
   14c74:	00170500 	call	17050 <malloc>
   14c78:	80800215 	stw	r2,8(r16)
   14c7c:	10000826 	beq	r2,zero,14ca0 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
   14c80:	80800115 	stw	r2,4(r16)
   14c84:	14400015 	stw	r17,0(r2)
   14c88:	10000115 	stw	zero,4(r2)
   14c8c:	dfc00217 	ldw	ra,8(sp)
   14c90:	dc400117 	ldw	r17,4(sp)
   14c94:	dc000017 	ldw	r16,0(sp)
   14c98:	dec00304 	addi	sp,sp,12
   14c9c:	f800283a 	ret
   14ca0:	008000b4 	movhi	r2,2
   14ca4:	1027a815 	stw	zero,-24928(r2)
   14ca8:	008000b4 	movhi	r2,2
   14cac:	1027a615 	stw	zero,-24936(r2)
   14cb0:	003ff606 	br	14c8c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

00014cb4 <__cxa_call_terminate>:
   14cb4:	defffe04 	addi	sp,sp,-8
   14cb8:	dfc00115 	stw	ra,4(sp)
   14cbc:	dc000015 	stw	r16,0(sp)
   14cc0:	20000d26 	beq	r4,zero,14cf8 <__cxa_call_terminate+0x44>
   14cc4:	2021883a 	mov	r16,r4
   14cc8:	0014d140 	call	14d14 <__cxa_begin_catch>
   14ccc:	80800017 	ldw	r2,0(r16)
   14cd0:	81000117 	ldw	r4,4(r16)
   14cd4:	00ef3574 	movhi	r3,48341
   14cd8:	18f54004 	addi	r3,r3,-11008
   14cdc:	016e2cb4 	movhi	r5,47282
   14ce0:	296aaf04 	addi	r5,r5,-21828
   14ce4:	10c7883a 	add	r3,r2,r3
   14ce8:	1885803a 	cmpltu	r2,r3,r2
   14cec:	2149883a 	add	r4,r4,r5
   14cf0:	1105883a 	add	r2,r2,r4
   14cf4:	10000126 	beq	r2,zero,14cfc <__cxa_call_terminate+0x48>
   14cf8:	00138a40 	call	138a4 <_ZSt9terminatev>
   14cfc:	18c000a8 	cmpgeui	r3,r3,2
   14d00:	183ffd1e 	bne	r3,zero,14cf8 <__cxa_call_terminate+0x44>
   14d04:	813ff817 	ldw	r4,-32(r16)
   14d08:	00137dc0 	call	137dc <_ZN10__cxxabiv111__terminateEPFvvE>

00014d0c <__cxa_get_exception_ptr>:
   14d0c:	20bfff17 	ldw	r2,-4(r4)
   14d10:	f800283a 	ret

00014d14 <__cxa_begin_catch>:
   14d14:	defffe04 	addi	sp,sp,-8
   14d18:	dc000015 	stw	r16,0(sp)
   14d1c:	dfc00115 	stw	ra,4(sp)
   14d20:	2021883a 	mov	r16,r4
   14d24:	0014f180 	call	14f18 <__cxa_get_globals>
   14d28:	80c00017 	ldw	r3,0(r16)
   14d2c:	81800117 	ldw	r6,4(r16)
   14d30:	012f3574 	movhi	r4,48341
   14d34:	21354004 	addi	r4,r4,-11008
   14d38:	016e2cb4 	movhi	r5,47282
   14d3c:	296aaf04 	addi	r5,r5,-21828
   14d40:	1909883a 	add	r4,r3,r4
   14d44:	314d883a 	add	r6,r6,r5
   14d48:	20c7803a 	cmpltu	r3,r4,r3
   14d4c:	1987883a 	add	r3,r3,r6
   14d50:	100b883a 	mov	r5,r2
   14d54:	81bff504 	addi	r6,r16,-44
   14d58:	10800017 	ldw	r2,0(r2)
   14d5c:	18000626 	beq	r3,zero,14d78 <__cxa_begin_catch+0x64>
   14d60:	1000191e 	bne	r2,zero,14dc8 <__cxa_begin_catch+0xb4>
   14d64:	29800015 	stw	r6,0(r5)
   14d68:	dfc00117 	ldw	ra,4(sp)
   14d6c:	dc000017 	ldw	r16,0(sp)
   14d70:	dec00204 	addi	sp,sp,8
   14d74:	f800283a 	ret
   14d78:	210000a8 	cmpgeui	r4,r4,2
   14d7c:	203ff81e 	bne	r4,zero,14d60 <__cxa_begin_catch+0x4c>
   14d80:	80fffa17 	ldw	r3,-24(r16)
   14d84:	18000d16 	blt	r3,zero,14dbc <__cxa_begin_catch+0xa8>
   14d88:	18c00044 	addi	r3,r3,1
   14d8c:	29000117 	ldw	r4,4(r5)
   14d90:	80fffa15 	stw	r3,-24(r16)
   14d94:	20ffffc4 	addi	r3,r4,-1
   14d98:	28c00115 	stw	r3,4(r5)
   14d9c:	11800226 	beq	r2,r6,14da8 <__cxa_begin_catch+0x94>
   14da0:	80bff915 	stw	r2,-28(r16)
   14da4:	29800015 	stw	r6,0(r5)
   14da8:	80bfff17 	ldw	r2,-4(r16)
   14dac:	dfc00117 	ldw	ra,4(sp)
   14db0:	dc000017 	ldw	r16,0(sp)
   14db4:	dec00204 	addi	sp,sp,8
   14db8:	f800283a 	ret
   14dbc:	01000044 	movi	r4,1
   14dc0:	20c7c83a 	sub	r3,r4,r3
   14dc4:	003ff106 	br	14d8c <__cxa_begin_catch+0x78>
   14dc8:	00138a40 	call	138a4 <_ZSt9terminatev>

00014dcc <__cxa_end_catch>:
   14dcc:	deffff04 	addi	sp,sp,-4
   14dd0:	dfc00015 	stw	ra,0(sp)
   14dd4:	0014f0c0 	call	14f0c <__cxa_get_globals_fast>
   14dd8:	11000017 	ldw	r4,0(r2)
   14ddc:	20001426 	beq	r4,zero,14e30 <__cxa_end_catch+0x64>
   14de0:	20c00b17 	ldw	r3,44(r4)
   14de4:	21800c17 	ldw	r6,48(r4)
   14de8:	016f3574 	movhi	r5,48341
   14dec:	29754004 	addi	r5,r5,-11008
   14df0:	01ee2cb4 	movhi	r7,47282
   14df4:	39eaaf04 	addi	r7,r7,-21828
   14df8:	194b883a 	add	r5,r3,r5
   14dfc:	28c7803a 	cmpltu	r3,r5,r3
   14e00:	31cd883a 	add	r6,r6,r7
   14e04:	1987883a 	add	r3,r3,r6
   14e08:	1800111e 	bne	r3,zero,14e50 <__cxa_end_catch+0x84>
   14e0c:	294000a8 	cmpgeui	r5,r5,2
   14e10:	28000f1e 	bne	r5,zero,14e50 <__cxa_end_catch+0x84>
   14e14:	20c00517 	ldw	r3,20(r4)
   14e18:	18000816 	blt	r3,zero,14e3c <__cxa_end_catch+0x70>
   14e1c:	18ffffc4 	addi	r3,r3,-1
   14e20:	18001026 	beq	r3,zero,14e64 <__cxa_end_catch+0x98>
   14e24:	18bfffd8 	cmpnei	r2,r3,-1
   14e28:	10001426 	beq	r2,zero,14e7c <__cxa_end_catch+0xb0>
   14e2c:	20c00515 	stw	r3,20(r4)
   14e30:	dfc00017 	ldw	ra,0(sp)
   14e34:	dec00104 	addi	sp,sp,4
   14e38:	f800283a 	ret
   14e3c:	18c00044 	addi	r3,r3,1
   14e40:	183ffa1e 	bne	r3,zero,14e2c <__cxa_end_catch+0x60>
   14e44:	21400417 	ldw	r5,16(r4)
   14e48:	11400015 	stw	r5,0(r2)
   14e4c:	003ff706 	br	14e2c <__cxa_end_catch+0x60>
   14e50:	21000b04 	addi	r4,r4,44
   14e54:	10000015 	stw	zero,0(r2)
   14e58:	dfc00017 	ldw	ra,0(sp)
   14e5c:	dec00104 	addi	sp,sp,4
   14e60:	0016d681 	jmpi	16d68 <_Unwind_DeleteException>
   14e64:	20c00417 	ldw	r3,16(r4)
   14e68:	21000b04 	addi	r4,r4,44
   14e6c:	10c00015 	stw	r3,0(r2)
   14e70:	dfc00017 	ldw	ra,0(sp)
   14e74:	dec00104 	addi	sp,sp,4
   14e78:	0016d681 	jmpi	16d68 <_Unwind_DeleteException>
   14e7c:	00138a40 	call	138a4 <_ZSt9terminatev>

00014e80 <_ZSt18uncaught_exceptionv>:
   14e80:	deffff04 	addi	sp,sp,-4
   14e84:	dfc00015 	stw	ra,0(sp)
   14e88:	0014f180 	call	14f18 <__cxa_get_globals>
   14e8c:	10800117 	ldw	r2,4(r2)
   14e90:	1004c03a 	cmpne	r2,r2,zero
   14e94:	dfc00017 	ldw	ra,0(sp)
   14e98:	dec00104 	addi	sp,sp,4
   14e9c:	f800283a 	ret

00014ea0 <_ZSt19uncaught_exceptionsv>:
   14ea0:	deffff04 	addi	sp,sp,-4
   14ea4:	dfc00015 	stw	ra,0(sp)
   14ea8:	0014f180 	call	14f18 <__cxa_get_globals>
   14eac:	10800117 	ldw	r2,4(r2)
   14eb0:	dfc00017 	ldw	ra,0(sp)
   14eb4:	dec00104 	addi	sp,sp,4
   14eb8:	f800283a 	ret

00014ebc <_ZNSt9exceptionD1Ev>:
   14ebc:	f800283a 	ret

00014ec0 <_ZNSt13bad_exceptionD1Ev>:
   14ec0:	f800283a 	ret

00014ec4 <_ZGTtNKSt9exception4whatEv>:
   14ec4:	008000b4 	movhi	r2,2
   14ec8:	10a2a504 	addi	r2,r2,-30060
   14ecc:	f800283a 	ret

00014ed0 <_ZGTtNKSt13bad_exception4whatEv>:
   14ed0:	008000b4 	movhi	r2,2
   14ed4:	10a2a904 	addi	r2,r2,-30044
   14ed8:	f800283a 	ret

00014edc <_ZNSt9exceptionD0Ev>:
   14edc:	01400104 	movi	r5,4
   14ee0:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00014ee4 <_ZNSt13bad_exceptionD0Ev>:
   14ee4:	01400104 	movi	r5,4
   14ee8:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00014eec <_ZN10__cxxabiv115__forced_unwindD1Ev>:
   14eec:	f800283a 	ret

00014ef0 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
   14ef0:	01400104 	movi	r5,4
   14ef4:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00014ef8 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
   14ef8:	f800283a 	ret

00014efc <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
   14efc:	01400104 	movi	r5,4
   14f00:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00014f04 <_ZGTtNKSt9exceptionD1Ev>:
   14f04:	f800283a 	ret

00014f08 <_ZGTtNKSt13bad_exceptionD1Ev>:
   14f08:	f800283a 	ret

00014f0c <__cxa_get_globals_fast>:
   14f0c:	008000b4 	movhi	r2,2
   14f10:	10a73d04 	addi	r2,r2,-25356
   14f14:	f800283a 	ret

00014f18 <__cxa_get_globals>:
   14f18:	008000b4 	movhi	r2,2
   14f1c:	10a73d04 	addi	r2,r2,-25356
   14f20:	f800283a 	ret

00014f24 <_ZN10__cxxabiv123__fundamental_type_infoD1Ev>:
   14f24:	008000b4 	movhi	r2,2
   14f28:	10a2ee04 	addi	r2,r2,-29768
   14f2c:	20800015 	stw	r2,0(r4)
   14f30:	0013efc1 	jmpi	13efc <_ZNSt9type_infoD1Ev>

00014f34 <_ZN10__cxxabiv123__fundamental_type_infoD0Ev>:
   14f34:	defffe04 	addi	sp,sp,-8
   14f38:	008000b4 	movhi	r2,2
   14f3c:	dc000015 	stw	r16,0(sp)
   14f40:	dfc00115 	stw	ra,4(sp)
   14f44:	10a2ee04 	addi	r2,r2,-29768
   14f48:	20800015 	stw	r2,0(r4)
   14f4c:	2021883a 	mov	r16,r4
   14f50:	0013efc0 	call	13efc <_ZNSt9type_infoD1Ev>
   14f54:	01400204 	movi	r5,8
   14f58:	8009883a 	mov	r4,r16
   14f5c:	dfc00117 	ldw	ra,4(sp)
   14f60:	dc000017 	ldw	r16,0(sp)
   14f64:	dec00204 	addi	sp,sp,8
   14f68:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00014f6c <_Znwj>:
   14f6c:	defffe04 	addi	sp,sp,-8
   14f70:	dc000015 	stw	r16,0(sp)
   14f74:	dfc00115 	stw	ra,4(sp)
   14f78:	2021883a 	mov	r16,r4
   14f7c:	2000011e 	bne	r4,zero,14f84 <_Znwj+0x18>
   14f80:	04000044 	movi	r16,1
   14f84:	8009883a 	mov	r4,r16
   14f88:	00170500 	call	17050 <malloc>
   14f8c:	10000426 	beq	r2,zero,14fa0 <_Znwj+0x34>
   14f90:	dfc00117 	ldw	ra,4(sp)
   14f94:	dc000017 	ldw	r16,0(sp)
   14f98:	dec00204 	addi	sp,sp,8
   14f9c:	f800283a 	ret
   14fa0:	00154940 	call	15494 <_ZSt15get_new_handlerv>
   14fa4:	10000226 	beq	r2,zero,14fb0 <_Znwj+0x44>
   14fa8:	103ee83a 	callr	r2
   14fac:	003ff506 	br	14f84 <_Znwj+0x18>
   14fb0:	01000104 	movi	r4,4
   14fb4:	0014b600 	call	14b60 <__cxa_allocate_exception>
   14fb8:	1009883a 	mov	r4,r2
   14fbc:	008000b4 	movhi	r2,2
   14fc0:	01800074 	movhi	r6,1
   14fc4:	014000b4 	movhi	r5,2
   14fc8:	10a3ee04 	addi	r2,r2,-28744
   14fcc:	3194e704 	addi	r6,r6,21404
   14fd0:	2963e904 	addi	r5,r5,-28764
   14fd4:	20800015 	stw	r2,0(r4)
   14fd8:	0013a080 	call	13a08 <__cxa_throw>

00014fdc <_ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj>:
   14fdc:	21000317 	ldw	r4,12(r4)
   14fe0:	29400317 	ldw	r5,12(r5)
   14fe4:	39c00084 	addi	r7,r7,2
   14fe8:	20800017 	ldw	r2,0(r4)
   14fec:	10800417 	ldw	r2,16(r2)
   14ff0:	1000683a 	jmp	r2

00014ff4 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>:
   14ff4:	008000b4 	movhi	r2,2
   14ff8:	10a3c204 	addi	r2,r2,-28920
   14ffc:	20800015 	stw	r2,0(r4)
   15000:	0013efc1 	jmpi	13efc <_ZNSt9type_infoD1Ev>

00015004 <_ZN10__cxxabiv117__pbase_type_infoD0Ev>:
   15004:	defffe04 	addi	sp,sp,-8
   15008:	008000b4 	movhi	r2,2
   1500c:	dc000015 	stw	r16,0(sp)
   15010:	dfc00115 	stw	ra,4(sp)
   15014:	10a3c204 	addi	r2,r2,-28920
   15018:	20800015 	stw	r2,0(r4)
   1501c:	2021883a 	mov	r16,r4
   15020:	0013efc0 	call	13efc <_ZNSt9type_infoD1Ev>
   15024:	01400404 	movi	r5,16
   15028:	8009883a 	mov	r4,r16
   1502c:	dfc00117 	ldw	ra,4(sp)
   15030:	dc000017 	ldw	r16,0(sp)
   15034:	dec00204 	addi	sp,sp,8
   15038:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

0001503c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj>:
   1503c:	defff804 	addi	sp,sp,-32
   15040:	dcc00315 	stw	r19,12(sp)
   15044:	dc400115 	stw	r17,4(sp)
   15048:	2027883a 	mov	r19,r4
   1504c:	2c400117 	ldw	r17,4(r5)
   15050:	21000117 	ldw	r4,4(r4)
   15054:	dfc00715 	stw	ra,28(sp)
   15058:	dd800615 	stw	r22,24(sp)
   1505c:	dd400515 	stw	r21,20(sp)
   15060:	dd000415 	stw	r20,16(sp)
   15064:	dc800215 	stw	r18,8(sp)
   15068:	dc000015 	stw	r16,0(sp)
   1506c:	24400926 	beq	r4,r17,15094 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
   15070:	20800007 	ldb	r2,0(r4)
   15074:	2821883a 	mov	r16,r5
   15078:	3025883a 	mov	r18,r6
   1507c:	10800aa0 	cmpeqi	r2,r2,42
   15080:	3829883a 	mov	r20,r7
   15084:	10000e1e 	bne	r2,zero,150c0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   15088:	880b883a 	mov	r5,r17
   1508c:	00175d80 	call	175d8 <strcmp>
   15090:	10000b1e 	bne	r2,zero,150c0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   15094:	00800044 	movi	r2,1
   15098:	dfc00717 	ldw	ra,28(sp)
   1509c:	dd800617 	ldw	r22,24(sp)
   150a0:	dd400517 	ldw	r21,20(sp)
   150a4:	dd000417 	ldw	r20,16(sp)
   150a8:	dcc00317 	ldw	r19,12(sp)
   150ac:	dc800217 	ldw	r18,8(sp)
   150b0:	dc400117 	ldw	r17,4(sp)
   150b4:	dc000017 	ldw	r16,0(sp)
   150b8:	dec00804 	addi	sp,sp,32
   150bc:	f800283a 	ret
   150c0:	008000b4 	movhi	r2,2
   150c4:	9d400017 	ldw	r21,0(r19)
   150c8:	11659917 	ldw	r5,-27036(r2)
   150cc:	adbfff17 	ldw	r22,-4(r21)
   150d0:	89403726 	beq	r17,r5,151b0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   150d4:	88800007 	ldb	r2,0(r17)
   150d8:	10800aa0 	cmpeqi	r2,r2,42
   150dc:	1000031e 	bne	r2,zero,150ec <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   150e0:	8809883a 	mov	r4,r17
   150e4:	00175d80 	call	175d8 <strcmp>
   150e8:	10003126 	beq	r2,zero,151b0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   150ec:	80006926 	beq	r16,zero,15294 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x258>
   150f0:	80800017 	ldw	r2,0(r16)
   150f4:	b1000117 	ldw	r4,4(r22)
   150f8:	10bfff17 	ldw	r2,-4(r2)
   150fc:	11400117 	ldw	r5,4(r2)
   15100:	21400526 	beq	r4,r5,15118 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xdc>
   15104:	20800007 	ldb	r2,0(r4)
   15108:	10800aa0 	cmpeqi	r2,r2,42
   1510c:	1000421e 	bne	r2,zero,15218 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15110:	00175d80 	call	175d8 <strcmp>
   15114:	1000401e 	bne	r2,zero,15218 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15118:	a080004c 	andi	r2,r20,1
   1511c:	10003e26 	beq	r2,zero,15218 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15120:	99000217 	ldw	r4,8(r19)
   15124:	81800217 	ldw	r6,8(r16)
   15128:	21c0180c 	andi	r7,r4,96
   1512c:	3080180c 	andi	r2,r6,96
   15130:	01ca303a 	nor	r5,zero,r7
   15134:	288a703a 	and	r5,r5,r2
   15138:	28000126 	beq	r5,zero,15140 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x104>
   1513c:	31cc703a 	and	r6,r6,r7
   15140:	0084303a 	nor	r2,zero,r2
   15144:	0106303a 	nor	r3,zero,r4
   15148:	11c4703a 	and	r2,r2,r7
   1514c:	1986703a 	and	r3,r3,r6
   15150:	10c4b03a 	or	r2,r2,r3
   15154:	1000301e 	bne	r2,zero,15218 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15158:	2100004c 	andi	r4,r4,1
   1515c:	20003c26 	beq	r4,zero,15250 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x214>
   15160:	a8c00617 	ldw	r3,24(r21)
   15164:	00800074 	movhi	r2,1
   15168:	1093f704 	addi	r2,r2,20444
   1516c:	18803b1e 	bne	r3,r2,1525c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x220>
   15170:	99000317 	ldw	r4,12(r19)
   15174:	81400317 	ldw	r5,12(r16)
   15178:	a1c00084 	addi	r7,r20,2
   1517c:	20800017 	ldw	r2,0(r4)
   15180:	900d883a 	mov	r6,r18
   15184:	10800417 	ldw	r2,16(r2)
   15188:	dfc00717 	ldw	ra,28(sp)
   1518c:	dd800617 	ldw	r22,24(sp)
   15190:	dd400517 	ldw	r21,20(sp)
   15194:	dd000417 	ldw	r20,16(sp)
   15198:	dcc00317 	ldw	r19,12(sp)
   1519c:	dc800217 	ldw	r18,8(sp)
   151a0:	dc400117 	ldw	r17,4(sp)
   151a4:	dc000017 	ldw	r16,0(sp)
   151a8:	dec00804 	addi	sp,sp,32
   151ac:	1000683a 	jmp	r2
   151b0:	008000b4 	movhi	r2,2
   151b4:	b4400117 	ldw	r17,4(r22)
   151b8:	11624b17 	ldw	r5,-30420(r2)
   151bc:	89401c26 	beq	r17,r5,15230 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   151c0:	88800007 	ldb	r2,0(r17)
   151c4:	10800aa0 	cmpeqi	r2,r2,42
   151c8:	1000151e 	bne	r2,zero,15220 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1e4>
   151cc:	8809883a 	mov	r4,r17
   151d0:	00175d80 	call	175d8 <strcmp>
   151d4:	10001626 	beq	r2,zero,15230 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   151d8:	008000b4 	movhi	r2,2
   151dc:	1163d617 	ldw	r5,-28840(r2)
   151e0:	89400326 	beq	r17,r5,151f0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   151e4:	8809883a 	mov	r4,r17
   151e8:	00175d80 	call	175d8 <strcmp>
   151ec:	103fbf1e 	bne	r2,zero,150ec <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   151f0:	99000317 	ldw	r4,12(r19)
   151f4:	20800017 	ldw	r2,0(r4)
   151f8:	10800317 	ldw	r2,12(r2)
   151fc:	103ee83a 	callr	r2
   15200:	10c03fcc 	andi	r3,r2,255
   15204:	18000d26 	beq	r3,zero,1523c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x200>
   15208:	00c000b4 	movhi	r3,2
   1520c:	18e5c304 	addi	r3,r3,-26868
   15210:	90c00015 	stw	r3,0(r18)
   15214:	003fa006 	br	15098 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   15218:	0005883a 	mov	r2,zero
   1521c:	003f9e06 	br	15098 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   15220:	008000b4 	movhi	r2,2
   15224:	10a3d617 	ldw	r2,-28840(r2)
   15228:	88bfb01e 	bne	r17,r2,150ec <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   1522c:	003ff006 	br	151f0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   15230:	90000015 	stw	zero,0(r18)
   15234:	00800044 	movi	r2,1
   15238:	003f9706 	br	15098 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   1523c:	008000b4 	movhi	r2,2
   15240:	10a5c204 	addi	r2,r2,-26872
   15244:	90800015 	stw	r2,0(r18)
   15248:	00800044 	movi	r2,1
   1524c:	003f9206 	br	15098 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   15250:	00bfff84 	movi	r2,-2
   15254:	a0a8703a 	and	r20,r20,r2
   15258:	003fc106 	br	15160 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x124>
   1525c:	a00f883a 	mov	r7,r20
   15260:	900d883a 	mov	r6,r18
   15264:	800b883a 	mov	r5,r16
   15268:	9809883a 	mov	r4,r19
   1526c:	dfc00717 	ldw	ra,28(sp)
   15270:	dd800617 	ldw	r22,24(sp)
   15274:	dd400517 	ldw	r21,20(sp)
   15278:	dd000417 	ldw	r20,16(sp)
   1527c:	dcc00317 	ldw	r19,12(sp)
   15280:	dc800217 	ldw	r18,8(sp)
   15284:	dc400117 	ldw	r17,4(sp)
   15288:	dc000017 	ldw	r16,0(sp)
   1528c:	dec00804 	addi	sp,sp,32
   15290:	1800683a 	jmp	r3
   15294:	00154180 	call	15418 <__cxa_bad_typeid>

00015298 <_ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev>:
   15298:	008000b4 	movhi	r2,2
   1529c:	10a3da04 	addi	r2,r2,-28824
   152a0:	20800015 	stw	r2,0(r4)
   152a4:	0014ff41 	jmpi	14ff4 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

000152a8 <_ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev>:
   152a8:	defffe04 	addi	sp,sp,-8
   152ac:	008000b4 	movhi	r2,2
   152b0:	dc000015 	stw	r16,0(sp)
   152b4:	dfc00115 	stw	ra,4(sp)
   152b8:	10a3da04 	addi	r2,r2,-28824
   152bc:	20800015 	stw	r2,0(r4)
   152c0:	2021883a 	mov	r16,r4
   152c4:	0014ff40 	call	14ff4 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   152c8:	01400504 	movi	r5,20
   152cc:	8009883a 	mov	r4,r16
   152d0:	dfc00117 	ldw	ra,4(sp)
   152d4:	dc000017 	ldw	r16,0(sp)
   152d8:	dec00204 	addi	sp,sp,8
   152dc:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

000152e0 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   152e0:	20c00417 	ldw	r3,16(r4)
   152e4:	28800417 	ldw	r2,16(r5)
   152e8:	defffb04 	addi	sp,sp,-20
   152ec:	dc400215 	stw	r17,8(sp)
   152f0:	dc000115 	stw	r16,4(sp)
   152f4:	2023883a 	mov	r17,r4
   152f8:	2821883a 	mov	r16,r5
   152fc:	19000117 	ldw	r4,4(r3)
   15300:	11400117 	ldw	r5,4(r2)
   15304:	dc800315 	stw	r18,12(sp)
   15308:	dfc00415 	stw	ra,16(sp)
   1530c:	3825883a 	mov	r18,r7
   15310:	21400e26 	beq	r4,r5,1534c <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   15314:	20800007 	ldb	r2,0(r4)
   15318:	d9800015 	stw	r6,0(sp)
   1531c:	10800aa0 	cmpeqi	r2,r2,42
   15320:	1000031e 	bne	r2,zero,15330 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x50>
   15324:	00175d80 	call	175d8 <strcmp>
   15328:	d9800017 	ldw	r6,0(sp)
   1532c:	10000726 	beq	r2,zero,1534c <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   15330:	0005883a 	mov	r2,zero
   15334:	dfc00417 	ldw	ra,16(sp)
   15338:	dc800317 	ldw	r18,12(sp)
   1533c:	dc400217 	ldw	r17,8(sp)
   15340:	dc000117 	ldw	r16,4(sp)
   15344:	dec00504 	addi	sp,sp,20
   15348:	f800283a 	ret
   1534c:	89000317 	ldw	r4,12(r17)
   15350:	81400317 	ldw	r5,12(r16)
   15354:	91c00084 	addi	r7,r18,2
   15358:	20800017 	ldw	r2,0(r4)
   1535c:	10800417 	ldw	r2,16(r2)
   15360:	dfc00417 	ldw	ra,16(sp)
   15364:	dc800317 	ldw	r18,12(sp)
   15368:	dc400217 	ldw	r17,8(sp)
   1536c:	dc000117 	ldw	r16,4(sp)
   15370:	dec00504 	addi	sp,sp,20
   15374:	1000683a 	jmp	r2

00015378 <__cxa_pure_virtual>:
   15378:	deffff04 	addi	sp,sp,-4
   1537c:	dfc00015 	stw	ra,0(sp)
   15380:	00138a40 	call	138a4 <_ZSt9terminatev>

00015384 <__cxa_deleted_virtual>:
   15384:	deffff04 	addi	sp,sp,-4
   15388:	dfc00015 	stw	ra,0(sp)
   1538c:	00138a40 	call	138a4 <_ZSt9terminatev>

00015390 <_ZNKSt9bad_alloc4whatEv>:
   15390:	008000b4 	movhi	r2,2
   15394:	10a3e104 	addi	r2,r2,-28796
   15398:	f800283a 	ret

0001539c <_ZNSt9bad_allocD1Ev>:
   1539c:	008000b4 	movhi	r2,2
   153a0:	10a3ee04 	addi	r2,r2,-28744
   153a4:	20800015 	stw	r2,0(r4)
   153a8:	0014ebc1 	jmpi	14ebc <_ZNSt9exceptionD1Ev>

000153ac <_ZNSt9bad_allocD0Ev>:
   153ac:	defffe04 	addi	sp,sp,-8
   153b0:	008000b4 	movhi	r2,2
   153b4:	dc000015 	stw	r16,0(sp)
   153b8:	dfc00115 	stw	ra,4(sp)
   153bc:	10a3ee04 	addi	r2,r2,-28744
   153c0:	20800015 	stw	r2,0(r4)
   153c4:	2021883a 	mov	r16,r4
   153c8:	0014ebc0 	call	14ebc <_ZNSt9exceptionD1Ev>
   153cc:	01400104 	movi	r5,4
   153d0:	8009883a 	mov	r4,r16
   153d4:	dfc00117 	ldw	ra,4(sp)
   153d8:	dc000017 	ldw	r16,0(sp)
   153dc:	dec00204 	addi	sp,sp,8
   153e0:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

000153e4 <__cxa_bad_cast>:
   153e4:	deffff04 	addi	sp,sp,-4
   153e8:	01000104 	movi	r4,4
   153ec:	dfc00015 	stw	ra,0(sp)
   153f0:	0014b600 	call	14b60 <__cxa_allocate_exception>
   153f4:	1009883a 	mov	r4,r2
   153f8:	008000b4 	movhi	r2,2
   153fc:	01800074 	movhi	r6,1
   15400:	014000b4 	movhi	r5,2
   15404:	10a41304 	addi	r2,r2,-28596
   15408:	31954004 	addi	r6,r6,21760
   1540c:	29640e04 	addi	r5,r5,-28616
   15410:	20800015 	stw	r2,0(r4)
   15414:	0013a080 	call	13a08 <__cxa_throw>

00015418 <__cxa_bad_typeid>:
   15418:	deffff04 	addi	sp,sp,-4
   1541c:	01000104 	movi	r4,4
   15420:	dfc00015 	stw	ra,0(sp)
   15424:	0014b600 	call	14b60 <__cxa_allocate_exception>
   15428:	1009883a 	mov	r4,r2
   1542c:	008000b4 	movhi	r2,2
   15430:	01800074 	movhi	r6,1
   15434:	014000b4 	movhi	r5,2
   15438:	10a42304 	addi	r2,r2,-28532
   1543c:	31955504 	addi	r6,r6,21844
   15440:	29641e04 	addi	r5,r5,-28552
   15444:	20800015 	stw	r2,0(r4)
   15448:	0013a080 	call	13a08 <__cxa_throw>

0001544c <__cxa_throw_bad_array_new_length>:
   1544c:	deffff04 	addi	sp,sp,-4
   15450:	01000104 	movi	r4,4
   15454:	dfc00015 	stw	ra,0(sp)
   15458:	0014b600 	call	14b60 <__cxa_allocate_exception>
   1545c:	1009883a 	mov	r4,r2
   15460:	008000b4 	movhi	r2,2
   15464:	01800074 	movhi	r6,1
   15468:	014000b4 	movhi	r5,2
   1546c:	10a40404 	addi	r2,r2,-28656
   15470:	31952b04 	addi	r6,r6,21676
   15474:	2963ff04 	addi	r5,r5,-28676
   15478:	20800015 	stw	r2,0(r4)
   1547c:	0013a080 	call	13a08 <__cxa_throw>

00015480 <_ZSt15set_new_handlerPFvvE>:
   15480:	00c000b4 	movhi	r3,2
   15484:	008000b4 	movhi	r2,2
   15488:	10a73f17 	ldw	r2,-25348(r2)
   1548c:	19273f15 	stw	r4,-25348(r3)
   15490:	f800283a 	ret

00015494 <_ZSt15get_new_handlerv>:
   15494:	008000b4 	movhi	r2,2
   15498:	10a73f17 	ldw	r2,-25348(r2)
   1549c:	f800283a 	ret

000154a0 <_ZNKSt20bad_array_new_length4whatEv>:
   154a0:	008000b4 	movhi	r2,2
   154a4:	10a3f104 	addi	r2,r2,-28732
   154a8:	f800283a 	ret

000154ac <_ZNSt20bad_array_new_lengthD1Ev>:
   154ac:	008000b4 	movhi	r2,2
   154b0:	10a40404 	addi	r2,r2,-28656
   154b4:	20800015 	stw	r2,0(r4)
   154b8:	001539c1 	jmpi	1539c <_ZNSt9bad_allocD1Ev>

000154bc <_ZNSt20bad_array_new_lengthD0Ev>:
   154bc:	defffe04 	addi	sp,sp,-8
   154c0:	008000b4 	movhi	r2,2
   154c4:	dc000015 	stw	r16,0(sp)
   154c8:	dfc00115 	stw	ra,4(sp)
   154cc:	10a40404 	addi	r2,r2,-28656
   154d0:	20800015 	stw	r2,0(r4)
   154d4:	2021883a 	mov	r16,r4
   154d8:	001539c0 	call	1539c <_ZNSt9bad_allocD1Ev>
   154dc:	01400104 	movi	r5,4
   154e0:	8009883a 	mov	r4,r16
   154e4:	dfc00117 	ldw	ra,4(sp)
   154e8:	dc000017 	ldw	r16,0(sp)
   154ec:	dec00204 	addi	sp,sp,8
   154f0:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

000154f4 <_ZNKSt8bad_cast4whatEv>:
   154f4:	008000b4 	movhi	r2,2
   154f8:	10a40704 	addi	r2,r2,-28644
   154fc:	f800283a 	ret

00015500 <_ZNSt8bad_castD1Ev>:
   15500:	008000b4 	movhi	r2,2
   15504:	10a41304 	addi	r2,r2,-28596
   15508:	20800015 	stw	r2,0(r4)
   1550c:	0014ebc1 	jmpi	14ebc <_ZNSt9exceptionD1Ev>

00015510 <_ZNSt8bad_castD0Ev>:
   15510:	defffe04 	addi	sp,sp,-8
   15514:	008000b4 	movhi	r2,2
   15518:	dc000015 	stw	r16,0(sp)
   1551c:	dfc00115 	stw	ra,4(sp)
   15520:	10a41304 	addi	r2,r2,-28596
   15524:	20800015 	stw	r2,0(r4)
   15528:	2021883a 	mov	r16,r4
   1552c:	0014ebc0 	call	14ebc <_ZNSt9exceptionD1Ev>
   15530:	01400104 	movi	r5,4
   15534:	8009883a 	mov	r4,r16
   15538:	dfc00117 	ldw	ra,4(sp)
   1553c:	dc000017 	ldw	r16,0(sp)
   15540:	dec00204 	addi	sp,sp,8
   15544:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

00015548 <_ZNKSt10bad_typeid4whatEv>:
   15548:	008000b4 	movhi	r2,2
   1554c:	10a41604 	addi	r2,r2,-28584
   15550:	f800283a 	ret

00015554 <_ZNSt10bad_typeidD1Ev>:
   15554:	008000b4 	movhi	r2,2
   15558:	10a42304 	addi	r2,r2,-28532
   1555c:	20800015 	stw	r2,0(r4)
   15560:	0014ebc1 	jmpi	14ebc <_ZNSt9exceptionD1Ev>

00015564 <_ZNSt10bad_typeidD0Ev>:
   15564:	defffe04 	addi	sp,sp,-8
   15568:	008000b4 	movhi	r2,2
   1556c:	dc000015 	stw	r16,0(sp)
   15570:	dfc00115 	stw	ra,4(sp)
   15574:	10a42304 	addi	r2,r2,-28532
   15578:	20800015 	stw	r2,0(r4)
   1557c:	2021883a 	mov	r16,r4
   15580:	0014ebc0 	call	14ebc <_ZNSt9exceptionD1Ev>
   15584:	01400104 	movi	r5,4
   15588:	8009883a 	mov	r4,r16
   1558c:	dfc00117 	ldw	ra,4(sp)
   15590:	dc000017 	ldw	r16,0(sp)
   15594:	dec00204 	addi	sp,sp,8
   15598:	0012a9c1 	jmpi	12a9c <_ZdlPvj>

0001559c <__divdf3>:
   1559c:	2810d53a 	srli	r8,r5,20
   155a0:	defff004 	addi	sp,sp,-64
   155a4:	dc000615 	stw	r16,24(sp)
   155a8:	04000434 	movhi	r16,16
   155ac:	df000e15 	stw	fp,56(sp)
   155b0:	ddc00d15 	stw	r23,52(sp)
   155b4:	dd800c15 	stw	r22,48(sp)
   155b8:	dd000a15 	stw	r20,40(sp)
   155bc:	843fffc4 	addi	r16,r16,-1
   155c0:	dfc00f15 	stw	ra,60(sp)
   155c4:	dd400b15 	stw	r21,44(sp)
   155c8:	dcc00915 	stw	r19,36(sp)
   155cc:	dc800815 	stw	r18,32(sp)
   155d0:	dc400715 	stw	r17,28(sp)
   155d4:	4201ffcc 	andi	r8,r8,2047
   155d8:	282ed7fa 	srli	r23,r5,31
   155dc:	3039883a 	mov	fp,r6
   155e0:	382d883a 	mov	r22,r7
   155e4:	2029883a 	mov	r20,r4
   155e8:	2c20703a 	and	r16,r5,r16
   155ec:	40006826 	beq	r8,zero,15790 <__divdf3+0x1f4>
   155f0:	4081ffe0 	cmpeqi	r2,r8,2047
   155f4:	1000791e 	bne	r2,zero,157dc <__divdf3+0x240>
   155f8:	2026d77a 	srli	r19,r4,29
   155fc:	800a90fa 	slli	r5,r16,3
   15600:	202890fa 	slli	r20,r4,3
   15604:	44bf0044 	addi	r18,r8,-1023
   15608:	994ab03a 	or	r5,r19,r5
   1560c:	2cc02034 	orhi	r19,r5,128
   15610:	0021883a 	mov	r16,zero
   15614:	0023883a 	mov	r17,zero
   15618:	b010d53a 	srli	r8,r22,20
   1561c:	00c00434 	movhi	r3,16
   15620:	18ffffc4 	addi	r3,r3,-1
   15624:	4201ffcc 	andi	r8,r8,2047
   15628:	b02ad7fa 	srli	r21,r22,31
   1562c:	b0ec703a 	and	r22,r22,r3
   15630:	40004626 	beq	r8,zero,1574c <__divdf3+0x1b0>
   15634:	4081ffe0 	cmpeqi	r2,r8,2047
   15638:	10006f1e 	bne	r2,zero,157f8 <__divdf3+0x25c>
   1563c:	b00690fa 	slli	r3,r22,3
   15640:	e004d77a 	srli	r2,fp,29
   15644:	e01290fa 	slli	r9,fp,3
   15648:	423f0044 	addi	r8,r8,-1023
   1564c:	10c6b03a 	or	r3,r2,r3
   15650:	1d802034 	orhi	r22,r3,128
   15654:	9225c83a 	sub	r18,r18,r8
   15658:	0007883a 	mov	r3,zero
   1565c:	80800428 	cmpgeui	r2,r16,16
   15660:	bd4ef03a 	xor	r7,r23,r21
   15664:	1000a71e 	bne	r2,zero,15904 <__divdf3+0x368>
   15668:	800c90ba 	slli	r6,r16,2
   1566c:	00800074 	movhi	r2,1
   15670:	3085883a 	add	r2,r6,r2
   15674:	10959f17 	ldw	r2,22140(r2)
   15678:	1000683a 	jmp	r2
   1567c:	00015904 	movi	zero,1380
   15680:	00015728 	cmpgeui	zero,zero,1372
   15684:	000156d8 	cmpnei	zero,zero,1371
   15688:	00015738 	rdprs	zero,zero,1372
   1568c:	000156d8 	cmpnei	zero,zero,1371
   15690:	000158a8 	cmpgeui	zero,zero,1378
   15694:	000156d8 	cmpnei	zero,zero,1371
   15698:	00015738 	rdprs	zero,zero,1372
   1569c:	00015728 	cmpgeui	zero,zero,1372
   156a0:	00015728 	cmpgeui	zero,zero,1372
   156a4:	000158a8 	cmpgeui	zero,zero,1378
   156a8:	00015738 	rdprs	zero,zero,1372
   156ac:	000156bc 	xorhi	zero,zero,1370
   156b0:	000156bc 	xorhi	zero,zero,1370
   156b4:	000156bc 	xorhi	zero,zero,1370
   156b8:	000158c0 	call	158c <__alt_mem_onchip_mem-0xea74>
   156bc:	b80f883a 	mov	r7,r23
   156c0:	888000a0 	cmpeqi	r2,r17,2
   156c4:	1000181e 	bne	r2,zero,15728 <__divdf3+0x18c>
   156c8:	888000e0 	cmpeqi	r2,r17,3
   156cc:	1001f61e 	bne	r2,zero,15ea8 <__divdf3+0x90c>
   156d0:	88800060 	cmpeqi	r2,r17,1
   156d4:	10006126 	beq	r2,zero,1585c <__divdf3+0x2c0>
   156d8:	0007883a 	mov	r3,zero
   156dc:	000b883a 	mov	r5,zero
   156e0:	0029883a 	mov	r20,zero
   156e4:	1806953a 	slli	r3,r3,20
   156e8:	380e97fa 	slli	r7,r7,31
   156ec:	a005883a 	mov	r2,r20
   156f0:	1946b03a 	or	r3,r3,r5
   156f4:	19c6b03a 	or	r3,r3,r7
   156f8:	dfc00f17 	ldw	ra,60(sp)
   156fc:	df000e17 	ldw	fp,56(sp)
   15700:	ddc00d17 	ldw	r23,52(sp)
   15704:	dd800c17 	ldw	r22,48(sp)
   15708:	dd400b17 	ldw	r21,44(sp)
   1570c:	dd000a17 	ldw	r20,40(sp)
   15710:	dcc00917 	ldw	r19,36(sp)
   15714:	dc800817 	ldw	r18,32(sp)
   15718:	dc400717 	ldw	r17,28(sp)
   1571c:	dc000617 	ldw	r16,24(sp)
   15720:	dec01004 	addi	sp,sp,64
   15724:	f800283a 	ret
   15728:	00c1ffc4 	movi	r3,2047
   1572c:	000b883a 	mov	r5,zero
   15730:	0029883a 	mov	r20,zero
   15734:	003feb06 	br	156e4 <__divdf3+0x148>
   15738:	a80f883a 	mov	r7,r21
   1573c:	b027883a 	mov	r19,r22
   15740:	4829883a 	mov	r20,r9
   15744:	1823883a 	mov	r17,r3
   15748:	003fdd06 	br	156c0 <__divdf3+0x124>
   1574c:	b712b03a 	or	r9,r22,fp
   15750:	48003e26 	beq	r9,zero,1584c <__divdf3+0x2b0>
   15754:	b0017726 	beq	r22,zero,15d34 <__divdf3+0x798>
   15758:	b009883a 	mov	r4,r22
   1575c:	0016e080 	call	16e08 <__clzsi2>
   15760:	117ffd44 	addi	r5,r2,-11
   15764:	01000744 	movi	r4,29
   15768:	127ffe04 	addi	r9,r2,-8
   1576c:	2149c83a 	sub	r4,r4,r5
   15770:	b246983a 	sll	r3,r22,r9
   15774:	e108d83a 	srl	r4,fp,r4
   15778:	e252983a 	sll	r9,fp,r9
   1577c:	20ecb03a 	or	r22,r4,r3
   15780:	1491883a 	add	r8,r2,r18
   15784:	4480fcc4 	addi	r18,r8,1011
   15788:	0007883a 	mov	r3,zero
   1578c:	003fb306 	br	1565c <__divdf3+0xc0>
   15790:	8126b03a 	or	r19,r16,r4
   15794:	2023883a 	mov	r17,r4
   15798:	98002726 	beq	r19,zero,15838 <__divdf3+0x29c>
   1579c:	80017026 	beq	r16,zero,15d60 <__divdf3+0x7c4>
   157a0:	8009883a 	mov	r4,r16
   157a4:	0016e080 	call	16e08 <__clzsi2>
   157a8:	113ffd44 	addi	r4,r2,-11
   157ac:	00c00744 	movi	r3,29
   157b0:	14fffe04 	addi	r19,r2,-8
   157b4:	1907c83a 	sub	r3,r3,r4
   157b8:	84ca983a 	sll	r5,r16,r19
   157bc:	88c6d83a 	srl	r3,r17,r3
   157c0:	8ce8983a 	sll	r20,r17,r19
   157c4:	1966b03a 	or	r19,r3,r5
   157c8:	023f0344 	movi	r8,-1011
   157cc:	40a5c83a 	sub	r18,r8,r2
   157d0:	0021883a 	mov	r16,zero
   157d4:	0023883a 	mov	r17,zero
   157d8:	003f8f06 	br	15618 <__divdf3+0x7c>
   157dc:	8126b03a 	or	r19,r16,r4
   157e0:	9800101e 	bne	r19,zero,15824 <__divdf3+0x288>
   157e4:	0029883a 	mov	r20,zero
   157e8:	04000204 	movi	r16,8
   157ec:	0481ffc4 	movi	r18,2047
   157f0:	04400084 	movi	r17,2
   157f4:	003f8806 	br	15618 <__divdf3+0x7c>
   157f8:	b712b03a 	or	r9,r22,fp
   157fc:	94be0044 	addi	r18,r18,-2047
   15800:	4800041e 	bne	r9,zero,15814 <__divdf3+0x278>
   15804:	84000094 	ori	r16,r16,2
   15808:	002d883a 	mov	r22,zero
   1580c:	00c00084 	movi	r3,2
   15810:	003f9206 	br	1565c <__divdf3+0xc0>
   15814:	840000d4 	ori	r16,r16,3
   15818:	e013883a 	mov	r9,fp
   1581c:	00c000c4 	movi	r3,3
   15820:	003f8e06 	br	1565c <__divdf3+0xc0>
   15824:	8027883a 	mov	r19,r16
   15828:	0481ffc4 	movi	r18,2047
   1582c:	04000304 	movi	r16,12
   15830:	044000c4 	movi	r17,3
   15834:	003f7806 	br	15618 <__divdf3+0x7c>
   15838:	0029883a 	mov	r20,zero
   1583c:	04000104 	movi	r16,4
   15840:	0025883a 	mov	r18,zero
   15844:	04400044 	movi	r17,1
   15848:	003f7306 	br	15618 <__divdf3+0x7c>
   1584c:	84000054 	ori	r16,r16,1
   15850:	002d883a 	mov	r22,zero
   15854:	00c00044 	movi	r3,1
   15858:	003f8006 	br	1565c <__divdf3+0xc0>
   1585c:	9440ffc4 	addi	r17,r18,1023
   15860:	0441050e 	bge	zero,r17,15c78 <__divdf3+0x6dc>
   15864:	a08001cc 	andi	r2,r20,7
   15868:	10016c1e 	bne	r2,zero,15e1c <__divdf3+0x880>
   1586c:	a008d0fa 	srli	r4,r20,3
   15870:	9880402c 	andhi	r2,r19,256
   15874:	10000426 	beq	r2,zero,15888 <__divdf3+0x2ec>
   15878:	00bfc034 	movhi	r2,65280
   1587c:	10bfffc4 	addi	r2,r2,-1
   15880:	98a6703a 	and	r19,r19,r2
   15884:	94410004 	addi	r17,r18,1024
   15888:	8881ffc8 	cmpgei	r2,r17,2047
   1588c:	103fa61e 	bne	r2,zero,15728 <__divdf3+0x18c>
   15890:	9828977a 	slli	r20,r19,29
   15894:	980a927a 	slli	r5,r19,9
   15898:	88c1ffcc 	andi	r3,r17,2047
   1589c:	a128b03a 	or	r20,r20,r4
   158a0:	280ad33a 	srli	r5,r5,12
   158a4:	003f8f06 	br	156e4 <__divdf3+0x148>
   158a8:	01400434 	movhi	r5,16
   158ac:	000f883a 	mov	r7,zero
   158b0:	297fffc4 	addi	r5,r5,-1
   158b4:	053fffc4 	movi	r20,-1
   158b8:	00c1ffc4 	movi	r3,2047
   158bc:	003f8906 	br	156e4 <__divdf3+0x148>
   158c0:	9880022c 	andhi	r2,r19,8
   158c4:	10000926 	beq	r2,zero,158ec <__divdf3+0x350>
   158c8:	b080022c 	andhi	r2,r22,8
   158cc:	1000071e 	bne	r2,zero,158ec <__divdf3+0x350>
   158d0:	00800434 	movhi	r2,16
   158d4:	b1400234 	orhi	r5,r22,8
   158d8:	10bfffc4 	addi	r2,r2,-1
   158dc:	288a703a 	and	r5,r5,r2
   158e0:	a80f883a 	mov	r7,r21
   158e4:	4829883a 	mov	r20,r9
   158e8:	003ff306 	br	158b8 <__divdf3+0x31c>
   158ec:	00800434 	movhi	r2,16
   158f0:	99400234 	orhi	r5,r19,8
   158f4:	10bfffc4 	addi	r2,r2,-1
   158f8:	288a703a 	and	r5,r5,r2
   158fc:	b80f883a 	mov	r7,r23
   15900:	003fed06 	br	158b8 <__divdf3+0x31c>
   15904:	b4c10536 	bltu	r22,r19,15d1c <__divdf3+0x780>
   15908:	b4c10326 	beq	r22,r19,15d18 <__divdf3+0x77c>
   1590c:	94bfffc4 	addi	r18,r18,-1
   15910:	a039883a 	mov	fp,r20
   15914:	9821883a 	mov	r16,r19
   15918:	0023883a 	mov	r17,zero
   1591c:	b006923a 	slli	r3,r22,8
   15920:	482cd63a 	srli	r22,r9,24
   15924:	8009883a 	mov	r4,r16
   15928:	182ed43a 	srli	r23,r3,16
   1592c:	b0ecb03a 	or	r22,r22,r3
   15930:	d9c00015 	stw	r7,0(sp)
   15934:	b80b883a 	mov	r5,r23
   15938:	482a923a 	slli	r21,r9,8
   1593c:	b53fffcc 	andi	r20,r22,65535
   15940:	0016f500 	call	16f50 <__udivsi3>
   15944:	100b883a 	mov	r5,r2
   15948:	a009883a 	mov	r4,r20
   1594c:	1027883a 	mov	r19,r2
   15950:	00170100 	call	17010 <__mulsi3>
   15954:	8009883a 	mov	r4,r16
   15958:	b80b883a 	mov	r5,r23
   1595c:	1021883a 	mov	r16,r2
   15960:	0016fb40 	call	16fb4 <__umodsi3>
   15964:	1004943a 	slli	r2,r2,16
   15968:	e008d43a 	srli	r4,fp,16
   1596c:	d9c00017 	ldw	r7,0(sp)
   15970:	2088b03a 	or	r4,r4,r2
   15974:	2400042e 	bgeu	r4,r16,15988 <__divdf3+0x3ec>
   15978:	2589883a 	add	r4,r4,r22
   1597c:	98bfffc4 	addi	r2,r19,-1
   15980:	2581082e 	bgeu	r4,r22,15da4 <__divdf3+0x808>
   15984:	1027883a 	mov	r19,r2
   15988:	2421c83a 	sub	r16,r4,r16
   1598c:	b80b883a 	mov	r5,r23
   15990:	8009883a 	mov	r4,r16
   15994:	d9c00215 	stw	r7,8(sp)
   15998:	0016f500 	call	16f50 <__udivsi3>
   1599c:	100b883a 	mov	r5,r2
   159a0:	a009883a 	mov	r4,r20
   159a4:	d8800115 	stw	r2,4(sp)
   159a8:	00170100 	call	17010 <__mulsi3>
   159ac:	b80b883a 	mov	r5,r23
   159b0:	8009883a 	mov	r4,r16
   159b4:	d8800015 	stw	r2,0(sp)
   159b8:	0016fb40 	call	16fb4 <__umodsi3>
   159bc:	100c943a 	slli	r6,r2,16
   159c0:	d8c00017 	ldw	r3,0(sp)
   159c4:	e73fffcc 	andi	fp,fp,65535
   159c8:	e18cb03a 	or	r6,fp,r6
   159cc:	da000117 	ldw	r8,4(sp)
   159d0:	d9c00217 	ldw	r7,8(sp)
   159d4:	30c0042e 	bgeu	r6,r3,159e8 <__divdf3+0x44c>
   159d8:	358d883a 	add	r6,r6,r22
   159dc:	40bfffc4 	addi	r2,r8,-1
   159e0:	3580ec2e 	bgeu	r6,r22,15d94 <__divdf3+0x7f8>
   159e4:	1011883a 	mov	r8,r2
   159e8:	9826943a 	slli	r19,r19,16
   159ec:	af3fffcc 	andi	fp,r21,65535
   159f0:	30c7c83a 	sub	r3,r6,r3
   159f4:	9a26b03a 	or	r19,r19,r8
   159f8:	9810d43a 	srli	r8,r19,16
   159fc:	9abfffcc 	andi	r10,r19,65535
   15a00:	5009883a 	mov	r4,r10
   15a04:	e00b883a 	mov	r5,fp
   15a08:	d9c00515 	stw	r7,20(sp)
   15a0c:	d8c00315 	stw	r3,12(sp)
   15a10:	da800415 	stw	r10,16(sp)
   15a14:	da000015 	stw	r8,0(sp)
   15a18:	00170100 	call	17010 <__mulsi3>
   15a1c:	da000017 	ldw	r8,0(sp)
   15a20:	e00b883a 	mov	r5,fp
   15a24:	d8800215 	stw	r2,8(sp)
   15a28:	4009883a 	mov	r4,r8
   15a2c:	00170100 	call	17010 <__mulsi3>
   15a30:	da000017 	ldw	r8,0(sp)
   15a34:	a820d43a 	srli	r16,r21,16
   15a38:	d8800115 	stw	r2,4(sp)
   15a3c:	4009883a 	mov	r4,r8
   15a40:	800b883a 	mov	r5,r16
   15a44:	00170100 	call	17010 <__mulsi3>
   15a48:	da800417 	ldw	r10,16(sp)
   15a4c:	8009883a 	mov	r4,r16
   15a50:	d8800015 	stw	r2,0(sp)
   15a54:	500b883a 	mov	r5,r10
   15a58:	00170100 	call	17010 <__mulsi3>
   15a5c:	d9800217 	ldw	r6,8(sp)
   15a60:	da000117 	ldw	r8,4(sp)
   15a64:	da400017 	ldw	r9,0(sp)
   15a68:	3008d43a 	srli	r4,r6,16
   15a6c:	1205883a 	add	r2,r2,r8
   15a70:	d8c00317 	ldw	r3,12(sp)
   15a74:	2089883a 	add	r4,r4,r2
   15a78:	d9c00517 	ldw	r7,20(sp)
   15a7c:	2200022e 	bgeu	r4,r8,15a88 <__divdf3+0x4ec>
   15a80:	00800074 	movhi	r2,1
   15a84:	4893883a 	add	r9,r9,r2
   15a88:	200ad43a 	srli	r5,r4,16
   15a8c:	2008943a 	slli	r4,r4,16
   15a90:	31bfffcc 	andi	r6,r6,65535
   15a94:	2a4b883a 	add	r5,r5,r9
   15a98:	218d883a 	add	r6,r4,r6
   15a9c:	19409436 	bltu	r3,r5,15cf0 <__divdf3+0x754>
   15aa0:	19409226 	beq	r3,r5,15cec <__divdf3+0x750>
   15aa4:	898dc83a 	sub	r6,r17,r6
   15aa8:	89a3803a 	cmpltu	r17,r17,r6
   15aac:	1947c83a 	sub	r3,r3,r5
   15ab0:	1c47c83a 	sub	r3,r3,r17
   15ab4:	9440ffc4 	addi	r17,r18,1023
   15ab8:	b0c0d326 	beq	r22,r3,15e08 <__divdf3+0x86c>
   15abc:	1809883a 	mov	r4,r3
   15ac0:	b80b883a 	mov	r5,r23
   15ac4:	d9800315 	stw	r6,12(sp)
   15ac8:	d9c00215 	stw	r7,8(sp)
   15acc:	d8c00015 	stw	r3,0(sp)
   15ad0:	0016f500 	call	16f50 <__udivsi3>
   15ad4:	100b883a 	mov	r5,r2
   15ad8:	a009883a 	mov	r4,r20
   15adc:	d8800115 	stw	r2,4(sp)
   15ae0:	00170100 	call	17010 <__mulsi3>
   15ae4:	d8c00017 	ldw	r3,0(sp)
   15ae8:	b80b883a 	mov	r5,r23
   15aec:	d8800015 	stw	r2,0(sp)
   15af0:	1809883a 	mov	r4,r3
   15af4:	0016fb40 	call	16fb4 <__umodsi3>
   15af8:	d9800317 	ldw	r6,12(sp)
   15afc:	1006943a 	slli	r3,r2,16
   15b00:	da400017 	ldw	r9,0(sp)
   15b04:	3008d43a 	srli	r4,r6,16
   15b08:	da000117 	ldw	r8,4(sp)
   15b0c:	d9c00217 	ldw	r7,8(sp)
   15b10:	20c6b03a 	or	r3,r4,r3
   15b14:	1a40062e 	bgeu	r3,r9,15b30 <__divdf3+0x594>
   15b18:	1d87883a 	add	r3,r3,r22
   15b1c:	40bfffc4 	addi	r2,r8,-1
   15b20:	1d80c836 	bltu	r3,r22,15e44 <__divdf3+0x8a8>
   15b24:	1a40c72e 	bgeu	r3,r9,15e44 <__divdf3+0x8a8>
   15b28:	423fff84 	addi	r8,r8,-2
   15b2c:	1d87883a 	add	r3,r3,r22
   15b30:	1a47c83a 	sub	r3,r3,r9
   15b34:	1809883a 	mov	r4,r3
   15b38:	b80b883a 	mov	r5,r23
   15b3c:	d9800415 	stw	r6,16(sp)
   15b40:	d9c00315 	stw	r7,12(sp)
   15b44:	da000215 	stw	r8,8(sp)
   15b48:	d8c00115 	stw	r3,4(sp)
   15b4c:	0016f500 	call	16f50 <__udivsi3>
   15b50:	100b883a 	mov	r5,r2
   15b54:	a009883a 	mov	r4,r20
   15b58:	d8800015 	stw	r2,0(sp)
   15b5c:	00170100 	call	17010 <__mulsi3>
   15b60:	d8c00117 	ldw	r3,4(sp)
   15b64:	b80b883a 	mov	r5,r23
   15b68:	102f883a 	mov	r23,r2
   15b6c:	1809883a 	mov	r4,r3
   15b70:	0016fb40 	call	16fb4 <__umodsi3>
   15b74:	d9800417 	ldw	r6,16(sp)
   15b78:	1004943a 	slli	r2,r2,16
   15b7c:	da400017 	ldw	r9,0(sp)
   15b80:	31bfffcc 	andi	r6,r6,65535
   15b84:	308cb03a 	or	r6,r6,r2
   15b88:	da000217 	ldw	r8,8(sp)
   15b8c:	d9c00317 	ldw	r7,12(sp)
   15b90:	35c0062e 	bgeu	r6,r23,15bac <__divdf3+0x610>
   15b94:	358d883a 	add	r6,r6,r22
   15b98:	48bfffc4 	addi	r2,r9,-1
   15b9c:	3580a736 	bltu	r6,r22,15e3c <__divdf3+0x8a0>
   15ba0:	35c0a62e 	bgeu	r6,r23,15e3c <__divdf3+0x8a0>
   15ba4:	4a7fff84 	addi	r9,r9,-2
   15ba8:	358d883a 	add	r6,r6,r22
   15bac:	4028943a 	slli	r20,r8,16
   15bb0:	35d5c83a 	sub	r10,r6,r23
   15bb4:	e009883a 	mov	r4,fp
   15bb8:	a268b03a 	or	r20,r20,r9
   15bbc:	a23fffcc 	andi	r8,r20,65535
   15bc0:	a02ed43a 	srli	r23,r20,16
   15bc4:	400b883a 	mov	r5,r8
   15bc8:	d9c00315 	stw	r7,12(sp)
   15bcc:	da800215 	stw	r10,8(sp)
   15bd0:	da000115 	stw	r8,4(sp)
   15bd4:	00170100 	call	17010 <__mulsi3>
   15bd8:	e00b883a 	mov	r5,fp
   15bdc:	b809883a 	mov	r4,r23
   15be0:	1039883a 	mov	fp,r2
   15be4:	00170100 	call	17010 <__mulsi3>
   15be8:	8009883a 	mov	r4,r16
   15bec:	b80b883a 	mov	r5,r23
   15bf0:	d8800015 	stw	r2,0(sp)
   15bf4:	00170100 	call	17010 <__mulsi3>
   15bf8:	da000117 	ldw	r8,4(sp)
   15bfc:	8009883a 	mov	r4,r16
   15c00:	1021883a 	mov	r16,r2
   15c04:	400b883a 	mov	r5,r8
   15c08:	00170100 	call	17010 <__mulsi3>
   15c0c:	d9800017 	ldw	r6,0(sp)
   15c10:	e006d43a 	srli	r3,fp,16
   15c14:	da800217 	ldw	r10,8(sp)
   15c18:	1185883a 	add	r2,r2,r6
   15c1c:	1887883a 	add	r3,r3,r2
   15c20:	d9c00317 	ldw	r7,12(sp)
   15c24:	1980022e 	bgeu	r3,r6,15c30 <__divdf3+0x694>
   15c28:	00800074 	movhi	r2,1
   15c2c:	80a1883a 	add	r16,r16,r2
   15c30:	1808d43a 	srli	r4,r3,16
   15c34:	1806943a 	slli	r3,r3,16
   15c38:	e73fffcc 	andi	fp,fp,65535
   15c3c:	2409883a 	add	r4,r4,r16
   15c40:	1f07883a 	add	r3,r3,fp
   15c44:	51000436 	bltu	r10,r4,15c58 <__divdf3+0x6bc>
   15c48:	51000226 	beq	r10,r4,15c54 <__divdf3+0x6b8>
   15c4c:	a5000054 	ori	r20,r20,1
   15c50:	003f0306 	br	15860 <__divdf3+0x2c4>
   15c54:	183f0226 	beq	r3,zero,15860 <__divdf3+0x2c4>
   15c58:	b28d883a 	add	r6,r22,r10
   15c5c:	a0bfffc4 	addi	r2,r20,-1
   15c60:	35806536 	bltu	r6,r22,15df8 <__divdf3+0x85c>
   15c64:	31008036 	bltu	r6,r4,15e68 <__divdf3+0x8cc>
   15c68:	31009426 	beq	r6,r4,15ebc <__divdf3+0x920>
   15c6c:	1029883a 	mov	r20,r2
   15c70:	003ff606 	br	15c4c <__divdf3+0x6b0>
   15c74:	053fffc4 	movi	r20,-1
   15c78:	01400044 	movi	r5,1
   15c7c:	2c4bc83a 	sub	r5,r5,r17
   15c80:	28800e48 	cmpgei	r2,r5,57
   15c84:	103e941e 	bne	r2,zero,156d8 <__divdf3+0x13c>
   15c88:	28800808 	cmpgei	r2,r5,32
   15c8c:	1000491e 	bne	r2,zero,15db4 <__divdf3+0x818>
   15c90:	92010784 	addi	r8,r18,1054
   15c94:	9a04983a 	sll	r2,r19,r8
   15c98:	a146d83a 	srl	r3,r20,r5
   15c9c:	a210983a 	sll	r8,r20,r8
   15ca0:	994ad83a 	srl	r5,r19,r5
   15ca4:	10e8b03a 	or	r20,r2,r3
   15ca8:	4010c03a 	cmpne	r8,r8,zero
   15cac:	a228b03a 	or	r20,r20,r8
   15cb0:	a08001cc 	andi	r2,r20,7
   15cb4:	10000726 	beq	r2,zero,15cd4 <__divdf3+0x738>
   15cb8:	a08003cc 	andi	r2,r20,15
   15cbc:	10800120 	cmpeqi	r2,r2,4
   15cc0:	1000041e 	bne	r2,zero,15cd4 <__divdf3+0x738>
   15cc4:	a0800104 	addi	r2,r20,4
   15cc8:	1529803a 	cmpltu	r20,r2,r20
   15ccc:	2d0b883a 	add	r5,r5,r20
   15cd0:	1029883a 	mov	r20,r2
   15cd4:	2880202c 	andhi	r2,r5,128
   15cd8:	10006f26 	beq	r2,zero,15e98 <__divdf3+0x8fc>
   15cdc:	00c00044 	movi	r3,1
   15ce0:	000b883a 	mov	r5,zero
   15ce4:	0029883a 	mov	r20,zero
   15ce8:	003e7e06 	br	156e4 <__divdf3+0x148>
   15cec:	89bf6d2e 	bgeu	r17,r6,15aa4 <__divdf3+0x508>
   15cf0:	8d63883a 	add	r17,r17,r21
   15cf4:	8d45803a 	cmpltu	r2,r17,r21
   15cf8:	1585883a 	add	r2,r2,r22
   15cfc:	1887883a 	add	r3,r3,r2
   15d00:	98bfffc4 	addi	r2,r19,-1
   15d04:	b0c0202e 	bgeu	r22,r3,15d88 <__divdf3+0x7ec>
   15d08:	19405136 	bltu	r3,r5,15e50 <__divdf3+0x8b4>
   15d0c:	28c04f26 	beq	r5,r3,15e4c <__divdf3+0x8b0>
   15d10:	1027883a 	mov	r19,r2
   15d14:	003f6306 	br	15aa4 <__divdf3+0x508>
   15d18:	a27efc36 	bltu	r20,r9,1590c <__divdf3+0x370>
   15d1c:	983897fa 	slli	fp,r19,31
   15d20:	a004d07a 	srli	r2,r20,1
   15d24:	9820d07a 	srli	r16,r19,1
   15d28:	a02297fa 	slli	r17,r20,31
   15d2c:	e0b8b03a 	or	fp,fp,r2
   15d30:	003efa06 	br	1591c <__divdf3+0x380>
   15d34:	e009883a 	mov	r4,fp
   15d38:	0016e080 	call	16e08 <__clzsi2>
   15d3c:	11400544 	addi	r5,r2,21
   15d40:	29000748 	cmpgei	r4,r5,29
   15d44:	1007883a 	mov	r3,r2
   15d48:	10800804 	addi	r2,r2,32
   15d4c:	203e8526 	beq	r4,zero,15764 <__divdf3+0x1c8>
   15d50:	18fffe04 	addi	r3,r3,-8
   15d54:	e0ec983a 	sll	r22,fp,r3
   15d58:	0013883a 	mov	r9,zero
   15d5c:	003e8806 	br	15780 <__divdf3+0x1e4>
   15d60:	0016e080 	call	16e08 <__clzsi2>
   15d64:	11000544 	addi	r4,r2,21
   15d68:	20c00748 	cmpgei	r3,r4,29
   15d6c:	100b883a 	mov	r5,r2
   15d70:	10800804 	addi	r2,r2,32
   15d74:	183e8d26 	beq	r3,zero,157ac <__divdf3+0x210>
   15d78:	297ffe04 	addi	r5,r5,-8
   15d7c:	a166983a 	sll	r19,r20,r5
   15d80:	0029883a 	mov	r20,zero
   15d84:	003e9006 	br	157c8 <__divdf3+0x22c>
   15d88:	b0ffe11e 	bne	r22,r3,15d10 <__divdf3+0x774>
   15d8c:	8d7fe036 	bltu	r17,r21,15d10 <__divdf3+0x774>
   15d90:	003fdd06 	br	15d08 <__divdf3+0x76c>
   15d94:	30ff132e 	bgeu	r6,r3,159e4 <__divdf3+0x448>
   15d98:	423fff84 	addi	r8,r8,-2
   15d9c:	358d883a 	add	r6,r6,r22
   15da0:	003f1106 	br	159e8 <__divdf3+0x44c>
   15da4:	243ef72e 	bgeu	r4,r16,15984 <__divdf3+0x3e8>
   15da8:	9cffff84 	addi	r19,r19,-2
   15dac:	2589883a 	add	r4,r4,r22
   15db0:	003ef506 	br	15988 <__divdf3+0x3ec>
   15db4:	00fff844 	movi	r3,-31
   15db8:	1c47c83a 	sub	r3,r3,r17
   15dbc:	29400820 	cmpeqi	r5,r5,32
   15dc0:	98c6d83a 	srl	r3,r19,r3
   15dc4:	2800031e 	bne	r5,zero,15dd4 <__divdf3+0x838>
   15dc8:	91410f84 	addi	r5,r18,1086
   15dcc:	994a983a 	sll	r5,r19,r5
   15dd0:	a168b03a 	or	r20,r20,r5
   15dd4:	a028c03a 	cmpne	r20,r20,zero
   15dd8:	a0e8b03a 	or	r20,r20,r3
   15ddc:	a4c001cc 	andi	r19,r20,7
   15de0:	9800291e 	bne	r19,zero,15e88 <__divdf3+0x8ec>
   15de4:	000b883a 	mov	r5,zero
   15de8:	a028d0fa 	srli	r20,r20,3
   15dec:	0007883a 	mov	r3,zero
   15df0:	a4e8b03a 	or	r20,r20,r19
   15df4:	003e3b06 	br	156e4 <__divdf3+0x148>
   15df8:	1029883a 	mov	r20,r2
   15dfc:	313f931e 	bne	r6,r4,15c4c <__divdf3+0x6b0>
   15e00:	1d7f921e 	bne	r3,r21,15c4c <__divdf3+0x6b0>
   15e04:	003e9606 	br	15860 <__divdf3+0x2c4>
   15e08:	047f9a0e 	bge	zero,r17,15c74 <__divdf3+0x6d8>
   15e0c:	0009883a 	mov	r4,zero
   15e10:	05000044 	movi	r20,1
   15e14:	9d27883a 	add	r19,r19,r20
   15e18:	003e9506 	br	15870 <__divdf3+0x2d4>
   15e1c:	a08003cc 	andi	r2,r20,15
   15e20:	10800118 	cmpnei	r2,r2,4
   15e24:	103e9126 	beq	r2,zero,1586c <__divdf3+0x2d0>
   15e28:	a1000104 	addi	r4,r20,4
   15e2c:	00bffec4 	movi	r2,-5
   15e30:	2008d0fa 	srli	r4,r4,3
   15e34:	1529803a 	cmpltu	r20,r2,r20
   15e38:	003ff606 	br	15e14 <__divdf3+0x878>
   15e3c:	1013883a 	mov	r9,r2
   15e40:	003f5a06 	br	15bac <__divdf3+0x610>
   15e44:	1011883a 	mov	r8,r2
   15e48:	003f3906 	br	15b30 <__divdf3+0x594>
   15e4c:	89bfb02e 	bgeu	r17,r6,15d10 <__divdf3+0x774>
   15e50:	8d63883a 	add	r17,r17,r21
   15e54:	8d45803a 	cmpltu	r2,r17,r21
   15e58:	1585883a 	add	r2,r2,r22
   15e5c:	9cffff84 	addi	r19,r19,-2
   15e60:	1887883a 	add	r3,r3,r2
   15e64:	003f0f06 	br	15aa4 <__divdf3+0x508>
   15e68:	ad45883a 	add	r2,r21,r21
   15e6c:	156b803a 	cmpltu	r21,r2,r21
   15e70:	adad883a 	add	r22,r21,r22
   15e74:	358d883a 	add	r6,r6,r22
   15e78:	a53fff84 	addi	r20,r20,-2
   15e7c:	102b883a 	mov	r21,r2
   15e80:	313fdf26 	beq	r6,r4,15e00 <__divdf3+0x864>
   15e84:	003f7106 	br	15c4c <__divdf3+0x6b0>
   15e88:	a08003cc 	andi	r2,r20,15
   15e8c:	10800118 	cmpnei	r2,r2,4
   15e90:	000b883a 	mov	r5,zero
   15e94:	103f8b1e 	bne	r2,zero,15cc4 <__divdf3+0x728>
   15e98:	2804927a 	slli	r2,r5,9
   15e9c:	2826977a 	slli	r19,r5,29
   15ea0:	100ad33a 	srli	r5,r2,12
   15ea4:	003fd006 	br	15de8 <__divdf3+0x84c>
   15ea8:	00800434 	movhi	r2,16
   15eac:	99400234 	orhi	r5,r19,8
   15eb0:	10bfffc4 	addi	r2,r2,-1
   15eb4:	288a703a 	and	r5,r5,r2
   15eb8:	003e7f06 	br	158b8 <__divdf3+0x31c>
   15ebc:	a8ffea36 	bltu	r21,r3,15e68 <__divdf3+0x8cc>
   15ec0:	1029883a 	mov	r20,r2
   15ec4:	1d7f611e 	bne	r3,r21,15c4c <__divdf3+0x6b0>
   15ec8:	003e6506 	br	15860 <__divdf3+0x2c4>

00015ecc <__muldf3>:
   15ecc:	2810d53a 	srli	r8,r5,20
   15ed0:	defff004 	addi	sp,sp,-64
   15ed4:	00800434 	movhi	r2,16
   15ed8:	df000e15 	stw	fp,56(sp)
   15edc:	dd000a15 	stw	r20,40(sp)
   15ee0:	dcc00915 	stw	r19,36(sp)
   15ee4:	dc400715 	stw	r17,28(sp)
   15ee8:	10bfffc4 	addi	r2,r2,-1
   15eec:	dfc00f15 	stw	ra,60(sp)
   15ef0:	ddc00d15 	stw	r23,52(sp)
   15ef4:	dd800c15 	stw	r22,48(sp)
   15ef8:	dd400b15 	stw	r21,44(sp)
   15efc:	dc800815 	stw	r18,32(sp)
   15f00:	dc000615 	stw	r16,24(sp)
   15f04:	4201ffcc 	andi	r8,r8,2047
   15f08:	2828d7fa 	srli	r20,r5,31
   15f0c:	2023883a 	mov	r17,r4
   15f10:	3039883a 	mov	fp,r6
   15f14:	28a6703a 	and	r19,r5,r2
   15f18:	40013426 	beq	r8,zero,163ec <__muldf3+0x520>
   15f1c:	4081ffe0 	cmpeqi	r2,r8,2047
   15f20:	1001461e 	bne	r2,zero,1643c <__muldf3+0x570>
   15f24:	980a90fa 	slli	r5,r19,3
   15f28:	2026d77a 	srli	r19,r4,29
   15f2c:	202490fa 	slli	r18,r4,3
   15f30:	423f0044 	addi	r8,r8,-1023
   15f34:	9966b03a 	or	r19,r19,r5
   15f38:	9cc02034 	orhi	r19,r19,128
   15f3c:	002b883a 	mov	r21,zero
   15f40:	002d883a 	mov	r22,zero
   15f44:	3804d53a 	srli	r2,r7,20
   15f48:	00c00434 	movhi	r3,16
   15f4c:	18ffffc4 	addi	r3,r3,-1
   15f50:	1081ffcc 	andi	r2,r2,2047
   15f54:	382ed7fa 	srli	r23,r7,31
   15f58:	38e0703a 	and	r16,r7,r3
   15f5c:	10011026 	beq	r2,zero,163a0 <__muldf3+0x4d4>
   15f60:	10c1ffe0 	cmpeqi	r3,r2,2047
   15f64:	18013c1e 	bne	r3,zero,16458 <__muldf3+0x58c>
   15f68:	e008d77a 	srli	r4,fp,29
   15f6c:	802090fa 	slli	r16,r16,3
   15f70:	e02290fa 	slli	r17,fp,3
   15f74:	10bf0044 	addi	r2,r2,-1023
   15f78:	2420b03a 	or	r16,r4,r16
   15f7c:	84002034 	orhi	r16,r16,128
   15f80:	4091883a 	add	r8,r8,r2
   15f84:	0009883a 	mov	r4,zero
   15f88:	a8800428 	cmpgeui	r2,r21,16
   15f8c:	a5ccf03a 	xor	r6,r20,r23
   15f90:	41c00044 	addi	r7,r8,1
   15f94:	1000371e 	bne	r2,zero,16074 <__muldf3+0x1a8>
   15f98:	a80490ba 	slli	r2,r21,2
   15f9c:	00c00074 	movhi	r3,1
   15fa0:	10c7883a 	add	r3,r2,r3
   15fa4:	1897eb17 	ldw	r2,24492(r3)
   15fa8:	1000683a 	jmp	r2
   15fac:	00016074 	movhi	zero,1409
   15fb0:	00015ff0 	cmpltui	zero,zero,1407
   15fb4:	00015ff0 	cmpltui	zero,zero,1407
   15fb8:	00015fec 	andhi	zero,zero,1407
   15fbc:	00015ffc 	xorhi	zero,zero,1407
   15fc0:	00015ffc 	xorhi	zero,zero,1407
   15fc4:	000164cc 	andi	zero,zero,1427
   15fc8:	00015fec 	andhi	zero,zero,1407
   15fcc:	00015ffc 	xorhi	zero,zero,1407
   15fd0:	000164cc 	andi	zero,zero,1427
   15fd4:	00015ffc 	xorhi	zero,zero,1407
   15fd8:	00015fec 	andhi	zero,zero,1407
   15fdc:	00016474 	movhi	zero,1425
   15fe0:	00016474 	movhi	zero,1425
   15fe4:	00016474 	movhi	zero,1425
   15fe8:	00016558 	cmpnei	zero,zero,1429
   15fec:	b80d883a 	mov	r6,r23
   15ff0:	8027883a 	mov	r19,r16
   15ff4:	8825883a 	mov	r18,r17
   15ff8:	202d883a 	mov	r22,r4
   15ffc:	b08000a0 	cmpeqi	r2,r22,2
   16000:	1000181e 	bne	r2,zero,16064 <__muldf3+0x198>
   16004:	b08000e0 	cmpeqi	r2,r22,3
   16008:	1001961e 	bne	r2,zero,16664 <__muldf3+0x798>
   1600c:	b0800060 	cmpeqi	r2,r22,1
   16010:	1000c926 	beq	r2,zero,16338 <__muldf3+0x46c>
   16014:	0007883a 	mov	r3,zero
   16018:	0027883a 	mov	r19,zero
   1601c:	0025883a 	mov	r18,zero
   16020:	1806953a 	slli	r3,r3,20
   16024:	300c97fa 	slli	r6,r6,31
   16028:	9005883a 	mov	r2,r18
   1602c:	1cc6b03a 	or	r3,r3,r19
   16030:	1986b03a 	or	r3,r3,r6
   16034:	dfc00f17 	ldw	ra,60(sp)
   16038:	df000e17 	ldw	fp,56(sp)
   1603c:	ddc00d17 	ldw	r23,52(sp)
   16040:	dd800c17 	ldw	r22,48(sp)
   16044:	dd400b17 	ldw	r21,44(sp)
   16048:	dd000a17 	ldw	r20,40(sp)
   1604c:	dcc00917 	ldw	r19,36(sp)
   16050:	dc800817 	ldw	r18,32(sp)
   16054:	dc400717 	ldw	r17,28(sp)
   16058:	dc000617 	ldw	r16,24(sp)
   1605c:	dec01004 	addi	sp,sp,64
   16060:	f800283a 	ret
   16064:	00c1ffc4 	movi	r3,2047
   16068:	0027883a 	mov	r19,zero
   1606c:	0025883a 	mov	r18,zero
   16070:	003feb06 	br	16020 <__muldf3+0x154>
   16074:	9028d43a 	srli	r20,r18,16
   16078:	8f3fffcc 	andi	fp,r17,65535
   1607c:	957fffcc 	andi	r21,r18,65535
   16080:	a80b883a 	mov	r5,r21
   16084:	e009883a 	mov	r4,fp
   16088:	d9800315 	stw	r6,12(sp)
   1608c:	da000215 	stw	r8,8(sp)
   16090:	d9c00115 	stw	r7,4(sp)
   16094:	8822d43a 	srli	r17,r17,16
   16098:	00170100 	call	17010 <__mulsi3>
   1609c:	e00b883a 	mov	r5,fp
   160a0:	a009883a 	mov	r4,r20
   160a4:	102d883a 	mov	r22,r2
   160a8:	00170100 	call	17010 <__mulsi3>
   160ac:	880b883a 	mov	r5,r17
   160b0:	a009883a 	mov	r4,r20
   160b4:	102f883a 	mov	r23,r2
   160b8:	00170100 	call	17010 <__mulsi3>
   160bc:	a80b883a 	mov	r5,r21
   160c0:	8809883a 	mov	r4,r17
   160c4:	d8800015 	stw	r2,0(sp)
   160c8:	00170100 	call	17010 <__mulsi3>
   160cc:	b006d43a 	srli	r3,r22,16
   160d0:	15e5883a 	add	r18,r2,r23
   160d4:	d9c00117 	ldw	r7,4(sp)
   160d8:	1c87883a 	add	r3,r3,r18
   160dc:	da000217 	ldw	r8,8(sp)
   160e0:	d9800317 	ldw	r6,12(sp)
   160e4:	1dc0042e 	bgeu	r3,r23,160f8 <__muldf3+0x22c>
   160e8:	d9000017 	ldw	r4,0(sp)
   160ec:	00800074 	movhi	r2,1
   160f0:	2085883a 	add	r2,r4,r2
   160f4:	d8800015 	stw	r2,0(sp)
   160f8:	1804943a 	slli	r2,r3,16
   160fc:	85ffffcc 	andi	r23,r16,65535
   16100:	b5bfffcc 	andi	r22,r22,65535
   16104:	1585883a 	add	r2,r2,r22
   16108:	a80b883a 	mov	r5,r21
   1610c:	b809883a 	mov	r4,r23
   16110:	1824d43a 	srli	r18,r3,16
   16114:	d9800515 	stw	r6,20(sp)
   16118:	da000415 	stw	r8,16(sp)
   1611c:	d9c00315 	stw	r7,12(sp)
   16120:	8020d43a 	srli	r16,r16,16
   16124:	d8800115 	stw	r2,4(sp)
   16128:	00170100 	call	17010 <__mulsi3>
   1612c:	a009883a 	mov	r4,r20
   16130:	b80b883a 	mov	r5,r23
   16134:	d8800215 	stw	r2,8(sp)
   16138:	00170100 	call	17010 <__mulsi3>
   1613c:	a009883a 	mov	r4,r20
   16140:	800b883a 	mov	r5,r16
   16144:	102d883a 	mov	r22,r2
   16148:	00170100 	call	17010 <__mulsi3>
   1614c:	a80b883a 	mov	r5,r21
   16150:	8009883a 	mov	r4,r16
   16154:	1029883a 	mov	r20,r2
   16158:	00170100 	call	17010 <__mulsi3>
   1615c:	da800217 	ldw	r10,8(sp)
   16160:	1585883a 	add	r2,r2,r22
   16164:	d9c00317 	ldw	r7,12(sp)
   16168:	5006d43a 	srli	r3,r10,16
   1616c:	da000417 	ldw	r8,16(sp)
   16170:	d9800517 	ldw	r6,20(sp)
   16174:	1887883a 	add	r3,r3,r2
   16178:	1d80022e 	bgeu	r3,r22,16184 <__muldf3+0x2b8>
   1617c:	00800074 	movhi	r2,1
   16180:	a0a9883a 	add	r20,r20,r2
   16184:	1804d43a 	srli	r2,r3,16
   16188:	1806943a 	slli	r3,r3,16
   1618c:	982cd43a 	srli	r22,r19,16
   16190:	9d7fffcc 	andi	r21,r19,65535
   16194:	e009883a 	mov	r4,fp
   16198:	54ffffcc 	andi	r19,r10,65535
   1619c:	a80b883a 	mov	r5,r21
   161a0:	1ce7883a 	add	r19,r3,r19
   161a4:	d9800515 	stw	r6,20(sp)
   161a8:	da000415 	stw	r8,16(sp)
   161ac:	d9c00315 	stw	r7,12(sp)
   161b0:	1529883a 	add	r20,r2,r20
   161b4:	00170100 	call	17010 <__mulsi3>
   161b8:	e00b883a 	mov	r5,fp
   161bc:	b009883a 	mov	r4,r22
   161c0:	d8800215 	stw	r2,8(sp)
   161c4:	00170100 	call	17010 <__mulsi3>
   161c8:	8809883a 	mov	r4,r17
   161cc:	b00b883a 	mov	r5,r22
   161d0:	1039883a 	mov	fp,r2
   161d4:	00170100 	call	17010 <__mulsi3>
   161d8:	8809883a 	mov	r4,r17
   161dc:	a80b883a 	mov	r5,r21
   161e0:	1023883a 	mov	r17,r2
   161e4:	00170100 	call	17010 <__mulsi3>
   161e8:	d8c00217 	ldw	r3,8(sp)
   161ec:	1705883a 	add	r2,r2,fp
   161f0:	d9c00317 	ldw	r7,12(sp)
   161f4:	1808d43a 	srli	r4,r3,16
   161f8:	da000417 	ldw	r8,16(sp)
   161fc:	d9800517 	ldw	r6,20(sp)
   16200:	2089883a 	add	r4,r4,r2
   16204:	94e5883a 	add	r18,r18,r19
   16208:	2700022e 	bgeu	r4,fp,16214 <__muldf3+0x348>
   1620c:	00800074 	movhi	r2,1
   16210:	88a3883a 	add	r17,r17,r2
   16214:	2004d43a 	srli	r2,r4,16
   16218:	2038943a 	slli	fp,r4,16
   1621c:	18ffffcc 	andi	r3,r3,65535
   16220:	b809883a 	mov	r4,r23
   16224:	a80b883a 	mov	r5,r21
   16228:	d9800415 	stw	r6,16(sp)
   1622c:	da000315 	stw	r8,12(sp)
   16230:	d9c00215 	stw	r7,8(sp)
   16234:	e0f9883a 	add	fp,fp,r3
   16238:	1463883a 	add	r17,r2,r17
   1623c:	00170100 	call	17010 <__mulsi3>
   16240:	b80b883a 	mov	r5,r23
   16244:	b009883a 	mov	r4,r22
   16248:	102f883a 	mov	r23,r2
   1624c:	00170100 	call	17010 <__mulsi3>
   16250:	b00b883a 	mov	r5,r22
   16254:	8009883a 	mov	r4,r16
   16258:	102d883a 	mov	r22,r2
   1625c:	00170100 	call	17010 <__mulsi3>
   16260:	a80b883a 	mov	r5,r21
   16264:	8009883a 	mov	r4,r16
   16268:	1021883a 	mov	r16,r2
   1626c:	00170100 	call	17010 <__mulsi3>
   16270:	b80ad43a 	srli	r5,r23,16
   16274:	1585883a 	add	r2,r2,r22
   16278:	d9c00217 	ldw	r7,8(sp)
   1627c:	288b883a 	add	r5,r5,r2
   16280:	da000317 	ldw	r8,12(sp)
   16284:	d9800417 	ldw	r6,16(sp)
   16288:	2d80022e 	bgeu	r5,r22,16294 <__muldf3+0x3c8>
   1628c:	00800074 	movhi	r2,1
   16290:	80a1883a 	add	r16,r16,r2
   16294:	2806943a 	slli	r3,r5,16
   16298:	d8800017 	ldw	r2,0(sp)
   1629c:	bdffffcc 	andi	r23,r23,65535
   162a0:	1dc7883a 	add	r3,r3,r23
   162a4:	90ab883a 	add	r21,r18,r2
   162a8:	acd5803a 	cmpltu	r10,r21,r19
   162ac:	1d07883a 	add	r3,r3,r20
   162b0:	af2b883a 	add	r21,r21,fp
   162b4:	1a97883a 	add	r11,r3,r10
   162b8:	af09803a 	cmpltu	r4,r21,fp
   162bc:	2826d43a 	srli	r19,r5,16
   162c0:	5c53883a 	add	r9,r11,r17
   162c4:	4905883a 	add	r2,r9,r4
   162c8:	1d07803a 	cmpltu	r3,r3,r20
   162cc:	5a95803a 	cmpltu	r10,r11,r10
   162d0:	1a86b03a 	or	r3,r3,r10
   162d4:	1109803a 	cmpltu	r4,r2,r4
   162d8:	4c53803a 	cmpltu	r9,r9,r17
   162dc:	1ce7883a 	add	r19,r3,r19
   162e0:	4908b03a 	or	r4,r9,r4
   162e4:	a824927a 	slli	r18,r21,9
   162e8:	d8c00117 	ldw	r3,4(sp)
   162ec:	9927883a 	add	r19,r19,r4
   162f0:	9c27883a 	add	r19,r19,r16
   162f4:	9826927a 	slli	r19,r19,9
   162f8:	a82ad5fa 	srli	r21,r21,23
   162fc:	100ad5fa 	srli	r5,r2,23
   16300:	90e4b03a 	or	r18,r18,r3
   16304:	1004927a 	slli	r2,r2,9
   16308:	9024c03a 	cmpne	r18,r18,zero
   1630c:	9564b03a 	or	r18,r18,r21
   16310:	98c0402c 	andhi	r3,r19,256
   16314:	90a4b03a 	or	r18,r18,r2
   16318:	9966b03a 	or	r19,r19,r5
   1631c:	1800b626 	beq	r3,zero,165f8 <__muldf3+0x72c>
   16320:	9006d07a 	srli	r3,r18,1
   16324:	980497fa 	slli	r2,r19,31
   16328:	9480004c 	andi	r18,r18,1
   1632c:	9826d07a 	srli	r19,r19,1
   16330:	1c86b03a 	or	r3,r3,r18
   16334:	18a4b03a 	or	r18,r3,r2
   16338:	3900ffc4 	addi	r4,r7,1023
   1633c:	0100690e 	bge	zero,r4,164e4 <__muldf3+0x618>
   16340:	908001cc 	andi	r2,r18,7
   16344:	10000726 	beq	r2,zero,16364 <__muldf3+0x498>
   16348:	908003cc 	andi	r2,r18,15
   1634c:	10800120 	cmpeqi	r2,r2,4
   16350:	1000041e 	bne	r2,zero,16364 <__muldf3+0x498>
   16354:	90800104 	addi	r2,r18,4
   16358:	14a5803a 	cmpltu	r18,r2,r18
   1635c:	9ca7883a 	add	r19,r19,r18
   16360:	1025883a 	mov	r18,r2
   16364:	9880402c 	andhi	r2,r19,256
   16368:	10000426 	beq	r2,zero,1637c <__muldf3+0x4b0>
   1636c:	00bfc034 	movhi	r2,65280
   16370:	10bfffc4 	addi	r2,r2,-1
   16374:	98a6703a 	and	r19,r19,r2
   16378:	39010004 	addi	r4,r7,1024
   1637c:	2081ffc8 	cmpgei	r2,r4,2047
   16380:	103f381e 	bne	r2,zero,16064 <__muldf3+0x198>
   16384:	9804977a 	slli	r2,r19,29
   16388:	9024d0fa 	srli	r18,r18,3
   1638c:	9826927a 	slli	r19,r19,9
   16390:	20c1ffcc 	andi	r3,r4,2047
   16394:	14a4b03a 	or	r18,r2,r18
   16398:	9826d33a 	srli	r19,r19,12
   1639c:	003f2006 	br	16020 <__muldf3+0x154>
   163a0:	8722b03a 	or	r17,r16,fp
   163a4:	88004526 	beq	r17,zero,164bc <__muldf3+0x5f0>
   163a8:	da000015 	stw	r8,0(sp)
   163ac:	80008626 	beq	r16,zero,165c8 <__muldf3+0x6fc>
   163b0:	8009883a 	mov	r4,r16
   163b4:	0016e080 	call	16e08 <__clzsi2>
   163b8:	da000017 	ldw	r8,0(sp)
   163bc:	117ffd44 	addi	r5,r2,-11
   163c0:	01000744 	movi	r4,29
   163c4:	147ffe04 	addi	r17,r2,-8
   163c8:	2149c83a 	sub	r4,r4,r5
   163cc:	8460983a 	sll	r16,r16,r17
   163d0:	e108d83a 	srl	r4,fp,r4
   163d4:	e462983a 	sll	r17,fp,r17
   163d8:	2420b03a 	or	r16,r4,r16
   163dc:	4091c83a 	sub	r8,r8,r2
   163e0:	423f0344 	addi	r8,r8,-1011
   163e4:	0009883a 	mov	r4,zero
   163e8:	003ee706 	br	15f88 <__muldf3+0xbc>
   163ec:	9924b03a 	or	r18,r19,r4
   163f0:	90002d26 	beq	r18,zero,164a8 <__muldf3+0x5dc>
   163f4:	d9c00015 	stw	r7,0(sp)
   163f8:	98006826 	beq	r19,zero,1659c <__muldf3+0x6d0>
   163fc:	9809883a 	mov	r4,r19
   16400:	0016e080 	call	16e08 <__clzsi2>
   16404:	d9c00017 	ldw	r7,0(sp)
   16408:	113ffd44 	addi	r4,r2,-11
   1640c:	00c00744 	movi	r3,29
   16410:	14bffe04 	addi	r18,r2,-8
   16414:	1907c83a 	sub	r3,r3,r4
   16418:	9ca6983a 	sll	r19,r19,r18
   1641c:	88c6d83a 	srl	r3,r17,r3
   16420:	8ca4983a 	sll	r18,r17,r18
   16424:	1ce6b03a 	or	r19,r3,r19
   16428:	023f0344 	movi	r8,-1011
   1642c:	4091c83a 	sub	r8,r8,r2
   16430:	002b883a 	mov	r21,zero
   16434:	002d883a 	mov	r22,zero
   16438:	003ec206 	br	15f44 <__muldf3+0x78>
   1643c:	9924b03a 	or	r18,r19,r4
   16440:	9000141e 	bne	r18,zero,16494 <__muldf3+0x5c8>
   16444:	0027883a 	mov	r19,zero
   16448:	05400204 	movi	r21,8
   1644c:	0201ffc4 	movi	r8,2047
   16450:	05800084 	movi	r22,2
   16454:	003ebb06 	br	15f44 <__muldf3+0x78>
   16458:	8722b03a 	or	r17,r16,fp
   1645c:	4201ffc4 	addi	r8,r8,2047
   16460:	8800081e 	bne	r17,zero,16484 <__muldf3+0x5b8>
   16464:	ad400094 	ori	r21,r21,2
   16468:	0021883a 	mov	r16,zero
   1646c:	01000084 	movi	r4,2
   16470:	003ec506 	br	15f88 <__muldf3+0xbc>
   16474:	b08000a0 	cmpeqi	r2,r22,2
   16478:	a00d883a 	mov	r6,r20
   1647c:	103ee126 	beq	r2,zero,16004 <__muldf3+0x138>
   16480:	003ef806 	br	16064 <__muldf3+0x198>
   16484:	ad4000d4 	ori	r21,r21,3
   16488:	e023883a 	mov	r17,fp
   1648c:	010000c4 	movi	r4,3
   16490:	003ebd06 	br	15f88 <__muldf3+0xbc>
   16494:	2025883a 	mov	r18,r4
   16498:	05400304 	movi	r21,12
   1649c:	0201ffc4 	movi	r8,2047
   164a0:	058000c4 	movi	r22,3
   164a4:	003ea706 	br	15f44 <__muldf3+0x78>
   164a8:	0027883a 	mov	r19,zero
   164ac:	05400104 	movi	r21,4
   164b0:	0011883a 	mov	r8,zero
   164b4:	05800044 	movi	r22,1
   164b8:	003ea206 	br	15f44 <__muldf3+0x78>
   164bc:	ad400054 	ori	r21,r21,1
   164c0:	0021883a 	mov	r16,zero
   164c4:	01000044 	movi	r4,1
   164c8:	003eaf06 	br	15f88 <__muldf3+0xbc>
   164cc:	04c00434 	movhi	r19,16
   164d0:	000d883a 	mov	r6,zero
   164d4:	9cffffc4 	addi	r19,r19,-1
   164d8:	04bfffc4 	movi	r18,-1
   164dc:	00c1ffc4 	movi	r3,2047
   164e0:	003ecf06 	br	16020 <__muldf3+0x154>
   164e4:	00800044 	movi	r2,1
   164e8:	1105c83a 	sub	r2,r2,r4
   164ec:	10c00e48 	cmpgei	r3,r2,57
   164f0:	183ec81e 	bne	r3,zero,16014 <__muldf3+0x148>
   164f4:	10c00808 	cmpgei	r3,r2,32
   164f8:	1800411e 	bne	r3,zero,16600 <__muldf3+0x734>
   164fc:	39c10784 	addi	r7,r7,1054
   16500:	99c6983a 	sll	r3,r19,r7
   16504:	9088d83a 	srl	r4,r18,r2
   16508:	91ce983a 	sll	r7,r18,r7
   1650c:	98a6d83a 	srl	r19,r19,r2
   16510:	1904b03a 	or	r2,r3,r4
   16514:	3824c03a 	cmpne	r18,r7,zero
   16518:	1484b03a 	or	r2,r2,r18
   1651c:	10c001cc 	andi	r3,r2,7
   16520:	18000726 	beq	r3,zero,16540 <__muldf3+0x674>
   16524:	10c003cc 	andi	r3,r2,15
   16528:	18c00120 	cmpeqi	r3,r3,4
   1652c:	1800041e 	bne	r3,zero,16540 <__muldf3+0x674>
   16530:	10c00104 	addi	r3,r2,4
   16534:	1885803a 	cmpltu	r2,r3,r2
   16538:	98a7883a 	add	r19,r19,r2
   1653c:	1805883a 	mov	r2,r3
   16540:	98c0202c 	andhi	r3,r19,128
   16544:	18004326 	beq	r3,zero,16654 <__muldf3+0x788>
   16548:	00c00044 	movi	r3,1
   1654c:	0027883a 	mov	r19,zero
   16550:	0025883a 	mov	r18,zero
   16554:	003eb206 	br	16020 <__muldf3+0x154>
   16558:	9880022c 	andhi	r2,r19,8
   1655c:	10000926 	beq	r2,zero,16584 <__muldf3+0x6b8>
   16560:	8080022c 	andhi	r2,r16,8
   16564:	1000071e 	bne	r2,zero,16584 <__muldf3+0x6b8>
   16568:	00800434 	movhi	r2,16
   1656c:	84c00234 	orhi	r19,r16,8
   16570:	10bfffc4 	addi	r2,r2,-1
   16574:	98a6703a 	and	r19,r19,r2
   16578:	b80d883a 	mov	r6,r23
   1657c:	8825883a 	mov	r18,r17
   16580:	003fd606 	br	164dc <__muldf3+0x610>
   16584:	00800434 	movhi	r2,16
   16588:	9cc00234 	orhi	r19,r19,8
   1658c:	10bfffc4 	addi	r2,r2,-1
   16590:	98a6703a 	and	r19,r19,r2
   16594:	a00d883a 	mov	r6,r20
   16598:	003fd006 	br	164dc <__muldf3+0x610>
   1659c:	0016e080 	call	16e08 <__clzsi2>
   165a0:	11000544 	addi	r4,r2,21
   165a4:	21400748 	cmpgei	r5,r4,29
   165a8:	1007883a 	mov	r3,r2
   165ac:	d9c00017 	ldw	r7,0(sp)
   165b0:	10800804 	addi	r2,r2,32
   165b4:	283f9526 	beq	r5,zero,1640c <__muldf3+0x540>
   165b8:	18fffe04 	addi	r3,r3,-8
   165bc:	88e6983a 	sll	r19,r17,r3
   165c0:	0025883a 	mov	r18,zero
   165c4:	003f9806 	br	16428 <__muldf3+0x55c>
   165c8:	e009883a 	mov	r4,fp
   165cc:	0016e080 	call	16e08 <__clzsi2>
   165d0:	11400544 	addi	r5,r2,21
   165d4:	29000748 	cmpgei	r4,r5,29
   165d8:	1007883a 	mov	r3,r2
   165dc:	da000017 	ldw	r8,0(sp)
   165e0:	10800804 	addi	r2,r2,32
   165e4:	203f7626 	beq	r4,zero,163c0 <__muldf3+0x4f4>
   165e8:	1c3ffe04 	addi	r16,r3,-8
   165ec:	e420983a 	sll	r16,fp,r16
   165f0:	0023883a 	mov	r17,zero
   165f4:	003f7906 	br	163dc <__muldf3+0x510>
   165f8:	400f883a 	mov	r7,r8
   165fc:	003f4e06 	br	16338 <__muldf3+0x46c>
   16600:	00fff844 	movi	r3,-31
   16604:	1907c83a 	sub	r3,r3,r4
   16608:	10800820 	cmpeqi	r2,r2,32
   1660c:	98c6d83a 	srl	r3,r19,r3
   16610:	1000031e 	bne	r2,zero,16620 <__muldf3+0x754>
   16614:	39c10f84 	addi	r7,r7,1086
   16618:	99e6983a 	sll	r19,r19,r7
   1661c:	94e4b03a 	or	r18,r18,r19
   16620:	9024c03a 	cmpne	r18,r18,zero
   16624:	90c4b03a 	or	r2,r18,r3
   16628:	148001cc 	andi	r18,r2,7
   1662c:	9000051e 	bne	r18,zero,16644 <__muldf3+0x778>
   16630:	0027883a 	mov	r19,zero
   16634:	1004d0fa 	srli	r2,r2,3
   16638:	0007883a 	mov	r3,zero
   1663c:	14a4b03a 	or	r18,r2,r18
   16640:	003e7706 	br	16020 <__muldf3+0x154>
   16644:	10c003cc 	andi	r3,r2,15
   16648:	18c00118 	cmpnei	r3,r3,4
   1664c:	0027883a 	mov	r19,zero
   16650:	183fb71e 	bne	r3,zero,16530 <__muldf3+0x664>
   16654:	9806927a 	slli	r3,r19,9
   16658:	9824977a 	slli	r18,r19,29
   1665c:	1826d33a 	srli	r19,r3,12
   16660:	003ff406 	br	16634 <__muldf3+0x768>
   16664:	00800434 	movhi	r2,16
   16668:	9cc00234 	orhi	r19,r19,8
   1666c:	10bfffc4 	addi	r2,r2,-1
   16670:	98a6703a 	and	r19,r19,r2
   16674:	003f9906 	br	164dc <__muldf3+0x610>

00016678 <__extendsfdf2>:
   16678:	200ad5fa 	srli	r5,r4,23
   1667c:	defffd04 	addi	sp,sp,-12
   16680:	dc000015 	stw	r16,0(sp)
   16684:	29403fcc 	andi	r5,r5,255
   16688:	04002034 	movhi	r16,128
   1668c:	28800044 	addi	r2,r5,1
   16690:	dc400115 	stw	r17,4(sp)
   16694:	843fffc4 	addi	r16,r16,-1
   16698:	dfc00215 	stw	ra,8(sp)
   1669c:	10803f8c 	andi	r2,r2,254
   166a0:	2022d7fa 	srli	r17,r4,31
   166a4:	8120703a 	and	r16,r16,r4
   166a8:	10000d26 	beq	r2,zero,166e0 <__extendsfdf2+0x68>
   166ac:	8008d0fa 	srli	r4,r16,3
   166b0:	8020977a 	slli	r16,r16,29
   166b4:	28c0e004 	addi	r3,r5,896
   166b8:	180a953a 	slli	r5,r3,20
   166bc:	880697fa 	slli	r3,r17,31
   166c0:	8005883a 	mov	r2,r16
   166c4:	290ab03a 	or	r5,r5,r4
   166c8:	28c6b03a 	or	r3,r5,r3
   166cc:	dfc00217 	ldw	ra,8(sp)
   166d0:	dc400117 	ldw	r17,4(sp)
   166d4:	dc000017 	ldw	r16,0(sp)
   166d8:	dec00304 	addi	sp,sp,12
   166dc:	f800283a 	ret
   166e0:	2800111e 	bne	r5,zero,16728 <__extendsfdf2+0xb0>
   166e4:	80001926 	beq	r16,zero,1674c <__extendsfdf2+0xd4>
   166e8:	8009883a 	mov	r4,r16
   166ec:	0016e080 	call	16e08 <__clzsi2>
   166f0:	10c002c8 	cmpgei	r3,r2,11
   166f4:	18001b1e 	bne	r3,zero,16764 <__extendsfdf2+0xec>
   166f8:	010002c4 	movi	r4,11
   166fc:	2089c83a 	sub	r4,r4,r2
   16700:	10c00544 	addi	r3,r2,21
   16704:	810ad83a 	srl	r5,r16,r4
   16708:	80e0983a 	sll	r16,r16,r3
   1670c:	01000434 	movhi	r4,16
   16710:	00c0e244 	movi	r3,905
   16714:	213fffc4 	addi	r4,r4,-1
   16718:	1887c83a 	sub	r3,r3,r2
   1671c:	2908703a 	and	r4,r5,r4
   16720:	18c1ffcc 	andi	r3,r3,2047
   16724:	003fe406 	br	166b8 <__extendsfdf2+0x40>
   16728:	80000b26 	beq	r16,zero,16758 <__extendsfdf2+0xe0>
   1672c:	800ad0fa 	srli	r5,r16,3
   16730:	00800434 	movhi	r2,16
   16734:	10bfffc4 	addi	r2,r2,-1
   16738:	29000234 	orhi	r4,r5,8
   1673c:	8020977a 	slli	r16,r16,29
   16740:	2088703a 	and	r4,r4,r2
   16744:	00c1ffc4 	movi	r3,2047
   16748:	003fdb06 	br	166b8 <__extendsfdf2+0x40>
   1674c:	0007883a 	mov	r3,zero
   16750:	0009883a 	mov	r4,zero
   16754:	003fd806 	br	166b8 <__extendsfdf2+0x40>
   16758:	00c1ffc4 	movi	r3,2047
   1675c:	0009883a 	mov	r4,zero
   16760:	003fd506 	br	166b8 <__extendsfdf2+0x40>
   16764:	113ffd44 	addi	r4,r2,-11
   16768:	810a983a 	sll	r5,r16,r4
   1676c:	0021883a 	mov	r16,zero
   16770:	003fe606 	br	1670c <__extendsfdf2+0x94>

00016774 <__truncdfsf2>:
   16774:	2804d53a 	srli	r2,r5,20
   16778:	00c00434 	movhi	r3,16
   1677c:	18ffffc4 	addi	r3,r3,-1
   16780:	28c6703a 	and	r3,r5,r3
   16784:	180c90fa 	slli	r6,r3,3
   16788:	1081ffcc 	andi	r2,r2,2047
   1678c:	2006d77a 	srli	r3,r4,29
   16790:	11c00044 	addi	r7,r2,1
   16794:	39c1ff8c 	andi	r7,r7,2046
   16798:	280ad7fa 	srli	r5,r5,31
   1679c:	201090fa 	slli	r8,r4,3
   167a0:	1986b03a 	or	r3,r3,r6
   167a4:	38000b26 	beq	r7,zero,167d4 <__truncdfsf2+0x60>
   167a8:	11bf2004 	addi	r6,r2,-896
   167ac:	31c03fc8 	cmpgei	r7,r6,255
   167b0:	38001226 	beq	r7,zero,167fc <__truncdfsf2+0x88>
   167b4:	00bfffc4 	movi	r2,-1
   167b8:	0007883a 	mov	r3,zero
   167bc:	10803fcc 	andi	r2,r2,255
   167c0:	100495fa 	slli	r2,r2,23
   167c4:	280a97fa 	slli	r5,r5,31
   167c8:	10c4b03a 	or	r2,r2,r3
   167cc:	1144b03a 	or	r2,r2,r5
   167d0:	f800283a 	ret
   167d4:	1a10b03a 	or	r8,r3,r8
   167d8:	1000041e 	bne	r2,zero,167ec <__truncdfsf2+0x78>
   167dc:	40001d1e 	bne	r8,zero,16854 <__truncdfsf2+0xe0>
   167e0:	0005883a 	mov	r2,zero
   167e4:	0007883a 	mov	r3,zero
   167e8:	003ff406 	br	167bc <__truncdfsf2+0x48>
   167ec:	403ff126 	beq	r8,zero,167b4 <__truncdfsf2+0x40>
   167f0:	18c01034 	orhi	r3,r3,64
   167f4:	00bfffc4 	movi	r2,-1
   167f8:	003ff006 	br	167bc <__truncdfsf2+0x48>
   167fc:	0180170e 	bge	zero,r6,1685c <__truncdfsf2+0xe8>
   16800:	200891ba 	slli	r4,r4,6
   16804:	180690fa 	slli	r3,r3,3
   16808:	4010d77a 	srli	r8,r8,29
   1680c:	2008c03a 	cmpne	r4,r4,zero
   16810:	20c6b03a 	or	r3,r4,r3
   16814:	1a06b03a 	or	r3,r3,r8
   16818:	188001cc 	andi	r2,r3,7
   1681c:	10002f26 	beq	r2,zero,168dc <__truncdfsf2+0x168>
   16820:	188003cc 	andi	r2,r3,15
   16824:	10800118 	cmpnei	r2,r2,4
   16828:	10000126 	beq	r2,zero,16830 <__truncdfsf2+0xbc>
   1682c:	18c00104 	addi	r3,r3,4
   16830:	1881002c 	andhi	r2,r3,1024
   16834:	10002926 	beq	r2,zero,168dc <__truncdfsf2+0x168>
   16838:	30800044 	addi	r2,r6,1
   1683c:	11003fe0 	cmpeqi	r4,r2,255
   16840:	203fdc1e 	bne	r4,zero,167b4 <__truncdfsf2+0x40>
   16844:	180691ba 	slli	r3,r3,6
   16848:	1806d27a 	srli	r3,r3,9
   1684c:	003fdb06 	br	167bc <__truncdfsf2+0x48>
   16850:	0005883a 	mov	r2,zero
   16854:	00c00144 	movi	r3,5
   16858:	003ffa06 	br	16844 <__truncdfsf2+0xd0>
   1685c:	313ffa50 	cmplti	r4,r6,-23
   16860:	203ffb1e 	bne	r4,zero,16850 <__truncdfsf2+0xdc>
   16864:	01c00784 	movi	r7,30
   16868:	398fc83a 	sub	r7,r7,r6
   1686c:	3a400808 	cmpgei	r9,r7,32
   16870:	19002034 	orhi	r4,r3,128
   16874:	48001126 	beq	r9,zero,168bc <__truncdfsf2+0x148>
   16878:	00ffff84 	movi	r3,-2
   1687c:	198dc83a 	sub	r6,r3,r6
   16880:	39c00820 	cmpeqi	r7,r7,32
   16884:	218cd83a 	srl	r6,r4,r6
   16888:	3800031e 	bne	r7,zero,16898 <__truncdfsf2+0x124>
   1688c:	10ff2884 	addi	r3,r2,-862
   16890:	20c8983a 	sll	r4,r4,r3
   16894:	4110b03a 	or	r8,r8,r4
   16898:	4006c03a 	cmpne	r3,r8,zero
   1689c:	1986b03a 	or	r3,r3,r6
   168a0:	188001cc 	andi	r2,r3,7
   168a4:	000d883a 	mov	r6,zero
   168a8:	103fdd1e 	bne	r2,zero,16820 <__truncdfsf2+0xac>
   168ac:	1881002c 	andhi	r2,r3,1024
   168b0:	103fe426 	beq	r2,zero,16844 <__truncdfsf2+0xd0>
   168b4:	00800044 	movi	r2,1
   168b8:	003fe206 	br	16844 <__truncdfsf2+0xd0>
   168bc:	10ff2084 	addi	r3,r2,-894
   168c0:	40c4983a 	sll	r2,r8,r3
   168c4:	20c8983a 	sll	r4,r4,r3
   168c8:	41c6d83a 	srl	r3,r8,r7
   168cc:	1004c03a 	cmpne	r2,r2,zero
   168d0:	1108b03a 	or	r4,r2,r4
   168d4:	1906b03a 	or	r3,r3,r4
   168d8:	003ff106 	br	168a0 <__truncdfsf2+0x12c>
   168dc:	3005883a 	mov	r2,r6
   168e0:	003fd806 	br	16844 <__truncdfsf2+0xd0>

000168e4 <_Unwind_ForcedUnwind_Phase2>:
   168e4:	28800017 	ldw	r2,0(r5)
   168e8:	defff504 	addi	sp,sp,-44
   168ec:	dd400815 	stw	r21,32(sp)
   168f0:	dd000715 	stw	r20,28(sp)
   168f4:	dcc00615 	stw	r19,24(sp)
   168f8:	dc800515 	stw	r18,20(sp)
   168fc:	dc400415 	stw	r17,16(sp)
   16900:	dc000315 	stw	r16,12(sp)
   16904:	dfc00a15 	stw	ra,40(sp)
   16908:	dd800915 	stw	r22,36(sp)
   1690c:	302b883a 	mov	r21,r6
   16910:	24c00317 	ldw	r19,12(r4)
   16914:	25000417 	ldw	r20,16(r4)
   16918:	21800017 	ldw	r6,0(r4)
   1691c:	21c00117 	ldw	r7,4(r4)
   16920:	2823883a 	mov	r17,r5
   16924:	2021883a 	mov	r16,r4
   16928:	04800044 	movi	r18,1
   1692c:	10001d26 	beq	r2,zero,169a4 <_Unwind_ForcedUnwind_Phase2+0xc0>
   16930:	15800617 	ldw	r22,24(r2)
   16934:	01400284 	movi	r5,10
   16938:	01000044 	movi	r4,1
   1693c:	dd000215 	stw	r20,8(sp)
   16940:	dc400115 	stw	r17,4(sp)
   16944:	dc000015 	stw	r16,0(sp)
   16948:	983ee83a 	callr	r19
   1694c:	01400284 	movi	r5,10
   16950:	01000044 	movi	r4,1
   16954:	10001a1e 	bne	r2,zero,169c0 <_Unwind_ForcedUnwind_Phase2+0xdc>
   16958:	81800017 	ldw	r6,0(r16)
   1695c:	81c00117 	ldw	r7,4(r16)
   16960:	b0000926 	beq	r22,zero,16988 <_Unwind_ForcedUnwind_Phase2+0xa4>
   16964:	dc400115 	stw	r17,4(sp)
   16968:	dc000015 	stw	r16,0(sp)
   1696c:	b03ee83a 	callr	r22
   16970:	10c001e0 	cmpeqi	r3,r2,7
   16974:	11000218 	cmpnei	r4,r2,8
   16978:	18001d1e 	bne	r3,zero,169f0 <_Unwind_ForcedUnwind_Phase2+0x10c>
   1697c:	2000101e 	bne	r4,zero,169c0 <_Unwind_ForcedUnwind_Phase2+0xdc>
   16980:	81800017 	ldw	r6,0(r16)
   16984:	81c00117 	ldw	r7,4(r16)
   16988:	88800017 	ldw	r2,0(r17)
   1698c:	00c000b4 	movhi	r3,2
   16990:	94800044 	addi	r18,r18,1
   16994:	10800017 	ldw	r2,0(r2)
   16998:	18a74015 	stw	r2,-25344(r3)
   1699c:	88800015 	stw	r2,0(r17)
   169a0:	103fe31e 	bne	r2,zero,16930 <_Unwind_ForcedUnwind_Phase2+0x4c>
   169a4:	dd000215 	stw	r20,8(sp)
   169a8:	dc400115 	stw	r17,4(sp)
   169ac:	dc000015 	stw	r16,0(sp)
   169b0:	01400684 	movi	r5,26
   169b4:	01000044 	movi	r4,1
   169b8:	983ee83a 	callr	r19
   169bc:	10000b26 	beq	r2,zero,169ec <_Unwind_ForcedUnwind_Phase2+0x108>
   169c0:	00800084 	movi	r2,2
   169c4:	dfc00a17 	ldw	ra,40(sp)
   169c8:	dd800917 	ldw	r22,36(sp)
   169cc:	dd400817 	ldw	r21,32(sp)
   169d0:	dd000717 	ldw	r20,28(sp)
   169d4:	dcc00617 	ldw	r19,24(sp)
   169d8:	dc800517 	ldw	r18,20(sp)
   169dc:	dc400417 	ldw	r17,16(sp)
   169e0:	dc000317 	ldw	r16,12(sp)
   169e4:	dec00b04 	addi	sp,sp,44
   169e8:	f800283a 	ret
   169ec:	00800144 	movi	r2,5
   169f0:	ac800015 	stw	r18,0(r21)
   169f4:	003ff306 	br	169c4 <_Unwind_ForcedUnwind_Phase2+0xe0>

000169f8 <_Unwind_RaiseException_Phase2>:
   169f8:	28800017 	ldw	r2,0(r5)
   169fc:	10002f26 	beq	r2,zero,16abc <_Unwind_RaiseException_Phase2+0xc4>
   16a00:	defff804 	addi	sp,sp,-32
   16a04:	dcc00515 	stw	r19,20(sp)
   16a08:	dc800415 	stw	r18,16(sp)
   16a0c:	dc400315 	stw	r17,12(sp)
   16a10:	dc000215 	stw	r16,8(sp)
   16a14:	dfc00715 	stw	ra,28(sp)
   16a18:	dd000615 	stw	r20,24(sp)
   16a1c:	2823883a 	mov	r17,r5
   16a20:	2021883a 	mov	r16,r4
   16a24:	3027883a 	mov	r19,r6
   16a28:	04800044 	movi	r18,1
   16a2c:	00001306 	br	16a7c <_Unwind_RaiseException_Phase2+0x84>
   16a30:	18000e26 	beq	r3,zero,16a6c <_Unwind_RaiseException_Phase2+0x74>
   16a34:	01400084 	movi	r5,2
   16a38:	0029883a 	mov	r20,zero
   16a3c:	81800017 	ldw	r6,0(r16)
   16a40:	81c00117 	ldw	r7,4(r16)
   16a44:	01000044 	movi	r4,1
   16a48:	dc400115 	stw	r17,4(sp)
   16a4c:	dc000015 	stw	r16,0(sp)
   16a50:	183ee83a 	callr	r3
   16a54:	10c001e0 	cmpeqi	r3,r2,7
   16a58:	18001a1e 	bne	r3,zero,16ac4 <_Unwind_RaiseException_Phase2+0xcc>
   16a5c:	10800218 	cmpnei	r2,r2,8
   16a60:	10000d1e 	bne	r2,zero,16a98 <_Unwind_RaiseException_Phase2+0xa0>
   16a64:	a000191e 	bne	r20,zero,16acc <_Unwind_RaiseException_Phase2+0xd4>
   16a68:	88800017 	ldw	r2,0(r17)
   16a6c:	10800017 	ldw	r2,0(r2)
   16a70:	94800044 	addi	r18,r18,1
   16a74:	88800015 	stw	r2,0(r17)
   16a78:	10000726 	beq	r2,zero,16a98 <_Unwind_RaiseException_Phase2+0xa0>
   16a7c:	81000417 	ldw	r4,16(r16)
   16a80:	10c00617 	ldw	r3,24(r2)
   16a84:	113fea1e 	bne	r2,r4,16a30 <_Unwind_RaiseException_Phase2+0x38>
   16a88:	18001026 	beq	r3,zero,16acc <_Unwind_RaiseException_Phase2+0xd4>
   16a8c:	01400184 	movi	r5,6
   16a90:	05000104 	movi	r20,4
   16a94:	003fe906 	br	16a3c <_Unwind_RaiseException_Phase2+0x44>
   16a98:	00800084 	movi	r2,2
   16a9c:	dfc00717 	ldw	ra,28(sp)
   16aa0:	dd000617 	ldw	r20,24(sp)
   16aa4:	dcc00517 	ldw	r19,20(sp)
   16aa8:	dc800417 	ldw	r18,16(sp)
   16aac:	dc400317 	ldw	r17,12(sp)
   16ab0:	dc000217 	ldw	r16,8(sp)
   16ab4:	dec00804 	addi	sp,sp,32
   16ab8:	f800283a 	ret
   16abc:	00800084 	movi	r2,2
   16ac0:	f800283a 	ret
   16ac4:	9c800015 	stw	r18,0(r19)
   16ac8:	003ff406 	br	16a9c <_Unwind_RaiseException_Phase2+0xa4>
   16acc:	00170380 	call	17038 <abort>

00016ad0 <uw_install_context.constprop.0.isra.0>:
   16ad0:	deffff04 	addi	sp,sp,-4
   16ad4:	df000015 	stw	fp,0(sp)
   16ad8:	20800804 	addi	r2,r4,32
   16adc:	00c000b4 	movhi	r3,2
   16ae0:	19274015 	stw	r4,-25344(r3)
   16ae4:	d839883a 	mov	fp,sp
   16ae8:	20c00917 	ldw	r3,36(r4)
   16aec:	21000817 	ldw	r4,32(r4)
   16af0:	16c00217 	ldw	sp,8(r2)
   16af4:	2039883a 	mov	fp,r4
   16af8:	1800683a 	jmp	r3

00016afc <_Unwind_SjLj_Register>:
   16afc:	008000b4 	movhi	r2,2
   16b00:	10a74017 	ldw	r2,-25344(r2)
   16b04:	20800015 	stw	r2,0(r4)
   16b08:	008000b4 	movhi	r2,2
   16b0c:	11274015 	stw	r4,-25344(r2)
   16b10:	f800283a 	ret

00016b14 <_Unwind_SjLj_Unregister>:
   16b14:	20c00017 	ldw	r3,0(r4)
   16b18:	008000b4 	movhi	r2,2
   16b1c:	10e74015 	stw	r3,-25344(r2)
   16b20:	f800283a 	ret

00016b24 <_Unwind_GetGR>:
   16b24:	29400084 	addi	r5,r5,2
   16b28:	20800017 	ldw	r2,0(r4)
   16b2c:	280a90ba 	slli	r5,r5,2
   16b30:	114b883a 	add	r5,r2,r5
   16b34:	28800017 	ldw	r2,0(r5)
   16b38:	f800283a 	ret

00016b3c <_Unwind_GetCFA>:
   16b3c:	20800017 	ldw	r2,0(r4)
   16b40:	10000226 	beq	r2,zero,16b4c <_Unwind_GetCFA+0x10>
   16b44:	10800a17 	ldw	r2,40(r2)
   16b48:	f800283a 	ret
   16b4c:	0005883a 	mov	r2,zero
   16b50:	f800283a 	ret

00016b54 <_Unwind_SetGR>:
   16b54:	29400084 	addi	r5,r5,2
   16b58:	20800017 	ldw	r2,0(r4)
   16b5c:	280a90ba 	slli	r5,r5,2
   16b60:	114b883a 	add	r5,r2,r5
   16b64:	29800015 	stw	r6,0(r5)
   16b68:	f800283a 	ret

00016b6c <_Unwind_GetIP>:
   16b6c:	20800017 	ldw	r2,0(r4)
   16b70:	10800117 	ldw	r2,4(r2)
   16b74:	10800044 	addi	r2,r2,1
   16b78:	f800283a 	ret

00016b7c <_Unwind_GetIPInfo>:
   16b7c:	20800017 	ldw	r2,0(r4)
   16b80:	28000015 	stw	zero,0(r5)
   16b84:	10000326 	beq	r2,zero,16b94 <_Unwind_GetIPInfo+0x18>
   16b88:	10800117 	ldw	r2,4(r2)
   16b8c:	10800044 	addi	r2,r2,1
   16b90:	f800283a 	ret
   16b94:	0005883a 	mov	r2,zero
   16b98:	f800283a 	ret

00016b9c <_Unwind_SetIP>:
   16b9c:	20800017 	ldw	r2,0(r4)
   16ba0:	297fffc4 	addi	r5,r5,-1
   16ba4:	11400115 	stw	r5,4(r2)
   16ba8:	f800283a 	ret

00016bac <_Unwind_GetLanguageSpecificData>:
   16bac:	20800017 	ldw	r2,0(r4)
   16bb0:	10800717 	ldw	r2,28(r2)
   16bb4:	f800283a 	ret

00016bb8 <_Unwind_GetRegionStart>:
   16bb8:	0005883a 	mov	r2,zero
   16bbc:	f800283a 	ret

00016bc0 <_Unwind_FindEnclosingFunction>:
   16bc0:	0005883a 	mov	r2,zero
   16bc4:	f800283a 	ret

00016bc8 <_Unwind_GetDataRelBase>:
   16bc8:	0005883a 	mov	r2,zero
   16bcc:	f800283a 	ret

00016bd0 <_Unwind_GetTextRelBase>:
   16bd0:	0005883a 	mov	r2,zero
   16bd4:	f800283a 	ret

00016bd8 <_Unwind_SjLj_RaiseException>:
   16bd8:	defff804 	addi	sp,sp,-32
   16bdc:	008000b4 	movhi	r2,2
   16be0:	dc400515 	stw	r17,20(sp)
   16be4:	14674017 	ldw	r17,-25344(r2)
   16be8:	dfc00715 	stw	ra,28(sp)
   16bec:	dc800615 	stw	r18,24(sp)
   16bf0:	dc000415 	stw	r16,16(sp)
   16bf4:	dc400215 	stw	r17,8(sp)
   16bf8:	88001426 	beq	r17,zero,16c4c <_Unwind_SjLj_RaiseException+0x74>
   16bfc:	2021883a 	mov	r16,r4
   16c00:	8805883a 	mov	r2,r17
   16c04:	dc800204 	addi	r18,sp,8
   16c08:	10800617 	ldw	r2,24(r2)
   16c0c:	10000b26 	beq	r2,zero,16c3c <_Unwind_SjLj_RaiseException+0x64>
   16c10:	81800017 	ldw	r6,0(r16)
   16c14:	81c00117 	ldw	r7,4(r16)
   16c18:	01400044 	movi	r5,1
   16c1c:	dc800115 	stw	r18,4(sp)
   16c20:	dc000015 	stw	r16,0(sp)
   16c24:	01000044 	movi	r4,1
   16c28:	103ee83a 	callr	r2
   16c2c:	10c001a0 	cmpeqi	r3,r2,6
   16c30:	18000d1e 	bne	r3,zero,16c68 <_Unwind_SjLj_RaiseException+0x90>
   16c34:	10800218 	cmpnei	r2,r2,8
   16c38:	1000171e 	bne	r2,zero,16c98 <_Unwind_SjLj_RaiseException+0xc0>
   16c3c:	d8800217 	ldw	r2,8(sp)
   16c40:	10800017 	ldw	r2,0(r2)
   16c44:	d8800215 	stw	r2,8(sp)
   16c48:	103fef1e 	bne	r2,zero,16c08 <_Unwind_SjLj_RaiseException+0x30>
   16c4c:	00800144 	movi	r2,5
   16c50:	dfc00717 	ldw	ra,28(sp)
   16c54:	dc800617 	ldw	r18,24(sp)
   16c58:	dc400517 	ldw	r17,20(sp)
   16c5c:	dc000417 	ldw	r16,16(sp)
   16c60:	dec00804 	addi	sp,sp,32
   16c64:	f800283a 	ret
   16c68:	d8800217 	ldw	r2,8(sp)
   16c6c:	80000315 	stw	zero,12(r16)
   16c70:	d9800304 	addi	r6,sp,12
   16c74:	80800415 	stw	r2,16(r16)
   16c78:	900b883a 	mov	r5,r18
   16c7c:	8009883a 	mov	r4,r16
   16c80:	dc400215 	stw	r17,8(sp)
   16c84:	00169f80 	call	169f8 <_Unwind_RaiseException_Phase2>
   16c88:	10c001d8 	cmpnei	r3,r2,7
   16c8c:	183ff01e 	bne	r3,zero,16c50 <_Unwind_SjLj_RaiseException+0x78>
   16c90:	d9000217 	ldw	r4,8(sp)
   16c94:	0016ad00 	call	16ad0 <uw_install_context.constprop.0.isra.0>
   16c98:	008000c4 	movi	r2,3
   16c9c:	003fec06 	br	16c50 <_Unwind_SjLj_RaiseException+0x78>

00016ca0 <_Unwind_SjLj_ForcedUnwind>:
   16ca0:	008000b4 	movhi	r2,2
   16ca4:	defffd04 	addi	sp,sp,-12
   16ca8:	10e74017 	ldw	r3,-25344(r2)
   16cac:	dfc00215 	stw	ra,8(sp)
   16cb0:	21400315 	stw	r5,12(r4)
   16cb4:	21800415 	stw	r6,16(r4)
   16cb8:	d80b883a 	mov	r5,sp
   16cbc:	d9800104 	addi	r6,sp,4
   16cc0:	d8c00015 	stw	r3,0(sp)
   16cc4:	00168e40 	call	168e4 <_Unwind_ForcedUnwind_Phase2>
   16cc8:	10c001e0 	cmpeqi	r3,r2,7
   16ccc:	1800031e 	bne	r3,zero,16cdc <_Unwind_SjLj_ForcedUnwind+0x3c>
   16cd0:	dfc00217 	ldw	ra,8(sp)
   16cd4:	dec00304 	addi	sp,sp,12
   16cd8:	f800283a 	ret
   16cdc:	d9000017 	ldw	r4,0(sp)
   16ce0:	0016ad00 	call	16ad0 <uw_install_context.constprop.0.isra.0>

00016ce4 <_Unwind_SjLj_Resume>:
   16ce4:	008000b4 	movhi	r2,2
   16ce8:	10e74017 	ldw	r3,-25344(r2)
   16cec:	20800317 	ldw	r2,12(r4)
   16cf0:	defffd04 	addi	sp,sp,-12
   16cf4:	dfc00215 	stw	ra,8(sp)
   16cf8:	d8c00015 	stw	r3,0(sp)
   16cfc:	d9800104 	addi	r6,sp,4
   16d00:	d80b883a 	mov	r5,sp
   16d04:	1000051e 	bne	r2,zero,16d1c <_Unwind_SjLj_Resume+0x38>
   16d08:	00169f80 	call	169f8 <_Unwind_RaiseException_Phase2>
   16d0c:	108001e0 	cmpeqi	r2,r2,7
   16d10:	10000426 	beq	r2,zero,16d24 <_Unwind_SjLj_Resume+0x40>
   16d14:	d9000017 	ldw	r4,0(sp)
   16d18:	0016ad00 	call	16ad0 <uw_install_context.constprop.0.isra.0>
   16d1c:	00168e40 	call	168e4 <_Unwind_ForcedUnwind_Phase2>
   16d20:	003ffa06 	br	16d0c <_Unwind_SjLj_Resume+0x28>
   16d24:	00170380 	call	17038 <abort>

00016d28 <_Unwind_SjLj_Resume_or_Rethrow>:
   16d28:	20800317 	ldw	r2,12(r4)
   16d2c:	1000011e 	bne	r2,zero,16d34 <_Unwind_SjLj_Resume_or_Rethrow+0xc>
   16d30:	0016bd81 	jmpi	16bd8 <_Unwind_SjLj_RaiseException>
   16d34:	008000b4 	movhi	r2,2
   16d38:	10a74017 	ldw	r2,-25344(r2)
   16d3c:	defffd04 	addi	sp,sp,-12
   16d40:	d9800104 	addi	r6,sp,4
   16d44:	d80b883a 	mov	r5,sp
   16d48:	dfc00215 	stw	ra,8(sp)
   16d4c:	d8800015 	stw	r2,0(sp)
   16d50:	00168e40 	call	168e4 <_Unwind_ForcedUnwind_Phase2>
   16d54:	108001e0 	cmpeqi	r2,r2,7
   16d58:	10000226 	beq	r2,zero,16d64 <_Unwind_SjLj_Resume_or_Rethrow+0x3c>
   16d5c:	d9000017 	ldw	r4,0(sp)
   16d60:	0016ad00 	call	16ad0 <uw_install_context.constprop.0.isra.0>
   16d64:	00170380 	call	17038 <abort>

00016d68 <_Unwind_DeleteException>:
   16d68:	20800217 	ldw	r2,8(r4)
   16d6c:	200b883a 	mov	r5,r4
   16d70:	10000226 	beq	r2,zero,16d7c <_Unwind_DeleteException+0x14>
   16d74:	01000044 	movi	r4,1
   16d78:	1000683a 	jmp	r2
   16d7c:	f800283a 	ret

00016d80 <_Unwind_Backtrace>:
   16d80:	008000b4 	movhi	r2,2
   16d84:	10a74017 	ldw	r2,-25344(r2)
   16d88:	defffb04 	addi	sp,sp,-20
   16d8c:	dc800315 	stw	r18,12(sp)
   16d90:	dc400215 	stw	r17,8(sp)
   16d94:	dc000115 	stw	r16,4(sp)
   16d98:	dfc00415 	stw	ra,16(sp)
   16d9c:	d8800015 	stw	r2,0(sp)
   16da0:	2021883a 	mov	r16,r4
   16da4:	2823883a 	mov	r17,r5
   16da8:	d825883a 	mov	r18,sp
   16dac:	10000826 	beq	r2,zero,16dd0 <_Unwind_Backtrace+0x50>
   16db0:	880b883a 	mov	r5,r17
   16db4:	9009883a 	mov	r4,r18
   16db8:	803ee83a 	callr	r16
   16dbc:	1000101e 	bne	r2,zero,16e00 <_Unwind_Backtrace+0x80>
   16dc0:	d8800017 	ldw	r2,0(sp)
   16dc4:	10800017 	ldw	r2,0(r2)
   16dc8:	d8800015 	stw	r2,0(sp)
   16dcc:	103ff81e 	bne	r2,zero,16db0 <_Unwind_Backtrace+0x30>
   16dd0:	880b883a 	mov	r5,r17
   16dd4:	9009883a 	mov	r4,r18
   16dd8:	803ee83a 	callr	r16
   16ddc:	00c00144 	movi	r3,5
   16de0:	1000071e 	bne	r2,zero,16e00 <_Unwind_Backtrace+0x80>
   16de4:	1805883a 	mov	r2,r3
   16de8:	dfc00417 	ldw	ra,16(sp)
   16dec:	dc800317 	ldw	r18,12(sp)
   16df0:	dc400217 	ldw	r17,8(sp)
   16df4:	dc000117 	ldw	r16,4(sp)
   16df8:	dec00504 	addi	sp,sp,20
   16dfc:	f800283a 	ret
   16e00:	00c000c4 	movi	r3,3
   16e04:	003ff706 	br	16de4 <_Unwind_Backtrace+0x64>

00016e08 <__clzsi2>:
   16e08:	00bfffd4 	movui	r2,65535
   16e0c:	11000436 	bltu	r2,r4,16e20 <__clzsi2+0x18>
   16e10:	20804030 	cmpltui	r2,r4,256
   16e14:	10000e26 	beq	r2,zero,16e50 <__clzsi2+0x48>
   16e18:	01400804 	movi	r5,32
   16e1c:	00000406 	br	16e30 <__clzsi2+0x28>
   16e20:	00804034 	movhi	r2,256
   16e24:	20800736 	bltu	r4,r2,16e44 <__clzsi2+0x3c>
   16e28:	2008d63a 	srli	r4,r4,24
   16e2c:	01400204 	movi	r5,8
   16e30:	00c000b4 	movhi	r3,2
   16e34:	20c7883a 	add	r3,r4,r3
   16e38:	18a42603 	ldbu	r2,-28520(r3)
   16e3c:	2885c83a 	sub	r2,r5,r2
   16e40:	f800283a 	ret
   16e44:	2008d43a 	srli	r4,r4,16
   16e48:	01400404 	movi	r5,16
   16e4c:	003ff806 	br	16e30 <__clzsi2+0x28>
   16e50:	2008d23a 	srli	r4,r4,8
   16e54:	01400604 	movi	r5,24
   16e58:	003ff506 	br	16e30 <__clzsi2+0x28>

00016e5c <__divsi3>:
   16e5c:	20001a16 	blt	r4,zero,16ec8 <__divsi3+0x6c>
   16e60:	000f883a 	mov	r7,zero
   16e64:	2800020e 	bge	r5,zero,16e70 <__divsi3+0x14>
   16e68:	014bc83a 	sub	r5,zero,r5
   16e6c:	39c0005c 	xori	r7,r7,1
   16e70:	200d883a 	mov	r6,r4
   16e74:	00c00044 	movi	r3,1
   16e78:	2900092e 	bgeu	r5,r4,16ea0 <__divsi3+0x44>
   16e7c:	00800804 	movi	r2,32
   16e80:	00c00044 	movi	r3,1
   16e84:	00000106 	br	16e8c <__divsi3+0x30>
   16e88:	10001226 	beq	r2,zero,16ed4 <__divsi3+0x78>
   16e8c:	294b883a 	add	r5,r5,r5
   16e90:	10bfffc4 	addi	r2,r2,-1
   16e94:	18c7883a 	add	r3,r3,r3
   16e98:	293ffb36 	bltu	r5,r4,16e88 <__divsi3+0x2c>
   16e9c:	18000d26 	beq	r3,zero,16ed4 <__divsi3+0x78>
   16ea0:	0005883a 	mov	r2,zero
   16ea4:	31400236 	bltu	r6,r5,16eb0 <__divsi3+0x54>
   16ea8:	314dc83a 	sub	r6,r6,r5
   16eac:	10c4b03a 	or	r2,r2,r3
   16eb0:	1806d07a 	srli	r3,r3,1
   16eb4:	280ad07a 	srli	r5,r5,1
   16eb8:	183ffa1e 	bne	r3,zero,16ea4 <__divsi3+0x48>
   16ebc:	38000126 	beq	r7,zero,16ec4 <__divsi3+0x68>
   16ec0:	0085c83a 	sub	r2,zero,r2
   16ec4:	f800283a 	ret
   16ec8:	0109c83a 	sub	r4,zero,r4
   16ecc:	01c00044 	movi	r7,1
   16ed0:	003fe406 	br	16e64 <__divsi3+0x8>
   16ed4:	0005883a 	mov	r2,zero
   16ed8:	003ff806 	br	16ebc <__divsi3+0x60>

00016edc <__modsi3>:
   16edc:	20001916 	blt	r4,zero,16f44 <__modsi3+0x68>
   16ee0:	000f883a 	mov	r7,zero
   16ee4:	2005883a 	mov	r2,r4
   16ee8:	2800010e 	bge	r5,zero,16ef0 <__modsi3+0x14>
   16eec:	014bc83a 	sub	r5,zero,r5
   16ef0:	00c00044 	movi	r3,1
   16ef4:	2900092e 	bgeu	r5,r4,16f1c <__modsi3+0x40>
   16ef8:	01800804 	movi	r6,32
   16efc:	00c00044 	movi	r3,1
   16f00:	00000106 	br	16f08 <__modsi3+0x2c>
   16f04:	30000d26 	beq	r6,zero,16f3c <__modsi3+0x60>
   16f08:	294b883a 	add	r5,r5,r5
   16f0c:	31bfffc4 	addi	r6,r6,-1
   16f10:	18c7883a 	add	r3,r3,r3
   16f14:	293ffb36 	bltu	r5,r4,16f04 <__modsi3+0x28>
   16f18:	18000826 	beq	r3,zero,16f3c <__modsi3+0x60>
   16f1c:	1806d07a 	srli	r3,r3,1
   16f20:	11400136 	bltu	r2,r5,16f28 <__modsi3+0x4c>
   16f24:	1145c83a 	sub	r2,r2,r5
   16f28:	280ad07a 	srli	r5,r5,1
   16f2c:	183ffb1e 	bne	r3,zero,16f1c <__modsi3+0x40>
   16f30:	38000126 	beq	r7,zero,16f38 <__modsi3+0x5c>
   16f34:	0085c83a 	sub	r2,zero,r2
   16f38:	f800283a 	ret
   16f3c:	2005883a 	mov	r2,r4
   16f40:	003ffb06 	br	16f30 <__modsi3+0x54>
   16f44:	0109c83a 	sub	r4,zero,r4
   16f48:	01c00044 	movi	r7,1
   16f4c:	003fe506 	br	16ee4 <__modsi3+0x8>

00016f50 <__udivsi3>:
   16f50:	200d883a 	mov	r6,r4
   16f54:	2900152e 	bgeu	r5,r4,16fac <__udivsi3+0x5c>
   16f58:	28001416 	blt	r5,zero,16fac <__udivsi3+0x5c>
   16f5c:	00800804 	movi	r2,32
   16f60:	00c00044 	movi	r3,1
   16f64:	00000206 	br	16f70 <__udivsi3+0x20>
   16f68:	10000e26 	beq	r2,zero,16fa4 <__udivsi3+0x54>
   16f6c:	28000516 	blt	r5,zero,16f84 <__udivsi3+0x34>
   16f70:	294b883a 	add	r5,r5,r5
   16f74:	10bfffc4 	addi	r2,r2,-1
   16f78:	18c7883a 	add	r3,r3,r3
   16f7c:	293ffa36 	bltu	r5,r4,16f68 <__udivsi3+0x18>
   16f80:	18000826 	beq	r3,zero,16fa4 <__udivsi3+0x54>
   16f84:	0005883a 	mov	r2,zero
   16f88:	31400236 	bltu	r6,r5,16f94 <__udivsi3+0x44>
   16f8c:	314dc83a 	sub	r6,r6,r5
   16f90:	10c4b03a 	or	r2,r2,r3
   16f94:	1806d07a 	srli	r3,r3,1
   16f98:	280ad07a 	srli	r5,r5,1
   16f9c:	183ffa1e 	bne	r3,zero,16f88 <__udivsi3+0x38>
   16fa0:	f800283a 	ret
   16fa4:	0005883a 	mov	r2,zero
   16fa8:	f800283a 	ret
   16fac:	00c00044 	movi	r3,1
   16fb0:	003ff406 	br	16f84 <__udivsi3+0x34>

00016fb4 <__umodsi3>:
   16fb4:	2005883a 	mov	r2,r4
   16fb8:	2900132e 	bgeu	r5,r4,17008 <__umodsi3+0x54>
   16fbc:	28001216 	blt	r5,zero,17008 <__umodsi3+0x54>
   16fc0:	01800804 	movi	r6,32
   16fc4:	00c00044 	movi	r3,1
   16fc8:	00000206 	br	16fd4 <__umodsi3+0x20>
   16fcc:	30000c26 	beq	r6,zero,17000 <__umodsi3+0x4c>
   16fd0:	28000516 	blt	r5,zero,16fe8 <__umodsi3+0x34>
   16fd4:	294b883a 	add	r5,r5,r5
   16fd8:	31bfffc4 	addi	r6,r6,-1
   16fdc:	18c7883a 	add	r3,r3,r3
   16fe0:	293ffa36 	bltu	r5,r4,16fcc <__umodsi3+0x18>
   16fe4:	18000626 	beq	r3,zero,17000 <__umodsi3+0x4c>
   16fe8:	1806d07a 	srli	r3,r3,1
   16fec:	11400136 	bltu	r2,r5,16ff4 <__umodsi3+0x40>
   16ff0:	1145c83a 	sub	r2,r2,r5
   16ff4:	280ad07a 	srli	r5,r5,1
   16ff8:	183ffb1e 	bne	r3,zero,16fe8 <__umodsi3+0x34>
   16ffc:	f800283a 	ret
   17000:	2005883a 	mov	r2,r4
   17004:	f800283a 	ret
   17008:	00c00044 	movi	r3,1
   1700c:	003ff606 	br	16fe8 <__umodsi3+0x34>

00017010 <__mulsi3>:
   17010:	0005883a 	mov	r2,zero
   17014:	20000726 	beq	r4,zero,17034 <__mulsi3+0x24>
   17018:	20c0004c 	andi	r3,r4,1
   1701c:	2008d07a 	srli	r4,r4,1
   17020:	18000126 	beq	r3,zero,17028 <__mulsi3+0x18>
   17024:	1145883a 	add	r2,r2,r5
   17028:	294b883a 	add	r5,r5,r5
   1702c:	203ffa1e 	bne	r4,zero,17018 <__mulsi3+0x8>
   17030:	f800283a 	ret
   17034:	f800283a 	ret

00017038 <abort>:
#include <unistd.h>
#include <signal.h>

void
abort (void)
{
   17038:	deffff04 	addi	sp,sp,-4
  write (2, "Abort called\n", sizeof ("Abort called\n")-1);
#endif

  while (1)
    {
      raise (SIGABRT);
   1703c:	01000184 	movi	r4,6
{
   17040:	dfc00015 	stw	ra,0(sp)
      raise (SIGABRT);
   17044:	00175600 	call	17560 <raise>
      _exit (1);
   17048:	01000044 	movi	r4,1
   1704c:	001761c0 	call	1761c <_exit>

00017050 <malloc>:
#ifndef _REENT_ONLY

void *
malloc (size_t nbytes)		/* get a block */
{
  return _malloc_r (_REENT, nbytes);
   17050:	200b883a 	mov	r5,r4
   17054:	d1209e17 	ldw	r4,-32136(gp)
   17058:	00171a81 	jmpi	171a8 <_malloc_r>

0001705c <free>:
}

void
free (void *aptr)
{
  _free_r (_REENT, aptr);
   1705c:	200b883a 	mov	r5,r4
   17060:	d1209e17 	ldw	r4,-32136(gp)
   17064:	00170b01 	jmpi	170b0 <_free_r>

00017068 <memcpy>:
void *
__inhibit_loop_to_libcall
memcpy (void *__restrict dst0,
	const void *__restrict src0,
	size_t len0)
{
   17068:	2005883a 	mov	r2,r4
  char *dst = (char *) dst0;
  char *src = (char *) src0;

  void *save = dst0;

  while (len0--)
   1706c:	0007883a 	mov	r3,zero
   17070:	30c0011e 	bne	r6,r3,17078 <memcpy+0x10>
  while (len0--)
    *dst++ = *src++;

  return dst0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   17074:	f800283a 	ret
      *dst++ = *src++;
   17078:	28cf883a 	add	r7,r5,r3
   1707c:	39c00003 	ldbu	r7,0(r7)
   17080:	10c9883a 	add	r4,r2,r3
   17084:	18c00044 	addi	r3,r3,1
   17088:	21c00005 	stb	r7,0(r4)
   1708c:	003ff806 	br	17070 <memcpy+0x8>

00017090 <memset>:
void *
__inhibit_loop_to_libcall
memset (void *m,
	int c,
	size_t n)
{
   17090:	2005883a 	mov	r2,r4
      s = (char*)aligned_addr;
    }

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (n--)
   17094:	218d883a 	add	r6,r4,r6
  char *s = (char *) m;
   17098:	2007883a 	mov	r3,r4
  while (n--)
   1709c:	1980011e 	bne	r3,r6,170a4 <memset+0x14>
    *s++ = (char) c;

  return m;
}
   170a0:	f800283a 	ret
    *s++ = (char) c;
   170a4:	18c00044 	addi	r3,r3,1
   170a8:	197fffc5 	stb	r5,-1(r3)
   170ac:	003ffb06 	br	1709c <memset+0xc>

000170b0 <_free_r>:
void nano_free (RARG void * free_p)
{
    chunk * p_to_free;
    chunk * p, * q;

    if (free_p == NULL) return;
   170b0:	28003c26 	beq	r5,zero,171a4 <_free_r+0xf4>
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   170b4:	28bfff17 	ldw	r2,-4(r5)
{
   170b8:	defffd04 	addi	sp,sp,-12
   170bc:	dc000115 	stw	r16,4(sp)
   170c0:	dfc00215 	stw	ra,8(sp)
    chunk * c = (chunk *)((char *)ptr - CHUNK_OFFSET);
   170c4:	2c3fff04 	addi	r16,r5,-4
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   170c8:	1000010e 	bge	r2,zero,170d0 <_free_r+0x20>
   170cc:	80a1883a 	add	r16,r16,r2

    p_to_free = get_chunk_from_ptr(free_p);

    MALLOC_LOCK;
   170d0:	d9000015 	stw	r4,0(sp)
   170d4:	00179040 	call	17904 <__malloc_lock>
    if (free_list == NULL)
   170d8:	d0a21917 	ldw	r2,-30620(gp)
   170dc:	d9000017 	ldw	r4,0(sp)
   170e0:	1000061e 	bne	r2,zero,170fc <_free_r+0x4c>
    {
        /* Set first free list element */
        p_to_free->next = free_list;
   170e4:	80000115 	stw	zero,4(r16)
        else
        {
            /* Insert before current free_list */
            p_to_free->next = free_list;
        }
        free_list = p_to_free;
   170e8:	d4221915 	stw	r16,-30620(gp)
         * a fragment. */
        p_to_free->next = q;
        p->next = p_to_free;
    }
    MALLOC_UNLOCK;
}
   170ec:	dfc00217 	ldw	ra,8(sp)
   170f0:	dc000117 	ldw	r16,4(sp)
   170f4:	dec00304 	addi	sp,sp,12
    MALLOC_UNLOCK;
   170f8:	00179081 	jmpi	17908 <__malloc_unlock>
    if (p_to_free < free_list)
   170fc:	8080092e 	bgeu	r16,r2,17124 <_free_r+0x74>
        if ((char *)p_to_free + p_to_free->size == (char *)free_list)
   17100:	81400017 	ldw	r5,0(r16)
   17104:	8147883a 	add	r3,r16,r5
   17108:	10c0041e 	bne	r2,r3,1711c <_free_r+0x6c>
            p_to_free->size += free_list->size;
   1710c:	10c00017 	ldw	r3,0(r2)
            p_to_free->next = free_list->next;
   17110:	10800117 	ldw	r2,4(r2)
            p_to_free->size += free_list->size;
   17114:	1947883a 	add	r3,r3,r5
   17118:	80c00015 	stw	r3,0(r16)
            p_to_free->next = free_list;
   1711c:	80800115 	stw	r2,4(r16)
   17120:	003ff106 	br	170e8 <_free_r+0x38>
        q = q->next;
   17124:	1007883a 	mov	r3,r2
   17128:	10800117 	ldw	r2,4(r2)
    } while (q && q <= p_to_free);
   1712c:	10000126 	beq	r2,zero,17134 <_free_r+0x84>
   17130:	80bffc2e 	bgeu	r16,r2,17124 <_free_r+0x74>
    if ((char *)p + p->size == (char *)p_to_free)
   17134:	19400017 	ldw	r5,0(r3)
   17138:	194d883a 	add	r6,r3,r5
   1713c:	34000b1e 	bne	r6,r16,1716c <_free_r+0xbc>
        p->size += p_to_free->size;
   17140:	81800017 	ldw	r6,0(r16)
   17144:	298b883a 	add	r5,r5,r6
   17148:	19400015 	stw	r5,0(r3)
        if ((char *)p + p->size == (char *) q)
   1714c:	194d883a 	add	r6,r3,r5
   17150:	11bfe61e 	bne	r2,r6,170ec <_free_r+0x3c>
            p->size += q->size;
   17154:	11800017 	ldw	r6,0(r2)
            p->next = q->next;
   17158:	10800117 	ldw	r2,4(r2)
            p->size += q->size;
   1715c:	314b883a 	add	r5,r6,r5
   17160:	19400015 	stw	r5,0(r3)
            p->next = q->next;
   17164:	18800115 	stw	r2,4(r3)
   17168:	003fe006 	br	170ec <_free_r+0x3c>
    else if ((char *)p + p->size > (char *)p_to_free)
   1716c:	8180032e 	bgeu	r16,r6,1717c <_free_r+0xcc>
        RERRNO = ENOMEM;
   17170:	00800304 	movi	r2,12
   17174:	20800015 	stw	r2,0(r4)
        MALLOC_UNLOCK;
   17178:	003fdc06 	br	170ec <_free_r+0x3c>
    else if ((char *)p_to_free + p_to_free->size == (char *) q)
   1717c:	81800017 	ldw	r6,0(r16)
   17180:	818b883a 	add	r5,r16,r6
   17184:	1140041e 	bne	r2,r5,17198 <_free_r+0xe8>
        p_to_free->size += q->size;
   17188:	11400017 	ldw	r5,0(r2)
        p_to_free->next = q->next;
   1718c:	10800117 	ldw	r2,4(r2)
        p_to_free->size += q->size;
   17190:	298b883a 	add	r5,r5,r6
   17194:	81400015 	stw	r5,0(r16)
        p_to_free->next = q;
   17198:	80800115 	stw	r2,4(r16)
        p->next = p_to_free;
   1719c:	1c000115 	stw	r16,4(r3)
   171a0:	003fd206 	br	170ec <_free_r+0x3c>
   171a4:	f800283a 	ret

000171a8 <_malloc_r>:
{
   171a8:	defffc04 	addi	sp,sp,-16
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   171ac:	00bfff04 	movi	r2,-4
{
   171b0:	dc400115 	stw	r17,4(sp)
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   171b4:	2c4000c4 	addi	r17,r5,3
   171b8:	88a2703a 	and	r17,r17,r2
    alloc_size += CHUNK_OFFSET; /* size of chunk head */
   171bc:	8c400204 	addi	r17,r17,8
{
   171c0:	dc800215 	stw	r18,8(sp)
   171c4:	dfc00315 	stw	ra,12(sp)
   171c8:	dc000015 	stw	r16,0(sp)
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   171cc:	88800328 	cmpgeui	r2,r17,12
{
   171d0:	2025883a 	mov	r18,r4
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   171d4:	1000171e 	bne	r2,zero,17234 <_malloc_r+0x8c>
   171d8:	04400304 	movi	r17,12
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   171dc:	89401636 	bltu	r17,r5,17238 <_malloc_r+0x90>
    MALLOC_LOCK;
   171e0:	9009883a 	mov	r4,r18
   171e4:	00179040 	call	17904 <__malloc_lock>
    p = free_list;
   171e8:	d0e21917 	ldw	r3,-30620(gp)
    r = p;
   171ec:	1821883a 	mov	r16,r3
    while (r)
   171f0:	80001a1e 	bne	r16,zero,1725c <_malloc_r+0xb4>
    if (sbrk_start == NULL) sbrk_start = _SBRK_R(RCALL 0);
   171f4:	d0a21817 	ldw	r2,-30624(gp)
   171f8:	1000041e 	bne	r2,zero,1720c <_malloc_r+0x64>
   171fc:	000b883a 	mov	r5,zero
   17200:	9009883a 	mov	r4,r18
   17204:	00172f80 	call	172f8 <_sbrk_r>
   17208:	d0a21815 	stw	r2,-30624(gp)
    p = _SBRK_R(RCALL s);
   1720c:	880b883a 	mov	r5,r17
   17210:	9009883a 	mov	r4,r18
   17214:	00172f80 	call	172f8 <_sbrk_r>
    if (p == (void *)-1)
   17218:	10ffffd8 	cmpnei	r3,r2,-1
   1721c:	18002c1e 	bne	r3,zero,172d0 <_malloc_r+0x128>
            RERRNO = ENOMEM;
   17220:	00800304 	movi	r2,12
   17224:	90800015 	stw	r2,0(r18)
            MALLOC_UNLOCK;
   17228:	9009883a 	mov	r4,r18
   1722c:	00179080 	call	17908 <__malloc_unlock>
   17230:	00000306 	br	17240 <_malloc_r+0x98>
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   17234:	883fe90e 	bge	r17,zero,171dc <_malloc_r+0x34>
        RERRNO = ENOMEM;
   17238:	00800304 	movi	r2,12
   1723c:	90800015 	stw	r2,0(r18)
            return NULL;
   17240:	0005883a 	mov	r2,zero
}
   17244:	dfc00317 	ldw	ra,12(sp)
   17248:	dc800217 	ldw	r18,8(sp)
   1724c:	dc400117 	ldw	r17,4(sp)
   17250:	dc000017 	ldw	r16,0(sp)
   17254:	dec00404 	addi	sp,sp,16
   17258:	f800283a 	ret
        int rem = r->size - alloc_size;
   1725c:	80800017 	ldw	r2,0(r16)
   17260:	1445c83a 	sub	r2,r2,r17
        if (rem >= 0)
   17264:	10001716 	blt	r2,zero,172c4 <_malloc_r+0x11c>
            if (rem >= MALLOC_MINCHUNK)
   17268:	11000330 	cmpltui	r4,r2,12
   1726c:	2000041e 	bne	r4,zero,17280 <_malloc_r+0xd8>
                r->size = rem;
   17270:	80800015 	stw	r2,0(r16)
                r = (chunk *)((char *)r + rem);
   17274:	80a1883a 	add	r16,r16,r2
        r->size = alloc_size;
   17278:	84400015 	stw	r17,0(r16)
   1727c:	00000306 	br	1728c <_malloc_r+0xe4>
                free_list = r->next;
   17280:	80800117 	ldw	r2,4(r16)
            else if (p == r)
   17284:	1c000d1e 	bne	r3,r16,172bc <_malloc_r+0x114>
                free_list = r->next;
   17288:	d0a21915 	stw	r2,-30620(gp)
    MALLOC_UNLOCK;
   1728c:	9009883a 	mov	r4,r18
   17290:	00179080 	call	17908 <__malloc_unlock>
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   17294:	013ffe04 	movi	r4,-8
   17298:	808002c4 	addi	r2,r16,11
    ptr = (char *)r + CHUNK_OFFSET;
   1729c:	80c00104 	addi	r3,r16,4
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   172a0:	1104703a 	and	r2,r2,r4
    offset = align_ptr - ptr;
   172a4:	10c9c83a 	sub	r4,r2,r3
    if (offset)
   172a8:	10ffe626 	beq	r2,r3,17244 <_malloc_r+0x9c>
        *(long *)((char *)r + offset) = -offset;
   172ac:	8121883a 	add	r16,r16,r4
   172b0:	1887c83a 	sub	r3,r3,r2
   172b4:	80c00015 	stw	r3,0(r16)
   172b8:	003fe206 	br	17244 <_malloc_r+0x9c>
                p->next = r->next;
   172bc:	18800115 	stw	r2,4(r3)
   172c0:	003ff206 	br	1728c <_malloc_r+0xe4>
        r=r->next;
   172c4:	8007883a 	mov	r3,r16
   172c8:	84000117 	ldw	r16,4(r16)
   172cc:	003fc806 	br	171f0 <_malloc_r+0x48>
    align_p = (char*)ALIGN_TO((unsigned long)p, CHUNK_ALIGN);
   172d0:	140000c4 	addi	r16,r2,3
   172d4:	00ffff04 	movi	r3,-4
   172d8:	80e0703a 	and	r16,r16,r3
    if (align_p != p)
   172dc:	143fe626 	beq	r2,r16,17278 <_malloc_r+0xd0>
        p = _SBRK_R(RCALL align_p - p);
   172e0:	808bc83a 	sub	r5,r16,r2
   172e4:	9009883a 	mov	r4,r18
   172e8:	00172f80 	call	172f8 <_sbrk_r>
        if (p == (void *)-1)
   172ec:	10bfffe0 	cmpeqi	r2,r2,-1
   172f0:	103fe126 	beq	r2,zero,17278 <_malloc_r+0xd0>
   172f4:	003fca06 	br	17220 <_malloc_r+0x78>

000172f8 <_sbrk_r>:
*/

void *
_sbrk_r (struct _reent *ptr,
     ptrdiff_t incr)
{
   172f8:	defffe04 	addi	sp,sp,-8
   172fc:	dc000015 	stw	r16,0(sp)
   17300:	2021883a 	mov	r16,r4
   17304:	2809883a 	mov	r4,r5
   17308:	dfc00115 	stw	ra,4(sp)
  char *ret;
  void *_sbrk(ptrdiff_t);

  errno = 0;
   1730c:	d0221a15 	stw	zero,-30616(gp)
  if ((ret = (char *)(_sbrk (incr))) == (void *) -1 && errno != 0)
   17310:	001790c0 	call	1790c <sbrk>
   17314:	10ffffd8 	cmpnei	r3,r2,-1
   17318:	1800031e 	bne	r3,zero,17328 <_sbrk_r+0x30>
   1731c:	d0e21a17 	ldw	r3,-30616(gp)
   17320:	18000126 	beq	r3,zero,17328 <_sbrk_r+0x30>
    ptr->_errno = errno;
   17324:	80c00015 	stw	r3,0(r16)
  return ret;
}
   17328:	dfc00117 	ldw	ra,4(sp)
   1732c:	dc000017 	ldw	r16,0(sp)
   17330:	dec00204 	addi	sp,sp,8
   17334:	f800283a 	ret

00017338 <_init_signal_r>:
int
_init_signal_r (struct _reent *ptr)
{
  int i;

  if (ptr->_sig_func == NULL)
   17338:	20800c17 	ldw	r2,48(r4)
   1733c:	1000131e 	bne	r2,zero,1738c <_init_signal_r+0x54>
{
   17340:	defffe04 	addi	sp,sp,-8
    {
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   17344:	01402004 	movi	r5,128
{
   17348:	dc000015 	stw	r16,0(sp)
   1734c:	dfc00115 	stw	ra,4(sp)
   17350:	2021883a 	mov	r16,r4
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   17354:	00171a80 	call	171a8 <_malloc_r>
   17358:	80800c15 	stw	r2,48(r16)
   1735c:	1009883a 	mov	r4,r2
      if (ptr->_sig_func == NULL)
   17360:	10000826 	beq	r2,zero,17384 <_init_signal_r+0x4c>
	return -1;

      for (i = 0; i < NSIG; i++)
	ptr->_sig_func[i] = SIG_DFL;
   17364:	01802004 	movi	r6,128
   17368:	000b883a 	mov	r5,zero
   1736c:	00170900 	call	17090 <memset>
    }

  return 0;
   17370:	0005883a 	mov	r2,zero
}
   17374:	dfc00117 	ldw	ra,4(sp)
   17378:	dc000017 	ldw	r16,0(sp)
   1737c:	dec00204 	addi	sp,sp,8
   17380:	f800283a 	ret
	return -1;
   17384:	00bfffc4 	movi	r2,-1
   17388:	003ffa06 	br	17374 <_init_signal_r+0x3c>
  return 0;
   1738c:	0005883a 	mov	r2,zero
}
   17390:	f800283a 	ret

00017394 <_signal_r>:

_sig_func_ptr
_signal_r (struct _reent *ptr,
	int sig,
	_sig_func_ptr func)
{
   17394:	defffc04 	addi	sp,sp,-16
   17398:	dc400115 	stw	r17,4(sp)
   1739c:	dfc00315 	stw	ra,12(sp)
   173a0:	dc800215 	stw	r18,8(sp)
   173a4:	dc000015 	stw	r16,0(sp)
  _sig_func_ptr old_func;

  if (sig < 0 || sig >= NSIG)
   173a8:	28800830 	cmpltui	r2,r5,32
{
   173ac:	2023883a 	mov	r17,r4
  if (sig < 0 || sig >= NSIG)
   173b0:	1000041e 	bne	r2,zero,173c4 <_signal_r+0x30>
    {
      ptr->_errno = EINVAL;
   173b4:	00800584 	movi	r2,22
   173b8:	20800015 	stw	r2,0(r4)
      return SIG_ERR;
    }

  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
    return SIG_ERR;
   173bc:	00bfffc4 	movi	r2,-1
   173c0:	00000906 	br	173e8 <_signal_r+0x54>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   173c4:	20800c17 	ldw	r2,48(r4)
   173c8:	2821883a 	mov	r16,r5
   173cc:	3025883a 	mov	r18,r6
   173d0:	10000b26 	beq	r2,zero,17400 <_signal_r+0x6c>
  
  old_func = ptr->_sig_func[sig];
   173d4:	89400c17 	ldw	r5,48(r17)
   173d8:	802090ba 	slli	r16,r16,2
   173dc:	2c21883a 	add	r16,r5,r16
   173e0:	80800017 	ldw	r2,0(r16)
  ptr->_sig_func[sig] = func;
   173e4:	84800015 	stw	r18,0(r16)

  return old_func;
}
   173e8:	dfc00317 	ldw	ra,12(sp)
   173ec:	dc800217 	ldw	r18,8(sp)
   173f0:	dc400117 	ldw	r17,4(sp)
   173f4:	dc000017 	ldw	r16,0(sp)
   173f8:	dec00404 	addi	sp,sp,16
   173fc:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17400:	00173380 	call	17338 <_init_signal_r>
   17404:	103ff326 	beq	r2,zero,173d4 <_signal_r+0x40>
   17408:	003fec06 	br	173bc <_signal_r+0x28>

0001740c <_raise_r>:

int 
_raise_r (struct _reent *ptr,
     int sig)
{
   1740c:	defffd04 	addi	sp,sp,-12
   17410:	dc000015 	stw	r16,0(sp)
   17414:	dfc00215 	stw	ra,8(sp)
   17418:	dc400115 	stw	r17,4(sp)
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   1741c:	28800830 	cmpltui	r2,r5,32
{
   17420:	2021883a 	mov	r16,r4
  if (sig < 0 || sig >= NSIG)
   17424:	1000081e 	bne	r2,zero,17448 <_raise_r+0x3c>
    {
      ptr->_errno = EINVAL;
   17428:	00800584 	movi	r2,22
   1742c:	20800015 	stw	r2,0(r4)
      return -1;
   17430:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   17434:	dfc00217 	ldw	ra,8(sp)
   17438:	dc400117 	ldw	r17,4(sp)
   1743c:	dc000017 	ldw	r16,0(sp)
   17440:	dec00304 	addi	sp,sp,12
   17444:	f800283a 	ret
  if (ptr->_sig_func == NULL)
   17448:	20800c17 	ldw	r2,48(r4)
   1744c:	2823883a 	mov	r17,r5
   17450:	10000426 	beq	r2,zero,17464 <_raise_r+0x58>
    func = ptr->_sig_func[sig];
   17454:	280690ba 	slli	r3,r5,2
   17458:	10c5883a 	add	r2,r2,r3
   1745c:	10c00017 	ldw	r3,0(r2)
  if (func == SIG_DFL)
   17460:	18000a1e 	bne	r3,zero,1748c <_raise_r+0x80>
    return _kill_r (ptr, _getpid_r (ptr), sig);
   17464:	8009883a 	mov	r4,r16
   17468:	00175d40 	call	175d4 <_getpid_r>
   1746c:	880d883a 	mov	r6,r17
   17470:	100b883a 	mov	r5,r2
   17474:	8009883a 	mov	r4,r16
}
   17478:	dfc00217 	ldw	ra,8(sp)
   1747c:	dc400117 	ldw	r17,4(sp)
   17480:	dc000017 	ldw	r16,0(sp)
   17484:	dec00304 	addi	sp,sp,12
    return _kill_r (ptr, _getpid_r (ptr), sig);
   17488:	00175901 	jmpi	17590 <_kill_r>
  else if (func == SIG_IGN)
   1748c:	19000060 	cmpeqi	r4,r3,1
   17490:	2000091e 	bne	r4,zero,174b8 <_raise_r+0xac>
  else if (func == SIG_ERR)
   17494:	193fffd8 	cmpnei	r4,r3,-1
   17498:	2000041e 	bne	r4,zero,174ac <_raise_r+0xa0>
      ptr->_errno = EINVAL;
   1749c:	00800584 	movi	r2,22
   174a0:	80800015 	stw	r2,0(r16)
      return 1;
   174a4:	00800044 	movi	r2,1
   174a8:	003fe206 	br	17434 <_raise_r+0x28>
      ptr->_sig_func[sig] = SIG_DFL;
   174ac:	10000015 	stw	zero,0(r2)
      func (sig);
   174b0:	2809883a 	mov	r4,r5
   174b4:	183ee83a 	callr	r3
    return 0;
   174b8:	0005883a 	mov	r2,zero
   174bc:	003fdd06 	br	17434 <_raise_r+0x28>

000174c0 <__sigtramp_r>:
__sigtramp_r (struct _reent *ptr,
     int sig)
{
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   174c0:	28800830 	cmpltui	r2,r5,32
   174c4:	1000021e 	bne	r2,zero,174d0 <__sigtramp_r+0x10>
    {
      return -1;
   174c8:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   174cc:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   174d0:	20800c17 	ldw	r2,48(r4)
{
   174d4:	defffd04 	addi	sp,sp,-12
   174d8:	dc400115 	stw	r17,4(sp)
   174dc:	dc000015 	stw	r16,0(sp)
   174e0:	dfc00215 	stw	ra,8(sp)
   174e4:	2023883a 	mov	r17,r4
   174e8:	2821883a 	mov	r16,r5
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   174ec:	10000726 	beq	r2,zero,1750c <__sigtramp_r+0x4c>
  func = ptr->_sig_func[sig];
   174f0:	88800c17 	ldw	r2,48(r17)
   174f4:	800690ba 	slli	r3,r16,2
   174f8:	10c7883a 	add	r3,r2,r3
   174fc:	18800017 	ldw	r2,0(r3)
  if (func == SIG_DFL)
   17500:	10000a1e 	bne	r2,zero,1752c <__sigtramp_r+0x6c>
    return 1;
   17504:	00800044 	movi	r2,1
   17508:	00000306 	br	17518 <__sigtramp_r+0x58>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   1750c:	00173380 	call	17338 <_init_signal_r>
   17510:	103ff726 	beq	r2,zero,174f0 <__sigtramp_r+0x30>
      return -1;
   17514:	00bfffc4 	movi	r2,-1
}
   17518:	dfc00217 	ldw	ra,8(sp)
   1751c:	dc400117 	ldw	r17,4(sp)
   17520:	dc000017 	ldw	r16,0(sp)
   17524:	dec00304 	addi	sp,sp,12
   17528:	f800283a 	ret
  else if (func == SIG_ERR)
   1752c:	113fffe0 	cmpeqi	r4,r2,-1
   17530:	2000071e 	bne	r4,zero,17550 <__sigtramp_r+0x90>
  else if (func == SIG_IGN)
   17534:	11000060 	cmpeqi	r4,r2,1
   17538:	2000071e 	bne	r4,zero,17558 <__sigtramp_r+0x98>
      ptr->_sig_func[sig] = SIG_DFL;
   1753c:	18000015 	stw	zero,0(r3)
      func (sig);
   17540:	8009883a 	mov	r4,r16
   17544:	103ee83a 	callr	r2
      return 0;
   17548:	0005883a 	mov	r2,zero
   1754c:	003ff206 	br	17518 <__sigtramp_r+0x58>
    return 2;
   17550:	00800084 	movi	r2,2
   17554:	003ff006 	br	17518 <__sigtramp_r+0x58>
    return 3;
   17558:	008000c4 	movi	r2,3
   1755c:	003fee06 	br	17518 <__sigtramp_r+0x58>

00017560 <raise>:
#ifndef _REENT_ONLY

int 
raise (int sig)
{
  return _raise_r (_REENT, sig);
   17560:	200b883a 	mov	r5,r4
   17564:	d1209e17 	ldw	r4,-32136(gp)
   17568:	001740c1 	jmpi	1740c <_raise_r>

0001756c <signal>:

_sig_func_ptr
signal (int sig,
	_sig_func_ptr func)
{
  return _signal_r (_REENT, sig, func);
   1756c:	280d883a 	mov	r6,r5
   17570:	200b883a 	mov	r5,r4
   17574:	d1209e17 	ldw	r4,-32136(gp)
   17578:	00173941 	jmpi	17394 <_signal_r>

0001757c <_init_signal>:
}

int 
_init_signal (void)
{
  return _init_signal_r (_REENT);
   1757c:	d1209e17 	ldw	r4,-32136(gp)
   17580:	00173381 	jmpi	17338 <_init_signal_r>

00017584 <__sigtramp>:
}

int
__sigtramp (int sig)
{
  return __sigtramp_r (_REENT, sig);
   17584:	200b883a 	mov	r5,r4
   17588:	d1209e17 	ldw	r4,-32136(gp)
   1758c:	00174c01 	jmpi	174c0 <__sigtramp_r>

00017590 <_kill_r>:

int
_kill_r (struct _reent *ptr,
     int pid,
     int sig)
{
   17590:	defffe04 	addi	sp,sp,-8
   17594:	dc000015 	stw	r16,0(sp)
   17598:	2021883a 	mov	r16,r4
   1759c:	2809883a 	mov	r4,r5
   175a0:	300b883a 	mov	r5,r6
   175a4:	dfc00115 	stw	ra,4(sp)
  int ret;

  errno = 0;
   175a8:	d0221a15 	stw	zero,-30616(gp)
  if ((ret = _kill (pid, sig)) == -1 && errno != 0)
   175ac:	001772c0 	call	1772c <kill>
   175b0:	10ffffd8 	cmpnei	r3,r2,-1
   175b4:	1800031e 	bne	r3,zero,175c4 <_kill_r+0x34>
   175b8:	d0e21a17 	ldw	r3,-30616(gp)
   175bc:	18000126 	beq	r3,zero,175c4 <_kill_r+0x34>
    ptr->_errno = errno;
   175c0:	80c00015 	stw	r3,0(r16)
  return ret;
}
   175c4:	dfc00117 	ldw	ra,4(sp)
   175c8:	dc000017 	ldw	r16,0(sp)
   175cc:	dec00204 	addi	sp,sp,8
   175d0:	f800283a 	ret

000175d4 <_getpid_r>:

int
_getpid_r (struct _reent *ptr)
{
  int ret;
  ret = _getpid ();
   175d4:	00176301 	jmpi	17630 <getpid>

000175d8 <strcmp>:
int
strcmp (const char *s1,
	const char *s2)
{ 
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  while (*s1 != '\0' && *s1 == *s2)
   175d8:	20800003 	ldbu	r2,0(r4)
   175dc:	28c00003 	ldbu	r3,0(r5)
   175e0:	11803fcc 	andi	r6,r2,255
   175e4:	3180201c 	xori	r6,r6,128
   175e8:	31bfe004 	addi	r6,r6,-128
   175ec:	30000426 	beq	r6,zero,17600 <strcmp+0x28>
   175f0:	19c03fcc 	andi	r7,r3,255
   175f4:	39c0201c 	xori	r7,r7,128
   175f8:	39ffe004 	addi	r7,r7,-128
   175fc:	31c00426 	beq	r6,r7,17610 <strcmp+0x38>
    {
      s1++;
      s2++;
    }

  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
   17600:	18c03fcc 	andi	r3,r3,255
   17604:	10803fcc 	andi	r2,r2,255
      s1++;
      s2++;
    }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   17608:	10c5c83a 	sub	r2,r2,r3
   1760c:	f800283a 	ret
      s1++;
   17610:	21000044 	addi	r4,r4,1
      s2++;
   17614:	29400044 	addi	r5,r5,1
   17618:	003fef06 	br	175d8 <strcmp>

0001761c <_exit>:
   1761c:	20000226 	beq	r4,zero,17628 <_exit+0xc>
   17620:	002af070 	cmpltui	zero,zero,43969
   17624:	003fff06 	br	17624 <_exit+0x8>
   17628:	002af0b0 	cmpltui	zero,zero,43970
   1762c:	003ffd06 	br	17624 <_exit+0x8>

00017630 <getpid>:
   17630:	0005883a 	mov	r2,zero
   17634:	f800283a 	ret

00017638 <alt_ic_isr_register>:
   17638:	00176c41 	jmpi	176c4 <alt_iic_isr_register>

0001763c <alt_ic_irq_enable>:
   1763c:	0007303a 	rdctl	r3,status
   17640:	00bfff84 	movi	r2,-2
   17644:	1884703a 	and	r2,r3,r2
   17648:	1001703a 	wrctl	status,r2
   1764c:	00800044 	movi	r2,1
   17650:	d1221b17 	ldw	r4,-30612(gp)
   17654:	114a983a 	sll	r5,r2,r5
   17658:	290ab03a 	or	r5,r5,r4
   1765c:	d1621b15 	stw	r5,-30612(gp)
   17660:	d0a21b17 	ldw	r2,-30612(gp)
   17664:	100170fa 	wrctl	ienable,r2
   17668:	1801703a 	wrctl	status,r3
   1766c:	0005883a 	mov	r2,zero
   17670:	f800283a 	ret

00017674 <alt_ic_irq_disable>:
   17674:	0007303a 	rdctl	r3,status
   17678:	00bfff84 	movi	r2,-2
   1767c:	1884703a 	and	r2,r3,r2
   17680:	1001703a 	wrctl	status,r2
   17684:	00bfff84 	movi	r2,-2
   17688:	d1221b17 	ldw	r4,-30612(gp)
   1768c:	114a183a 	rol	r5,r2,r5
   17690:	290a703a 	and	r5,r5,r4
   17694:	d1621b15 	stw	r5,-30612(gp)
   17698:	d0a21b17 	ldw	r2,-30612(gp)
   1769c:	100170fa 	wrctl	ienable,r2
   176a0:	1801703a 	wrctl	status,r3
   176a4:	0005883a 	mov	r2,zero
   176a8:	f800283a 	ret

000176ac <alt_ic_irq_enabled>:
   176ac:	000730fa 	rdctl	r3,ienable
   176b0:	00800044 	movi	r2,1
   176b4:	1144983a 	sll	r2,r2,r5
   176b8:	10c4703a 	and	r2,r2,r3
   176bc:	1004c03a 	cmpne	r2,r2,zero
   176c0:	f800283a 	ret

000176c4 <alt_iic_isr_register>:
   176c4:	28800808 	cmpgei	r2,r5,32
   176c8:	1000161e 	bne	r2,zero,17724 <alt_iic_isr_register+0x60>
   176cc:	defffe04 	addi	sp,sp,-8
   176d0:	dfc00115 	stw	ra,4(sp)
   176d4:	dc000015 	stw	r16,0(sp)
   176d8:	0021303a 	rdctl	r16,status
   176dc:	00bfff84 	movi	r2,-2
   176e0:	8084703a 	and	r2,r16,r2
   176e4:	1001703a 	wrctl	status,r2
   176e8:	280690fa 	slli	r3,r5,3
   176ec:	008000b4 	movhi	r2,2
   176f0:	10a7a904 	addi	r2,r2,-24924
   176f4:	10c5883a 	add	r2,r2,r3
   176f8:	11800015 	stw	r6,0(r2)
   176fc:	11c00115 	stw	r7,4(r2)
   17700:	30000626 	beq	r6,zero,1771c <alt_iic_isr_register+0x58>
   17704:	001763c0 	call	1763c <alt_ic_irq_enable>
   17708:	8001703a 	wrctl	status,r16
   1770c:	dfc00117 	ldw	ra,4(sp)
   17710:	dc000017 	ldw	r16,0(sp)
   17714:	dec00204 	addi	sp,sp,8
   17718:	f800283a 	ret
   1771c:	00176740 	call	17674 <alt_ic_irq_disable>
   17720:	003ff906 	br	17708 <alt_iic_isr_register+0x44>
   17724:	00bffa84 	movi	r2,-22
   17728:	f800283a 	ret

0001772c <kill>:
   1772c:	defffe04 	addi	sp,sp,-8
   17730:	dfc00115 	stw	ra,4(sp)
   17734:	dc000015 	stw	r16,0(sp)
   17738:	01002916 	blt	zero,r4,177e0 <kill+0xb4>
   1773c:	28800828 	cmpgeui	r2,r5,32
   17740:	1000311e 	bne	r2,zero,17808 <kill+0xdc>
   17744:	280a90ba 	slli	r5,r5,2
   17748:	00800074 	movhi	r2,1
   1774c:	2885883a 	add	r2,r5,r2
   17750:	109dd617 	ldw	r2,30552(r2)
   17754:	1000683a 	jmp	r2
   17758:	00017818 	cmpnei	zero,zero,1504
   1775c:	00017808 	cmpgei	zero,zero,1504
   17760:	00017808 	cmpgei	zero,zero,1504
   17764:	000177d8 	cmpnei	zero,zero,1503
   17768:	000177d8 	cmpnei	zero,zero,1503
   1776c:	000177d8 	cmpnei	zero,zero,1503
   17770:	000177d8 	cmpnei	zero,zero,1503
   17774:	00017808 	cmpgei	zero,zero,1504
   17778:	000177d8 	cmpnei	zero,zero,1503
   1777c:	000177d8 	cmpnei	zero,zero,1503
   17780:	000177d8 	cmpnei	zero,zero,1503
   17784:	000177d8 	cmpnei	zero,zero,1503
   17788:	000177d8 	cmpnei	zero,zero,1503
   1778c:	000177d8 	cmpnei	zero,zero,1503
   17790:	000177d8 	cmpnei	zero,zero,1503
   17794:	000177d8 	cmpnei	zero,zero,1503
   17798:	00017818 	cmpnei	zero,zero,1504
   1779c:	00017808 	cmpgei	zero,zero,1504
   177a0:	00017808 	cmpgei	zero,zero,1504
   177a4:	00017808 	cmpgei	zero,zero,1504
   177a8:	00017818 	cmpnei	zero,zero,1504
   177ac:	00017808 	cmpgei	zero,zero,1504
   177b0:	00017808 	cmpgei	zero,zero,1504
   177b4:	000177d8 	cmpnei	zero,zero,1503
   177b8:	000177d8 	cmpnei	zero,zero,1503
   177bc:	000177d8 	cmpnei	zero,zero,1503
   177c0:	000177d8 	cmpnei	zero,zero,1503
   177c4:	000177d8 	cmpnei	zero,zero,1503
   177c8:	00017808 	cmpgei	zero,zero,1504
   177cc:	00017808 	cmpgei	zero,zero,1504
   177d0:	000177d8 	cmpnei	zero,zero,1503
   177d4:	000177d8 	cmpnei	zero,zero,1503
   177d8:	0009883a 	mov	r4,zero
   177dc:	001761c0 	call	1761c <_exit>
   177e0:	040000c4 	movi	r16,3
   177e4:	d0a0a617 	ldw	r2,-32104(gp)
   177e8:	10000926 	beq	r2,zero,17810 <kill+0xe4>
   177ec:	103ee83a 	callr	r2
   177f0:	14000015 	stw	r16,0(r2)
   177f4:	00bfffc4 	movi	r2,-1
   177f8:	dfc00117 	ldw	ra,4(sp)
   177fc:	dc000017 	ldw	r16,0(sp)
   17800:	dec00204 	addi	sp,sp,8
   17804:	f800283a 	ret
   17808:	04000584 	movi	r16,22
   1780c:	003ff506 	br	177e4 <kill+0xb8>
   17810:	d0a21a04 	addi	r2,gp,-30616
   17814:	003ff606 	br	177f0 <kill+0xc4>
   17818:	0005883a 	mov	r2,zero
   1781c:	003ff606 	br	177f8 <kill+0xcc>

00017820 <alt_load>:
   17820:	deffff04 	addi	sp,sp,-4
   17824:	010000b4 	movhi	r4,2
   17828:	014000b4 	movhi	r5,2
   1782c:	dfc00015 	stw	ra,0(sp)
   17830:	21247004 	addi	r4,r4,-28224
   17834:	2965d204 	addi	r5,r5,-26808
   17838:	21400426 	beq	r4,r5,1784c <alt_load+0x2c>
   1783c:	018000b4 	movhi	r6,2
   17840:	31a5d204 	addi	r6,r6,-26808
   17844:	310dc83a 	sub	r6,r6,r4
   17848:	00170680 	call	17068 <memcpy>
   1784c:	01000074 	movhi	r4,1
   17850:	01400074 	movhi	r5,1
   17854:	21000804 	addi	r4,r4,32
   17858:	29400804 	addi	r5,r5,32
   1785c:	21400426 	beq	r4,r5,17870 <alt_load+0x50>
   17860:	01800074 	movhi	r6,1
   17864:	31806004 	addi	r6,r6,384
   17868:	310dc83a 	sub	r6,r6,r4
   1786c:	00170680 	call	17068 <memcpy>
   17870:	010000b4 	movhi	r4,2
   17874:	014000b4 	movhi	r5,2
   17878:	2121b304 	addi	r4,r4,-31028
   1787c:	2961b304 	addi	r5,r5,-31028
   17880:	21400426 	beq	r4,r5,17894 <alt_load+0x74>
   17884:	018000b4 	movhi	r6,2
   17888:	31a47004 	addi	r6,r6,-28224
   1788c:	310dc83a 	sub	r6,r6,r4
   17890:	00170680 	call	17068 <memcpy>
   17894:	0017d6c0 	call	17d6c <alt_dcache_flush_all>
   17898:	dfc00017 	ldw	ra,0(sp)
   1789c:	dec00104 	addi	sp,sp,4
   178a0:	0017e741 	jmpi	17e74 <alt_icache_flush_all>

000178a4 <alt_main>:
   178a4:	defffe04 	addi	sp,sp,-8
   178a8:	0009883a 	mov	r4,zero
   178ac:	dfc00115 	stw	ra,4(sp)
   178b0:	dc000015 	stw	r16,0(sp)
   178b4:	001795c0 	call	1795c <alt_irq_init>
   178b8:	001797c0 	call	1797c <alt_sys_init>
   178bc:	018000b4 	movhi	r6,2
   178c0:	31a46604 	addi	r6,r6,-28264
   178c4:	300b883a 	mov	r5,r6
   178c8:	3009883a 	mov	r4,r6
   178cc:	0017f600 	call	17f60 <alt_io_redirect>
   178d0:	0017de40 	call	17de4 <_do_ctors>
   178d4:	01000074 	movhi	r4,1
   178d8:	211f8b04 	addi	r4,r4,32300
   178dc:	001839c0 	call	1839c <atexit>
   178e0:	d1a21c17 	ldw	r6,-30608(gp)
   178e4:	d1621d17 	ldw	r5,-30604(gp)
   178e8:	d1221e17 	ldw	r4,-30600(gp)
   178ec:	0011dd40 	call	11dd4 <main>
   178f0:	01000044 	movi	r4,1
   178f4:	1021883a 	mov	r16,r2
   178f8:	0017cb80 	call	17cb8 <close>
   178fc:	8009883a 	mov	r4,r16
   17900:	00183b00 	call	183b0 <exit>

00017904 <__malloc_lock>:
   17904:	f800283a 	ret

00017908 <__malloc_unlock>:
   17908:	f800283a 	ret

0001790c <sbrk>:
   1790c:	0007303a 	rdctl	r3,status
   17910:	00bfff84 	movi	r2,-2
   17914:	1884703a 	and	r2,r3,r2
   17918:	1001703a 	wrctl	status,r2
   1791c:	d0a0a017 	ldw	r2,-32128(gp)
   17920:	017fff04 	movi	r5,-4
   17924:	108000c4 	addi	r2,r2,3
   17928:	1144703a 	and	r2,r2,r5
   1792c:	014000b4 	movhi	r5,2
   17930:	d0a0a015 	stw	r2,-32128(gp)
   17934:	1109883a 	add	r4,r2,r4
   17938:	296d0004 	addi	r5,r5,-19456
   1793c:	2900032e 	bgeu	r5,r4,1794c <sbrk+0x40>
   17940:	1801703a 	wrctl	status,r3
   17944:	00bfffc4 	movi	r2,-1
   17948:	f800283a 	ret
   1794c:	d120a015 	stw	r4,-32128(gp)
   17950:	1801703a 	wrctl	status,r3
   17954:	f800283a 	ret

00017958 <usleep>:
   17958:	0017c0c1 	jmpi	17c0c <alt_busy_sleep>

0001795c <alt_irq_init>:
   1795c:	deffff04 	addi	sp,sp,-4
   17960:	dfc00015 	stw	ra,0(sp)
   17964:	00182340 	call	18234 <altera_nios2_gen2_irq_init>
   17968:	00800044 	movi	r2,1
   1796c:	1001703a 	wrctl	status,r2
   17970:	dfc00017 	ldw	ra,0(sp)
   17974:	dec00104 	addi	sp,sp,4
   17978:	f800283a 	ret

0001797c <alt_sys_init>:
   1797c:	010000b4 	movhi	r4,2
   17980:	deffff04 	addi	sp,sp,-4
   17984:	01c0fa04 	movi	r7,1000
   17988:	01800044 	movi	r6,1
   1798c:	000b883a 	mov	r5,zero
   17990:	210a1004 	addi	r4,r4,10304
   17994:	dfc00015 	stw	ra,0(sp)
   17998:	0017aa80 	call	17aa8 <alt_avalon_timer_sc_init>
   1799c:	010000b4 	movhi	r4,2
   179a0:	d160a204 	addi	r5,gp,-32120
   179a4:	2124b404 	addi	r4,r4,-27952
   179a8:	0017d780 	call	17d78 <alt_dev_llist_insert>
   179ac:	010000b4 	movhi	r4,2
   179b0:	d160a204 	addi	r5,gp,-32120
   179b4:	2124a904 	addi	r4,r4,-27996
   179b8:	dfc00017 	ldw	ra,0(sp)
   179bc:	dec00104 	addi	sp,sp,4
   179c0:	0017d781 	jmpi	17d78 <alt_dev_llist_insert>

000179c4 <altera_avalon_jtag_uart_read_fd>:
   179c4:	20800017 	ldw	r2,0(r4)
   179c8:	21c00217 	ldw	r7,8(r4)
   179cc:	11000a04 	addi	r4,r2,40
   179d0:	00179e41 	jmpi	179e4 <altera_avalon_jtag_uart_read>

000179d4 <altera_avalon_jtag_uart_write_fd>:
   179d4:	20800017 	ldw	r2,0(r4)
   179d8:	21c00217 	ldw	r7,8(r4)
   179dc:	11000a04 	addi	r4,r2,40
   179e0:	0017a3c1 	jmpi	17a3c <altera_avalon_jtag_uart_write>

000179e4 <altera_avalon_jtag_uart_read>:
   179e4:	21000017 	ldw	r4,0(r4)
   179e8:	298d883a 	add	r6,r5,r6
   179ec:	2805883a 	mov	r2,r5
   179f0:	3a10000c 	andi	r8,r7,16384
   179f4:	11800536 	bltu	r2,r6,17a0c <altera_avalon_jtag_uart_read+0x28>
   179f8:	11400b1e 	bne	r2,r5,17a28 <altera_avalon_jtag_uart_read+0x44>
   179fc:	39d0000c 	andi	r7,r7,16384
   17a00:	38000c1e 	bne	r7,zero,17a34 <altera_avalon_jtag_uart_read+0x50>
   17a04:	00bffec4 	movi	r2,-5
   17a08:	f800283a 	ret
   17a0c:	20c00037 	ldwio	r3,0(r4)
   17a10:	1a60000c 	andi	r9,r3,32768
   17a14:	48000326 	beq	r9,zero,17a24 <altera_avalon_jtag_uart_read+0x40>
   17a18:	10c00005 	stb	r3,0(r2)
   17a1c:	10800044 	addi	r2,r2,1
   17a20:	003ff406 	br	179f4 <altera_avalon_jtag_uart_read+0x10>
   17a24:	11400226 	beq	r2,r5,17a30 <altera_avalon_jtag_uart_read+0x4c>
   17a28:	1145c83a 	sub	r2,r2,r5
   17a2c:	f800283a 	ret
   17a30:	403ff026 	beq	r8,zero,179f4 <altera_avalon_jtag_uart_read+0x10>
   17a34:	00bffd44 	movi	r2,-11
   17a38:	f800283a 	ret

00017a3c <altera_avalon_jtag_uart_write>:
   17a3c:	21000017 	ldw	r4,0(r4)
   17a40:	3005883a 	mov	r2,r6
   17a44:	298d883a 	add	r6,r5,r6
   17a48:	29800136 	bltu	r5,r6,17a50 <altera_avalon_jtag_uart_write+0x14>
   17a4c:	f800283a 	ret
   17a50:	20c00137 	ldwio	r3,4(r4)
   17a54:	18ffffec 	andhi	r3,r3,65535
   17a58:	183ffb26 	beq	r3,zero,17a48 <altera_avalon_jtag_uart_write+0xc>
   17a5c:	28c00007 	ldb	r3,0(r5)
   17a60:	29400044 	addi	r5,r5,1
   17a64:	20c00035 	stwio	r3,0(r4)
   17a68:	003ff706 	br	17a48 <altera_avalon_jtag_uart_write+0xc>

00017a6c <alt_avalon_timer_sc_irq>:
   17a6c:	defffe04 	addi	sp,sp,-8
   17a70:	dfc00115 	stw	ra,4(sp)
   17a74:	dc000015 	stw	r16,0(sp)
   17a78:	20000035 	stwio	zero,0(r4)
   17a7c:	20800137 	ldwio	r2,4(r4)
   17a80:	0021303a 	rdctl	r16,status
   17a84:	00bfff84 	movi	r2,-2
   17a88:	8084703a 	and	r2,r16,r2
   17a8c:	1001703a 	wrctl	status,r2
   17a90:	001817c0 	call	1817c <alt_tick>
   17a94:	8001703a 	wrctl	status,r16
   17a98:	dfc00117 	ldw	ra,4(sp)
   17a9c:	dc000017 	ldw	r16,0(sp)
   17aa0:	dec00204 	addi	sp,sp,8
   17aa4:	f800283a 	ret

00017aa8 <alt_avalon_timer_sc_init>:
   17aa8:	d0e22117 	ldw	r3,-30588(gp)
   17aac:	defffe04 	addi	sp,sp,-8
   17ab0:	dfc00115 	stw	ra,4(sp)
   17ab4:	2005883a 	mov	r2,r4
   17ab8:	2809883a 	mov	r4,r5
   17abc:	300b883a 	mov	r5,r6
   17ac0:	1800011e 	bne	r3,zero,17ac8 <alt_avalon_timer_sc_init+0x20>
   17ac4:	d1e22115 	stw	r7,-30588(gp)
   17ac8:	00c001c4 	movi	r3,7
   17acc:	10c00135 	stwio	r3,4(r2)
   17ad0:	01800074 	movhi	r6,1
   17ad4:	d8000015 	stw	zero,0(sp)
   17ad8:	100f883a 	mov	r7,r2
   17adc:	319e9b04 	addi	r6,r6,31340
   17ae0:	00176380 	call	17638 <alt_ic_isr_register>
   17ae4:	dfc00117 	ldw	ra,4(sp)
   17ae8:	dec00204 	addi	sp,sp,8
   17aec:	f800283a 	ret

00017af0 <altera_avalon_uart_read_fd>:
   17af0:	20800017 	ldw	r2,0(r4)
   17af4:	21c00217 	ldw	r7,8(r4)
   17af8:	11000a04 	addi	r4,r2,40
   17afc:	0017b101 	jmpi	17b10 <altera_avalon_uart_read>

00017b00 <altera_avalon_uart_write_fd>:
   17b00:	20800017 	ldw	r2,0(r4)
   17b04:	21c00217 	ldw	r7,8(r4)
   17b08:	11000a04 	addi	r4,r2,40
   17b0c:	0017b881 	jmpi	17b88 <altera_avalon_uart_write>

00017b10 <altera_avalon_uart_read>:
   17b10:	39d0000c 	andi	r7,r7,16384
   17b14:	20c00017 	ldw	r3,0(r4)
   17b18:	18800237 	ldwio	r2,8(r3)
   17b1c:	18000235 	stwio	zero,8(r3)
   17b20:	10c0200c 	andi	r3,r2,128
   17b24:	18000c1e 	bne	r3,zero,17b58 <altera_avalon_uart_read+0x48>
   17b28:	383ffa26 	beq	r7,zero,17b14 <altera_avalon_uart_read+0x4>
   17b2c:	d0a0a617 	ldw	r2,-32104(gp)
   17b30:	10001026 	beq	r2,zero,17b74 <altera_avalon_uart_read+0x64>
   17b34:	deffff04 	addi	sp,sp,-4
   17b38:	dfc00015 	stw	ra,0(sp)
   17b3c:	103ee83a 	callr	r2
   17b40:	00c002c4 	movi	r3,11
   17b44:	10c00015 	stw	r3,0(r2)
   17b48:	0005883a 	mov	r2,zero
   17b4c:	dfc00017 	ldw	ra,0(sp)
   17b50:	dec00104 	addi	sp,sp,4
   17b54:	f800283a 	ret
   17b58:	20c00017 	ldw	r3,0(r4)
   17b5c:	18c00037 	ldwio	r3,0(r3)
   17b60:	28c00005 	stb	r3,0(r5)
   17b64:	108000cc 	andi	r2,r2,3
   17b68:	103fef1e 	bne	r2,zero,17b28 <altera_avalon_uart_read+0x18>
   17b6c:	00800044 	movi	r2,1
   17b70:	f800283a 	ret
   17b74:	d0a21a04 	addi	r2,gp,-30616
   17b78:	00c002c4 	movi	r3,11
   17b7c:	10c00015 	stw	r3,0(r2)
   17b80:	0005883a 	mov	r2,zero
   17b84:	f800283a 	ret

00017b88 <altera_avalon_uart_write>:
   17b88:	defffd04 	addi	sp,sp,-12
   17b8c:	dc400115 	stw	r17,4(sp)
   17b90:	dc000015 	stw	r16,0(sp)
   17b94:	dfc00215 	stw	ra,8(sp)
   17b98:	3023883a 	mov	r17,r6
   17b9c:	39d0000c 	andi	r7,r7,16384
   17ba0:	3021883a 	mov	r16,r6
   17ba4:	20c00017 	ldw	r3,0(r4)
   17ba8:	18800237 	ldwio	r2,8(r3)
   17bac:	1080100c 	andi	r2,r2,64
   17bb0:	10000526 	beq	r2,zero,17bc8 <altera_avalon_uart_write+0x40>
   17bb4:	28800044 	addi	r2,r5,1
   17bb8:	29400007 	ldb	r5,0(r5)
   17bbc:	19400135 	stwio	r5,4(r3)
   17bc0:	843fffc4 	addi	r16,r16,-1
   17bc4:	100b883a 	mov	r5,r2
   17bc8:	3800071e 	bne	r7,zero,17be8 <altera_avalon_uart_write+0x60>
   17bcc:	803ff51e 	bne	r16,zero,17ba4 <altera_avalon_uart_write+0x1c>
   17bd0:	8c05c83a 	sub	r2,r17,r16
   17bd4:	dfc00217 	ldw	ra,8(sp)
   17bd8:	dc400117 	ldw	r17,4(sp)
   17bdc:	dc000017 	ldw	r16,0(sp)
   17be0:	dec00304 	addi	sp,sp,12
   17be4:	f800283a 	ret
   17be8:	803ff926 	beq	r16,zero,17bd0 <altera_avalon_uart_write+0x48>
   17bec:	d0a0a617 	ldw	r2,-32104(gp)
   17bf0:	10000426 	beq	r2,zero,17c04 <altera_avalon_uart_write+0x7c>
   17bf4:	103ee83a 	callr	r2
   17bf8:	00c002c4 	movi	r3,11
   17bfc:	10c00015 	stw	r3,0(r2)
   17c00:	003ff306 	br	17bd0 <altera_avalon_uart_write+0x48>
   17c04:	d0a21a04 	addi	r2,gp,-30616
   17c08:	003ffb06 	br	17bf8 <altera_avalon_uart_write+0x70>

00017c0c <alt_busy_sleep>:
   17c0c:	defffe04 	addi	sp,sp,-8
   17c10:	008666b4 	movhi	r2,6554
   17c14:	dc000015 	stw	r16,0(sp)
   17c18:	dfc00115 	stw	ra,4(sp)
   17c1c:	10a66604 	addi	r2,r2,-26216
   17c20:	2021883a 	mov	r16,r4
   17c24:	11001f2e 	bgeu	r2,r4,17ca4 <alt_busy_sleep+0x98>
   17c28:	014666b4 	movhi	r5,6554
   17c2c:	29666644 	addi	r5,r5,-26215
   17c30:	0016f500 	call	16f50 <__udivsi3>
   17c34:	00e00034 	movhi	r3,32768
   17c38:	1009883a 	mov	r4,r2
   17c3c:	18ffffc4 	addi	r3,r3,-1
   17c40:	0005883a 	mov	r2,zero
   17c44:	18ffffc4 	addi	r3,r3,-1
   17c48:	183ffe1e 	bne	r3,zero,17c44 <alt_busy_sleep+0x38>
   17c4c:	10800044 	addi	r2,r2,1
   17c50:	113ffc16 	blt	r2,r4,17c44 <alt_busy_sleep+0x38>
   17c54:	017999b4 	movhi	r5,58982
   17c58:	295999c4 	addi	r5,r5,26215
   17c5c:	8161883a 	add	r16,r16,r5
   17c60:	01000e0e 	bge	zero,r4,17c9c <alt_busy_sleep+0x90>
   17c64:	00170100 	call	17010 <__mulsi3>
   17c68:	00c666b4 	movhi	r3,6554
   17c6c:	18e66644 	addi	r3,r3,-26215
   17c70:	10c5883a 	add	r2,r2,r3
   17c74:	1421883a 	add	r16,r2,r16
   17c78:	800490ba 	slli	r2,r16,2
   17c7c:	1421883a 	add	r16,r2,r16
   17c80:	843fffc4 	addi	r16,r16,-1
   17c84:	803ffe1e 	bne	r16,zero,17c80 <alt_busy_sleep+0x74>
   17c88:	0005883a 	mov	r2,zero
   17c8c:	dfc00117 	ldw	ra,4(sp)
   17c90:	dc000017 	ldw	r16,0(sp)
   17c94:	dec00204 	addi	sp,sp,8
   17c98:	f800283a 	ret
   17c9c:	0005883a 	mov	r2,zero
   17ca0:	003ff406 	br	17c74 <alt_busy_sleep+0x68>
   17ca4:	200890ba 	slli	r4,r4,2
   17ca8:	2421883a 	add	r16,r4,r16
   17cac:	843fffc4 	addi	r16,r16,-1
   17cb0:	043ffe16 	blt	zero,r16,17cac <alt_busy_sleep+0xa0>
   17cb4:	003ff406 	br	17c88 <alt_busy_sleep+0x7c>

00017cb8 <close>:
   17cb8:	defffd04 	addi	sp,sp,-12
   17cbc:	dfc00215 	stw	ra,8(sp)
   17cc0:	dc400115 	stw	r17,4(sp)
   17cc4:	dc000015 	stw	r16,0(sp)
   17cc8:	20002016 	blt	r4,zero,17d4c <close+0x94>
   17ccc:	2004907a 	slli	r2,r4,1
   17cd0:	2023883a 	mov	r17,r4
   17cd4:	1105883a 	add	r2,r2,r4
   17cd8:	100490ba 	slli	r2,r2,2
   17cdc:	010000b4 	movhi	r4,2
   17ce0:	2124bf04 	addi	r4,r4,-27908
   17ce4:	1109883a 	add	r4,r2,r4
   17ce8:	20001826 	beq	r4,zero,17d4c <close+0x94>
   17cec:	20800017 	ldw	r2,0(r4)
   17cf0:	10800417 	ldw	r2,16(r2)
   17cf4:	10001126 	beq	r2,zero,17d3c <close+0x84>
   17cf8:	103ee83a 	callr	r2
   17cfc:	1021883a 	mov	r16,r2
   17d00:	8809883a 	mov	r4,r17
   17d04:	00181200 	call	18120 <alt_release_fd>
   17d08:	0005883a 	mov	r2,zero
   17d0c:	8000060e 	bge	r16,zero,17d28 <close+0x70>
   17d10:	d0a0a617 	ldw	r2,-32104(gp)
   17d14:	10000b26 	beq	r2,zero,17d44 <close+0x8c>
   17d18:	103ee83a 	callr	r2
   17d1c:	0421c83a 	sub	r16,zero,r16
   17d20:	14000015 	stw	r16,0(r2)
   17d24:	00bfffc4 	movi	r2,-1
   17d28:	dfc00217 	ldw	ra,8(sp)
   17d2c:	dc400117 	ldw	r17,4(sp)
   17d30:	dc000017 	ldw	r16,0(sp)
   17d34:	dec00304 	addi	sp,sp,12
   17d38:	f800283a 	ret
   17d3c:	0021883a 	mov	r16,zero
   17d40:	003fef06 	br	17d00 <close+0x48>
   17d44:	d0a21a04 	addi	r2,gp,-30616
   17d48:	003ff406 	br	17d1c <close+0x64>
   17d4c:	d0a0a617 	ldw	r2,-32104(gp)
   17d50:	10000426 	beq	r2,zero,17d64 <close+0xac>
   17d54:	103ee83a 	callr	r2
   17d58:	00c01444 	movi	r3,81
   17d5c:	10c00015 	stw	r3,0(r2)
   17d60:	003ff006 	br	17d24 <close+0x6c>
   17d64:	d0a21a04 	addi	r2,gp,-30616
   17d68:	003ffb06 	br	17d58 <close+0xa0>

00017d6c <alt_dcache_flush_all>:
   17d6c:	f800283a 	ret

00017d70 <alt_dev_null_write>:
   17d70:	3005883a 	mov	r2,r6
   17d74:	f800283a 	ret

00017d78 <alt_dev_llist_insert>:
   17d78:	20000226 	beq	r4,zero,17d84 <alt_dev_llist_insert+0xc>
   17d7c:	20800217 	ldw	r2,8(r4)
   17d80:	10000b1e 	bne	r2,zero,17db0 <alt_dev_llist_insert+0x38>
   17d84:	d0a0a617 	ldw	r2,-32104(gp)
   17d88:	10001126 	beq	r2,zero,17dd0 <alt_dev_llist_insert+0x58>
   17d8c:	deffff04 	addi	sp,sp,-4
   17d90:	dfc00015 	stw	ra,0(sp)
   17d94:	103ee83a 	callr	r2
   17d98:	00c00584 	movi	r3,22
   17d9c:	10c00015 	stw	r3,0(r2)
   17da0:	00bffa84 	movi	r2,-22
   17da4:	dfc00017 	ldw	ra,0(sp)
   17da8:	dec00104 	addi	sp,sp,4
   17dac:	f800283a 	ret
   17db0:	28800017 	ldw	r2,0(r5)
   17db4:	21400115 	stw	r5,4(r4)
   17db8:	20800015 	stw	r2,0(r4)
   17dbc:	28800017 	ldw	r2,0(r5)
   17dc0:	11000115 	stw	r4,4(r2)
   17dc4:	29000015 	stw	r4,0(r5)
   17dc8:	0005883a 	mov	r2,zero
   17dcc:	f800283a 	ret
   17dd0:	d0a21a04 	addi	r2,gp,-30616
   17dd4:	00c00584 	movi	r3,22
   17dd8:	10c00015 	stw	r3,0(r2)
   17ddc:	00bffa84 	movi	r2,-22
   17de0:	f800283a 	ret

00017de4 <_do_ctors>:
   17de4:	defffd04 	addi	sp,sp,-12
   17de8:	dc400115 	stw	r17,4(sp)
   17dec:	dc000015 	stw	r16,0(sp)
   17df0:	044000b4 	movhi	r17,2
   17df4:	040000b4 	movhi	r16,2
   17df8:	dfc00215 	stw	ra,8(sp)
   17dfc:	8421b004 	addi	r16,r16,-31040
   17e00:	8c61ab44 	addi	r17,r17,-31059
   17e04:	843fff04 	addi	r16,r16,-4
   17e08:	8440052e 	bgeu	r16,r17,17e20 <_do_ctors+0x3c>
   17e0c:	dfc00217 	ldw	ra,8(sp)
   17e10:	dc400117 	ldw	r17,4(sp)
   17e14:	dc000017 	ldw	r16,0(sp)
   17e18:	dec00304 	addi	sp,sp,12
   17e1c:	f800283a 	ret
   17e20:	80800017 	ldw	r2,0(r16)
   17e24:	103ee83a 	callr	r2
   17e28:	003ff606 	br	17e04 <_do_ctors+0x20>

00017e2c <_do_dtors>:
   17e2c:	defffd04 	addi	sp,sp,-12
   17e30:	dc400115 	stw	r17,4(sp)
   17e34:	dc000015 	stw	r16,0(sp)
   17e38:	044000b4 	movhi	r17,2
   17e3c:	040000b4 	movhi	r16,2
   17e40:	dfc00215 	stw	ra,8(sp)
   17e44:	8421b304 	addi	r16,r16,-31028
   17e48:	8c61b004 	addi	r17,r17,-31040
   17e4c:	843fff04 	addi	r16,r16,-4
   17e50:	8440052e 	bgeu	r16,r17,17e68 <_do_dtors+0x3c>
   17e54:	dfc00217 	ldw	ra,8(sp)
   17e58:	dc400117 	ldw	r17,4(sp)
   17e5c:	dc000017 	ldw	r16,0(sp)
   17e60:	dec00304 	addi	sp,sp,12
   17e64:	f800283a 	ret
   17e68:	80800017 	ldw	r2,0(r16)
   17e6c:	103ee83a 	callr	r2
   17e70:	003ff606 	br	17e4c <_do_dtors+0x20>

00017e74 <alt_icache_flush_all>:
   17e74:	f800283a 	ret

00017e78 <alt_exception_cause_generated_bad_addr>:
   17e78:	213ffe84 	addi	r4,r4,-6
   17e7c:	20800428 	cmpgeui	r2,r4,16
   17e80:	1000151e 	bne	r2,zero,17ed8 <alt_exception_cause_generated_bad_addr+0x60>
   17e84:	200890ba 	slli	r4,r4,2
   17e88:	00800074 	movhi	r2,1
   17e8c:	2085883a 	add	r2,r4,r2
   17e90:	109fa617 	ldw	r2,32408(r2)
   17e94:	1000683a 	jmp	r2
   17e98:	00017ee0 	cmpeqi	zero,zero,1531
   17e9c:	00017ee0 	cmpeqi	zero,zero,1531
   17ea0:	00017ed8 	cmpnei	zero,zero,1531
   17ea4:	00017ed8 	cmpnei	zero,zero,1531
   17ea8:	00017ed8 	cmpnei	zero,zero,1531
   17eac:	00017ee0 	cmpeqi	zero,zero,1531
   17eb0:	00017ed8 	cmpnei	zero,zero,1531
   17eb4:	00017ed8 	cmpnei	zero,zero,1531
   17eb8:	00017ee0 	cmpeqi	zero,zero,1531
   17ebc:	00017ee0 	cmpeqi	zero,zero,1531
   17ec0:	00017ed8 	cmpnei	zero,zero,1531
   17ec4:	00017ee0 	cmpeqi	zero,zero,1531
   17ec8:	00017ed8 	cmpnei	zero,zero,1531
   17ecc:	00017ed8 	cmpnei	zero,zero,1531
   17ed0:	00017ed8 	cmpnei	zero,zero,1531
   17ed4:	00017ee0 	cmpeqi	zero,zero,1531
   17ed8:	0005883a 	mov	r2,zero
   17edc:	f800283a 	ret
   17ee0:	00800044 	movi	r2,1
   17ee4:	f800283a 	ret

00017ee8 <alt_open_fd.constprop.0>:
   17ee8:	defffe04 	addi	sp,sp,-8
   17eec:	dc000015 	stw	r16,0(sp)
   17ef0:	2021883a 	mov	r16,r4
   17ef4:	2809883a 	mov	r4,r5
   17ef8:	300b883a 	mov	r5,r6
   17efc:	01807fc4 	movi	r6,511
   17f00:	dfc00115 	stw	ra,4(sp)
   17f04:	0017fc40 	call	17fc4 <open>
   17f08:	10001116 	blt	r2,zero,17f50 <alt_open_fd.constprop.0+0x68>
   17f0c:	1009883a 	mov	r4,r2
   17f10:	1004907a 	slli	r2,r2,1
   17f14:	00c000b4 	movhi	r3,2
   17f18:	18e4bf04 	addi	r3,r3,-27908
   17f1c:	1105883a 	add	r2,r2,r4
   17f20:	100490ba 	slli	r2,r2,2
   17f24:	1887883a 	add	r3,r3,r2
   17f28:	18800017 	ldw	r2,0(r3)
   17f2c:	80800015 	stw	r2,0(r16)
   17f30:	18800117 	ldw	r2,4(r3)
   17f34:	80800115 	stw	r2,4(r16)
   17f38:	18800217 	ldw	r2,8(r3)
   17f3c:	80800215 	stw	r2,8(r16)
   17f40:	dfc00117 	ldw	ra,4(sp)
   17f44:	dc000017 	ldw	r16,0(sp)
   17f48:	dec00204 	addi	sp,sp,8
   17f4c:	00181201 	jmpi	18120 <alt_release_fd>
   17f50:	dfc00117 	ldw	ra,4(sp)
   17f54:	dc000017 	ldw	r16,0(sp)
   17f58:	dec00204 	addi	sp,sp,8
   17f5c:	f800283a 	ret

00017f60 <alt_io_redirect>:
   17f60:	defffd04 	addi	sp,sp,-12
   17f64:	dc400115 	stw	r17,4(sp)
   17f68:	2823883a 	mov	r17,r5
   17f6c:	200b883a 	mov	r5,r4
   17f70:	010000b4 	movhi	r4,2
   17f74:	dc000015 	stw	r16,0(sp)
   17f78:	2124c204 	addi	r4,r4,-27896
   17f7c:	3021883a 	mov	r16,r6
   17f80:	01800044 	movi	r6,1
   17f84:	dfc00215 	stw	ra,8(sp)
   17f88:	0017ee80 	call	17ee8 <alt_open_fd.constprop.0>
   17f8c:	010000b4 	movhi	r4,2
   17f90:	880b883a 	mov	r5,r17
   17f94:	000d883a 	mov	r6,zero
   17f98:	2124bf04 	addi	r4,r4,-27908
   17f9c:	0017ee80 	call	17ee8 <alt_open_fd.constprop.0>
   17fa0:	010000b4 	movhi	r4,2
   17fa4:	01800044 	movi	r6,1
   17fa8:	800b883a 	mov	r5,r16
   17fac:	2124c504 	addi	r4,r4,-27884
   17fb0:	dfc00217 	ldw	ra,8(sp)
   17fb4:	dc400117 	ldw	r17,4(sp)
   17fb8:	dc000017 	ldw	r16,0(sp)
   17fbc:	dec00304 	addi	sp,sp,12
   17fc0:	0017ee81 	jmpi	17ee8 <alt_open_fd.constprop.0>

00017fc4 <open>:
   17fc4:	defff904 	addi	sp,sp,-28
   17fc8:	dc800215 	stw	r18,8(sp)
   17fcc:	2825883a 	mov	r18,r5
   17fd0:	d160a204 	addi	r5,gp,-32120
   17fd4:	dcc00315 	stw	r19,12(sp)
   17fd8:	dc400115 	stw	r17,4(sp)
   17fdc:	dfc00615 	stw	ra,24(sp)
   17fe0:	dd400515 	stw	r21,20(sp)
   17fe4:	dd000415 	stw	r20,16(sp)
   17fe8:	dc000015 	stw	r16,0(sp)
   17fec:	2023883a 	mov	r17,r4
   17ff0:	3027883a 	mov	r19,r6
   17ff4:	001823c0 	call	1823c <alt_find_dev>
   17ff8:	10003b1e 	bne	r2,zero,180e8 <open+0x124>
   17ffc:	8809883a 	mov	r4,r17
   18000:	00182ac0 	call	182ac <alt_find_file>
   18004:	1029883a 	mov	r20,r2
   18008:	10003c26 	beq	r2,zero,180fc <open+0x138>
   1800c:	05400044 	movi	r21,1
   18010:	a009883a 	mov	r4,r20
   18014:	00183480 	call	18348 <alt_get_fd>
   18018:	1021883a 	mov	r16,r2
   1801c:	10003a16 	blt	r2,zero,18108 <open+0x144>
   18020:	1006907a 	slli	r3,r2,1
   18024:	014000b4 	movhi	r5,2
   18028:	2964bf04 	addi	r5,r5,-27908
   1802c:	1887883a 	add	r3,r3,r2
   18030:	180690ba 	slli	r3,r3,2
   18034:	00900034 	movhi	r2,16384
   18038:	10bfffc4 	addi	r2,r2,-1
   1803c:	1949883a 	add	r4,r3,r5
   18040:	9084703a 	and	r2,r18,r2
   18044:	a8002b1e 	bne	r21,zero,180f4 <open+0x130>
   18048:	21c00017 	ldw	r7,0(r4)
   1804c:	d1a0a117 	ldw	r6,-32124(gp)
   18050:	10900034 	orhi	r2,r2,16384
   18054:	20800215 	stw	r2,8(r4)
   18058:	2807883a 	mov	r3,r5
   1805c:	0005883a 	mov	r2,zero
   18060:	19400017 	ldw	r5,0(r3)
   18064:	29c0031e 	bne	r5,r7,18074 <open+0xb0>
   18068:	19400217 	ldw	r5,8(r3)
   1806c:	2800010e 	bge	r5,zero,18074 <open+0xb0>
   18070:	20c0271e 	bne	r4,r3,18110 <open+0x14c>
   18074:	10800044 	addi	r2,r2,1
   18078:	18c00304 	addi	r3,r3,12
   1807c:	30bff82e 	bgeu	r6,r2,18060 <open+0x9c>
   18080:	a0800317 	ldw	r2,12(r20)
   18084:	10000e26 	beq	r2,zero,180c0 <open+0xfc>
   18088:	880b883a 	mov	r5,r17
   1808c:	980f883a 	mov	r7,r19
   18090:	900d883a 	mov	r6,r18
   18094:	103ee83a 	callr	r2
   18098:	1023883a 	mov	r17,r2
   1809c:	1000080e 	bge	r2,zero,180c0 <open+0xfc>
   180a0:	8009883a 	mov	r4,r16
   180a4:	00181200 	call	18120 <alt_release_fd>
   180a8:	d0a0a617 	ldw	r2,-32104(gp)
   180ac:	10001a26 	beq	r2,zero,18118 <open+0x154>
   180b0:	103ee83a 	callr	r2
   180b4:	0463c83a 	sub	r17,zero,r17
   180b8:	14400015 	stw	r17,0(r2)
   180bc:	043fffc4 	movi	r16,-1
   180c0:	8005883a 	mov	r2,r16
   180c4:	dfc00617 	ldw	ra,24(sp)
   180c8:	dd400517 	ldw	r21,20(sp)
   180cc:	dd000417 	ldw	r20,16(sp)
   180d0:	dcc00317 	ldw	r19,12(sp)
   180d4:	dc800217 	ldw	r18,8(sp)
   180d8:	dc400117 	ldw	r17,4(sp)
   180dc:	dc000017 	ldw	r16,0(sp)
   180e0:	dec00704 	addi	sp,sp,28
   180e4:	f800283a 	ret
   180e8:	1029883a 	mov	r20,r2
   180ec:	002b883a 	mov	r21,zero
   180f0:	003fc706 	br	18010 <open+0x4c>
   180f4:	20800215 	stw	r2,8(r4)
   180f8:	003fe106 	br	18080 <open+0xbc>
   180fc:	047ffb44 	movi	r17,-19
   18100:	043fffc4 	movi	r16,-1
   18104:	003fe606 	br	180a0 <open+0xdc>
   18108:	1023883a 	mov	r17,r2
   1810c:	003fe406 	br	180a0 <open+0xdc>
   18110:	047ffcc4 	movi	r17,-13
   18114:	003fe206 	br	180a0 <open+0xdc>
   18118:	d0a21a04 	addi	r2,gp,-30616
   1811c:	003fe506 	br	180b4 <open+0xf0>

00018120 <alt_release_fd>:
   18120:	208000d0 	cmplti	r2,r4,3
   18124:	1000081e 	bne	r2,zero,18148 <alt_release_fd+0x28>
   18128:	2006907a 	slli	r3,r4,1
   1812c:	008000b4 	movhi	r2,2
   18130:	10a4bf04 	addi	r2,r2,-27908
   18134:	1909883a 	add	r4,r3,r4
   18138:	200890ba 	slli	r4,r4,2
   1813c:	1105883a 	add	r2,r2,r4
   18140:	10000215 	stw	zero,8(r2)
   18144:	10000015 	stw	zero,0(r2)
   18148:	f800283a 	ret

0001814c <alt_alarm_stop>:
   1814c:	0007303a 	rdctl	r3,status
   18150:	00bfff84 	movi	r2,-2
   18154:	1884703a 	and	r2,r3,r2
   18158:	1001703a 	wrctl	status,r2
   1815c:	21400017 	ldw	r5,0(r4)
   18160:	20800117 	ldw	r2,4(r4)
   18164:	28800115 	stw	r2,4(r5)
   18168:	11400015 	stw	r5,0(r2)
   1816c:	21000115 	stw	r4,4(r4)
   18170:	21000015 	stw	r4,0(r4)
   18174:	1801703a 	wrctl	status,r3
   18178:	f800283a 	ret

0001817c <alt_tick>:
   1817c:	d0a22017 	ldw	r2,-30592(gp)
   18180:	defffb04 	addi	sp,sp,-20
   18184:	dc000015 	stw	r16,0(sp)
   18188:	d420a717 	ldw	r16,-32100(gp)
   1818c:	10800044 	addi	r2,r2,1
   18190:	dc800215 	stw	r18,8(sp)
   18194:	dc400115 	stw	r17,4(sp)
   18198:	dfc00415 	stw	ra,16(sp)
   1819c:	dcc00315 	stw	r19,12(sp)
   181a0:	d0a22015 	stw	r2,-30592(gp)
   181a4:	d460a704 	addi	r17,gp,-32100
   181a8:	04800044 	movi	r18,1
   181ac:	8440071e 	bne	r16,r17,181cc <alt_tick+0x50>
   181b0:	dfc00417 	ldw	ra,16(sp)
   181b4:	dcc00317 	ldw	r19,12(sp)
   181b8:	dc800217 	ldw	r18,8(sp)
   181bc:	dc400117 	ldw	r17,4(sp)
   181c0:	dc000017 	ldw	r16,0(sp)
   181c4:	dec00504 	addi	sp,sp,20
   181c8:	f800283a 	ret
   181cc:	80800403 	ldbu	r2,16(r16)
   181d0:	84c00017 	ldw	r19,0(r16)
   181d4:	10000326 	beq	r2,zero,181e4 <alt_tick+0x68>
   181d8:	d0a22017 	ldw	r2,-30592(gp)
   181dc:	1000011e 	bne	r2,zero,181e4 <alt_tick+0x68>
   181e0:	80000405 	stb	zero,16(r16)
   181e4:	d0e22017 	ldw	r3,-30592(gp)
   181e8:	80800217 	ldw	r2,8(r16)
   181ec:	18800836 	bltu	r3,r2,18210 <alt_tick+0x94>
   181f0:	80800403 	ldbu	r2,16(r16)
   181f4:	1000061e 	bne	r2,zero,18210 <alt_tick+0x94>
   181f8:	80800317 	ldw	r2,12(r16)
   181fc:	81000517 	ldw	r4,20(r16)
   18200:	103ee83a 	callr	r2
   18204:	1000041e 	bne	r2,zero,18218 <alt_tick+0x9c>
   18208:	8009883a 	mov	r4,r16
   1820c:	001814c0 	call	1814c <alt_alarm_stop>
   18210:	9821883a 	mov	r16,r19
   18214:	003fe506 	br	181ac <alt_tick+0x30>
   18218:	80c00217 	ldw	r3,8(r16)
   1821c:	10c5883a 	add	r2,r2,r3
   18220:	d0e22017 	ldw	r3,-30592(gp)
   18224:	80800215 	stw	r2,8(r16)
   18228:	10fff92e 	bgeu	r2,r3,18210 <alt_tick+0x94>
   1822c:	84800405 	stb	r18,16(r16)
   18230:	003ff706 	br	18210 <alt_tick+0x94>

00018234 <altera_nios2_gen2_irq_init>:
   18234:	000170fa 	wrctl	ienable,zero
   18238:	f800283a 	ret

0001823c <alt_find_dev>:
   1823c:	defffb04 	addi	sp,sp,-20
   18240:	dcc00315 	stw	r19,12(sp)
   18244:	dc800215 	stw	r18,8(sp)
   18248:	dc400115 	stw	r17,4(sp)
   1824c:	dc000015 	stw	r16,0(sp)
   18250:	dfc00415 	stw	ra,16(sp)
   18254:	2c000017 	ldw	r16,0(r5)
   18258:	2027883a 	mov	r19,r4
   1825c:	2823883a 	mov	r17,r5
   18260:	00184000 	call	18400 <strlen>
   18264:	14800044 	addi	r18,r2,1
   18268:	8440091e 	bne	r16,r17,18290 <alt_find_dev+0x54>
   1826c:	0021883a 	mov	r16,zero
   18270:	8005883a 	mov	r2,r16
   18274:	dfc00417 	ldw	ra,16(sp)
   18278:	dcc00317 	ldw	r19,12(sp)
   1827c:	dc800217 	ldw	r18,8(sp)
   18280:	dc400117 	ldw	r17,4(sp)
   18284:	dc000017 	ldw	r16,0(sp)
   18288:	dec00504 	addi	sp,sp,20
   1828c:	f800283a 	ret
   18290:	81000217 	ldw	r4,8(r16)
   18294:	900d883a 	mov	r6,r18
   18298:	980b883a 	mov	r5,r19
   1829c:	00183d00 	call	183d0 <memcmp>
   182a0:	103ff326 	beq	r2,zero,18270 <alt_find_dev+0x34>
   182a4:	84000017 	ldw	r16,0(r16)
   182a8:	003fef06 	br	18268 <alt_find_dev+0x2c>

000182ac <alt_find_file>:
   182ac:	defffb04 	addi	sp,sp,-20
   182b0:	dc000015 	stw	r16,0(sp)
   182b4:	d420a417 	ldw	r16,-32112(gp)
   182b8:	dcc00315 	stw	r19,12(sp)
   182bc:	dc400115 	stw	r17,4(sp)
   182c0:	dfc00415 	stw	ra,16(sp)
   182c4:	dc800215 	stw	r18,8(sp)
   182c8:	2023883a 	mov	r17,r4
   182cc:	d4e0a404 	addi	r19,gp,-32112
   182d0:	84c0091e 	bne	r16,r19,182f8 <alt_find_file+0x4c>
   182d4:	0021883a 	mov	r16,zero
   182d8:	8005883a 	mov	r2,r16
   182dc:	dfc00417 	ldw	ra,16(sp)
   182e0:	dcc00317 	ldw	r19,12(sp)
   182e4:	dc800217 	ldw	r18,8(sp)
   182e8:	dc400117 	ldw	r17,4(sp)
   182ec:	dc000017 	ldw	r16,0(sp)
   182f0:	dec00504 	addi	sp,sp,20
   182f4:	f800283a 	ret
   182f8:	84800217 	ldw	r18,8(r16)
   182fc:	9009883a 	mov	r4,r18
   18300:	00184000 	call	18400 <strlen>
   18304:	100d883a 	mov	r6,r2
   18308:	9085883a 	add	r2,r18,r2
   1830c:	10bfffc7 	ldb	r2,-1(r2)
   18310:	10800bd8 	cmpnei	r2,r2,47
   18314:	1000011e 	bne	r2,zero,1831c <alt_find_file+0x70>
   18318:	31bfffc4 	addi	r6,r6,-1
   1831c:	8985883a 	add	r2,r17,r6
   18320:	10800007 	ldb	r2,0(r2)
   18324:	10c00be0 	cmpeqi	r3,r2,47
   18328:	1800011e 	bne	r3,zero,18330 <alt_find_file+0x84>
   1832c:	1000041e 	bne	r2,zero,18340 <alt_find_file+0x94>
   18330:	880b883a 	mov	r5,r17
   18334:	9009883a 	mov	r4,r18
   18338:	00183d00 	call	183d0 <memcmp>
   1833c:	103fe626 	beq	r2,zero,182d8 <alt_find_file+0x2c>
   18340:	84000017 	ldw	r16,0(r16)
   18344:	003fe206 	br	182d0 <alt_find_file+0x24>

00018348 <alt_get_fd>:
   18348:	00c000b4 	movhi	r3,2
   1834c:	18e4bf04 	addi	r3,r3,-27908
   18350:	0005883a 	mov	r2,zero
   18354:	19400017 	ldw	r5,0(r3)
   18358:	28000a1e 	bne	r5,zero,18384 <alt_get_fd+0x3c>
   1835c:	1006907a 	slli	r3,r2,1
   18360:	014000b4 	movhi	r5,2
   18364:	1887883a 	add	r3,r3,r2
   18368:	180690ba 	slli	r3,r3,2
   1836c:	194b883a 	add	r5,r3,r5
   18370:	d0e0a117 	ldw	r3,-32124(gp)
   18374:	2924bf15 	stw	r4,-27908(r5)
   18378:	1880070e 	bge	r3,r2,18398 <alt_get_fd+0x50>
   1837c:	d0a0a115 	stw	r2,-32124(gp)
   18380:	f800283a 	ret
   18384:	10800044 	addi	r2,r2,1
   18388:	11400818 	cmpnei	r5,r2,32
   1838c:	18c00304 	addi	r3,r3,12
   18390:	283ff01e 	bne	r5,zero,18354 <alt_get_fd+0xc>
   18394:	00bffa04 	movi	r2,-24
   18398:	f800283a 	ret

0001839c <atexit>:
 */

int
atexit (void (*fn) (void))
{
  return __register_exitproc (__et_atexit, fn, NULL, NULL);
   1839c:	200b883a 	mov	r5,r4
   183a0:	000f883a 	mov	r7,zero
   183a4:	000d883a 	mov	r6,zero
   183a8:	0009883a 	mov	r4,zero
   183ac:	001841c1 	jmpi	1841c <__register_exitproc>

000183b0 <exit>:
 * Exit, flushing stdio buffers if necessary.
 */

void
exit (int code)
{
   183b0:	defffe04 	addi	sp,sp,-8
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs (int, void *) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
   183b4:	000b883a 	mov	r5,zero
{
   183b8:	dc000015 	stw	r16,0(sp)
   183bc:	dfc00115 	stw	ra,4(sp)
   183c0:	2021883a 	mov	r16,r4
    __call_exitprocs (code, NULL);
   183c4:	001852c0 	call	1852c <__call_exitprocs>
#ifndef WANT_SMALL_STDIO        /* IntelSpecific */
  if (_GLOBAL_REENT->__cleanup)
    (*_GLOBAL_REENT->__cleanup) (_GLOBAL_REENT);
#endif                          /* IntelSpecific */
  _exit (code);
   183c8:	8009883a 	mov	r4,r16
   183cc:	001761c0 	call	1761c <_exit>

000183d0 <memcmp>:
{
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  unsigned char *s1 = (unsigned char *) m1;
  unsigned char *s2 = (unsigned char *) m2;

  while (n--)
   183d0:	0007883a 	mov	r3,zero
   183d4:	30c0021e 	bne	r6,r3,183e0 <memcmp+0x10>
	  return *s1 - *s2;
	}
      s1++;
      s2++;
    }
  return 0;
   183d8:	0005883a 	mov	r2,zero
      s2++;
    }

  return 0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   183dc:	f800283a 	ret
      if (*s1 != *s2)
   183e0:	20c5883a 	add	r2,r4,r3
   183e4:	18c00044 	addi	r3,r3,1
   183e8:	28cf883a 	add	r7,r5,r3
   183ec:	10800003 	ldbu	r2,0(r2)
   183f0:	39ffffc3 	ldbu	r7,-1(r7)
   183f4:	11fff726 	beq	r2,r7,183d4 <memcmp+0x4>
	  return *s1 - *s2;
   183f8:	11c5c83a 	sub	r2,r2,r7
   183fc:	f800283a 	ret

00018400 <strlen>:
     precise position of the null.  */
  str = (char *) aligned_addr;

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (*str)
   18400:	2005883a 	mov	r2,r4
   18404:	10c00007 	ldb	r3,0(r2)
   18408:	1800021e 	bne	r3,zero,18414 <strlen+0x14>
    str++;
  return str - start;
}
   1840c:	1105c83a 	sub	r2,r2,r4
   18410:	f800283a 	ret
    str++;
   18414:	10800044 	addi	r2,r2,1
   18418:	003ffa06 	br	18404 <strlen+0x4>

0001841c <__register_exitproc>:

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

  p = _GLOBAL_ATEXIT;
   1841c:	d0a09d17 	ldw	r2,-32140(gp)
{
   18420:	defff904 	addi	sp,sp,-28
   18424:	dc000015 	stw	r16,0(sp)
  p = _GLOBAL_ATEXIT;
   18428:	14000d17 	ldw	r16,52(r2)
{
   1842c:	dd400515 	stw	r21,20(sp)
   18430:	dd000415 	stw	r20,16(sp)
   18434:	dcc00315 	stw	r19,12(sp)
   18438:	dc800215 	stw	r18,8(sp)
   1843c:	dfc00615 	stw	ra,24(sp)
   18440:	dc400115 	stw	r17,4(sp)
   18444:	2025883a 	mov	r18,r4
   18448:	2827883a 	mov	r19,r5
   1844c:	302b883a 	mov	r21,r6
   18450:	3829883a 	mov	r20,r7
  if (p == NULL)
   18454:	8000061e 	bne	r16,zero,18470 <__register_exitproc+0x54>
    {
      _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
   18458:	14000e04 	addi	r16,r2,56
   1845c:	14000d15 	stw	r16,52(r2)
#ifdef _REENT_SMALL
      extern struct _on_exit_args * const __on_exit_args _ATTRIBUTE ((weak));
      if (&__on_exit_args != NULL)
   18460:	d0fad704 	addi	r3,gp,-5284
   18464:	18000226 	beq	r3,zero,18470 <__register_exitproc+0x54>
	p->_on_exit_args_ptr = __on_exit_args;
   18468:	d0fad717 	ldw	r3,-5284(gp)
   1846c:	10c03015 	stw	r3,192(r2)
#endif	/* def _REENT_SMALL */
    }
  if (p->_ind >= _ATEXIT_SIZE)
   18470:	84400117 	ldw	r17,4(r16)
   18474:	88800810 	cmplti	r2,r17,32
   18478:	10000a1e 	bne	r2,zero,184a4 <__register_exitproc+0x88>
    {
#if !defined (_ATEXIT_DYNAMIC_ALLOC) || !defined (MALLOC_PROVIDED)
#ifndef __SINGLE_THREAD__
      __lock_release_recursive(__atexit_recursive_mutex);
#endif
      return -1;
   1847c:	00bfffc4 	movi	r2,-1
  p->_fns[p->_ind++] = fn;
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif
  return 0;
}
   18480:	dfc00617 	ldw	ra,24(sp)
   18484:	dd400517 	ldw	r21,20(sp)
   18488:	dd000417 	ldw	r20,16(sp)
   1848c:	dcc00317 	ldw	r19,12(sp)
   18490:	dc800217 	ldw	r18,8(sp)
   18494:	dc400117 	ldw	r17,4(sp)
   18498:	dc000017 	ldw	r16,0(sp)
   1849c:	dec00704 	addi	sp,sp,28
   184a0:	f800283a 	ret
  if (type != __et_atexit)
   184a4:	90001926 	beq	r18,zero,1850c <__register_exitproc+0xf0>
      args = p->_on_exit_args_ptr;
   184a8:	80802217 	ldw	r2,136(r16)
      if (args == NULL)
   184ac:	1000091e 	bne	r2,zero,184d4 <__register_exitproc+0xb8>
	  if (malloc)
   184b0:	00800074 	movhi	r2,1
   184b4:	109c1404 	addi	r2,r2,28752
   184b8:	103ff026 	beq	r2,zero,1847c <__register_exitproc+0x60>
	    args = malloc (sizeof * p->_on_exit_args_ptr);
   184bc:	01004204 	movi	r4,264
   184c0:	00170500 	call	17050 <malloc>
	  if (args == NULL)
   184c4:	103fed26 	beq	r2,zero,1847c <__register_exitproc+0x60>
	  args->_fntypes = 0;
   184c8:	10004015 	stw	zero,256(r2)
	  args->_is_cxa = 0;
   184cc:	10004115 	stw	zero,260(r2)
	  p->_on_exit_args_ptr = args;
   184d0:	80802215 	stw	r2,136(r16)
      args->_fnargs[p->_ind] = arg;
   184d4:	880890ba 	slli	r4,r17,2
      args->_fntypes |= (1 << p->_ind);
   184d8:	00c00044 	movi	r3,1
   184dc:	1c46983a 	sll	r3,r3,r17
   184e0:	1109883a 	add	r4,r2,r4
      args->_fnargs[p->_ind] = arg;
   184e4:	25400015 	stw	r21,0(r4)
      args->_fntypes |= (1 << p->_ind);
   184e8:	11404017 	ldw	r5,256(r2)
      if (type == __et_cxa)
   184ec:	94800098 	cmpnei	r18,r18,2
      args->_fntypes |= (1 << p->_ind);
   184f0:	28cab03a 	or	r5,r5,r3
   184f4:	11404015 	stw	r5,256(r2)
      args->_dso_handle[p->_ind] = d;
   184f8:	25002015 	stw	r20,128(r4)
      if (type == __et_cxa)
   184fc:	9000031e 	bne	r18,zero,1850c <__register_exitproc+0xf0>
	args->_is_cxa |= (1 << p->_ind);
   18500:	11004117 	ldw	r4,260(r2)
   18504:	20c6b03a 	or	r3,r4,r3
   18508:	10c04115 	stw	r3,260(r2)
  p->_fns[p->_ind++] = fn;
   1850c:	88800044 	addi	r2,r17,1
   18510:	8c400084 	addi	r17,r17,2
   18514:	882290ba 	slli	r17,r17,2
   18518:	80800115 	stw	r2,4(r16)
  return 0;
   1851c:	0005883a 	mov	r2,zero
  p->_fns[p->_ind++] = fn;
   18520:	8461883a 	add	r16,r16,r17
   18524:	84c00015 	stw	r19,0(r16)
  return 0;
   18528:	003fd506 	br	18480 <__register_exitproc+0x64>

0001852c <__call_exitprocs>:
 * otherwise only the handlers from that DSO are called.
 */

void 
__call_exitprocs (int code, void *d)
{
   1852c:	defff604 	addi	sp,sp,-40
   18530:	dd800615 	stw	r22,24(sp)
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

 restart:

  p = _GLOBAL_ATEXIT;
   18534:	d5a09d17 	ldw	r22,-32140(gp)
{
   18538:	dd400515 	stw	r21,20(sp)
   1853c:	dd000415 	stw	r20,16(sp)
   18540:	dfc00915 	stw	ra,36(sp)
   18544:	df000815 	stw	fp,32(sp)
   18548:	ddc00715 	stw	r23,28(sp)
   1854c:	dcc00315 	stw	r19,12(sp)
   18550:	dc800215 	stw	r18,8(sp)
   18554:	dc400115 	stw	r17,4(sp)
   18558:	dc000015 	stw	r16,0(sp)
   1855c:	202b883a 	mov	r21,r4
   18560:	2829883a 	mov	r20,r5
  p = _GLOBAL_ATEXIT;
   18564:	b4400d17 	ldw	r17,52(r22)
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   18568:	88000726 	beq	r17,zero,18588 <__call_exitprocs+0x5c>
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   1856c:	8c000117 	ldw	r16,4(r17)
      args = p->_on_exit_args_ptr;
   18570:	8cc02217 	ldw	r19,136(r17)
      for (n = p->_ind - 1; n >= 0; n--)
   18574:	84bfffc4 	addi	r18,r16,-1
   18578:	802090ba 	slli	r16,r16,2
   1857c:	9c2f883a 	add	r23,r19,r16
   18580:	8c21883a 	add	r16,r17,r16
   18584:	90000c0e 	bge	r18,zero,185b8 <__call_exitprocs+0x8c>
    }
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif

}
   18588:	dfc00917 	ldw	ra,36(sp)
   1858c:	df000817 	ldw	fp,32(sp)
   18590:	ddc00717 	ldw	r23,28(sp)
   18594:	dd800617 	ldw	r22,24(sp)
   18598:	dd400517 	ldw	r21,20(sp)
   1859c:	dd000417 	ldw	r20,16(sp)
   185a0:	dcc00317 	ldw	r19,12(sp)
   185a4:	dc800217 	ldw	r18,8(sp)
   185a8:	dc400117 	ldw	r17,4(sp)
   185ac:	dc000017 	ldw	r16,0(sp)
   185b0:	dec00a04 	addi	sp,sp,40
   185b4:	f800283a 	ret
	  if (d && (!args || args->_dso_handle[n] != d))
   185b8:	a0000726 	beq	r20,zero,185d8 <__call_exitprocs+0xac>
   185bc:	9800041e 	bne	r19,zero,185d0 <__call_exitprocs+0xa4>
      for (n = p->_ind - 1; n >= 0; n--)
   185c0:	94bfffc4 	addi	r18,r18,-1
   185c4:	bdffff04 	addi	r23,r23,-4
   185c8:	843fff04 	addi	r16,r16,-4
   185cc:	003fed06 	br	18584 <__call_exitprocs+0x58>
	  if (d && (!args || args->_dso_handle[n] != d))
   185d0:	b8c01f17 	ldw	r3,124(r23)
   185d4:	1d3ffa1e 	bne	r3,r20,185c0 <__call_exitprocs+0x94>
	  if (n == p->_ind - 1)
   185d8:	89000117 	ldw	r4,4(r17)
	  fn = p->_fns[n];
   185dc:	80c00117 	ldw	r3,4(r16)
	  if (n == p->_ind - 1)
   185e0:	213fffc4 	addi	r4,r4,-1
   185e4:	24800f1e 	bne	r4,r18,18624 <__call_exitprocs+0xf8>
	    p->_ind--;
   185e8:	8c800115 	stw	r18,4(r17)
	  if (!fn)
   185ec:	183ff426 	beq	r3,zero,185c0 <__call_exitprocs+0x94>
	  ind = p->_ind;
   185f0:	8f000117 	ldw	fp,4(r17)
	  if (!args || (args->_fntypes & i) == 0)
   185f4:	98000526 	beq	r19,zero,1860c <__call_exitprocs+0xe0>
	  i = 1 << n;
   185f8:	00800044 	movi	r2,1
   185fc:	148c983a 	sll	r6,r2,r18
	  if (!args || (args->_fntypes & i) == 0)
   18600:	99004017 	ldw	r4,256(r19)
   18604:	3108703a 	and	r4,r6,r4
   18608:	2000081e 	bne	r4,zero,1862c <__call_exitprocs+0x100>
	    fn ();
   1860c:	183ee83a 	callr	r3
	  if (ind != p->_ind || *lastp != p)
   18610:	89000117 	ldw	r4,4(r17)
   18614:	b0c00d17 	ldw	r3,52(r22)
   18618:	273fd21e 	bne	r4,fp,18564 <__call_exitprocs+0x38>
   1861c:	88ffe826 	beq	r17,r3,185c0 <__call_exitprocs+0x94>
   18620:	003fd006 	br	18564 <__call_exitprocs+0x38>
	    p->_fns[n] = NULL;
   18624:	80000115 	stw	zero,4(r16)
   18628:	003ff006 	br	185ec <__call_exitprocs+0xc0>
	  else if ((args->_is_cxa & i) == 0)
   1862c:	99404117 	ldw	r5,260(r19)
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   18630:	b93fff17 	ldw	r4,-4(r23)
	  else if ((args->_is_cxa & i) == 0)
   18634:	314c703a 	and	r6,r6,r5
   18638:	3000041e 	bne	r6,zero,1864c <__call_exitprocs+0x120>
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   1863c:	200b883a 	mov	r5,r4
   18640:	a809883a 	mov	r4,r21
   18644:	183ee83a 	callr	r3
   18648:	003ff106 	br	18610 <__call_exitprocs+0xe4>
	    (*((void (*)(void *)) fn))(args->_fnargs[n]);
   1864c:	183ee83a 	callr	r3
   18650:	003fef06 	br	18610 <__call_exitprocs+0xe4>
   18654:	0201ffff 	0x201ffff
   18658:	ffff0000 	call	ffff000 <_gp+0xffddb5c>
   1865c:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   18660:	0001ffff 	0x1ffff
   18664:	0401ffff 	0x401ffff
   18668:	00010000 	call	1000 <__alt_mem_onchip_mem-0xf000>
   1866c:	0201ffff 	0x201ffff
   18670:	ffff0000 	call	ffff000 <_gp+0xffddb5c>
   18674:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   18678:	010d00ff 	0x10d00ff
   1867c:	01010002 	0x1010002
	...
   18688:	010d00ff 	0x10d00ff
   1868c:	01010004 	movi	r4,1024
   18690:	00000100 	call	10 <__alt_mem_onchip_mem-0xfff0>
   18694:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   18698:	011100ff 	0x11100ff
   1869c:	01010004 	movi	r4,1024
   186a0:	7f000105 	stb	fp,4(r15)
   186a4:	007d0000 	call	7d000 <_gp+0x5bb5c>
   186a8:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   186ac:	01883a00 	call	1883a0 <_gp+0x166efc>
   186b0:	00011f18 	cmpnei	zero,zero,1148
   186b4:	00012648 	cmpgei	zero,zero,1177
   186b8:	000127e0 	cmpeqi	zero,zero,1183
   186bc:	00014c50 	cmplti	zero,zero,1329
   186c0:	000120b0 	cmpltui	zero,zero,1154
   186c4:	00012654 	movui	zero,1177
   186c8:	000127ec 	andhi	zero,zero,1183
