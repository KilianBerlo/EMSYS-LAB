
jiwy_demonstrator.elf:     file format elf32-littlenios2
jiwy_demonstrator.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x00009384 memsz 0x00009384 flags r-x
    LOAD off    0x0000a3a4 vaddr 0x000193a4 paddr 0x0001992c align 2**12
         filesz 0x00000588 memsz 0x00000588 flags rw-
    LOAD off    0x0000aeb4 vaddr 0x00019eb4 paddr 0x00019eb4 align 2**12
         filesz 0x00000000 memsz 0x000002d4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00008744  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000ae0  000188c4  000188c4  000098c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000588  000193a4  0001992c  0000a3a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002d4  00019eb4  00019eb4  0000aeb4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  0001a188  0001a188  0000a92c  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0000a92c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000c08  00000000  00000000  0000a960  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00023e38  00000000  00000000  0000b568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c52d  00000000  00000000  0002f3a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00012271  00000000  00000000  0003b8cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00001e00  00000000  00000000  0004db40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000ada3  00000000  00000000  0004f940  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000f8c1  00000000  00000000  0005a6e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000040  00000000  00000000  00069fa4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002a38  00000000  00000000  00069fe8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  00073fb3  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00073fb6  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00073fb9  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00073fba  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00073fbb  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00073fbf  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00073fc3  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00073fc7  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00073fd0  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00073fd9  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000013  00000000  00000000  00073fe2  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002a  00000000  00000000  00073ff5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
000188c4 l    d  .rodata	00000000 .rodata
000193a4 l    d  .rwdata	00000000 .rwdata
00019eb4 l    d  .bss	00000000 .bss
0001a188 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/gteho/Repositories/EMSYS-LAB/nios/software/jiwy_demonstrator_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 xxinteg.cpp
00000000 l    df *ABS*	00000000 PositionControllerPan.cpp
00010258 l     F .text	000000f8 .LTHUNK2
00010ad8 l     F .text	000000a8 .LTHUNK0
00000000 l    df *ABS*	00000000 PositionControllerTilt.cpp
00010e58 l     F .text	0000010c .LTHUNK2
000116e4 l     F .text	000000a8 .LTHUNK0
00000000 l    df *ABS*	00000000 main.cpp
00011f24 l     F .text	0000019c _GLOBAL__sub_I_uart
000120c0 l     F .text	0000002c _GLOBAL__sub_D_uart
00000000 l    df *ABS*	00000000 motor.cpp
00000000 l    df *ABS*	00000000 uart.cpp
00012744 l     F .text	0000000c _GLOBAL__sub_I__ZN6Serial4UART10uart_readyE
00012750 l     F .text	0000000c _GLOBAL__sub_D__ZN6Serial4UART10uart_readyE
00000000 l    df *ABS*	00000000 timer.cpp
000128e4 l     F .text	0000000c _GLOBAL__sub_I__ZN5Timer17timer_isr_contextE
000128f0 l     F .text	0000000c _GLOBAL__sub_D__ZN5Timer17timer_isr_contextE
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 del_opv.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
00012ba8 l     F .text	00000090 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
00012c38 l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
00012e20 l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
00012e90 l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00012fbc l     F .text	00000110 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
00013a40 l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 function_type_info.cc
00000000 l    df *ABS*	00000000 new_opv.cc
00000000 l    df *ABS*	00000000 pointer_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 functional.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
00014ad8 l     F .text	000000cc _ZN12_GLOBAL__N_14pool4freeEPv.constprop.0
0001a078 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
00014ba4 l     F .text	00000090 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.0
00014d54 l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
00019ed8 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 fundamental_type_info.cc
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 pbase_type_info.cc
000198f0 l     O .rwdata	00000008 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE3pmf
000198ec l     O .rwdata	00000004 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE2pm
00000000 l    df *ABS*	00000000 pmem_type_info.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_aux_runtime.cc
00000000 l    df *ABS*	00000000 new_handler.cc
00019ee0 l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 bad_array_new.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
00016ad0 l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
00019ee4 l     O .bss	00000004 fc_static
00016be4 l     F .text	000000d8 _Unwind_RaiseException_Phase2
00016cbc l     F .text	0000002c uw_install_context.constprop.0.isra.0
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 impure.c
000193a4 l     O .rwdata	000000e4 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_kill.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00019908 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
000194b4 l     O .rwdata	0000002c jtag_uart
00019488 l     O .rwdata	0000002c uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00017c30 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00017f34 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000180ac l     F .text	00000078 alt_open_fd.constprop.0
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00019f04 g     O .bss	00000004 alt_instruction_exception_handler
000103b0 g     F .text	00000150 _ZN21PositionControllerPan5ResetEf
00014cbc g     F .text	00000028 __cxa_free_exception
00014004 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0001899c  w    O .rodata	00000018 _ZTI22PositionControllerTilt
00019014  w    O .rodata	00000010 _ZTIPKDs
000139cc g     F .text	00000014 _ZSt10unexpectedv
000124b8 g     F .text	000000a8 _ZN6Serial4UART10uart_0_isrEPv
000198d4  w    O .rwdata	00000008 _ZTIw
000198b4  w    O .rwdata	00000008 _ZTIc
00017a68 g     F .text	00000060 alt_main
0001a088 g     O .bss	00000100 alt_irq
00014ff0 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
000198ac  w    O .rwdata	00000008 _ZTIa
00013c40 g     F .text	00000004 _Znaj
00010254  w    F .text	00000004 _ZN13Submodel20sim16CalculateDynamicEv
00010240 g     F .text	00000014 _ZN8DiscreteC2Ev
0001117c g     F .text	00000004 _ZN22PositionControllerTilt14CalculateFinalEv
00016d68 g     F .text	00000020 .hidden _Unwind_GetIPInfo
0001992c g       *ABS*	00000000 __flash_rwdata_start
000120ec g     F .text	000000e0 _ZN5Plant5MotorC2Emmmmm
00018ea4  w    O .rodata	00000010 _ZTIPy
00019750  w    O .rwdata	00000002 _ZTSa
00018c64  w    O .rodata	00000014 _ZTVSt17bad_function_call
00013b6c g     F .text	00000084 __cxa_rethrow
0001891c  w    O .rodata	00000018 _ZTS21PositionControllerPan
00010240 g     F .text	00000014 _ZN8DiscreteC1Ev
00016d00 g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
00013a10 g     F .text	00000024 _ZSt14set_unexpectedPFvvE
00018f34  w    O .rodata	00000010 _ZTIPKi
00016d58 g     F .text	00000010 .hidden _Unwind_GetIP
000123e4 g     F .text	00000024 _ZN5Plant5Motor7disableEv
0001a188 g       *ABS*	00000000 __alt_heap_start
00019790  w    O .rwdata	00000003 _ZTSPj
00017754 g     F .text	00000044 _kill_r
000154a0 g     F .text	00000010 _ZNSt9bad_allocD2Ev
00017558 g     F .text	00000078 _signal_r
000197b4  w    O .rwdata	00000003 _ZTSPx
000198bc  w    O .rwdata	00000008 _ZTIDi
00019814  w    O .rwdata	00000005 _ZTSPKDd
000197a8  w    O .rwdata	00000003 _ZTSPm
00014d28 g     F .text	0000002c __cxa_free_dependent_exception
00013d38 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
00018b3c  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
00010e58 g     F .text	0000010c _ZN22PositionControllerTilt16CalculateDynamicEv
00017acc g     F .text	00000004 __malloc_unlock
0001971c  w    O .rwdata	00000005 _ZTSPKDu
00019144  w    O .rodata	00000024 _ZTVN10__cxxabiv129__pointer_to_member_type_infoE
00014ff0 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
000147ec g     F .text	00000264 _ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
00014f84 g     F .text	00000020 _ZSt18uncaught_exceptionv
00010548 g     F .text	00000004 _ZN21PositionControllerPan14CalculateInputEv
00015488 g     F .text	0000000c __cxa_deleted_virtual
00018e24  w    O .rodata	00000010 _ZTIPDn
00018a28  w    O .rodata	00000010 _ZTIPFvvE
0001978c  w    O .rwdata	00000002 _ZTSj
00014fc0 g     F .text	00000004 _ZNSt9exceptionD2Ev
00018ae8  w    O .rodata	00000024 _ZTSN10__cxxabiv119__pointer_type_infoE
00019ecc g     O .bss	00000001 timer
00013c4c g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD1Ev
0001921c  w    O .rodata	0000000c _ZTISt8bad_cast
00015fd0 g     F .text	000000e8 .hidden __gtdf2
00018d24  w    O .rodata	00000014 _ZTVSt13bad_exception
000183f8 g     F .text	00000008 altera_nios2_gen2_irq_init
00019738  w    O .rwdata	00000004 _ZTSPDi
000188c4  w    O .rodata	00000014 _ZTS17IntegrationMethod
000155b0 g     F .text	00000010 _ZNSt20bad_array_new_lengthD1Ev
000196fc  w    O .rwdata	00000002 _ZTSb
00010000 g     F .entry	0000000c __reset
0001974c  w    O .rwdata	00000004 _ZTSPKc
00016da4 g     F .text	00000008 .hidden _Unwind_GetRegionStart
000197c4  w    O .rwdata	00000004 _ZTSPKy
00019704  w    O .rwdata	00000004 _ZTSPKb
00010020 g       *ABS*	00000000 __flash_exceptions_start
00011a54 g     F .text	000001b8 _Z16handleTimerEventv
00018f54  w    O .rodata	00000010 _ZTIPKt
00019754  w    O .rwdata	00000003 _ZTSPa
00019ef0 g     O .bss	00000004 errno
00019ecf g     O .bss	00000004 _ZN6Serial4UART7rx_dataE
000196f8  w    O .rwdata	00000004 _ZTSPKv
000189b4  w    O .rodata	00000034 _ZTV22PositionControllerTilt
00016f6c g     F .text	00000088 .hidden _Unwind_Backtrace
00019074  w    O .rodata	00000010 _ZTIPKb
00012560 g     F .text	00000164 _ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE
00019efc g     O .bss	00000004 alt_argv
00021688 g       *ABS*	00000000 _gp
00017b1c g     F .text	00000004 usleep
00015668 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
00015028 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD1Ev
0001a008 g     O .bss	00000028 pan_motor
00015614 g     F .text	00000038 _ZNSt8bad_castD0Ev
000177f4 g     F .text	00000008 getpid
00013764 g     F .text	0000017c __cxa_call_unexpected
00014e10 g     F .text	00000008 __cxa_get_exception_ptr
000197a0  w    O .rwdata	00000004 _ZTSPKl
000194e0 g     O .rwdata	00000180 alt_fd_list
00015108 g     F .text	00000038 _ZN10__cxxabiv117__pbase_type_infoD0Ev
00018f04  w    O .rodata	00000010 _ZTIPl
00016e8c g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
00016d28 g     F .text	00000018 .hidden _Unwind_GetCFA
00019894  w    O .rwdata	00000008 _ZTIt
000139e0 g     F .text	00000024 _ZSt13set_terminatePFvvE
00018400 g     F .text	00000070 alt_find_dev
000185c4 g     F .text	00000028 memcpy
000196f4  w    O .rwdata	00000003 _ZTSPv
00014ce4 g     F .text	00000044 __cxa_allocate_dependent_exception
00011944 g     F .text	00000110 _ZN22PositionControllerTilt9CalculateEPfS0_
0001a058 g     O .bss	00000010 _ZN6Serial4UART8callbackE
00012974 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
00018124 g     F .text	00000064 alt_io_redirect
00019ebc g     O .bss	00000008 y_pan
000188c4 g       *ABS*	00000000 __DTOR_END__
00019108  w    O .rodata	0000002e _ZTSN10__cxxabiv129__pointer_to_member_type_infoE
000190a4  w    O .rodata	00000010 _ZTIPv
0001298c g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
000198dc  w    O .rwdata	00000008 _ZTIb
00018bf4  w    O .rodata	0000000c _ZTIN10__cxxabiv121__vmi_class_type_infoE
000190d8  w    O .rodata	0000000c _ZTIN10__cxxabiv117__pbase_type_infoE
0001803c g     F .text	00000070 alt_exception_cause_generated_bad_addr
0001973c  w    O .rwdata	00000005 _ZTSPKDi
00019fe8 g     O .bss	00000010 u_pan
00018ef4  w    O .rodata	00000010 _ZTIPKl
0001278c g     F .text	0000011c _ZN5TimerC2ESt8functionIFvvEE
00013c5c g     F .text	00000038 _ZN10__cxxabiv119__pointer_type_infoD0Ev
000155b0 g     F .text	00000010 _ZNSt20bad_array_new_lengthD2Ev
00017ba8 g     F .text	00000058 altera_avalon_jtag_uart_read
0001723c g     F .text	0000000c malloc
000191c4  w    O .rodata	00000019 _ZTSSt20bad_array_new_length
000117d0 g     F .text	00000038 _ZTv0_n16_N22PositionControllerTiltD0Ev
0001713c g     F .text	00000064 .hidden __udivsi3
00010540 g     F .text	00000004 _ZN21PositionControllerPan16CalculateInitialEv
000175d0 g     F .text	000000b4 _raise_r
000196b0  w    O .rwdata	00000005 _ZTSFvvE
00018e14  w    O .rodata	00000010 _ZTIPKDn
00010350 g     F .text	00000018 _ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv
00019778  w    O .rwdata	00000003 _ZTSPt
00015038 g     F .text	00000038 _ZN10__cxxabiv123__fundamental_type_infoD0Ev
00017798 g     F .text	00000004 _getpid_r
00014fa4 g     F .text	0000001c _ZSt19uncaught_exceptionsv
00014c34 g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
00014060 g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD1Ev
00019834  w    O .rwdata	00000008 _ZTIDd
00012a40 g     F .text	0000009c _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
000197dc  w    O .rwdata	00000004 _ZTSPKd
00017684 g     F .text	000000a0 __sigtramp_r
000120ec g     F .text	000000e0 _ZN5Plant5MotorC1Emmmmm
000174bc g     F .text	00000040 _sbrk_r
00014fc8 g     F .text	0000000c _ZGTtNKSt9exception4whatEv
000196c0  w    O .rwdata	00000006 _ZTSPFvvE
00018bac  w    O .rodata	00000020 _ZTVSt9type_info
00018934  w    O .rodata	00000018 _ZTI21PositionControllerPan
000150f8 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD1Ev
00014fc8 g     F .text	0000000c _ZNKSt9exception4whatEv
000197ac  w    O .rwdata	00000004 _ZTSPKm
0001990c g     O .rwdata	00000004 alt_max_fd
00019004  w    O .rodata	00000010 _ZTIPDi
00019188  w    O .rodata	0000000c _ZTISt9bad_alloc
00018e84  w    O .rodata	00000010 _ZTIPf
00016864 g     F .text	000000fc .hidden __extendsfdf2
00018b18  w    O .rodata	00000024 _ZTVN10__cxxabiv119__pointer_type_infoE
00018de4  w    O .rodata	00000010 _ZTIPDd
00018a18  w    O .rodata	00000010 _ZTIPFvRN6Serial7messageEE
00018c58  w    O .rodata	0000000c _ZTISt17bad_function_call
00010b80 g     F .text	00000018 _ZTv0_n16_N21PositionControllerPanD1Ev
00012408 g     F .text	00000020 _ZN5Plant5Motor8getAngleEv
00018b70  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
000188d8  w    O .rodata	0000000a _ZTS8Discrete
00015604 g     F .text	00000010 _ZNSt8bad_castD1Ev
000129d4 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
00010570 g     F .text	00000004 _ZN21PositionControllerPan14CalculateFinalEv
00014ad4 g     F .text	00000004 _ZdlPv
000198fc g     O .rwdata	00000004 _global_impure_ptr
00014070 g     F .text	00000038 _ZN10__cxxabiv121__vmi_class_type_infoD0Ev
0001a188 g       *ABS*	00000000 __bss_end
00015598 g     F .text	0000000c _ZSt15get_new_handlerv
000197c0  w    O .rwdata	00000003 _ZTSPy
00019714  w    O .rwdata	00000003 _ZTSDu
00017888 g     F .text	00000068 alt_iic_isr_register
00019788  w    O .rwdata	00000004 _ZTSPKi
00019084  w    O .rodata	00000010 _ZTIPb
00018340 g     F .text	000000b8 alt_tick
00016ce8 g     F .text	00000018 .hidden _Unwind_SjLj_Register
00017224 g     F .text	00000018 abort
0001178c g     F .text	00000018 _ZTv0_n16_N22PositionControllerTiltD1Ev
00011114 g     F .text	0000000c _ZN22PositionControllerTilt10IsFinishedEv
00019864  w    O .rwdata	00000008 _ZTIy
00018db4  w    O .rodata	00000010 _ZTIPKDe
00012428 g     F .text	0000000c _ZN5Plant5Motor8readDataEv
00014ed0 g     F .text	000000b4 __cxa_end_catch
00011d30  w    F .text	00000048 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
00017870 g     F .text	00000018 alt_ic_irq_enabled
00014fc4 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
00019ec4 g     O .bss	00000008 y_tilt
00018e74  w    O .rodata	00000010 _ZTIPKf
00011808 g     F .text	0000013c _ZN22PositionControllerTilt10InitializeEPfS0_f
00018310 g     F .text	00000030 alt_alarm_stop
00011d28  w    F .text	00000008 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
000117a4 g     F .text	0000002c _ZN22PositionControllerTiltD0Ev
00018e64  w    O .rodata	00000010 _ZTIPd
00019ef4 g     O .bss	00000004 alt_irq_active
000101d0 g     F .text	00000004 _ZN8Discrete9TerminateEv
000139a8 g     F .text	00000014 _ZSt9terminatev
00019768  w    O .rwdata	00000002 _ZTSs
000197f0  w    O .rwdata	00000004 _ZTSPDn
00010000 g       *ABS*	00000000 __alt_mem_onchip_mem
000190e4  w    O .rodata	00000024 _ZTVN10__cxxabiv117__pbase_type_infoE
000100fc g     F .exceptions	00000060 alt_irq_handler
00011dc0  w    F .text	00000064 _ZNSt14_Function_baseD2Ev
00019660 g     O .rwdata	00000028 alt_dev_null
000140a8 g     F .text	00000128 _ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
00019784  w    O .rwdata	00000003 _ZTSPi
00014ffc g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
000197cc  w    O .rwdata	00000003 _ZTSPf
00019054  w    O .rodata	00000010 _ZTIPKw
000197d8  w    O .rwdata	00000003 _ZTSPd
00019800  w    O .rwdata	00000004 _ZTSPDf
00018a38  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
00017f30 g     F .text	00000004 alt_dcache_flush_all
0001986c  w    O .rwdata	00000008 _ZTIx
0001970c  w    O .rwdata	00000003 _ZTSPw
000196d4  w    O .rwdata	00000008 _ZTISt9exception
0001980c  w    O .rwdata	00000003 _ZTSDd
00019804  w    O .rwdata	00000005 _ZTSPKDf
00010368 g     F .text	00000024 _ZN21PositionControllerPan21CopyInputsToVariablesEPf
000197a4  w    O .rwdata	00000002 _ZTSm
0001992c g       *ABS*	00000000 __ram_rwdata_end
00018f44  w    O .rodata	00000010 _ZTIPi
00012388 g     F .text	00000030 _ZN5Plant5Motor12setDirectionENS0_9DirectionE
00014000 g     F .text	00000004 _ZNSt9type_infoD1Ev
00019910 g     O .rwdata	00000008 alt_dev_list
00014ffc g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
00013c08 g     F .text	00000038 _ZN10__cxxabiv120__function_type_infoD0Ev
00019728  w    O .rwdata	00000004 _ZTSPDs
00014014 g     F .text	00000008 _ZNSt9type_infoD0Ev
000188e4  w    O .rodata	0000000c _ZTI8Discrete
000193a4 g       *ABS*	00000000 __ram_rodata_end
00012ba0 g     F .text	00000004 _ZdlPvj
0001985c  w    O .rwdata	00000008 _ZTIf
000178f0 g     F .text	000000f4 kill
00019ed4 g     O .bss	00000004 _ZN5Timer17timer_isr_contextE
0001979c  w    O .rwdata	00000003 _ZTSPl
00013bf0 g     F .text	00000008 _ZNK10__cxxabiv120__function_type_info15__is_function_pEv
0001972c  w    O .rwdata	00000005 _ZTSPKDs
00018f84  w    O .rodata	00000010 _ZTIPs
000171a0 g     F .text	0000005c .hidden __umodsi3
0001400c g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
00019724  w    O .rwdata	00000003 _ZTSDs
000197b8  w    O .rwdata	00000004 _ZTSPKx
00013aa8 g     F .text	00000064 __cxa_init_primary_exception
00010840 g     F .text	00000190 _ZN21PositionControllerPanC1Ev
00013a04 g     F .text	0000000c _ZSt13get_terminatev
0001a188 g       *ABS*	00000000 end
000197fc  w    O .rwdata	00000003 _ZTSDf
00014a5c g     F .text	00000010 _ZNSt17bad_function_callD2Ev
000116e4 g     F .text	000000a8 _ZN22PositionControllerTiltD1Ev
00019744  w    O .rwdata	00000002 _ZTSc
00017d4c g     F .text	00000084 altera_avalon_uart_write
00016f54 g     F .text	00000018 .hidden _Unwind_DeleteException
00011120 g     F .text	00000034 _ZN22PositionControllerTilt9TerminateEPfS0_
00019794  w    O .rwdata	00000004 _ZTSPKj
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00012adc g     F .text	000000c4 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
00014060 g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD2Ev
000188a5 g       *ABS*	00000000 __CTOR_LIST__
0001b400 g       *ABS*	00000000 __alt_stack_pointer
00018ee4  w    O .rodata	00000010 _ZTIPm
00017c6c g     F .text	00000048 alt_avalon_timer_sc_init
00017cc4 g     F .text	00000010 altera_avalon_uart_write_fd
00016ff4 g     F .text	00000054 .hidden __clzsi2
000128fc g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
00017c00 g     F .text	00000030 altera_avalon_jtag_uart_write
0001038c g     F .text	00000024 _ZN21PositionControllerPan22CopyVariablesToOutputsEPf
00018cac  w    O .rodata	00000012 _ZTSSt13bad_exception
0001975c  w    O .rwdata	00000002 _ZTSh
000128a8 g     F .text	0000003c _ZN5Timer6enableEv
000121cc g     F .text	00000134 _ZN5Plant5Motor20setSpeedAndDirectionEa
000155a4 g     F .text	0000000c _ZNKSt20bad_array_new_length4whatEv
00017274 g     F .text	000000f8 _free_r
000155f8 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
0001144c g     F .text	00000190 _ZN22PositionControllerTiltC1Ev
00018718 g     F .text	00000128 __call_exitprocs
00010180 g     F .text	0000003c _start
00019f0c g     O .bss	00000004 _alt_tick_rate
00018b9c  w    O .rodata	0000000d _ZTSSt9type_info
000150f8 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD2Ev
00015494 g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
0001547c g     F .text	0000000c __cxa_pure_virtual
000101bc g     F .text	00000004 _ZN8DiscreteD2Ev
00019194  w    O .rodata	00000014 _ZTVSt9bad_alloc
00019f08 g     O .bss	00000004 _alt_nticks
00017730 g     F .text	00000010 signal
00017b40 g     F .text	00000048 alt_sys_init
00019700  w    O .rwdata	00000003 _ZTSPb
000198c4  w    O .rwdata	00000008 _ZTIDs
00018fa4  w    O .rodata	00000010 _ZTIPh
00019064  w    O .rodata	00000010 _ZTIPw
0001925c  w    O .rodata	0000000c _ZTISt10bad_typeid
00018608 g     F .text	00000110 __register_exitproc
000191ec  w    O .rodata	00000014 _ZTVSt20bad_array_new_length
00019178  w    O .rodata	0000000d _ZTSSt9bad_alloc
0001a068 g     O .bss	00000010 _ZN5Timer8callbackE
00014fd4 g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
00013d80 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
000198a4  w    O .rwdata	00000008 _ZTIh
00018eb4  w    O .rodata	00000010 _ZTIPKx
000123b8 g     F .text	0000002c _ZN5Plant5Motor6enableEv
000171fc g     F .text	00000028 .hidden __mulsi3
000193a4 g       *ABS*	00000000 __ram_rwdata_start
00016dc4 g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
000188c4 g       *ABS*	00000000 __ram_rodata_start
00016ed0 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
00018d4c  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
00019884  w    O .rwdata	00000008 _ZTIj
000155c0 g     F .text	00000038 _ZNSt20bad_array_new_lengthD0Ev
00019854  w    O .rwdata	00000008 _ZTId
00015550 g     F .text	00000034 __cxa_throw_bad_array_new_length
00014000 g     F .text	00000004 _ZNSt9type_infoD2Ev
000197ec  w    O .rwdata	00000003 _ZTSDn
00015000 g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
00011d1c  w    F .text	0000000c _ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_
0001539c g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD2Ev
00013f7c g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
00018f14  w    O .rodata	00000010 _ZTIPKj
00018bcc  w    O .rodata	00000026 _ZTSN10__cxxabiv121__vmi_class_type_infoE
00010d40 g     F .text	00000118 _ZN21PositionControllerPan9CalculateEPfS0_
00013c44 g     F .text	00000008 _ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv
00018d88  w    O .rodata	0000000c _ZTIN10__cxxabiv123__fundamental_type_infoE
00017b88 g     F .text	00000010 altera_avalon_jtag_uart_read_fd
0001850c g     F .text	00000054 alt_get_fd
00017dd0 g     F .text	000000ac alt_busy_sleep
000197f4  w    O .rwdata	00000005 _ZTSPKDn
000196e4  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
00018abc  w    O .rodata	0000000c _ZTIN10__cxxabiv120__function_type_infoE
00011c0c g     F .text	00000110 _Z15handleUartEventRN6Serial7messageE
00019eb4 g     O .bss	00000004 angle
000197d0  w    O .rwdata	00000004 _ZTSPKf
000101c0 g     F .text	00000010 _ZN8Discrete10InitializeEP13Submodel20sim
00019758  w    O .rwdata	00000004 _ZTSPKa
00018594 g     F .text	00000030 memcmp
0001a188 g       *ABS*	00000000 __alt_stack_base
000154b0 g     F .text	00000038 _ZNSt9bad_allocD0Ev
00013d38 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
00015028 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD2Ev
00011180 g     F .text	00000038 _ZN22PositionControllerTilt13SetFinishTimeEf
00011160 g     F .text	0000001c _ZN22PositionControllerTilt15CalculateOutputEv
00019718  w    O .rwdata	00000004 _ZTSPDu
00016f14 g     F .text	00000040 .hidden _Unwind_SjLj_Resume_or_Rethrow
000196b8  w    O .rwdata	00000008 _ZTIFvvE
000156a0 g     F .text	00000930 .hidden __divdf3
00019210  w    O .rodata	0000000c _ZTSSt8bad_cast
00014004 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
00013c4c g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD2Ev
000196a8  w    O .rwdata	00000008 _ZTIFvRN6Serial7messageEE
00010f7c g     F .text	0000002c _ZN22PositionControllerTilt21CopyInputsToVariablesEPf
000160b8 g     F .text	000007ac .hidden __muldf3
00018d10  w    O .rodata	00000014 _ZTVSt9exception
00014ff4 g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
00018470 g     F .text	0000009c alt_find_file
00017f3c g     F .text	0000006c alt_dev_llist_insert
00017ac8 g     F .text	00000004 __malloc_lock
00017ad0 g     F .text	0000004c sbrk
000153ac g     F .text	00000038 _ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
00018a68  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
00013b0c g     F .text	00000060 __cxa_throw
00016d88 g     F .text	00000010 .hidden _Unwind_SetIP
00018e04  w    O .rodata	00000010 _ZTIPDf
00019eb9 g     O .bss	00000001 tilt_homing_done
00010500 g     F .text	0000000c _ZN21PositionControllerPan10IsFinishedEv
0001988c  w    O .rwdata	00000008 _ZTIi
00019f10 g     O .bss	0000006c pan_model
00018e94  w    O .rodata	00000010 _ZTIPKy
00019044  w    O .rodata	00000010 _ZTIPDu
00019eb4 g       *ABS*	00000000 __bss_start
00017254 g     F .text	00000020 memset
00011e24 g     F .text	00000100 main
000197e0  w    O .rwdata	00000002 _ZTSe
00019ed3 g     O .bss	00000001 _ZN6Serial4UART10uart_readyE
00019ef8 g     O .bss	00000004 alt_envp
00019268  w    O .rodata	00000014 _ZTVSt10bad_typeid
00017b98 g     F .text	00000010 altera_avalon_jtag_uart_write_fd
0001984c  w    O .rwdata	00000008 _ZTIe
00015008 g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
00015010 g     F .text	0000000c __cxa_get_globals_fast
00014aa0 g     F .text	00000034 _ZSt25__throw_bad_function_callv
00019228  w    O .rodata	00000014 _ZTVSt8bad_cast
00012ba4 g     F .text	00000004 _ZdaPv
0001b400 g       *ABS*	00000000 __alt_heap_limit
000197c8  w    O .rwdata	00000002 _ZTSf
0001564c g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
00016960 g     F .text	00000170 .hidden __truncdfsf2
00018fd4  w    O .rodata	00000010 _ZTIPKc
0001275c g     F .text	00000030 _ZN5Timer11timer_0_isrEPv
00018a00  w    O .rodata	00000017 _ZTSPFvRN6Serial7messageEE
0001736c g     F .text	00000150 _malloc_r
00014a50 g     F .text	0000000c _ZNKSt17bad_function_call4whatEv
00018ed4  w    O .rodata	00000010 _ZTIPKm
00014fd4 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
00019920 g     O .rwdata	00000004 alt_errno
000196a0  w    O .rwdata	00000008 _ZTT22PositionControllerTilt
00017740 g     F .text	00000008 _init_signal
00018a5c  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
00012300 g     F .text	00000088 _ZN5Plant5Motor12setDutyCycleEh
00018ff4  w    O .rodata	00000010 _ZTIPKDi
000115dc g     F .text	00000108 _ZN22PositionControllerTiltD2Ev
00014fc4 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
000191e0  w    O .rodata	0000000c _ZTISt20bad_array_new_length
00017048 g     F .text	00000080 .hidden __divsi3
0001539c g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
00018e34  w    O .rodata	00000010 _ZTIPKe
000188b8 g       *ABS*	00000000 __CTOR_END__
00011dc0  w    F .text	00000064 _ZNSt14_Function_baseD1Ev
00019698  w    O .rwdata	00000008 _ZTT21PositionControllerPan
000109d0 g     F .text	00000108 _ZN21PositionControllerPanD2Ev
00019734  w    O .rwdata	00000003 _ZTSDi
00019ece g     O .bss	00000001 _ZN6Serial4UART6rx_lenE
0001779c g     F .text	00000044 strcmp
00018f74  w    O .rodata	00000010 _ZTIPKs
00018fe4  w    O .rodata	00000010 _ZTIPc
00019844  w    O .rwdata	00000008 _ZTIDn
000188c4 g       *ABS*	00000000 __flash_rodata_start
00018d38  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
000126c4 g     F .text	00000048 _ZN6Serial4UART8sendDataENS_7messageE
000188b8 g       *ABS*	00000000 __DTOR_LIST__
0001983c  w    O .rwdata	00000008 _ZTIDf
00015604 g     F .text	00000010 _ZNSt8bad_castD2Ev
000197e4  w    O .rwdata	00000003 _ZTSPe
00019708  w    O .rwdata	00000002 _ZTSw
00017b20 g     F .text	00000020 alt_irq_init
00019748  w    O .rwdata	00000003 _ZTSPc
000182e4 g     F .text	0000002c alt_release_fd
00013d48 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
00015140 g     F .text	0000025c _ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj
00018df4  w    O .rodata	00000010 _ZTIPKDf
0001927c g     O .rodata	00000100 .hidden __clz_tab
00019824  w    O .rwdata	00000005 _ZTSPKDe
00018560 g     F .text	00000014 atexit
000154e8 g     F .text	00000034 __cxa_bad_cast
00016dbc g     F .text	00000008 .hidden _Unwind_GetTextRelBase
00018c00  w    O .rodata	0000002c _ZTVN10__cxxabiv121__vmi_class_type_infoE
00014db8 g     F .text	00000058 __cxa_call_terminate
00018980  w    O .rodata	00000019 _ZTS22PositionControllerTilt
00019874  w    O .rwdata	00000008 _ZTIm
00019900 g     O .rwdata	00000004 _impure_ptr
000196dc  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
00018ac8  w    O .rodata	00000020 _ZTVN10__cxxabiv120__function_type_infoE
00019f00 g     O .bss	00000004 alt_argc
00019f7c g     O .bss	0000006c tilt_model
00018d94  w    O .rodata	00000020 _ZTVN10__cxxabiv123__fundamental_type_infoE
00017ff0 g     F .text	00000048 _do_dtors
00019138  w    O .rodata	0000000c _ZTIN10__cxxabiv129__pointer_to_member_type_infoE
0001115c g     F .text	00000004 _ZN22PositionControllerTilt14CalculateInputEv
00019034  w    O .rodata	00000010 _ZTIPKDu
0001054c g     F .text	00000024 _ZN21PositionControllerPan15CalculateOutputEv
00013a34 g     F .text	0000000c _ZSt14get_unexpectedv
00010020 g       .exceptions	00000000 alt_irq_entry
0001981c  w    O .rwdata	00000003 _ZTSDe
00016dac g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
00018fb4  w    O .rodata	00000010 _ZTIPKa
00019918 g     O .rwdata	00000008 alt_fs_list
00018cec  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
00019ff8 g     O .bss	00000010 u_tilt
000198cc  w    O .rwdata	00000008 _ZTIDu
00018f24  w    O .rodata	00000010 _ZTIPj
00016d98 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
00019820  w    O .rwdata	00000004 _ZTSPDe
00014e18 g     F .text	000000b8 __cxa_begin_catch
00019764  w    O .rwdata	00000004 _ZTSPKh
0001298c g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
000139bc g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
00019094  w    O .rodata	00000010 _ZTIPKv
000197e8  w    O .rwdata	00000004 _ZTSPKe
00014a6c g     F .text	00000034 _ZNSt17bad_function_callD0Ev
00010020 g       *ABS*	00000000 __ram_exceptions_start
00018c40  w    O .rodata	00000016 _ZTSSt17bad_function_call
000196f0  w    O .rwdata	00000002 _ZTSv
00014a5c g     F .text	00000010 _ZNSt17bad_function_callD1Ev
00010bc4 g     F .text	00000038 _ZTv0_n16_N21PositionControllerPanD0Ev
00014fe8 g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
000196ec g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
00019774  w    O .rwdata	00000002 _ZTSt
00013c94 g     F .text	000000a4 _ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00018f64  w    O .rodata	00000010 _ZTIPt
00019690  w    O .rwdata	00000008 _ZTI13Submodel20sim
000177fc g     F .text	00000004 alt_ic_isr_register
00014c64 g     F .text	00000058 __cxa_allocate_exception
00018e54  w    O .rodata	00000010 _ZTIPKd
00018b64  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
00018f94  w    O .rodata	00000010 _ZTIPKh
00015584 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
0001992c g       *ABS*	00000000 _edata
00017cb4 g     F .text	00000010 altera_avalon_uart_read_fd
0001a188 g       *ABS*	00000000 _end
000198f8 g     O .rwdata	00000001 _ZSt7nothrow
000141d0 g     F .text	0000061c _ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
000130cc g     F .text	00000698 __gxx_personality_sj0
00010180 g       *ABS*	00000000 __ram_exceptions_end
00019780  w    O .rwdata	00000002 _ZTSi
00010258 g     F .text	000000f8 _ZN21PositionControllerPan16CalculateDynamicEv
000101dc g     F .text	00000064 _ZN8Discrete4StepEv
000197bc  w    O .rwdata	00000002 _ZTSy
00014fc0 g     F .text	00000004 _ZNSt9exceptionD1Ev
00011158 g     F .text	00000004 _ZN22PositionControllerTilt15CalculateStaticEv
000190b4  w    O .rodata	00000022 _ZTSN10__cxxabiv117__pbase_type_infoE
00010fa8 g     F .text	0000001c _ZN22PositionControllerTilt22CopyVariablesToOutputsEPf
00017838 g     F .text	00000038 alt_ic_irq_disable
00019798  w    O .rwdata	00000002 _ZTSl
00015070 g     F .text	00000070 _Znwj
000198e4  w    O .rwdata	00000008 _ZTIv
0001976c  w    O .rwdata	00000003 _ZTSPs
0001894c  w    O .rodata	00000034 _ZTV21PositionControllerPan
00018574 g     F .text	00000020 exit
00016d40 g     F .text	00000018 .hidden _Unwind_SetGR
00013ee0 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
000138e0 g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
00019eb8 g     O .bss	00000001 pan_homing_done
00018a94  w    O .rodata	00000025 _ZTSN10__cxxabiv120__function_type_infoE
000170c8 g     F .text	00000074 .hidden __modsi3
000154a0 g     F .text	00000010 _ZNSt9bad_allocD1Ev
0001b400 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
00019ecd g     O .bss	00000001 uart
000197d4  w    O .rwdata	00000002 _ZTSd
0001987c  w    O .rwdata	00000008 _ZTIl
00019810  w    O .rwdata	00000004 _ZTSPDd
00018cc0  w    O .rodata	0000000c _ZTISt13bad_exception
00018dc4  w    O .rodata	00000010 _ZTIPDe
00012434 g     F .text	00000084 _ZN5Plant5Motor19isAtInitialPositionEv
0001270c g     F .text	00000038 _ZN6Serial4UART14convertToArrayENS_7messageE
000101bc g     F .text	00000004 _ZN8DiscreteD1Ev
0001890c  w    O .rodata	00000010 _ZTS13Submodel20sim
000150e0  w    F .text	00000018 _ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj
00013bf8 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD2Ev
00018ec4  w    O .rodata	00000010 _ZTIPx
000177e0 g     F .text	00000014 _exit
000188f0  w    O .rodata	0000001c _ZTV8Discrete
00016d10 g     F .text	00000018 .hidden _Unwind_GetGR
0001501c g     F .text	0000000c __cxa_get_globals
000196c8 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
000185ec g     F .text	0000001c strlen
00010f64 g     F .text	00000018 _ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv
00010544 g     F .text	00000004 _ZN21PositionControllerPan15CalculateStaticEv
000174fc g     F .text	0000005c _init_signal_r
000196cc  w    O .rwdata	00000008 _ZTISt9type_info
00018188 g     F .text	0000015c open
00018e44  w    O .rodata	00000010 _ZTIPe
0001500c g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
00015fd0 g     F .text	000000e8 .hidden __gedf2
00018c9c  w    O .rodata	0000000d _ZTSSt9exception
00019ee8 g     O .bss	00000004 __malloc_sbrk_start
00011154 g     F .text	00000004 _ZN22PositionControllerTilt16CalculateInitialEv
0001924c  w    O .rodata	0000000f _ZTSSt10bad_typeid
0001982c  w    O .rwdata	00000008 _ZTIDe
0001a030 g     O .bss	00000028 tilt_motor
0001551c g     F .text	00000034 __cxa_bad_typeid
00014fe0 g     F .text	00000008 _ZNSt9exceptionD0Ev
00018038 g     F .text	00000004 alt_icache_flush_all
00010ad8 g     F .text	000000a8 _ZN21PositionControllerPanD1Ev
000105ac g     F .text	00000294 _ZN21PositionControllerPanC2Ev
0001050c g     F .text	00000034 _ZN21PositionControllerPan9TerminateEPfS0_
000197b0  w    O .rwdata	00000002 _ZTSx
00015658 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
00016db4 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
00019904 g     O .rwdata	00000004 alt_priority_mask
00019eec g     O .bss	00000004 __malloc_free_list
00011d78  w    F .text	00000048 _ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
00017800 g     F .text	00000038 alt_ic_irq_enable
0001989c  w    O .rwdata	00000008 _ZTIs
00017cd4 g     F .text	00000078 altera_avalon_uart_read
00018fc4  w    O .rodata	00000010 _ZTIPa
00019710  w    O .rwdata	00000004 _ZTSPKw
00010bfc g     F .text	00000144 _ZN21PositionControllerPan10InitializeEPfS0_f
00013bf8 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD1Ev
00015658 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
00019024  w    O .rodata	00000010 _ZTIPDs
00018dd4  w    O .rodata	00000010 _ZTIPKDd
00019924 g     O .rwdata	00000008 alt_alarm_list
00018d60  w    O .rodata	00000028 _ZTSN10__cxxabiv123__fundamental_type_infoE
00017fa8 g     F .text	00000048 _do_ctors
00017748 g     F .text	0000000c __sigtramp
000101d4 g     F .text	00000008 _ZN8DiscreteD0Ev
00018b0c  w    O .rodata	0000000c _ZTIN10__cxxabiv119__pointer_type_infoE
00017e7c g     F .text	000000b4 close
00019760  w    O .rwdata	00000003 _ZTSPh
000189e8  w    O .rodata	00000016 _ZTSFvRN6Serial7messageEE
00010fc4 g     F .text	00000150 _ZN22PositionControllerTilt5ResetEf
00018ccc  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
000179e4 g     F .text	00000084 alt_load
00019688  w    O .rwdata	00000008 _ZTI17IntegrationMethod
0001401c g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
00019770  w    O .rwdata	00000004 _ZTSPKs
000153e4 g     F .text	00000098 _ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00010b98 g     F .text	0000002c _ZN21PositionControllerPanD0Ev
00017724 g     F .text	0000000c raise
0001977c  w    O .rwdata	00000004 _ZTSPKt
00017248 g     F .text	0000000c free
0001299c g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
00012560 g     F .text	00000164 _ZN6Serial4UARTC2ESt8functionIFvRNS_7messageEEE
000111b8 g     F .text	00000294 _ZN22PositionControllerTiltC2Ev
00010574 g     F .text	00000038 _ZN21PositionControllerPan13SetFinishTimeEf
0001278c g     F .text	0000011c _ZN5TimerC1ESt8functionIFvvEE



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
   10108:	0009313a 	rdctl	r4,ipending
   1010c:	040000b4 	movhi	r16,2
   10110:	84282204 	addi	r16,r16,-24440
   10114:	0005883a 	mov	r2,zero
   10118:	00c00044 	movi	r3,1
   1011c:	20ca703a 	and	r5,r4,r3
   10120:	28000b26 	beq	r5,zero,10150 <alt_irq_handler+0x54>
   10124:	100490fa 	slli	r2,r2,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0009313a 	rdctl	r4,ipending
   1013c:	203ff51e 	bne	r4,zero,10114 <alt_irq_handler+0x18>
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
   10150:	1806907a 	slli	r3,r3,1
   10154:	10800044 	addi	r2,r2,1
   10158:	003ff006 	br	1011c <alt_irq_handler+0x20>

0001015c <alt_instruction_exception_entry>:
   1015c:	d0a21f17 	ldw	r2,-30596(gp)
   10160:	200b883a 	mov	r5,r4
   10164:	10000326 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   10174:	003da03a 	break	0
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	deed0014 	ori	sp,sp,46080
    movhi gp, %hi(_gp)
   10188:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1018c:	d685a214 	ori	gp,gp,5768
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10a7ad14 	ori	r2,r2,40628

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18e86214 	ori	r3,r3,41352

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	00179e40 	call	179e4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	0017a680 	call	17a68 <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <alt_after_alt_main>

000101bc <_ZN8DiscreteD1Ev>:
	model = NULL;
}

Discrete::~Discrete(void)
{
}
   101bc:	f800283a 	ret

000101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>:
/*
 * the initialization of the Discrete integration method
 */
void Discrete::Initialize (Submodel20sim* themodel)
{
	model = themodel;
   101c0:	21400115 	stw	r5,4(r4)
	model->m_major = true;
   101c4:	00800044 	movi	r2,1
   101c8:	28800145 	stb	r2,5(r5)
}
   101cc:	f800283a 	ret

000101d0 <_ZN8Discrete9TerminateEv>:

/* the termination of the Discrete integration method */
void Discrete::Terminate ()
{
	/* nothing to be done */
}
   101d0:	f800283a 	ret

000101d4 <_ZN8DiscreteD0Ev>:
}
   101d4:	01400204 	movi	r5,8
   101d8:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000101dc <_ZN8Discrete4StepEv>:
void Discrete::Step ()
{
	XXInteger index;

	/* for each of the supplied states */
	for (index = 0; index < model->m_number_states; index++)
   101dc:	21000117 	ldw	r4,4(r4)
   101e0:	21800a17 	ldw	r6,40(r4)
   101e4:	0180090e 	bge	zero,r6,1020c <_ZN8Discrete4StepEv+0x30>
   101e8:	20801317 	ldw	r2,76(r4)
   101ec:	300c90ba 	slli	r6,r6,2
   101f0:	20c01217 	ldw	r3,72(r4)
   101f4:	308d883a 	add	r6,r6,r2
	{
		/* just a move of the new state */
		model->m_s [index] = model->m_R [index];
   101f8:	11400017 	ldw	r5,0(r2)
	for (index = 0; index < model->m_number_states; index++)
   101fc:	10800104 	addi	r2,r2,4
   10200:	18c00104 	addi	r3,r3,4
		model->m_s [index] = model->m_R [index];
   10204:	197fff15 	stw	r5,-4(r3)
	for (index = 0; index < model->m_number_states; index++)
   10208:	11bffb1e 	bne	r2,r6,101f8 <_ZN8Discrete4StepEv+0x1c>
	}

	/* increment the simulation time */
	model->m_time += model->m_step_size;
   1020c:	20c00517 	ldw	r3,20(r4)
   10210:	20800217 	ldw	r2,8(r4)
	model->m_major = true;

	/* evaluate the dynamic part to calculate the new rates */
	model->CalculateDynamic ();
   10214:	21400017 	ldw	r5,0(r4)
	model->m_time += model->m_step_size;
   10218:	1887ff72 	custom	253,r3,r3,r2
	model->CalculateDynamic ();
   1021c:	2a400017 	ldw	r9,0(r5)
   10220:	00800074 	movhi	r2,1
	model->m_time += model->m_step_size;
   10224:	20c00515 	stw	r3,20(r4)
	model->m_major = true;
   10228:	00c00044 	movi	r3,1
   1022c:	20c00145 	stb	r3,5(r4)
	model->CalculateDynamic ();
   10230:	10809504 	addi	r2,r2,596
   10234:	4880011e 	bne	r9,r2,1023c <_ZN8Discrete4StepEv+0x60>
}
   10238:	f800283a 	ret
	model->CalculateDynamic ();
   1023c:	4800683a 	jmp	r9

00010240 <_ZN8DiscreteC1Ev>:
Discrete::Discrete(void)
   10240:	008000b4 	movhi	r2,2
   10244:	10a23e04 	addi	r2,r2,-30472
   10248:	20800015 	stw	r2,0(r4)
	model = NULL;
   1024c:	20000115 	stw	zero,4(r4)
}
   10250:	f800283a 	ret

00010254 <_ZN13Submodel20sim16CalculateDynamicEv>:
		friend class IntegrationMethod;
		friend class Discrete;
		friend class Euler;
		friend class RungeKutta2;
		friend class RungeKutta4;
		virtual void CalculateDynamic (void) {};
   10254:	f800283a 	ret

00010258 <_ZN21PositionControllerPan16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerPan::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10258:	20c00017 	ldw	r3,0(r4)
   1025c:	008fe034 	movhi	r2,16256
   10260:	18fffd17 	ldw	r3,-12(r3)
   10264:	20c9883a 	add	r4,r4,r3
   10268:	21400f17 	ldw	r5,60(r4)
   1026c:	20c01117 	ldw	r3,68(r4)
   10270:	22400217 	ldw	r9,8(r4)
   10274:	2a800317 	ldw	r10,12(r5)
   10278:	2a000217 	ldw	r8,8(r5)

	/* PlusMinus1\plus1 = in; */
	m_V[3] = m_V[7];

	/* Splitter1\input = position; */
	m_V[5] = m_V[8];
   1027c:	19c00817 	ldw	r7,32(r3)
	m_V[3] = m_V[7];
   10280:	19800717 	ldw	r6,28(r3)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10284:	4291ff32 	custom	252,r8,r8,r10
   10288:	4251ff72 	custom	253,r8,r8,r9
   1028c:	1211fff2 	custom	255,r8,r2,r8
   10290:	1a000215 	stw	r8,8(r3)
	m_V[5] = m_V[8];
   10294:	19c00515 	stw	r7,20(r3)
	m_V[3] = m_V[7];
   10298:	19800315 	stw	r6,12(r3)

	/* corrGain\corr = corrGain\K * Splitter1\input; */
	m_V[0] = m_P[0] * m_V[5];
   1029c:	28800017 	ldw	r2,0(r5)

	/* PID1\error = PlusMinus1\plus1 - Splitter1\input; */
	m_R[1] = m_V[3] - m_V[5];
   102a0:	22801317 	ldw	r10,76(r4)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   102a4:	22c01217 	ldw	r11,72(r4)
	m_V[0] = m_P[0] * m_V[5];
   102a8:	11c5ff32 	custom	252,r2,r2,r7
   102ac:	18800015 	stw	r2,0(r3)
	m_R[1] = m_V[3] - m_V[5];
   102b0:	31cfffb2 	custom	254,r7,r6,r7
   102b4:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   102b8:	2a400217 	ldw	r9,8(r5)
   102bc:	29800117 	ldw	r6,4(r5)
   102c0:	58800017 	ldw	r2,0(r11)
   102c4:	5a000117 	ldw	r8,4(r11)
   102c8:	23400217 	ldw	r13,8(r4)
   102cc:	2b800317 	ldw	r14,12(r5)
   102d0:	4885ff32 	custom	252,r2,r9,r2
   102d4:	3a11ffb2 	custom	254,r8,r7,r8
   102d8:	4993ff32 	custom	252,r9,r9,r6
   102dc:	1b000217 	ldw	r12,8(r3)
   102e0:	1385ff32 	custom	252,r2,r2,r14
   102e4:	4251ff32 	custom	252,r8,r8,r9
   102e8:	334dff32 	custom	252,r6,r6,r13
   102ec:	31cdff32 	custom	252,r6,r6,r7
   102f0:	1205ff72 	custom	253,r2,r2,r8
   102f4:	1185ff72 	custom	253,r2,r2,r6
   102f8:	1305ff32 	custom	252,r2,r2,r12
   102fc:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10300:	21000217 	ldw	r4,8(r4)
   10304:	29c00417 	ldw	r7,16(r5)
   10308:	59800217 	ldw	r6,8(r11)
   1030c:	1109ff32 	custom	252,r4,r2,r4
   10310:	21c9fff2 	custom	255,r4,r4,r7
   10314:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[1] = m_R[2] + m_R[0];
   10318:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   1031c:	51000215 	stw	r4,8(r10)
	m_V[1] = m_R[2] + m_R[0];
   10320:	18800115 	stw	r2,4(r3)

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10324:	29000517 	ldw	r4,20(r5)
   10328:	110df9f2 	custom	231,r6,r2,r4
   1032c:	3000031e 	bne	r6,zero,1033c <_ZN21PositionControllerPan16CalculateDynamicEv+0xe4>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) */
		((m_V[1] > m_P[6]) ? 
   10330:	29000617 	ldw	r4,24(r5)
   10334:	110bf972 	custom	229,r5,r2,r4
   10338:	28000226 	beq	r5,zero,10344 <_ZN21PositionControllerPan16CalculateDynamicEv+0xec>
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   1033c:	19000415 	stw	r4,16(r3)
			/* PID1\output */
			m_V[1]
		)
	);

}
   10340:	f800283a 	ret
		((m_V[1] > m_P[6]) ? 
   10344:	1009883a 	mov	r4,r2
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10348:	19000415 	stw	r4,16(r3)
}
   1034c:	f800283a 	ret

00010350 <_ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10350:	2009883a 	mov	r4,r4
   10354:	20800017 	ldw	r2,0(r4)
   10358:	10bffd04 	addi	r2,r2,-12
   1035c:	10800017 	ldw	r2,0(r2)
   10360:	2089883a 	add	r4,r4,r2
   10364:	00102581 	jmpi	10258 <_ZN21PositionControllerPan16CalculateDynamicEv>

00010368 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>:
	m_V[7] = u[0];		/* in */
   10368:	20800017 	ldw	r2,0(r4)
   1036c:	28c00017 	ldw	r3,0(r5)
   10370:	10bffd17 	ldw	r2,-12(r2)
   10374:	2089883a 	add	r4,r4,r2
   10378:	20801117 	ldw	r2,68(r4)
   1037c:	10c00715 	stw	r3,28(r2)
	m_V[8] = u[1];		/* position */
   10380:	28c00117 	ldw	r3,4(r5)
   10384:	10c00815 	stw	r3,32(r2)
}
   10388:	f800283a 	ret

0001038c <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[6];		/* corr */
   1038c:	20800017 	ldw	r2,0(r4)
   10390:	10bffd17 	ldw	r2,-12(r2)
   10394:	2089883a 	add	r4,r4,r2
   10398:	20801117 	ldw	r2,68(r4)
   1039c:	10c00617 	ldw	r3,24(r2)
   103a0:	28c00015 	stw	r3,0(r5)
	y[1] = 	m_V[9];		/* out */
   103a4:	10800917 	ldw	r2,36(r2)
   103a8:	28800115 	stw	r2,4(r5)
}
   103ac:	f800283a 	ret

000103b0 <_ZN21PositionControllerPan5ResetEf>:
	m_start_time = starttime;
   103b0:	20800017 	ldw	r2,0(r4)
{
   103b4:	defffe04 	addi	sp,sp,-8
   103b8:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   103bc:	10bffd17 	ldw	r2,-12(r2)
{
   103c0:	2021883a 	mov	r16,r4
	m_step_size = 0.0001;
   103c4:	010e34b4 	movhi	r4,14546
	m_start_time = starttime;
   103c8:	8085883a 	add	r2,r16,r2
{
   103cc:	dfc00115 	stw	ra,4(sp)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103d0:	10c00e17 	ldw	r3,56(r2)
	m_step_size = 0.0001;
   103d4:	212dc5c4 	addi	r4,r4,-18665
   103d8:	11000215 	stw	r4,8(r2)
	m_major = true;
   103dc:	01000044 	movi	r4,1
	m_start_time = starttime;
   103e0:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   103e4:	11400515 	stw	r5,20(r2)
	m_major = true;
   103e8:	11000145 	stb	r4,5(r2)
	m_stop_run = false;
   103ec:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103f0:	18000005 	stb	zero,0(r3)
   103f4:	18000045 	stb	zero,1(r3)
   103f8:	18000085 	stb	zero,2(r3)
   103fc:	180000c5 	stb	zero,3(r3)
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   10400:	80800017 	ldw	r2,0(r16)
   10404:	01800804 	movi	r6,32
   10408:	000b883a 	mov	r5,zero
   1040c:	10bffd17 	ldw	r2,-12(r2)
   10410:	8085883a 	add	r2,r16,r2
   10414:	11000f17 	ldw	r4,60(r2)
   10418:	00172540 	call	17254 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   1041c:	80800017 	ldw	r2,0(r16)
   10420:	01800404 	movi	r6,16
   10424:	000b883a 	mov	r5,zero
   10428:	10bffd17 	ldw	r2,-12(r2)
   1042c:	8085883a 	add	r2,r16,r2
   10430:	11001017 	ldw	r4,64(r2)
   10434:	00172540 	call	17254 <memset>
	memset(m_V, 0, (10 + 1) * sizeof(XXDouble));
   10438:	80800017 	ldw	r2,0(r16)
   1043c:	01800b04 	movi	r6,44
   10440:	000b883a 	mov	r5,zero
   10444:	10bffd17 	ldw	r2,-12(r2)
   10448:	8085883a 	add	r2,r16,r2
   1044c:	11001117 	ldw	r4,68(r2)
   10450:	00172540 	call	17254 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   10454:	80800017 	ldw	r2,0(r16)
   10458:	01800404 	movi	r6,16
   1045c:	000b883a 	mov	r5,zero
   10460:	10bffd17 	ldw	r2,-12(r2)
   10464:	8085883a 	add	r2,r16,r2
   10468:	11001217 	ldw	r4,72(r2)
   1046c:	00172540 	call	17254 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   10470:	80800017 	ldw	r2,0(r16)
   10474:	01800404 	movi	r6,16
   10478:	000b883a 	mov	r5,zero
   1047c:	10bffd17 	ldw	r2,-12(r2)
   10480:	8085883a 	add	r2,r16,r2
   10484:	11001317 	ldw	r4,76(r2)
   10488:	00172540 	call	17254 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   1048c:	80800017 	ldw	r2,0(r16)
   10490:	10bffd17 	ldw	r2,-12(r2)
   10494:	8085883a 	add	r2,r16,r2
   10498:	10801417 	ldw	r2,80(r2)
   1049c:	10000005 	stb	zero,0(r2)
   104a0:	10000045 	stb	zero,1(r2)
   104a4:	10000085 	stb	zero,2(r2)
   104a8:	100000c5 	stb	zero,3(r2)
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   104ac:	80800017 	ldw	r2,0(r16)
   104b0:	10bffd17 	ldw	r2,-12(r2)
   104b4:	8085883a 	add	r2,r16,r2
   104b8:	10801517 	ldw	r2,84(r2)
   104bc:	10000005 	stb	zero,0(r2)
   104c0:	10000045 	stb	zero,1(r2)
   104c4:	10000085 	stb	zero,2(r2)
   104c8:	100000c5 	stb	zero,3(r2)
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   104cc:	80800017 	ldw	r2,0(r16)
   104d0:	10bffd17 	ldw	r2,-12(r2)
   104d4:	8085883a 	add	r2,r16,r2
   104d8:	10801617 	ldw	r2,88(r2)
   104dc:	10000005 	stb	zero,0(r2)
   104e0:	10000045 	stb	zero,1(r2)
   104e4:	10000085 	stb	zero,2(r2)
   104e8:	100000c5 	stb	zero,3(r2)
	state = initialrun;
   104ec:	80000115 	stw	zero,4(r16)
}
   104f0:	dfc00117 	ldw	ra,4(sp)
   104f4:	dc000017 	ldw	r16,0(sp)
   104f8:	dec00204 	addi	sp,sp,8
   104fc:	f800283a 	ret

00010500 <_ZN21PositionControllerPan10IsFinishedEv>:
	return (state == finished);
   10500:	20800117 	ldw	r2,4(r4)
   10504:	108000a0 	cmpeqi	r2,r2,2
}
   10508:	f800283a 	ret

0001050c <_ZN21PositionControllerPan9TerminateEPfS0_>:
	m_V[7] = u[0];		/* in */
   1050c:	20800017 	ldw	r2,0(r4)
   10510:	28c00017 	ldw	r3,0(r5)
   10514:	10bffd17 	ldw	r2,-12(r2)
   10518:	2089883a 	add	r4,r4,r2
   1051c:	20801117 	ldw	r2,68(r4)
   10520:	10c00715 	stw	r3,28(r2)
	m_V[8] = u[1];		/* position */
   10524:	29000117 	ldw	r4,4(r5)
	y[0] = 	m_V[6];		/* corr */
   10528:	10c00617 	ldw	r3,24(r2)
	m_V[8] = u[1];		/* position */
   1052c:	11000815 	stw	r4,32(r2)
	y[0] = 	m_V[6];		/* corr */
   10530:	30c00015 	stw	r3,0(r6)
	y[1] = 	m_V[9];		/* out */
   10534:	10800917 	ldw	r2,36(r2)
   10538:	30800115 	stw	r2,4(r6)
}
   1053c:	f800283a 	ret

00010540 <_ZN21PositionControllerPan16CalculateInitialEv>:
}
   10540:	f800283a 	ret

00010544 <_ZN21PositionControllerPan15CalculateStaticEv>:
   10544:	f800283a 	ret

00010548 <_ZN21PositionControllerPan14CalculateInputEv>:
   10548:	f800283a 	ret

0001054c <_ZN21PositionControllerPan15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerPan::CalculateOutput (void)
{
	/* corr = corrGain\corr; */
	m_V[6] = m_V[0];
   1054c:	20800017 	ldw	r2,0(r4)
   10550:	10bffd17 	ldw	r2,-12(r2)
   10554:	2089883a 	add	r4,r4,r2
   10558:	20801117 	ldw	r2,68(r4)
   1055c:	11000017 	ldw	r4,0(r2)

	/* out = SignalLimiter2\output; */
	m_V[9] = m_V[4];
   10560:	10c00417 	ldw	r3,16(r2)
	m_V[6] = m_V[0];
   10564:	11000615 	stw	r4,24(r2)
	m_V[9] = m_V[4];
   10568:	10c00915 	stw	r3,36(r2)

}
   1056c:	f800283a 	ret

00010570 <_ZN21PositionControllerPan14CalculateFinalEv>:
   10570:	f800283a 	ret

00010574 <_ZN21PositionControllerPan13SetFinishTimeEf>:



bool PositionControllerPan::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   10574:	20c00017 	ldw	r3,0(r4)
   10578:	0005883a 	mov	r2,zero
   1057c:	2885f9b2 	custom	230,r2,r5,r2
   10580:	18fffd17 	ldw	r3,-12(r3)
   10584:	20c9883a 	add	r4,r4,r3
   10588:	1000051e 	bne	r2,zero,105a0 <_ZN21PositionControllerPan13SetFinishTimeEf+0x2c>
   1058c:	20800517 	ldw	r2,20(r4)
   10590:	1145f9f2 	custom	231,r2,r2,r5
   10594:	1000021e 	bne	r2,zero,105a0 <_ZN21PositionControllerPan13SetFinishTimeEf+0x2c>
	{
		m_finish_time = newtime;
		return true;
	}

	return false;
   10598:	0005883a 	mov	r2,zero
}
   1059c:	f800283a 	ret
		m_finish_time = newtime;
   105a0:	21400415 	stw	r5,16(r4)
		return true;
   105a4:	00800044 	movi	r2,1
   105a8:	f800283a 	ret

000105ac <_ZN21PositionControllerPanC2Ev>:
PositionControllerPan::PositionControllerPan(void)
   105ac:	deffee04 	addi	sp,sp,-72
   105b0:	01800074 	movhi	r6,1
   105b4:	00c000b4 	movhi	r3,2
   105b8:	00800074 	movhi	r2,1
   105bc:	318c3304 	addi	r6,r6,12492
   105c0:	18e21004 	addi	r3,r3,-30656
   105c4:	10820804 	addi	r2,r2,2080
   105c8:	d9400115 	stw	r5,4(sp)
   105cc:	200b883a 	mov	r5,r4
   105d0:	d9000304 	addi	r4,sp,12
   105d4:	d9800915 	stw	r6,36(sp)
   105d8:	dfc01115 	stw	ra,68(sp)
   105dc:	d9400015 	stw	r5,0(sp)
   105e0:	d8c00a15 	stw	r3,40(sp)
   105e4:	d8800c15 	stw	r2,48(sp)
   105e8:	df001015 	stw	fp,64(sp)
   105ec:	df000b15 	stw	fp,44(sp)
   105f0:	dec00d15 	stw	sp,52(sp)
   105f4:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   105f8:	d8800117 	ldw	r2,4(sp)
   105fc:	d9c00017 	ldw	r7,0(sp)
   10600:	10c00017 	ldw	r3,0(r2)
   10604:	11400117 	ldw	r5,4(r2)
   10608:	39000204 	addi	r4,r7,8
   1060c:	18bffd17 	ldw	r2,-12(r3)
   10610:	38c00015 	stw	r3,0(r7)
   10614:	d9000215 	stw	r4,8(sp)
   10618:	3885883a 	add	r2,r7,r2
   1061c:	11400015 	stw	r5,0(r2)
   10620:	00bfffc4 	movi	r2,-1
   10624:	d8800415 	stw	r2,16(sp)
   10628:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   1062c:	d9c00017 	ldw	r7,0(sp)
	m_number_parameters = 7;
   10630:	018001c4 	movi	r6,7
	m_number_initialvalues = 3;
   10634:	014000c4 	movi	r5,3
	m_number_constants = 0;
   10638:	38800017 	ldw	r2,0(r7)
	m_C = new XXDouble[0 + 1];		/* constants */
   1063c:	01000104 	movi	r4,4
	m_number_constants = 0;
   10640:	10fffd17 	ldw	r3,-12(r2)
   10644:	38c7883a 	add	r3,r7,r3
   10648:	18000615 	stw	zero,24(r3)
	m_number_parameters = 7;
   1064c:	10fffd17 	ldw	r3,-12(r2)
   10650:	38c7883a 	add	r3,r7,r3
   10654:	19800715 	stw	r6,28(r3)
	m_number_initialvalues = 3;
   10658:	10fffd17 	ldw	r3,-12(r2)
	m_number_variables = 10;
   1065c:	01800284 	movi	r6,10
	m_number_initialvalues = 3;
   10660:	38c7883a 	add	r3,r7,r3
   10664:	19400815 	stw	r5,32(r3)
	m_number_variables = 10;
   10668:	10fffd17 	ldw	r3,-12(r2)
   1066c:	38c7883a 	add	r3,r7,r3
   10670:	19800915 	stw	r6,36(r3)
	m_number_states = 3;
   10674:	10fffd17 	ldw	r3,-12(r2)
   10678:	38c7883a 	add	r3,r7,r3
   1067c:	19400a15 	stw	r5,40(r3)
	m_number_rates = 3;
   10680:	10fffd17 	ldw	r3,-12(r2)
   10684:	38c7883a 	add	r3,r7,r3
   10688:	19400b15 	stw	r5,44(r3)
	m_number_matrices = 0;
   1068c:	10fffd17 	ldw	r3,-12(r2)
   10690:	38c7883a 	add	r3,r7,r3
   10694:	18000c15 	stw	zero,48(r3)
	m_number_unnamed = 0;
   10698:	10fffd17 	ldw	r3,-12(r2)
   1069c:	38c7883a 	add	r3,r7,r3
   106a0:	18000d15 	stw	zero,52(r3)
	m_C = new XXDouble[0 + 1];		/* constants */
   106a4:	10bffd17 	ldw	r2,-12(r2)
   106a8:	00c00044 	movi	r3,1
   106ac:	d8c00415 	stw	r3,16(sp)
   106b0:	3885883a 	add	r2,r7,r2
   106b4:	d8800115 	stw	r2,4(sp)
   106b8:	0013c400 	call	13c40 <_Znaj>
	m_P = new XXDouble[7 + 1];		/* parameters */
   106bc:	d9400017 	ldw	r5,0(sp)
	m_C = new XXDouble[0 + 1];		/* constants */
   106c0:	d9000117 	ldw	r4,4(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106c4:	28c00017 	ldw	r3,0(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   106c8:	20800e15 	stw	r2,56(r4)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106cc:	01000804 	movi	r4,32
   106d0:	18bffd17 	ldw	r2,-12(r3)
   106d4:	2885883a 	add	r2,r5,r2
   106d8:	d8800115 	stw	r2,4(sp)
   106dc:	0013c400 	call	13c40 <_Znaj>
	m_I = new XXDouble[3 + 1];		/* initial values */
   106e0:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106e4:	d9000117 	ldw	r4,4(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   106e8:	28c00017 	ldw	r3,0(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106ec:	20800f15 	stw	r2,60(r4)
	m_I = new XXDouble[3 + 1];		/* initial values */
   106f0:	01000404 	movi	r4,16
   106f4:	18bffd17 	ldw	r2,-12(r3)
   106f8:	2885883a 	add	r2,r5,r2
   106fc:	d8800115 	stw	r2,4(sp)
   10700:	0013c400 	call	13c40 <_Znaj>
	m_V = new XXDouble[10 + 1];		/* variables */
   10704:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10708:	d9000117 	ldw	r4,4(sp)
	m_V = new XXDouble[10 + 1];		/* variables */
   1070c:	28c00017 	ldw	r3,0(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10710:	20801015 	stw	r2,64(r4)
	m_V = new XXDouble[10 + 1];		/* variables */
   10714:	01000b04 	movi	r4,44
   10718:	18bffd17 	ldw	r2,-12(r3)
   1071c:	2885883a 	add	r2,r5,r2
   10720:	d8800115 	stw	r2,4(sp)
   10724:	0013c400 	call	13c40 <_Znaj>
	m_s = new XXDouble[3 + 1];		/* states */
   10728:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[10 + 1];		/* variables */
   1072c:	d9000117 	ldw	r4,4(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   10730:	28c00017 	ldw	r3,0(r5)
	m_V = new XXDouble[10 + 1];		/* variables */
   10734:	20801115 	stw	r2,68(r4)
	m_s = new XXDouble[3 + 1];		/* states */
   10738:	01000404 	movi	r4,16
   1073c:	18bffd17 	ldw	r2,-12(r3)
   10740:	2885883a 	add	r2,r5,r2
   10744:	d8800115 	stw	r2,4(sp)
   10748:	0013c400 	call	13c40 <_Znaj>
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1074c:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   10750:	d9000117 	ldw	r4,4(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10754:	28c00017 	ldw	r3,0(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   10758:	20801215 	stw	r2,72(r4)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1075c:	01000404 	movi	r4,16
   10760:	18bffd17 	ldw	r2,-12(r3)
   10764:	2885883a 	add	r2,r5,r2
   10768:	d8800115 	stw	r2,4(sp)
   1076c:	0013c400 	call	13c40 <_Znaj>
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10770:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10774:	d9000117 	ldw	r4,4(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10778:	28c00017 	ldw	r3,0(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1077c:	20801315 	stw	r2,76(r4)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10780:	01000304 	movi	r4,12
   10784:	18bffd17 	ldw	r2,-12(r3)
   10788:	2885883a 	add	r2,r5,r2
   1078c:	d8800115 	stw	r2,4(sp)
   10790:	0013c400 	call	13c40 <_Znaj>
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10794:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10798:	d9000117 	ldw	r4,4(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   1079c:	28c00017 	ldw	r3,0(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   107a0:	20801415 	stw	r2,80(r4)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   107a4:	01000104 	movi	r4,4
   107a8:	18bffd17 	ldw	r2,-12(r3)
   107ac:	2885883a 	add	r2,r5,r2
   107b0:	d8800115 	stw	r2,4(sp)
   107b4:	0013c400 	call	13c40 <_Znaj>
	m_workarray = new XXDouble[0 + 1];
   107b8:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   107bc:	d9000117 	ldw	r4,4(sp)
	m_workarray = new XXDouble[0 + 1];
   107c0:	28c00017 	ldw	r3,0(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   107c4:	20801515 	stw	r2,84(r4)
	m_workarray = new XXDouble[0 + 1];
   107c8:	01000104 	movi	r4,4
   107cc:	18bffd17 	ldw	r2,-12(r3)
   107d0:	2885883a 	add	r2,r5,r2
   107d4:	d8800115 	stw	r2,4(sp)
   107d8:	0013c400 	call	13c40 <_Znaj>
   107dc:	d8c00117 	ldw	r3,4(sp)
	Reset(0.0);
   107e0:	d9000017 	ldw	r4,0(sp)
   107e4:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   107e8:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   107ec:	00103b00 	call	103b0 <_ZN21PositionControllerPan5ResetEf>
	m_finish_time = 20.0;
   107f0:	d9400017 	ldw	r5,0(sp)
   107f4:	00d06834 	movhi	r3,16800
   107f8:	d9000304 	addi	r4,sp,12
   107fc:	28800017 	ldw	r2,0(r5)
   10800:	10bffd17 	ldw	r2,-12(r2)
   10804:	2885883a 	add	r2,r5,r2
   10808:	10c00415 	stw	r3,16(r2)
   1080c:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
}
   10810:	dfc01117 	ldw	ra,68(sp)
   10814:	df001017 	ldw	fp,64(sp)
   10818:	dec01204 	addi	sp,sp,72
   1081c:	f800283a 	ret
PositionControllerPan::PositionControllerPan(void)
   10820:	d8800517 	ldw	r2,20(sp)
   10824:	d9000217 	ldw	r4,8(sp)
   10828:	d8800015 	stw	r2,0(sp)
   1082c:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   10830:	d9000017 	ldw	r4,0(sp)
   10834:	00bfffc4 	movi	r2,-1
   10838:	d8800415 	stw	r2,16(sp)
   1083c:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

00010840 <_ZN21PositionControllerPanC1Ev>:
   10840:	deffef04 	addi	sp,sp,-68
   10844:	01400074 	movhi	r5,1
   10848:	00c000b4 	movhi	r3,2
   1084c:	00800074 	movhi	r2,1
   10850:	200d883a 	mov	r6,r4
   10854:	294c3304 	addi	r5,r5,12492
   10858:	18e21184 	addi	r3,r3,-30650
   1085c:	10826c04 	addi	r2,r2,2480
   10860:	d9000204 	addi	r4,sp,8
   10864:	dfc01015 	stw	ra,64(sp)
   10868:	d9800015 	stw	r6,0(sp)
   1086c:	d9400815 	stw	r5,32(sp)
   10870:	d8c00915 	stw	r3,36(sp)
   10874:	d8800b15 	stw	r2,44(sp)
   10878:	df000f15 	stw	fp,60(sp)
   1087c:	df000a15 	stw	fp,40(sp)
   10880:	dec00c15 	stw	sp,48(sp)
   10884:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   10888:	d9400017 	ldw	r5,0(sp)
   1088c:	00c000b4 	movhi	r3,2
   10890:	008000b4 	movhi	r2,2
   10894:	18e25604 	addi	r3,r3,-30376
   10898:	10a25d04 	addi	r2,r2,-30348
   1089c:	29000204 	addi	r4,r5,8
   108a0:	28c00015 	stw	r3,0(r5)
   108a4:	28800415 	stw	r2,16(r5)
   108a8:	00bfffc4 	movi	r2,-1
   108ac:	d9000115 	stw	r4,4(sp)
   108b0:	d8800315 	stw	r2,12(sp)
   108b4:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   108b8:	d9400017 	ldw	r5,0(sp)
	m_number_parameters = 7;
   108bc:	00c001c4 	movi	r3,7
	m_number_initialvalues = 3;
   108c0:	008000c4 	movi	r2,3
	m_number_parameters = 7;
   108c4:	28c00b15 	stw	r3,44(r5)
	m_number_variables = 10;
   108c8:	00c00284 	movi	r3,10
	m_number_initialvalues = 3;
   108cc:	28800c15 	stw	r2,48(r5)
	m_number_states = 3;
   108d0:	28800e15 	stw	r2,56(r5)
	m_number_rates = 3;
   108d4:	28800f15 	stw	r2,60(r5)
	m_number_constants = 0;
   108d8:	28000a15 	stw	zero,40(r5)
	m_number_variables = 10;
   108dc:	28c00d15 	stw	r3,52(r5)
	m_number_matrices = 0;
   108e0:	28001015 	stw	zero,64(r5)
	m_number_unnamed = 0;
   108e4:	28001115 	stw	zero,68(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   108e8:	00800044 	movi	r2,1
   108ec:	01000104 	movi	r4,4
   108f0:	d8800315 	stw	r2,12(sp)
   108f4:	0013c400 	call	13c40 <_Znaj>
   108f8:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   108fc:	01000804 	movi	r4,32
	m_C = new XXDouble[0 + 1];		/* constants */
   10900:	28801215 	stw	r2,72(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   10904:	0013c400 	call	13c40 <_Znaj>
   10908:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   1090c:	01000404 	movi	r4,16
	m_P = new XXDouble[7 + 1];		/* parameters */
   10910:	28801315 	stw	r2,76(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10914:	0013c400 	call	13c40 <_Znaj>
   10918:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[10 + 1];		/* variables */
   1091c:	01000b04 	movi	r4,44
	m_I = new XXDouble[3 + 1];		/* initial values */
   10920:	28801415 	stw	r2,80(r5)
	m_V = new XXDouble[10 + 1];		/* variables */
   10924:	0013c400 	call	13c40 <_Znaj>
   10928:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   1092c:	01000404 	movi	r4,16
	m_V = new XXDouble[10 + 1];		/* variables */
   10930:	28801515 	stw	r2,84(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   10934:	0013c400 	call	13c40 <_Znaj>
   10938:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1093c:	01000404 	movi	r4,16
	m_s = new XXDouble[3 + 1];		/* states */
   10940:	28801615 	stw	r2,88(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10944:	0013c400 	call	13c40 <_Znaj>
   10948:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1094c:	01000304 	movi	r4,12
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10950:	28801715 	stw	r2,92(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10954:	0013c400 	call	13c40 <_Znaj>
   10958:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   1095c:	01000104 	movi	r4,4
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10960:	28801815 	stw	r2,96(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10964:	0013c400 	call	13c40 <_Znaj>
   10968:	d9400017 	ldw	r5,0(sp)
	m_workarray = new XXDouble[0 + 1];
   1096c:	01000104 	movi	r4,4
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10970:	28801915 	stw	r2,100(r5)
	m_workarray = new XXDouble[0 + 1];
   10974:	0013c400 	call	13c40 <_Znaj>
   10978:	d8c00017 	ldw	r3,0(sp)
	Reset(0.0);
   1097c:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   10980:	18801a15 	stw	r2,104(r3)
	Reset(0.0);
   10984:	1809883a 	mov	r4,r3
   10988:	00103b00 	call	103b0 <_ZN21PositionControllerPan5ResetEf>
	m_finish_time = 20.0;
   1098c:	d9400017 	ldw	r5,0(sp)
   10990:	00906834 	movhi	r2,16800
   10994:	d9000204 	addi	r4,sp,8
   10998:	28800815 	stw	r2,32(r5)
   1099c:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
}
   109a0:	dfc01017 	ldw	ra,64(sp)
   109a4:	df000f17 	ldw	fp,60(sp)
   109a8:	dec01104 	addi	sp,sp,68
   109ac:	f800283a 	ret
PositionControllerPan::PositionControllerPan(void)
   109b0:	d8800417 	ldw	r2,16(sp)
   109b4:	d9000117 	ldw	r4,4(sp)
   109b8:	d8800015 	stw	r2,0(sp)
   109bc:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   109c0:	d9000017 	ldw	r4,0(sp)
   109c4:	00bfffc4 	movi	r2,-1
   109c8:	d8800315 	stw	r2,12(sp)
   109cc:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

000109d0 <_ZN21PositionControllerPanD2Ev>:
PositionControllerPan::~PositionControllerPan(void)
   109d0:	28c00017 	ldw	r3,0(r5)
   109d4:	defffe04 	addi	sp,sp,-8
   109d8:	dc000015 	stw	r16,0(sp)
   109dc:	18bffd17 	ldw	r2,-12(r3)
   109e0:	dfc00115 	stw	ra,4(sp)
   109e4:	20c00015 	stw	r3,0(r4)
   109e8:	2085883a 	add	r2,r4,r2
   109ec:	28c00117 	ldw	r3,4(r5)
   109f0:	2021883a 	mov	r16,r4
	delete[] m_C;
   109f4:	11000e17 	ldw	r4,56(r2)
PositionControllerPan::~PositionControllerPan(void)
   109f8:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   109fc:	20000126 	beq	r4,zero,10a04 <_ZN21PositionControllerPanD2Ev+0x34>
   10a00:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_P;
   10a04:	80800017 	ldw	r2,0(r16)
   10a08:	10bffd17 	ldw	r2,-12(r2)
   10a0c:	8085883a 	add	r2,r16,r2
   10a10:	11000f17 	ldw	r4,60(r2)
   10a14:	20000426 	beq	r4,zero,10a28 <_ZN21PositionControllerPanD2Ev+0x58>
   10a18:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_I;
   10a1c:	80800017 	ldw	r2,0(r16)
   10a20:	10bffd17 	ldw	r2,-12(r2)
   10a24:	8085883a 	add	r2,r16,r2
   10a28:	11001017 	ldw	r4,64(r2)
   10a2c:	20000426 	beq	r4,zero,10a40 <_ZN21PositionControllerPanD2Ev+0x70>
   10a30:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_V;
   10a34:	80800017 	ldw	r2,0(r16)
   10a38:	10bffd17 	ldw	r2,-12(r2)
   10a3c:	8085883a 	add	r2,r16,r2
   10a40:	11001117 	ldw	r4,68(r2)
   10a44:	20000426 	beq	r4,zero,10a58 <_ZN21PositionControllerPanD2Ev+0x88>
   10a48:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_s;
   10a4c:	80800017 	ldw	r2,0(r16)
   10a50:	10bffd17 	ldw	r2,-12(r2)
   10a54:	8085883a 	add	r2,r16,r2
   10a58:	11001217 	ldw	r4,72(r2)
   10a5c:	20000426 	beq	r4,zero,10a70 <_ZN21PositionControllerPanD2Ev+0xa0>
   10a60:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_R;
   10a64:	80800017 	ldw	r2,0(r16)
   10a68:	10bffd17 	ldw	r2,-12(r2)
   10a6c:	8085883a 	add	r2,r16,r2
   10a70:	11001317 	ldw	r4,76(r2)
   10a74:	20000426 	beq	r4,zero,10a88 <_ZN21PositionControllerPanD2Ev+0xb8>
   10a78:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_M;
   10a7c:	80800017 	ldw	r2,0(r16)
   10a80:	10bffd17 	ldw	r2,-12(r2)
   10a84:	8085883a 	add	r2,r16,r2
   10a88:	11001417 	ldw	r4,80(r2)
   10a8c:	20000426 	beq	r4,zero,10aa0 <_ZN21PositionControllerPanD2Ev+0xd0>
   10a90:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_U;
   10a94:	80800017 	ldw	r2,0(r16)
   10a98:	10bffd17 	ldw	r2,-12(r2)
   10a9c:	8085883a 	add	r2,r16,r2
   10aa0:	11001517 	ldw	r4,84(r2)
   10aa4:	20000426 	beq	r4,zero,10ab8 <_ZN21PositionControllerPanD2Ev+0xe8>
   10aa8:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_workarray;
   10aac:	80800017 	ldw	r2,0(r16)
   10ab0:	10bffd17 	ldw	r2,-12(r2)
   10ab4:	8085883a 	add	r2,r16,r2
   10ab8:	11001617 	ldw	r4,88(r2)
   10abc:	20000126 	beq	r4,zero,10ac4 <_ZN21PositionControllerPanD2Ev+0xf4>
   10ac0:	0012ba40 	call	12ba4 <_ZdaPv>
PositionControllerPan::~PositionControllerPan(void)
   10ac4:	81000204 	addi	r4,r16,8
}
   10ac8:	dfc00117 	ldw	ra,4(sp)
   10acc:	dc000017 	ldw	r16,0(sp)
   10ad0:	dec00204 	addi	sp,sp,8
PositionControllerPan::~PositionControllerPan(void)
   10ad4:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

00010ad8 <_ZN21PositionControllerPanD1Ev>:
   10ad8:	defffe04 	addi	sp,sp,-8
   10adc:	dc000015 	stw	r16,0(sp)
   10ae0:	00c000b4 	movhi	r3,2
   10ae4:	2021883a 	mov	r16,r4
   10ae8:	008000b4 	movhi	r2,2
	delete[] m_C;
   10aec:	21001217 	ldw	r4,72(r4)
PositionControllerPan::~PositionControllerPan(void)
   10af0:	dfc00115 	stw	ra,4(sp)
   10af4:	18e25604 	addi	r3,r3,-30376
   10af8:	10a25d04 	addi	r2,r2,-30348
   10afc:	80c00015 	stw	r3,0(r16)
   10b00:	80800415 	stw	r2,16(r16)
	delete[] m_C;
   10b04:	20000126 	beq	r4,zero,10b0c <_ZN21PositionControllerPanD1Ev+0x34>
   10b08:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_P;
   10b0c:	81001317 	ldw	r4,76(r16)
   10b10:	20000126 	beq	r4,zero,10b18 <_ZN21PositionControllerPanD1Ev+0x40>
   10b14:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_I;
   10b18:	81001417 	ldw	r4,80(r16)
   10b1c:	20000126 	beq	r4,zero,10b24 <_ZN21PositionControllerPanD1Ev+0x4c>
   10b20:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_V;
   10b24:	81001517 	ldw	r4,84(r16)
   10b28:	20000126 	beq	r4,zero,10b30 <_ZN21PositionControllerPanD1Ev+0x58>
   10b2c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_s;
   10b30:	81001617 	ldw	r4,88(r16)
   10b34:	20000126 	beq	r4,zero,10b3c <_ZN21PositionControllerPanD1Ev+0x64>
   10b38:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_R;
   10b3c:	81001717 	ldw	r4,92(r16)
   10b40:	20000126 	beq	r4,zero,10b48 <_ZN21PositionControllerPanD1Ev+0x70>
   10b44:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_M;
   10b48:	81001817 	ldw	r4,96(r16)
   10b4c:	20000126 	beq	r4,zero,10b54 <_ZN21PositionControllerPanD1Ev+0x7c>
   10b50:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_U;
   10b54:	81001917 	ldw	r4,100(r16)
   10b58:	20000126 	beq	r4,zero,10b60 <_ZN21PositionControllerPanD1Ev+0x88>
   10b5c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_workarray;
   10b60:	81001a17 	ldw	r4,104(r16)
   10b64:	20000126 	beq	r4,zero,10b6c <_ZN21PositionControllerPanD1Ev+0x94>
   10b68:	0012ba40 	call	12ba4 <_ZdaPv>
PositionControllerPan::~PositionControllerPan(void)
   10b6c:	81000204 	addi	r4,r16,8
}
   10b70:	dfc00117 	ldw	ra,4(sp)
   10b74:	dc000017 	ldw	r16,0(sp)
   10b78:	dec00204 	addi	sp,sp,8
PositionControllerPan::~PositionControllerPan(void)
   10b7c:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

00010b80 <_ZTv0_n16_N21PositionControllerPanD1Ev>:
		virtual ~PositionControllerPan(void);
   10b80:	2009883a 	mov	r4,r4
   10b84:	20800017 	ldw	r2,0(r4)
   10b88:	10bffc04 	addi	r2,r2,-16
   10b8c:	10800017 	ldw	r2,0(r2)
   10b90:	2089883a 	add	r4,r4,r2
   10b94:	0010ad81 	jmpi	10ad8 <_ZN21PositionControllerPanD1Ev>

00010b98 <_ZN21PositionControllerPanD0Ev>:
   10b98:	defffe04 	addi	sp,sp,-8
   10b9c:	dc000015 	stw	r16,0(sp)
   10ba0:	dfc00115 	stw	ra,4(sp)
   10ba4:	2021883a 	mov	r16,r4
}
   10ba8:	0010ad80 	call	10ad8 <_ZN21PositionControllerPanD1Ev>
   10bac:	01401b04 	movi	r5,108
   10bb0:	8009883a 	mov	r4,r16
   10bb4:	dfc00117 	ldw	ra,4(sp)
   10bb8:	dc000017 	ldw	r16,0(sp)
   10bbc:	dec00204 	addi	sp,sp,8
   10bc0:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00010bc4 <_ZTv0_n16_N21PositionControllerPanD0Ev>:
   10bc4:	20800017 	ldw	r2,0(r4)
   10bc8:	defffe04 	addi	sp,sp,-8
   10bcc:	dc000015 	stw	r16,0(sp)
   10bd0:	143ffc17 	ldw	r16,-16(r2)
   10bd4:	dfc00115 	stw	ra,4(sp)
   10bd8:	2421883a 	add	r16,r4,r16
   10bdc:	8009883a 	mov	r4,r16
   10be0:	0010ad80 	call	10ad8 <_ZN21PositionControllerPanD1Ev>
   10be4:	01401b04 	movi	r5,108
   10be8:	8009883a 	mov	r4,r16
   10bec:	dfc00117 	ldw	ra,4(sp)
   10bf0:	dc000017 	ldw	r16,0(sp)
   10bf4:	dec00204 	addi	sp,sp,8
   10bf8:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00010bfc <_ZN21PositionControllerPan10InitializeEPfS0_f>:
	m_initialize = true;
   10bfc:	20800017 	ldw	r2,0(r4)
{
   10c00:	defffb04 	addi	sp,sp,-20
   10c04:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   10c08:	10bffd17 	ldw	r2,-12(r2)
{
   10c0c:	dcc00315 	stw	r19,12(sp)
   10c10:	dc800215 	stw	r18,8(sp)
	m_initialize = true;
   10c14:	2085883a 	add	r2,r4,r2
	m_P[0] = 0.0;		/* corrGain\K */
   10c18:	10c00f17 	ldw	r3,60(r2)
{
   10c1c:	dc400115 	stw	r17,4(sp)
   10c20:	dc000015 	stw	r16,0(sp)
	m_initialize = true;
   10c24:	02000044 	movi	r8,1
	m_P[3] = 0.17;		/* PID1\beta */
   10c28:	02cf8bb4 	movhi	r11,15918
	m_initialize = true;
   10c2c:	12000105 	stb	r8,4(r2)
	m_stop_run = false;
   10c30:	10000185 	stb	zero,6(r2)
{
   10c34:	2021883a 	mov	r16,r4
	m_P[3] = 0.17;		/* PID1\beta */
   10c38:	5ac51ec4 	addi	r11,r11,5243
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10c3c:	11001017 	ldw	r4,64(r2)
	m_P[1] = 2.6;		/* PID1\kp */
   10c40:	035009b4 	movhi	r13,16422
	m_P[2] = 0.05;		/* PID1\tauD */
   10c44:	030f5374 	movhi	r12,15693
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10c48:	02afdf74 	movhi	r10,49021
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10c4c:	024fdf74 	movhi	r9,16253
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10c50:	12001217 	ldw	r8,72(r2)
	m_P[1] = 2.6;		/* PID1\kp */
   10c54:	6b599984 	addi	r13,r13,26214
	m_P[3] = 0.17;		/* PID1\beta */
   10c58:	1ac00315 	stw	r11,12(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   10c5c:	63333344 	addi	r12,r12,-13107
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10c60:	529c2904 	addi	r10,r10,28836
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10c64:	4a5c2904 	addi	r9,r9,28836
	m_P[4] = 9.0;		/* PID1\tauI */
   10c68:	02d04434 	movhi	r11,16656
	m_P[1] = 2.6;		/* PID1\kp */
   10c6c:	1b400115 	stw	r13,4(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   10c70:	1b000215 	stw	r12,8(r3)
	m_P[4] = 9.0;		/* PID1\tauI */
   10c74:	1ac00415 	stw	r11,16(r3)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10c78:	1a800515 	stw	r10,20(r3)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10c7c:	1a400615 	stw	r9,24(r3)
	m_P[0] = 0.0;		/* corrGain\K */
   10c80:	18000015 	stw	zero,0(r3)
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   10c84:	20000115 	stw	zero,4(r4)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   10c88:	20000215 	stw	zero,8(r4)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10c8c:	20000015 	stw	zero,0(r4)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10c90:	40000015 	stw	zero,0(r8)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10c94:	20c00117 	ldw	r3,4(r4)
{
   10c98:	2825883a 	mov	r18,r5
	myintegmethod.Initialize(this);
   10c9c:	100b883a 	mov	r5,r2
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10ca0:	40c00115 	stw	r3,4(r8)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10ca4:	20c00217 	ldw	r3,8(r4)
	myintegmethod.Initialize(this);
   10ca8:	81000204 	addi	r4,r16,8
{
   10cac:	3023883a 	mov	r17,r6
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10cb0:	40c00215 	stw	r3,8(r8)
{
   10cb4:	3827883a 	mov	r19,r7
	myintegmethod.Initialize(this);
   10cb8:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   10cbc:	80c00017 	ldw	r3,0(r16)
	CalculateDynamic ();
   10cc0:	8009883a 	mov	r4,r16
	m_time = t;
   10cc4:	18bffd17 	ldw	r2,-12(r3)
	CalculateDynamic ();
   10cc8:	18c00217 	ldw	r3,8(r3)
	m_time = t;
   10ccc:	8085883a 	add	r2,r16,r2
   10cd0:	14c00515 	stw	r19,20(r2)
	m_V[7] = u[0];		/* in */
   10cd4:	91400017 	ldw	r5,0(r18)
   10cd8:	10801117 	ldw	r2,68(r2)
   10cdc:	11400715 	stw	r5,28(r2)
	m_V[8] = u[1];		/* position */
   10ce0:	91400117 	ldw	r5,4(r18)
   10ce4:	11400815 	stw	r5,32(r2)
	CalculateDynamic ();
   10ce8:	183ee83a 	callr	r3
	m_V[6] = m_V[0];
   10cec:	80800017 	ldw	r2,0(r16)
   10cf0:	10fffd17 	ldw	r3,-12(r2)
   10cf4:	80c7883a 	add	r3,r16,r3
   10cf8:	18801117 	ldw	r2,68(r3)
   10cfc:	11000017 	ldw	r4,0(r2)
	m_V[9] = m_V[4];
   10d00:	11400417 	ldw	r5,16(r2)
	m_V[6] = m_V[0];
   10d04:	11000615 	stw	r4,24(r2)
	m_V[9] = m_V[4];
   10d08:	11400915 	stw	r5,36(r2)
	y[0] = 	m_V[6];		/* corr */
   10d0c:	89000015 	stw	r4,0(r17)
	y[1] = 	m_V[9];		/* out */
   10d10:	10800917 	ldw	r2,36(r2)
   10d14:	88800115 	stw	r2,4(r17)
	m_initialize = false;
   10d18:	18000105 	stb	zero,4(r3)
	state = mainrun;
   10d1c:	00800044 	movi	r2,1
   10d20:	80800115 	stw	r2,4(r16)
}
   10d24:	dfc00417 	ldw	ra,16(sp)
   10d28:	dcc00317 	ldw	r19,12(sp)
   10d2c:	dc800217 	ldw	r18,8(sp)
   10d30:	dc400117 	ldw	r17,4(sp)
   10d34:	dc000017 	ldw	r16,0(sp)
   10d38:	dec00504 	addi	sp,sp,20
   10d3c:	f800283a 	ret

00010d40 <_ZN21PositionControllerPan9CalculateEPfS0_>:
	switch (state)
   10d40:	20800117 	ldw	r2,4(r4)
   10d44:	10004226 	beq	r2,zero,10e50 <_ZN21PositionControllerPan9CalculateEPfS0_+0x110>
   10d48:	10800060 	cmpeqi	r2,r2,1
   10d4c:	10002526 	beq	r2,zero,10de4 <_ZN21PositionControllerPan9CalculateEPfS0_+0xa4>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10d50:	20800017 	ldw	r2,0(r4)
{
   10d54:	defffd04 	addi	sp,sp,-12
   10d58:	dc000015 	stw	r16,0(sp)
   10d5c:	2021883a 	mov	r16,r4
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10d60:	113ffd17 	ldw	r4,-12(r2)
{
   10d64:	dc400115 	stw	r17,4(sp)
   10d68:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10d6c:	8109883a 	add	r4,r16,r4
   10d70:	20800217 	ldw	r2,8(r4)
   10d74:	3023883a 	mov	r17,r6
   10d78:	21800417 	ldw	r6,16(r4)
   10d7c:	21c00517 	ldw	r7,20(r4)
   10d80:	2807883a 	mov	r3,r5
   10d84:	014cf5f4 	movhi	r5,13271
   10d88:	296fe544 	addi	r5,r5,-16491
   10d8c:	3085ffb2 	custom	254,r2,r6,r2
   10d90:	1145ff72 	custom	253,r2,r2,r5
   10d94:	3885f9b2 	custom	230,r2,r7,r2
   10d98:	1000131e 	bne	r2,zero,10de8 <_ZN21PositionControllerPan9CalculateEPfS0_+0xa8>
   10d9c:	3085f8b2 	custom	226,r2,r6,r2
   10da0:	10001126 	beq	r2,zero,10de8 <_ZN21PositionControllerPan9CalculateEPfS0_+0xa8>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10da4:	20800183 	ldbu	r2,6(r4)
				state = finished;
   10da8:	00c00084 	movi	r3,2
   10dac:	80c00115 	stw	r3,4(r16)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10db0:	1000051e 	bne	r2,zero,10dc8 <_ZN21PositionControllerPan9CalculateEPfS0_+0x88>
   10db4:	008cf5f4 	movhi	r2,13271
   10db8:	10afe544 	addi	r2,r2,-16491
   10dbc:	388fff72 	custom	253,r7,r7,r2
   10dc0:	398df932 	custom	228,r6,r7,r6
   10dc4:	30000226 	beq	r6,zero,10dd0 <_ZN21PositionControllerPan9CalculateEPfS0_+0x90>
				state = finished;
   10dc8:	00800084 	movi	r2,2
   10dcc:	80800115 	stw	r2,4(r16)
}
   10dd0:	dfc00217 	ldw	ra,8(sp)
   10dd4:	dc400117 	ldw	r17,4(sp)
   10dd8:	dc000017 	ldw	r16,0(sp)
   10ddc:	dec00304 	addi	sp,sp,12
   10de0:	f800283a 	ret
   10de4:	f800283a 	ret
	m_V[7] = u[0];		/* in */
   10de8:	20801117 	ldw	r2,68(r4)
   10dec:	19400017 	ldw	r5,0(r3)
				myintegmethod.Step();
   10df0:	81000204 	addi	r4,r16,8
	m_V[7] = u[0];		/* in */
   10df4:	11400715 	stw	r5,28(r2)
	m_V[8] = u[1];		/* position */
   10df8:	18c00117 	ldw	r3,4(r3)
   10dfc:	10c00815 	stw	r3,32(r2)
				myintegmethod.Step();
   10e00:	00101dc0 	call	101dc <_ZN8Discrete4StepEv>
	m_V[6] = m_V[0];
   10e04:	80800017 	ldw	r2,0(r16)
   10e08:	10fffd17 	ldw	r3,-12(r2)
   10e0c:	80c7883a 	add	r3,r16,r3
   10e10:	18801117 	ldw	r2,68(r3)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10e14:	19400183 	ldbu	r5,6(r3)
	m_V[6] = m_V[0];
   10e18:	11000017 	ldw	r4,0(r2)
	m_V[9] = m_V[4];
   10e1c:	11800417 	ldw	r6,16(r2)
	m_V[6] = m_V[0];
   10e20:	11000615 	stw	r4,24(r2)
	m_V[9] = m_V[4];
   10e24:	11800915 	stw	r6,36(r2)
	y[0] = 	m_V[6];		/* corr */
   10e28:	89000015 	stw	r4,0(r17)
	y[1] = 	m_V[9];		/* out */
   10e2c:	10800917 	ldw	r2,36(r2)
   10e30:	88800115 	stw	r2,4(r17)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10e34:	283fe41e 	bne	r5,zero,10dc8 <_ZN21PositionControllerPan9CalculateEPfS0_+0x88>
   10e38:	19800417 	ldw	r6,16(r3)
   10e3c:	0005883a 	mov	r2,zero
   10e40:	3085f8b2 	custom	226,r2,r6,r2
   10e44:	103fe226 	beq	r2,zero,10dd0 <_ZN21PositionControllerPan9CalculateEPfS0_+0x90>
   10e48:	19c00517 	ldw	r7,20(r3)
   10e4c:	003fd906 	br	10db4 <_ZN21PositionControllerPan9CalculateEPfS0_+0x74>
			Initialize(u, y, 0.0);
   10e50:	000f883a 	mov	r7,zero
   10e54:	0010bfc1 	jmpi	10bfc <_ZN21PositionControllerPan10InitializeEPfS0_f>

00010e58 <_ZN22PositionControllerTilt16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerTilt::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10e58:	20800017 	ldw	r2,0(r4)
   10e5c:	024fe034 	movhi	r9,16256
   10e60:	10bffd17 	ldw	r2,-12(r2)
   10e64:	2089883a 	add	r4,r4,r2
   10e68:	21400f17 	ldw	r5,60(r4)
   10e6c:	20c01117 	ldw	r3,68(r4)
   10e70:	22800217 	ldw	r10,8(r4)
   10e74:	2ac00317 	ldw	r11,12(r5)
   10e78:	2a000217 	ldw	r8,8(r5)

	/* corrGain\input = corr; */
	m_V[0] = m_V[8];
   10e7c:	18800817 	ldw	r2,32(r3)

	/* PlusMinus2\plus1 = in; */
	m_V[5] = m_V[9];
   10e80:	19800917 	ldw	r6,36(r3)

	/* PlusMinus2\minus1 = position; */
	m_V[6] = m_V[10];
   10e84:	19c00a17 	ldw	r7,40(r3)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10e88:	42d1ff32 	custom	252,r8,r8,r11
   10e8c:	4291ff72 	custom	253,r8,r8,r10
   10e90:	4a11fff2 	custom	255,r8,r9,r8
   10e94:	1a000315 	stw	r8,12(r3)
	m_V[6] = m_V[10];
   10e98:	19c00615 	stw	r7,24(r3)
	m_V[0] = m_V[8];
   10e9c:	18800015 	stw	r2,0(r3)
	m_V[5] = m_V[9];
   10ea0:	19800515 	stw	r6,20(r3)

	/* corrGain\output = corrGain\K * corrGain\input; */
	m_V[1] = m_P[0] * m_V[0];
   10ea4:	2a000017 	ldw	r8,0(r5)

	/* PID1\error = PlusMinus2\plus1 - PlusMinus2\minus1; */
	m_R[1] = m_V[5] - m_V[6];
   10ea8:	22801317 	ldw	r10,76(r4)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10eac:	22c01217 	ldw	r11,72(r4)
	m_V[1] = m_P[0] * m_V[0];
   10eb0:	4091ff32 	custom	252,r8,r8,r2
   10eb4:	1a000115 	stw	r8,4(r3)
	m_R[1] = m_V[5] - m_V[6];
   10eb8:	31cfffb2 	custom	254,r7,r6,r7
   10ebc:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10ec0:	2a400217 	ldw	r9,8(r5)
   10ec4:	29800117 	ldw	r6,4(r5)
   10ec8:	58800017 	ldw	r2,0(r11)
   10ecc:	5a000117 	ldw	r8,4(r11)
   10ed0:	23400217 	ldw	r13,8(r4)
   10ed4:	2b800317 	ldw	r14,12(r5)
   10ed8:	4885ff32 	custom	252,r2,r9,r2
   10edc:	3a11ffb2 	custom	254,r8,r7,r8
   10ee0:	4993ff32 	custom	252,r9,r9,r6
   10ee4:	1b000317 	ldw	r12,12(r3)
   10ee8:	1385ff32 	custom	252,r2,r2,r14
   10eec:	4251ff32 	custom	252,r8,r8,r9
   10ef0:	334dff32 	custom	252,r6,r6,r13
   10ef4:	31cdff32 	custom	252,r6,r6,r7
   10ef8:	1205ff72 	custom	253,r2,r2,r8
   10efc:	1185ff72 	custom	253,r2,r2,r6
   10f00:	1305ff32 	custom	252,r2,r2,r12
   10f04:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f08:	21000217 	ldw	r4,8(r4)
   10f0c:	29c00417 	ldw	r7,16(r5)
   10f10:	59800217 	ldw	r6,8(r11)
   10f14:	1109ff32 	custom	252,r4,r2,r4
   10f18:	21c9fff2 	custom	255,r4,r4,r7
   10f1c:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[2] = m_R[2] + m_R[0];
   10f20:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f24:	51000215 	stw	r4,8(r10)
	m_V[2] = m_R[2] + m_R[0];
   10f28:	18800215 	stw	r2,8(r3)

	/* PlusMinus1\output = corrGain\output + PID1\output; */
	m_V[4] = m_V[1] + m_V[2];
   10f2c:	19000117 	ldw	r4,4(r3)
   10f30:	1105ff72 	custom	253,r2,r2,r4
   10f34:	18800415 	stw	r2,16(r3)

	/* SignalLimiter2\output = (if PlusMinus1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) end); */
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10f38:	29000517 	ldw	r4,20(r5)
   10f3c:	110df9f2 	custom	231,r6,r2,r4
   10f40:	3000031e 	bne	r6,zero,10f50 <_ZN22PositionControllerTilt16CalculateDynamicEv+0xf8>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) */
		((m_V[4] > m_P[6]) ? 
   10f44:	29000617 	ldw	r4,24(r5)
   10f48:	110bf972 	custom	229,r5,r2,r4
   10f4c:	28000226 	beq	r5,zero,10f58 <_ZN22PositionControllerTilt16CalculateDynamicEv+0x100>
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10f50:	19000715 	stw	r4,28(r3)
			/* PlusMinus1\output */
			m_V[4]
		)
	);

}
   10f54:	f800283a 	ret
		((m_V[4] > m_P[6]) ? 
   10f58:	1009883a 	mov	r4,r2
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10f5c:	19000715 	stw	r4,28(r3)
}
   10f60:	f800283a 	ret

00010f64 <_ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10f64:	2009883a 	mov	r4,r4
   10f68:	20800017 	ldw	r2,0(r4)
   10f6c:	10bffd04 	addi	r2,r2,-12
   10f70:	10800017 	ldw	r2,0(r2)
   10f74:	2089883a 	add	r4,r4,r2
   10f78:	0010e581 	jmpi	10e58 <_ZN22PositionControllerTilt16CalculateDynamicEv>

00010f7c <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>:
	m_V[8] = u[0];		/* corr */
   10f7c:	20800017 	ldw	r2,0(r4)
   10f80:	28c00017 	ldw	r3,0(r5)
   10f84:	10bffd17 	ldw	r2,-12(r2)
   10f88:	2089883a 	add	r4,r4,r2
   10f8c:	20801117 	ldw	r2,68(r4)
   10f90:	10c00815 	stw	r3,32(r2)
	m_V[9] = u[1];		/* in */
   10f94:	28c00117 	ldw	r3,4(r5)
   10f98:	10c00915 	stw	r3,36(r2)
	m_V[10] = u[2];		/* position */
   10f9c:	28c00217 	ldw	r3,8(r5)
   10fa0:	10c00a15 	stw	r3,40(r2)
}
   10fa4:	f800283a 	ret

00010fa8 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[11];		/* out */
   10fa8:	20800017 	ldw	r2,0(r4)
   10fac:	10bffd17 	ldw	r2,-12(r2)
   10fb0:	2089883a 	add	r4,r4,r2
   10fb4:	20801117 	ldw	r2,68(r4)
   10fb8:	10800b17 	ldw	r2,44(r2)
   10fbc:	28800015 	stw	r2,0(r5)
}
   10fc0:	f800283a 	ret

00010fc4 <_ZN22PositionControllerTilt5ResetEf>:
	m_start_time = starttime;
   10fc4:	20800017 	ldw	r2,0(r4)
{
   10fc8:	defffe04 	addi	sp,sp,-8
   10fcc:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   10fd0:	10bffd17 	ldw	r2,-12(r2)
{
   10fd4:	2021883a 	mov	r16,r4
	m_step_size = 0.0001;
   10fd8:	010e34b4 	movhi	r4,14546
	m_start_time = starttime;
   10fdc:	8085883a 	add	r2,r16,r2
{
   10fe0:	dfc00115 	stw	ra,4(sp)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   10fe4:	10c00e17 	ldw	r3,56(r2)
	m_step_size = 0.0001;
   10fe8:	212dc5c4 	addi	r4,r4,-18665
   10fec:	11000215 	stw	r4,8(r2)
	m_major = true;
   10ff0:	01000044 	movi	r4,1
	m_start_time = starttime;
   10ff4:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   10ff8:	11400515 	stw	r5,20(r2)
	m_major = true;
   10ffc:	11000145 	stb	r4,5(r2)
	m_stop_run = false;
   11000:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   11004:	18000005 	stb	zero,0(r3)
   11008:	18000045 	stb	zero,1(r3)
   1100c:	18000085 	stb	zero,2(r3)
   11010:	180000c5 	stb	zero,3(r3)
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   11014:	80800017 	ldw	r2,0(r16)
   11018:	01800804 	movi	r6,32
   1101c:	000b883a 	mov	r5,zero
   11020:	10bffd17 	ldw	r2,-12(r2)
   11024:	8085883a 	add	r2,r16,r2
   11028:	11000f17 	ldw	r4,60(r2)
   1102c:	00172540 	call	17254 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   11030:	80800017 	ldw	r2,0(r16)
   11034:	01800404 	movi	r6,16
   11038:	000b883a 	mov	r5,zero
   1103c:	10bffd17 	ldw	r2,-12(r2)
   11040:	8085883a 	add	r2,r16,r2
   11044:	11001017 	ldw	r4,64(r2)
   11048:	00172540 	call	17254 <memset>
	memset(m_V, 0, (12 + 1) * sizeof(XXDouble));
   1104c:	80800017 	ldw	r2,0(r16)
   11050:	01800d04 	movi	r6,52
   11054:	000b883a 	mov	r5,zero
   11058:	10bffd17 	ldw	r2,-12(r2)
   1105c:	8085883a 	add	r2,r16,r2
   11060:	11001117 	ldw	r4,68(r2)
   11064:	00172540 	call	17254 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   11068:	80800017 	ldw	r2,0(r16)
   1106c:	01800404 	movi	r6,16
   11070:	000b883a 	mov	r5,zero
   11074:	10bffd17 	ldw	r2,-12(r2)
   11078:	8085883a 	add	r2,r16,r2
   1107c:	11001217 	ldw	r4,72(r2)
   11080:	00172540 	call	17254 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   11084:	80800017 	ldw	r2,0(r16)
   11088:	01800404 	movi	r6,16
   1108c:	000b883a 	mov	r5,zero
   11090:	10bffd17 	ldw	r2,-12(r2)
   11094:	8085883a 	add	r2,r16,r2
   11098:	11001317 	ldw	r4,76(r2)
   1109c:	00172540 	call	17254 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   110a0:	80800017 	ldw	r2,0(r16)
   110a4:	10bffd17 	ldw	r2,-12(r2)
   110a8:	8085883a 	add	r2,r16,r2
   110ac:	10801417 	ldw	r2,80(r2)
   110b0:	10000005 	stb	zero,0(r2)
   110b4:	10000045 	stb	zero,1(r2)
   110b8:	10000085 	stb	zero,2(r2)
   110bc:	100000c5 	stb	zero,3(r2)
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   110c0:	80800017 	ldw	r2,0(r16)
   110c4:	10bffd17 	ldw	r2,-12(r2)
   110c8:	8085883a 	add	r2,r16,r2
   110cc:	10801517 	ldw	r2,84(r2)
   110d0:	10000005 	stb	zero,0(r2)
   110d4:	10000045 	stb	zero,1(r2)
   110d8:	10000085 	stb	zero,2(r2)
   110dc:	100000c5 	stb	zero,3(r2)
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   110e0:	80800017 	ldw	r2,0(r16)
   110e4:	10bffd17 	ldw	r2,-12(r2)
   110e8:	8085883a 	add	r2,r16,r2
   110ec:	10801617 	ldw	r2,88(r2)
   110f0:	10000005 	stb	zero,0(r2)
   110f4:	10000045 	stb	zero,1(r2)
   110f8:	10000085 	stb	zero,2(r2)
   110fc:	100000c5 	stb	zero,3(r2)
	state = initialrun;
   11100:	80000115 	stw	zero,4(r16)
}
   11104:	dfc00117 	ldw	ra,4(sp)
   11108:	dc000017 	ldw	r16,0(sp)
   1110c:	dec00204 	addi	sp,sp,8
   11110:	f800283a 	ret

00011114 <_ZN22PositionControllerTilt10IsFinishedEv>:
	return (state == finished);
   11114:	20800117 	ldw	r2,4(r4)
   11118:	108000a0 	cmpeqi	r2,r2,2
}
   1111c:	f800283a 	ret

00011120 <_ZN22PositionControllerTilt9TerminateEPfS0_>:
	m_V[8] = u[0];		/* corr */
   11120:	20800017 	ldw	r2,0(r4)
   11124:	28c00017 	ldw	r3,0(r5)
   11128:	10bffd17 	ldw	r2,-12(r2)
   1112c:	2089883a 	add	r4,r4,r2
   11130:	20801117 	ldw	r2,68(r4)
   11134:	10c00815 	stw	r3,32(r2)
	m_V[9] = u[1];		/* in */
   11138:	29000117 	ldw	r4,4(r5)
	y[0] = 	m_V[11];		/* out */
   1113c:	10c00b17 	ldw	r3,44(r2)
	m_V[9] = u[1];		/* in */
   11140:	11000915 	stw	r4,36(r2)
	m_V[10] = u[2];		/* position */
   11144:	29000217 	ldw	r4,8(r5)
   11148:	11000a15 	stw	r4,40(r2)
	y[0] = 	m_V[11];		/* out */
   1114c:	30c00015 	stw	r3,0(r6)
}
   11150:	f800283a 	ret

00011154 <_ZN22PositionControllerTilt16CalculateInitialEv>:
}
   11154:	f800283a 	ret

00011158 <_ZN22PositionControllerTilt15CalculateStaticEv>:
   11158:	f800283a 	ret

0001115c <_ZN22PositionControllerTilt14CalculateInputEv>:
   1115c:	f800283a 	ret

00011160 <_ZN22PositionControllerTilt15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerTilt::CalculateOutput (void)
{
	/* out = SignalLimiter2\output; */
	m_V[11] = m_V[7];
   11160:	20800017 	ldw	r2,0(r4)
   11164:	10bffd17 	ldw	r2,-12(r2)
   11168:	2089883a 	add	r4,r4,r2
   1116c:	20801117 	ldw	r2,68(r4)
   11170:	10c00717 	ldw	r3,28(r2)
   11174:	10c00b15 	stw	r3,44(r2)

}
   11178:	f800283a 	ret

0001117c <_ZN22PositionControllerTilt14CalculateFinalEv>:
   1117c:	f800283a 	ret

00011180 <_ZN22PositionControllerTilt13SetFinishTimeEf>:



bool PositionControllerTilt::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   11180:	20c00017 	ldw	r3,0(r4)
   11184:	0005883a 	mov	r2,zero
   11188:	2885f9b2 	custom	230,r2,r5,r2
   1118c:	18fffd17 	ldw	r3,-12(r3)
   11190:	20c9883a 	add	r4,r4,r3
   11194:	1000051e 	bne	r2,zero,111ac <_ZN22PositionControllerTilt13SetFinishTimeEf+0x2c>
   11198:	20800517 	ldw	r2,20(r4)
   1119c:	1145f9f2 	custom	231,r2,r2,r5
   111a0:	1000021e 	bne	r2,zero,111ac <_ZN22PositionControllerTilt13SetFinishTimeEf+0x2c>
	{
		m_finish_time = newtime;
		return true;
	}

	return false;
   111a4:	0005883a 	mov	r2,zero
}
   111a8:	f800283a 	ret
		m_finish_time = newtime;
   111ac:	21400415 	stw	r5,16(r4)
		return true;
   111b0:	00800044 	movi	r2,1
   111b4:	f800283a 	ret

000111b8 <_ZN22PositionControllerTiltC2Ev>:
PositionControllerTilt::PositionControllerTilt(void)
   111b8:	deffee04 	addi	sp,sp,-72
   111bc:	01800074 	movhi	r6,1
   111c0:	00c000b4 	movhi	r3,2
   111c4:	00800074 	movhi	r2,1
   111c8:	318c3304 	addi	r6,r6,12492
   111cc:	18e21304 	addi	r3,r3,-30644
   111d0:	10850b04 	addi	r2,r2,5164
   111d4:	d9400115 	stw	r5,4(sp)
   111d8:	200b883a 	mov	r5,r4
   111dc:	d9000304 	addi	r4,sp,12
   111e0:	d9800915 	stw	r6,36(sp)
   111e4:	dfc01115 	stw	ra,68(sp)
   111e8:	d9400015 	stw	r5,0(sp)
   111ec:	d8c00a15 	stw	r3,40(sp)
   111f0:	d8800c15 	stw	r2,48(sp)
   111f4:	df001015 	stw	fp,64(sp)
   111f8:	df000b15 	stw	fp,44(sp)
   111fc:	dec00d15 	stw	sp,52(sp)
   11200:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   11204:	d8800117 	ldw	r2,4(sp)
   11208:	d9c00017 	ldw	r7,0(sp)
   1120c:	10c00017 	ldw	r3,0(r2)
   11210:	11400117 	ldw	r5,4(r2)
   11214:	39000204 	addi	r4,r7,8
   11218:	18bffd17 	ldw	r2,-12(r3)
   1121c:	38c00015 	stw	r3,0(r7)
   11220:	d9000215 	stw	r4,8(sp)
   11224:	3885883a 	add	r2,r7,r2
   11228:	11400015 	stw	r5,0(r2)
   1122c:	00bfffc4 	movi	r2,-1
   11230:	d8800415 	stw	r2,16(sp)
   11234:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   11238:	d9c00017 	ldw	r7,0(sp)
	m_number_parameters = 7;
   1123c:	018001c4 	movi	r6,7
	m_number_initialvalues = 3;
   11240:	014000c4 	movi	r5,3
	m_number_constants = 0;
   11244:	38800017 	ldw	r2,0(r7)
	m_C = new XXDouble[0 + 1];		/* constants */
   11248:	01000104 	movi	r4,4
	m_number_constants = 0;
   1124c:	10fffd17 	ldw	r3,-12(r2)
   11250:	38c7883a 	add	r3,r7,r3
   11254:	18000615 	stw	zero,24(r3)
	m_number_parameters = 7;
   11258:	10fffd17 	ldw	r3,-12(r2)
   1125c:	38c7883a 	add	r3,r7,r3
   11260:	19800715 	stw	r6,28(r3)
	m_number_initialvalues = 3;
   11264:	10fffd17 	ldw	r3,-12(r2)
	m_number_variables = 12;
   11268:	01800304 	movi	r6,12
	m_number_initialvalues = 3;
   1126c:	38c7883a 	add	r3,r7,r3
   11270:	19400815 	stw	r5,32(r3)
	m_number_variables = 12;
   11274:	10fffd17 	ldw	r3,-12(r2)
   11278:	38c7883a 	add	r3,r7,r3
   1127c:	19800915 	stw	r6,36(r3)
	m_number_states = 3;
   11280:	10fffd17 	ldw	r3,-12(r2)
   11284:	38c7883a 	add	r3,r7,r3
   11288:	19400a15 	stw	r5,40(r3)
	m_number_rates = 3;
   1128c:	10fffd17 	ldw	r3,-12(r2)
   11290:	38c7883a 	add	r3,r7,r3
   11294:	19400b15 	stw	r5,44(r3)
	m_number_matrices = 0;
   11298:	10fffd17 	ldw	r3,-12(r2)
   1129c:	38c7883a 	add	r3,r7,r3
   112a0:	18000c15 	stw	zero,48(r3)
	m_number_unnamed = 0;
   112a4:	10fffd17 	ldw	r3,-12(r2)
   112a8:	38c7883a 	add	r3,r7,r3
   112ac:	18000d15 	stw	zero,52(r3)
	m_C = new XXDouble[0 + 1];		/* constants */
   112b0:	10bffd17 	ldw	r2,-12(r2)
   112b4:	00c00044 	movi	r3,1
   112b8:	d8c00415 	stw	r3,16(sp)
   112bc:	3885883a 	add	r2,r7,r2
   112c0:	d8800115 	stw	r2,4(sp)
   112c4:	0013c400 	call	13c40 <_Znaj>
	m_P = new XXDouble[7 + 1];		/* parameters */
   112c8:	d9400017 	ldw	r5,0(sp)
	m_C = new XXDouble[0 + 1];		/* constants */
   112cc:	d9000117 	ldw	r4,4(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112d0:	28c00017 	ldw	r3,0(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   112d4:	20800e15 	stw	r2,56(r4)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112d8:	01000804 	movi	r4,32
   112dc:	18bffd17 	ldw	r2,-12(r3)
   112e0:	2885883a 	add	r2,r5,r2
   112e4:	d8800115 	stw	r2,4(sp)
   112e8:	0013c400 	call	13c40 <_Znaj>
	m_I = new XXDouble[3 + 1];		/* initial values */
   112ec:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112f0:	d9000117 	ldw	r4,4(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   112f4:	28c00017 	ldw	r3,0(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112f8:	20800f15 	stw	r2,60(r4)
	m_I = new XXDouble[3 + 1];		/* initial values */
   112fc:	01000404 	movi	r4,16
   11300:	18bffd17 	ldw	r2,-12(r3)
   11304:	2885883a 	add	r2,r5,r2
   11308:	d8800115 	stw	r2,4(sp)
   1130c:	0013c400 	call	13c40 <_Znaj>
	m_V = new XXDouble[12 + 1];		/* variables */
   11310:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   11314:	d9000117 	ldw	r4,4(sp)
	m_V = new XXDouble[12 + 1];		/* variables */
   11318:	28c00017 	ldw	r3,0(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   1131c:	20801015 	stw	r2,64(r4)
	m_V = new XXDouble[12 + 1];		/* variables */
   11320:	01000d04 	movi	r4,52
   11324:	18bffd17 	ldw	r2,-12(r3)
   11328:	2885883a 	add	r2,r5,r2
   1132c:	d8800115 	stw	r2,4(sp)
   11330:	0013c400 	call	13c40 <_Znaj>
	m_s = new XXDouble[3 + 1];		/* states */
   11334:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[12 + 1];		/* variables */
   11338:	d9000117 	ldw	r4,4(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   1133c:	28c00017 	ldw	r3,0(r5)
	m_V = new XXDouble[12 + 1];		/* variables */
   11340:	20801115 	stw	r2,68(r4)
	m_s = new XXDouble[3 + 1];		/* states */
   11344:	01000404 	movi	r4,16
   11348:	18bffd17 	ldw	r2,-12(r3)
   1134c:	2885883a 	add	r2,r5,r2
   11350:	d8800115 	stw	r2,4(sp)
   11354:	0013c400 	call	13c40 <_Znaj>
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11358:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   1135c:	d9000117 	ldw	r4,4(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11360:	28c00017 	ldw	r3,0(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   11364:	20801215 	stw	r2,72(r4)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11368:	01000404 	movi	r4,16
   1136c:	18bffd17 	ldw	r2,-12(r3)
   11370:	2885883a 	add	r2,r5,r2
   11374:	d8800115 	stw	r2,4(sp)
   11378:	0013c400 	call	13c40 <_Znaj>
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1137c:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11380:	d9000117 	ldw	r4,4(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   11384:	28c00017 	ldw	r3,0(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11388:	20801315 	stw	r2,76(r4)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1138c:	01000304 	movi	r4,12
   11390:	18bffd17 	ldw	r2,-12(r3)
   11394:	2885883a 	add	r2,r5,r2
   11398:	d8800115 	stw	r2,4(sp)
   1139c:	0013c400 	call	13c40 <_Znaj>
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113a0:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   113a4:	d9000117 	ldw	r4,4(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113a8:	28c00017 	ldw	r3,0(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   113ac:	20801415 	stw	r2,80(r4)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113b0:	01000104 	movi	r4,4
   113b4:	18bffd17 	ldw	r2,-12(r3)
   113b8:	2885883a 	add	r2,r5,r2
   113bc:	d8800115 	stw	r2,4(sp)
   113c0:	0013c400 	call	13c40 <_Znaj>
	m_workarray = new XXDouble[0 + 1];
   113c4:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113c8:	d9000117 	ldw	r4,4(sp)
	m_workarray = new XXDouble[0 + 1];
   113cc:	28c00017 	ldw	r3,0(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113d0:	20801515 	stw	r2,84(r4)
	m_workarray = new XXDouble[0 + 1];
   113d4:	01000104 	movi	r4,4
   113d8:	18bffd17 	ldw	r2,-12(r3)
   113dc:	2885883a 	add	r2,r5,r2
   113e0:	d8800115 	stw	r2,4(sp)
   113e4:	0013c400 	call	13c40 <_Znaj>
   113e8:	d8c00117 	ldw	r3,4(sp)
	Reset(0.0);
   113ec:	d9000017 	ldw	r4,0(sp)
   113f0:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   113f4:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   113f8:	0010fc40 	call	10fc4 <_ZN22PositionControllerTilt5ResetEf>
	m_finish_time = 20.0;
   113fc:	d9400017 	ldw	r5,0(sp)
   11400:	00d06834 	movhi	r3,16800
   11404:	d9000304 	addi	r4,sp,12
   11408:	28800017 	ldw	r2,0(r5)
   1140c:	10bffd17 	ldw	r2,-12(r2)
   11410:	2885883a 	add	r2,r5,r2
   11414:	10c00415 	stw	r3,16(r2)
   11418:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
}
   1141c:	dfc01117 	ldw	ra,68(sp)
   11420:	df001017 	ldw	fp,64(sp)
   11424:	dec01204 	addi	sp,sp,72
   11428:	f800283a 	ret
PositionControllerTilt::PositionControllerTilt(void)
   1142c:	d8800517 	ldw	r2,20(sp)
   11430:	d9000217 	ldw	r4,8(sp)
   11434:	d8800015 	stw	r2,0(sp)
   11438:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   1143c:	d9000017 	ldw	r4,0(sp)
   11440:	00bfffc4 	movi	r2,-1
   11444:	d8800415 	stw	r2,16(sp)
   11448:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

0001144c <_ZN22PositionControllerTiltC1Ev>:
   1144c:	deffef04 	addi	sp,sp,-68
   11450:	01400074 	movhi	r5,1
   11454:	00c000b4 	movhi	r3,2
   11458:	00800074 	movhi	r2,1
   1145c:	200d883a 	mov	r6,r4
   11460:	294c3304 	addi	r5,r5,12492
   11464:	18e21484 	addi	r3,r3,-30638
   11468:	10856f04 	addi	r2,r2,5564
   1146c:	d9000204 	addi	r4,sp,8
   11470:	dfc01015 	stw	ra,64(sp)
   11474:	d9800015 	stw	r6,0(sp)
   11478:	d9400815 	stw	r5,32(sp)
   1147c:	d8c00915 	stw	r3,36(sp)
   11480:	d8800b15 	stw	r2,44(sp)
   11484:	df000f15 	stw	fp,60(sp)
   11488:	df000a15 	stw	fp,40(sp)
   1148c:	dec00c15 	stw	sp,48(sp)
   11490:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   11494:	d9400017 	ldw	r5,0(sp)
   11498:	00c000b4 	movhi	r3,2
   1149c:	008000b4 	movhi	r2,2
   114a0:	18e27004 	addi	r3,r3,-30272
   114a4:	10a27704 	addi	r2,r2,-30244
   114a8:	29000204 	addi	r4,r5,8
   114ac:	28c00015 	stw	r3,0(r5)
   114b0:	28800415 	stw	r2,16(r5)
   114b4:	00bfffc4 	movi	r2,-1
   114b8:	d9000115 	stw	r4,4(sp)
   114bc:	d8800315 	stw	r2,12(sp)
   114c0:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   114c4:	d9400017 	ldw	r5,0(sp)
	m_number_parameters = 7;
   114c8:	00c001c4 	movi	r3,7
	m_number_initialvalues = 3;
   114cc:	008000c4 	movi	r2,3
	m_number_parameters = 7;
   114d0:	28c00b15 	stw	r3,44(r5)
	m_number_variables = 12;
   114d4:	00c00304 	movi	r3,12
	m_number_initialvalues = 3;
   114d8:	28800c15 	stw	r2,48(r5)
	m_number_states = 3;
   114dc:	28800e15 	stw	r2,56(r5)
	m_number_rates = 3;
   114e0:	28800f15 	stw	r2,60(r5)
	m_number_constants = 0;
   114e4:	28000a15 	stw	zero,40(r5)
	m_number_variables = 12;
   114e8:	28c00d15 	stw	r3,52(r5)
	m_number_matrices = 0;
   114ec:	28001015 	stw	zero,64(r5)
	m_number_unnamed = 0;
   114f0:	28001115 	stw	zero,68(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   114f4:	00800044 	movi	r2,1
   114f8:	01000104 	movi	r4,4
   114fc:	d8800315 	stw	r2,12(sp)
   11500:	0013c400 	call	13c40 <_Znaj>
   11504:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   11508:	01000804 	movi	r4,32
	m_C = new XXDouble[0 + 1];		/* constants */
   1150c:	28801215 	stw	r2,72(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   11510:	0013c400 	call	13c40 <_Znaj>
   11514:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   11518:	01000404 	movi	r4,16
	m_P = new XXDouble[7 + 1];		/* parameters */
   1151c:	28801315 	stw	r2,76(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   11520:	0013c400 	call	13c40 <_Znaj>
   11524:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[12 + 1];		/* variables */
   11528:	01000d04 	movi	r4,52
	m_I = new XXDouble[3 + 1];		/* initial values */
   1152c:	28801415 	stw	r2,80(r5)
	m_V = new XXDouble[12 + 1];		/* variables */
   11530:	0013c400 	call	13c40 <_Znaj>
   11534:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   11538:	01000404 	movi	r4,16
	m_V = new XXDouble[12 + 1];		/* variables */
   1153c:	28801515 	stw	r2,84(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   11540:	0013c400 	call	13c40 <_Znaj>
   11544:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11548:	01000404 	movi	r4,16
	m_s = new XXDouble[3 + 1];		/* states */
   1154c:	28801615 	stw	r2,88(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11550:	0013c400 	call	13c40 <_Znaj>
   11554:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   11558:	01000304 	movi	r4,12
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1155c:	28801715 	stw	r2,92(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   11560:	0013c400 	call	13c40 <_Znaj>
   11564:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   11568:	01000104 	movi	r4,4
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1156c:	28801815 	stw	r2,96(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   11570:	0013c400 	call	13c40 <_Znaj>
   11574:	d9400017 	ldw	r5,0(sp)
	m_workarray = new XXDouble[0 + 1];
   11578:	01000104 	movi	r4,4
	m_U = new XXDouble[0 + 1];		/* unnamed */
   1157c:	28801915 	stw	r2,100(r5)
	m_workarray = new XXDouble[0 + 1];
   11580:	0013c400 	call	13c40 <_Znaj>
   11584:	d8c00017 	ldw	r3,0(sp)
	Reset(0.0);
   11588:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   1158c:	18801a15 	stw	r2,104(r3)
	Reset(0.0);
   11590:	1809883a 	mov	r4,r3
   11594:	0010fc40 	call	10fc4 <_ZN22PositionControllerTilt5ResetEf>
	m_finish_time = 20.0;
   11598:	d9400017 	ldw	r5,0(sp)
   1159c:	00906834 	movhi	r2,16800
   115a0:	d9000204 	addi	r4,sp,8
   115a4:	28800815 	stw	r2,32(r5)
   115a8:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
}
   115ac:	dfc01017 	ldw	ra,64(sp)
   115b0:	df000f17 	ldw	fp,60(sp)
   115b4:	dec01104 	addi	sp,sp,68
   115b8:	f800283a 	ret
PositionControllerTilt::PositionControllerTilt(void)
   115bc:	d8800417 	ldw	r2,16(sp)
   115c0:	d9000117 	ldw	r4,4(sp)
   115c4:	d8800015 	stw	r2,0(sp)
   115c8:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   115cc:	d9000017 	ldw	r4,0(sp)
   115d0:	00bfffc4 	movi	r2,-1
   115d4:	d8800315 	stw	r2,12(sp)
   115d8:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

000115dc <_ZN22PositionControllerTiltD2Ev>:
PositionControllerTilt::~PositionControllerTilt(void)
   115dc:	28c00017 	ldw	r3,0(r5)
   115e0:	defffe04 	addi	sp,sp,-8
   115e4:	dc000015 	stw	r16,0(sp)
   115e8:	18bffd17 	ldw	r2,-12(r3)
   115ec:	dfc00115 	stw	ra,4(sp)
   115f0:	20c00015 	stw	r3,0(r4)
   115f4:	2085883a 	add	r2,r4,r2
   115f8:	28c00117 	ldw	r3,4(r5)
   115fc:	2021883a 	mov	r16,r4
	delete[] m_C;
   11600:	11000e17 	ldw	r4,56(r2)
PositionControllerTilt::~PositionControllerTilt(void)
   11604:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   11608:	20000126 	beq	r4,zero,11610 <_ZN22PositionControllerTiltD2Ev+0x34>
   1160c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_P;
   11610:	80800017 	ldw	r2,0(r16)
   11614:	10bffd17 	ldw	r2,-12(r2)
   11618:	8085883a 	add	r2,r16,r2
   1161c:	11000f17 	ldw	r4,60(r2)
   11620:	20000426 	beq	r4,zero,11634 <_ZN22PositionControllerTiltD2Ev+0x58>
   11624:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_I;
   11628:	80800017 	ldw	r2,0(r16)
   1162c:	10bffd17 	ldw	r2,-12(r2)
   11630:	8085883a 	add	r2,r16,r2
   11634:	11001017 	ldw	r4,64(r2)
   11638:	20000426 	beq	r4,zero,1164c <_ZN22PositionControllerTiltD2Ev+0x70>
   1163c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_V;
   11640:	80800017 	ldw	r2,0(r16)
   11644:	10bffd17 	ldw	r2,-12(r2)
   11648:	8085883a 	add	r2,r16,r2
   1164c:	11001117 	ldw	r4,68(r2)
   11650:	20000426 	beq	r4,zero,11664 <_ZN22PositionControllerTiltD2Ev+0x88>
   11654:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_s;
   11658:	80800017 	ldw	r2,0(r16)
   1165c:	10bffd17 	ldw	r2,-12(r2)
   11660:	8085883a 	add	r2,r16,r2
   11664:	11001217 	ldw	r4,72(r2)
   11668:	20000426 	beq	r4,zero,1167c <_ZN22PositionControllerTiltD2Ev+0xa0>
   1166c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_R;
   11670:	80800017 	ldw	r2,0(r16)
   11674:	10bffd17 	ldw	r2,-12(r2)
   11678:	8085883a 	add	r2,r16,r2
   1167c:	11001317 	ldw	r4,76(r2)
   11680:	20000426 	beq	r4,zero,11694 <_ZN22PositionControllerTiltD2Ev+0xb8>
   11684:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_M;
   11688:	80800017 	ldw	r2,0(r16)
   1168c:	10bffd17 	ldw	r2,-12(r2)
   11690:	8085883a 	add	r2,r16,r2
   11694:	11001417 	ldw	r4,80(r2)
   11698:	20000426 	beq	r4,zero,116ac <_ZN22PositionControllerTiltD2Ev+0xd0>
   1169c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_U;
   116a0:	80800017 	ldw	r2,0(r16)
   116a4:	10bffd17 	ldw	r2,-12(r2)
   116a8:	8085883a 	add	r2,r16,r2
   116ac:	11001517 	ldw	r4,84(r2)
   116b0:	20000426 	beq	r4,zero,116c4 <_ZN22PositionControllerTiltD2Ev+0xe8>
   116b4:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_workarray;
   116b8:	80800017 	ldw	r2,0(r16)
   116bc:	10bffd17 	ldw	r2,-12(r2)
   116c0:	8085883a 	add	r2,r16,r2
   116c4:	11001617 	ldw	r4,88(r2)
   116c8:	20000126 	beq	r4,zero,116d0 <_ZN22PositionControllerTiltD2Ev+0xf4>
   116cc:	0012ba40 	call	12ba4 <_ZdaPv>
PositionControllerTilt::~PositionControllerTilt(void)
   116d0:	81000204 	addi	r4,r16,8
}
   116d4:	dfc00117 	ldw	ra,4(sp)
   116d8:	dc000017 	ldw	r16,0(sp)
   116dc:	dec00204 	addi	sp,sp,8
PositionControllerTilt::~PositionControllerTilt(void)
   116e0:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

000116e4 <_ZN22PositionControllerTiltD1Ev>:
   116e4:	defffe04 	addi	sp,sp,-8
   116e8:	dc000015 	stw	r16,0(sp)
   116ec:	00c000b4 	movhi	r3,2
   116f0:	2021883a 	mov	r16,r4
   116f4:	008000b4 	movhi	r2,2
	delete[] m_C;
   116f8:	21001217 	ldw	r4,72(r4)
PositionControllerTilt::~PositionControllerTilt(void)
   116fc:	dfc00115 	stw	ra,4(sp)
   11700:	18e27004 	addi	r3,r3,-30272
   11704:	10a27704 	addi	r2,r2,-30244
   11708:	80c00015 	stw	r3,0(r16)
   1170c:	80800415 	stw	r2,16(r16)
	delete[] m_C;
   11710:	20000126 	beq	r4,zero,11718 <_ZN22PositionControllerTiltD1Ev+0x34>
   11714:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_P;
   11718:	81001317 	ldw	r4,76(r16)
   1171c:	20000126 	beq	r4,zero,11724 <_ZN22PositionControllerTiltD1Ev+0x40>
   11720:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_I;
   11724:	81001417 	ldw	r4,80(r16)
   11728:	20000126 	beq	r4,zero,11730 <_ZN22PositionControllerTiltD1Ev+0x4c>
   1172c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_V;
   11730:	81001517 	ldw	r4,84(r16)
   11734:	20000126 	beq	r4,zero,1173c <_ZN22PositionControllerTiltD1Ev+0x58>
   11738:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_s;
   1173c:	81001617 	ldw	r4,88(r16)
   11740:	20000126 	beq	r4,zero,11748 <_ZN22PositionControllerTiltD1Ev+0x64>
   11744:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_R;
   11748:	81001717 	ldw	r4,92(r16)
   1174c:	20000126 	beq	r4,zero,11754 <_ZN22PositionControllerTiltD1Ev+0x70>
   11750:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_M;
   11754:	81001817 	ldw	r4,96(r16)
   11758:	20000126 	beq	r4,zero,11760 <_ZN22PositionControllerTiltD1Ev+0x7c>
   1175c:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_U;
   11760:	81001917 	ldw	r4,100(r16)
   11764:	20000126 	beq	r4,zero,1176c <_ZN22PositionControllerTiltD1Ev+0x88>
   11768:	0012ba40 	call	12ba4 <_ZdaPv>
	delete[] m_workarray;
   1176c:	81001a17 	ldw	r4,104(r16)
   11770:	20000126 	beq	r4,zero,11778 <_ZN22PositionControllerTiltD1Ev+0x94>
   11774:	0012ba40 	call	12ba4 <_ZdaPv>
PositionControllerTilt::~PositionControllerTilt(void)
   11778:	81000204 	addi	r4,r16,8
}
   1177c:	dfc00117 	ldw	ra,4(sp)
   11780:	dc000017 	ldw	r16,0(sp)
   11784:	dec00204 	addi	sp,sp,8
PositionControllerTilt::~PositionControllerTilt(void)
   11788:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

0001178c <_ZTv0_n16_N22PositionControllerTiltD1Ev>:
		virtual ~PositionControllerTilt(void);
   1178c:	2009883a 	mov	r4,r4
   11790:	20800017 	ldw	r2,0(r4)
   11794:	10bffc04 	addi	r2,r2,-16
   11798:	10800017 	ldw	r2,0(r2)
   1179c:	2089883a 	add	r4,r4,r2
   117a0:	00116e41 	jmpi	116e4 <_ZN22PositionControllerTiltD1Ev>

000117a4 <_ZN22PositionControllerTiltD0Ev>:
   117a4:	defffe04 	addi	sp,sp,-8
   117a8:	dc000015 	stw	r16,0(sp)
   117ac:	dfc00115 	stw	ra,4(sp)
   117b0:	2021883a 	mov	r16,r4
}
   117b4:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
   117b8:	01401b04 	movi	r5,108
   117bc:	8009883a 	mov	r4,r16
   117c0:	dfc00117 	ldw	ra,4(sp)
   117c4:	dc000017 	ldw	r16,0(sp)
   117c8:	dec00204 	addi	sp,sp,8
   117cc:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000117d0 <_ZTv0_n16_N22PositionControllerTiltD0Ev>:
   117d0:	20800017 	ldw	r2,0(r4)
   117d4:	defffe04 	addi	sp,sp,-8
   117d8:	dc000015 	stw	r16,0(sp)
   117dc:	143ffc17 	ldw	r16,-16(r2)
   117e0:	dfc00115 	stw	ra,4(sp)
   117e4:	2421883a 	add	r16,r4,r16
   117e8:	8009883a 	mov	r4,r16
   117ec:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
   117f0:	01401b04 	movi	r5,108
   117f4:	8009883a 	mov	r4,r16
   117f8:	dfc00117 	ldw	ra,4(sp)
   117fc:	dc000017 	ldw	r16,0(sp)
   11800:	dec00204 	addi	sp,sp,8
   11804:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00011808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>:
	m_initialize = true;
   11808:	20800017 	ldw	r2,0(r4)
{
   1180c:	defffb04 	addi	sp,sp,-20
   11810:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   11814:	10bffd17 	ldw	r2,-12(r2)
{
   11818:	dcc00315 	stw	r19,12(sp)
   1181c:	dc800215 	stw	r18,8(sp)
	m_initialize = true;
   11820:	2085883a 	add	r2,r4,r2
	m_P[0] = 0.0;		/* corrGain\K */
   11824:	10c00f17 	ldw	r3,60(r2)
{
   11828:	dc400115 	stw	r17,4(sp)
   1182c:	dc000015 	stw	r16,0(sp)
	m_initialize = true;
   11830:	02000044 	movi	r8,1
	m_P[3] = 0.001;		/* PID1\beta */
   11834:	02cea0f4 	movhi	r11,14979
	m_initialize = true;
   11838:	12000105 	stb	r8,4(r2)
	m_stop_run = false;
   1183c:	10000185 	stb	zero,6(r2)
{
   11840:	2021883a 	mov	r16,r4
	m_P[3] = 0.001;		/* PID1\beta */
   11844:	5ac49bc4 	addi	r11,r11,4719
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   11848:	11001017 	ldw	r4,64(r2)
	m_P[1] = 1.6;		/* PID1\kp */
   1184c:	034ff374 	movhi	r13,16333
	m_P[2] = 0.05;		/* PID1\tauD */
   11850:	030f5374 	movhi	r12,15693
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   11854:	02afdf74 	movhi	r10,49021
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11858:	024fdf74 	movhi	r9,16253
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   1185c:	12001217 	ldw	r8,72(r2)
	m_P[1] = 1.6;		/* PID1\kp */
   11860:	6b733344 	addi	r13,r13,-13107
	m_P[3] = 0.001;		/* PID1\beta */
   11864:	1ac00315 	stw	r11,12(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   11868:	63333344 	addi	r12,r12,-13107
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   1186c:	529c2904 	addi	r10,r10,28836
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11870:	4a5c2904 	addi	r9,r9,28836
	m_P[4] = 10.5;		/* PID1\tauI */
   11874:	02d04a34 	movhi	r11,16680
	m_P[1] = 1.6;		/* PID1\kp */
   11878:	1b400115 	stw	r13,4(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   1187c:	1b000215 	stw	r12,8(r3)
	m_P[4] = 10.5;		/* PID1\tauI */
   11880:	1ac00415 	stw	r11,16(r3)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   11884:	1a800515 	stw	r10,20(r3)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11888:	1a400615 	stw	r9,24(r3)
	m_P[0] = 0.0;		/* corrGain\K */
   1188c:	18000015 	stw	zero,0(r3)
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   11890:	20000115 	stw	zero,4(r4)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   11894:	20000215 	stw	zero,8(r4)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   11898:	20000015 	stw	zero,0(r4)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   1189c:	40000015 	stw	zero,0(r8)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   118a0:	20c00117 	ldw	r3,4(r4)
{
   118a4:	2823883a 	mov	r17,r5
	myintegmethod.Initialize(this);
   118a8:	100b883a 	mov	r5,r2
	m_s[1] = m_I[1];		/* PID1\error_previous */
   118ac:	40c00115 	stw	r3,4(r8)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   118b0:	20c00217 	ldw	r3,8(r4)
	myintegmethod.Initialize(this);
   118b4:	81000204 	addi	r4,r16,8
{
   118b8:	3827883a 	mov	r19,r7
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   118bc:	40c00215 	stw	r3,8(r8)
{
   118c0:	3025883a 	mov	r18,r6
	myintegmethod.Initialize(this);
   118c4:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   118c8:	80c00017 	ldw	r3,0(r16)
	CalculateDynamic ();
   118cc:	8009883a 	mov	r4,r16
	m_time = t;
   118d0:	18bffd17 	ldw	r2,-12(r3)
	CalculateDynamic ();
   118d4:	18c00217 	ldw	r3,8(r3)
	m_time = t;
   118d8:	8085883a 	add	r2,r16,r2
   118dc:	14c00515 	stw	r19,20(r2)
	m_V[8] = u[0];		/* corr */
   118e0:	89400017 	ldw	r5,0(r17)
   118e4:	10801117 	ldw	r2,68(r2)
   118e8:	11400815 	stw	r5,32(r2)
	m_V[9] = u[1];		/* in */
   118ec:	89400117 	ldw	r5,4(r17)
   118f0:	11400915 	stw	r5,36(r2)
	m_V[10] = u[2];		/* position */
   118f4:	89400217 	ldw	r5,8(r17)
   118f8:	11400a15 	stw	r5,40(r2)
	CalculateDynamic ();
   118fc:	183ee83a 	callr	r3
	m_V[11] = m_V[7];
   11900:	80800017 	ldw	r2,0(r16)
   11904:	10bffd17 	ldw	r2,-12(r2)
   11908:	8085883a 	add	r2,r16,r2
   1190c:	11001117 	ldw	r4,68(r2)
   11910:	20c00717 	ldw	r3,28(r4)
   11914:	20c00b15 	stw	r3,44(r4)
	y[0] = 	m_V[11];		/* out */
   11918:	90c00015 	stw	r3,0(r18)
	m_initialize = false;
   1191c:	10000105 	stb	zero,4(r2)
	state = mainrun;
   11920:	00800044 	movi	r2,1
   11924:	80800115 	stw	r2,4(r16)
}
   11928:	dfc00417 	ldw	ra,16(sp)
   1192c:	dcc00317 	ldw	r19,12(sp)
   11930:	dc800217 	ldw	r18,8(sp)
   11934:	dc400117 	ldw	r17,4(sp)
   11938:	dc000017 	ldw	r16,0(sp)
   1193c:	dec00504 	addi	sp,sp,20
   11940:	f800283a 	ret

00011944 <_ZN22PositionControllerTilt9CalculateEPfS0_>:
	switch (state)
   11944:	20800117 	ldw	r2,4(r4)
   11948:	10004026 	beq	r2,zero,11a4c <_ZN22PositionControllerTilt9CalculateEPfS0_+0x108>
   1194c:	10800060 	cmpeqi	r2,r2,1
   11950:	10002526 	beq	r2,zero,119e8 <_ZN22PositionControllerTilt9CalculateEPfS0_+0xa4>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11954:	20800017 	ldw	r2,0(r4)
{
   11958:	defffd04 	addi	sp,sp,-12
   1195c:	dc000015 	stw	r16,0(sp)
   11960:	2021883a 	mov	r16,r4
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11964:	113ffd17 	ldw	r4,-12(r2)
{
   11968:	dc400115 	stw	r17,4(sp)
   1196c:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11970:	8109883a 	add	r4,r16,r4
   11974:	20800217 	ldw	r2,8(r4)
   11978:	3023883a 	mov	r17,r6
   1197c:	21800417 	ldw	r6,16(r4)
   11980:	21c00517 	ldw	r7,20(r4)
   11984:	2807883a 	mov	r3,r5
   11988:	014cf5f4 	movhi	r5,13271
   1198c:	296fe544 	addi	r5,r5,-16491
   11990:	3085ffb2 	custom	254,r2,r6,r2
   11994:	1145ff72 	custom	253,r2,r2,r5
   11998:	3885f9b2 	custom	230,r2,r7,r2
   1199c:	1000131e 	bne	r2,zero,119ec <_ZN22PositionControllerTilt9CalculateEPfS0_+0xa8>
   119a0:	3085f8b2 	custom	226,r2,r6,r2
   119a4:	10001126 	beq	r2,zero,119ec <_ZN22PositionControllerTilt9CalculateEPfS0_+0xa8>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   119a8:	20800183 	ldbu	r2,6(r4)
				state = finished;
   119ac:	00c00084 	movi	r3,2
   119b0:	80c00115 	stw	r3,4(r16)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   119b4:	1000051e 	bne	r2,zero,119cc <_ZN22PositionControllerTilt9CalculateEPfS0_+0x88>
   119b8:	008cf5f4 	movhi	r2,13271
   119bc:	10afe544 	addi	r2,r2,-16491
   119c0:	388fff72 	custom	253,r7,r7,r2
   119c4:	398df932 	custom	228,r6,r7,r6
   119c8:	30000226 	beq	r6,zero,119d4 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x90>
				state = finished;
   119cc:	00800084 	movi	r2,2
   119d0:	80800115 	stw	r2,4(r16)
}
   119d4:	dfc00217 	ldw	ra,8(sp)
   119d8:	dc400117 	ldw	r17,4(sp)
   119dc:	dc000017 	ldw	r16,0(sp)
   119e0:	dec00304 	addi	sp,sp,12
   119e4:	f800283a 	ret
   119e8:	f800283a 	ret
	m_V[8] = u[0];		/* corr */
   119ec:	20801117 	ldw	r2,68(r4)
   119f0:	19400017 	ldw	r5,0(r3)
				myintegmethod.Step();
   119f4:	81000204 	addi	r4,r16,8
	m_V[8] = u[0];		/* corr */
   119f8:	11400815 	stw	r5,32(r2)
	m_V[9] = u[1];		/* in */
   119fc:	19400117 	ldw	r5,4(r3)
   11a00:	11400915 	stw	r5,36(r2)
	m_V[10] = u[2];		/* position */
   11a04:	18c00217 	ldw	r3,8(r3)
   11a08:	10c00a15 	stw	r3,40(r2)
				myintegmethod.Step();
   11a0c:	00101dc0 	call	101dc <_ZN8Discrete4StepEv>
	m_V[11] = m_V[7];
   11a10:	80800017 	ldw	r2,0(r16)
   11a14:	10bffd17 	ldw	r2,-12(r2)
   11a18:	8085883a 	add	r2,r16,r2
   11a1c:	11001117 	ldw	r4,68(r2)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   11a20:	11400183 	ldbu	r5,6(r2)
	m_V[11] = m_V[7];
   11a24:	20c00717 	ldw	r3,28(r4)
   11a28:	20c00b15 	stw	r3,44(r4)
	y[0] = 	m_V[11];		/* out */
   11a2c:	88c00015 	stw	r3,0(r17)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   11a30:	283fe61e 	bne	r5,zero,119cc <_ZN22PositionControllerTilt9CalculateEPfS0_+0x88>
   11a34:	11800417 	ldw	r6,16(r2)
   11a38:	0007883a 	mov	r3,zero
   11a3c:	30c7f8b2 	custom	226,r3,r6,r3
   11a40:	183fe426 	beq	r3,zero,119d4 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x90>
   11a44:	11c00517 	ldw	r7,20(r2)
   11a48:	003fdb06 	br	119b8 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x74>
			Initialize(u, y, 0.0);
   11a4c:	000f883a 	mov	r7,zero
   11a50:	00118081 	jmpi	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>

00011a54 <_Z16handleTimerEventv>:
volatile bool tilt_homing_done = false;
volatile bool pan_homing_done = false;

void handleTimerEvent()
{
	if(tilt_homing_done && pan_homing_done)
   11a54:	d0a20c43 	ldbu	r2,-30671(gp)
{
   11a58:	defffe04 	addi	sp,sp,-8
	{
		u_tilt[2] = tilt_motor.getAngle();
   11a5c:	010000b4 	movhi	r4,2
{
   11a60:	dfc00115 	stw	ra,4(sp)
   11a64:	dc000015 	stw	r16,0(sp)
	if(tilt_homing_done && pan_homing_done)
   11a68:	10803fcc 	andi	r2,r2,255
		u_tilt[2] = tilt_motor.getAngle();
   11a6c:	21280c04 	addi	r4,r4,-24528
	if(tilt_homing_done && pan_homing_done)
   11a70:	10000326 	beq	r2,zero,11a80 <_Z16handleTimerEventv+0x2c>
   11a74:	d0a20c03 	ldbu	r2,-30672(gp)
   11a78:	10803fcc 	andi	r2,r2,255
   11a7c:	1000161e 	bne	r2,zero,11ad8 <_Z16handleTimerEventv+0x84>
		}
	}
	else
	{
		// Motor is still homing!
		if(tilt_motor.isAtInitialPosition() == true && !tilt_homing_done)
   11a80:	00124340 	call	12434 <_ZN5Plant5Motor19isAtInitialPositionEv>
   11a84:	10803fcc 	andi	r2,r2,255
   11a88:	10000526 	beq	r2,zero,11aa0 <_Z16handleTimerEventv+0x4c>
   11a8c:	d0a20c43 	ldbu	r2,-30671(gp)
   11a90:	10803fcc 	andi	r2,r2,255
   11a94:	1000021e 	bne	r2,zero,11aa0 <_Z16handleTimerEventv+0x4c>
		{
			tilt_homing_done = true;
   11a98:	00800044 	movi	r2,1
   11a9c:	d0a20c45 	stb	r2,-30671(gp)
		}

		if(pan_motor.isAtInitialPosition() == true && !pan_homing_done)
   11aa0:	010000b4 	movhi	r4,2
   11aa4:	21280204 	addi	r4,r4,-24568
   11aa8:	00124340 	call	12434 <_ZN5Plant5Motor19isAtInitialPositionEv>
   11aac:	10803fcc 	andi	r2,r2,255
   11ab0:	10000526 	beq	r2,zero,11ac8 <_Z16handleTimerEventv+0x74>
   11ab4:	d0a20c03 	ldbu	r2,-30672(gp)
   11ab8:	10803fcc 	andi	r2,r2,255
   11abc:	1000021e 	bne	r2,zero,11ac8 <_Z16handleTimerEventv+0x74>
		{
			pan_homing_done = true;
   11ac0:	00800044 	movi	r2,1
   11ac4:	d0a20c05 	stb	r2,-30672(gp)
		}
	}
}
   11ac8:	dfc00117 	ldw	ra,4(sp)
   11acc:	dc000017 	ldw	r16,0(sp)
   11ad0:	dec00204 	addi	sp,sp,8
   11ad4:	f800283a 	ret
		u_tilt[2] = tilt_motor.getAngle();
   11ad8:	00124080 	call	12408 <_ZN5Plant5Motor8getAngleEv>
   11adc:	040000b4 	movhi	r16,2
		u_pan[2] = pan_motor.getAngle();
   11ae0:	010000b4 	movhi	r4,2
   11ae4:	21280204 	addi	r4,r4,-24568
		u_tilt[2] = tilt_motor.getAngle();
   11ae8:	8427fe04 	addi	r16,r16,-24584
   11aec:	80800215 	stw	r2,8(r16)
		u_pan[2] = pan_motor.getAngle();
   11af0:	00124080 	call	12408 <_ZN5Plant5Motor8getAngleEv>
		if (!tilt_model.IsFinished())
   11af4:	010000b4 	movhi	r4,2
		u_pan[2] = pan_motor.getAngle();
   11af8:	00c000b4 	movhi	r3,2
		if (!tilt_model.IsFinished())
   11afc:	2127df04 	addi	r4,r4,-24708
		u_pan[2] = pan_motor.getAngle();
   11b00:	18a7fc15 	stw	r2,-24592(r3)
		if (!tilt_model.IsFinished())
   11b04:	00111140 	call	11114 <_ZN22PositionControllerTilt10IsFinishedEv>
   11b08:	10803fcc 	andi	r2,r2,255
   11b0c:	10002226 	beq	r2,zero,11b98 <_Z16handleTimerEventv+0x144>
		if (!pan_model.IsFinished())
   11b10:	010000b4 	movhi	r4,2
   11b14:	2127c404 	addi	r4,r4,-24816
   11b18:	00111140 	call	11114 <_ZN22PositionControllerTilt10IsFinishedEv>
   11b1c:	10803fcc 	andi	r2,r2,255
			pan_model.Calculate(u_pan, y_pan);
   11b20:	014000b4 	movhi	r5,2
   11b24:	010000b4 	movhi	r4,2
		if (!pan_model.IsFinished())
   11b28:	1000111e 	bne	r2,zero,11b70 <_Z16handleTimerEventv+0x11c>
			pan_model.Calculate(u_pan, y_pan);
   11b2c:	2967fa04 	addi	r5,r5,-24600
   11b30:	2127c404 	addi	r4,r4,-24816
   11b34:	d1a20d04 	addi	r6,gp,-30668
   11b38:	00119440 	call	11944 <_ZN22PositionControllerTilt9CalculateEPfS0_>
			pan_motor.setSpeedAndDirection(int8_t (y_pan[0] * 100));
   11b3c:	d1620d17 	ldw	r5,-30668(gp)
   11b40:	0090b234 	movhi	r2,17096
   11b44:	010000b4 	movhi	r4,2
   11b48:	288bff32 	custom	252,r5,r5,r2
   11b4c:	280bfe72 	custom	249,r5,r5,zero
   11b50:	29403fcc 	andi	r5,r5,255
   11b54:	2940201c 	xori	r5,r5,128
   11b58:	297fe004 	addi	r5,r5,-128
   11b5c:	21280204 	addi	r4,r4,-24568
}
   11b60:	dfc00117 	ldw	ra,4(sp)
   11b64:	dc000017 	ldw	r16,0(sp)
   11b68:	dec00204 	addi	sp,sp,8
			pan_motor.setSpeedAndDirection(int8_t (y_pan[0] * 100));
   11b6c:	00121cc1 	jmpi	121cc <_ZN5Plant5Motor20setSpeedAndDirectionEa>
			pan_model.Terminate(u_pan, y_pan);
   11b70:	2127c404 	addi	r4,r4,-24816
   11b74:	d1a20d04 	addi	r6,gp,-30668
   11b78:	2967fa04 	addi	r5,r5,-24600
   11b7c:	00111200 	call	11120 <_ZN22PositionControllerTilt9TerminateEPfS0_>
			pan_motor.disable();
   11b80:	010000b4 	movhi	r4,2
   11b84:	21280204 	addi	r4,r4,-24568
}
   11b88:	dfc00117 	ldw	ra,4(sp)
   11b8c:	dc000017 	ldw	r16,0(sp)
   11b90:	dec00204 	addi	sp,sp,8
			pan_motor.disable();
   11b94:	00123e41 	jmpi	123e4 <_ZN5Plant5Motor7disableEv>
			tilt_model.Calculate(u_tilt, y_tilt);
   11b98:	010000b4 	movhi	r4,2
   11b9c:	d1a20f04 	addi	r6,gp,-30660
   11ba0:	800b883a 	mov	r5,r16
   11ba4:	2127df04 	addi	r4,r4,-24708
   11ba8:	00119440 	call	11944 <_ZN22PositionControllerTilt9CalculateEPfS0_>
			tilt_motor.setSpeedAndDirection(int8_t (y_tilt[0] * 100));
   11bac:	d1620f17 	ldw	r5,-30660(gp)
   11bb0:	0090b234 	movhi	r2,17096
   11bb4:	010000b4 	movhi	r4,2
   11bb8:	288bff32 	custom	252,r5,r5,r2
   11bbc:	280bfe72 	custom	249,r5,r5,zero
   11bc0:	29403fcc 	andi	r5,r5,255
   11bc4:	2940201c 	xori	r5,r5,128
   11bc8:	297fe004 	addi	r5,r5,-128
   11bcc:	21280c04 	addi	r4,r4,-24528
   11bd0:	00121cc0 	call	121cc <_ZN5Plant5Motor20setSpeedAndDirectionEa>
			if(tilt_model.IsFinished())
   11bd4:	010000b4 	movhi	r4,2
   11bd8:	2127df04 	addi	r4,r4,-24708
   11bdc:	00111140 	call	11114 <_ZN22PositionControllerTilt10IsFinishedEv>
   11be0:	10803fcc 	andi	r2,r2,255
   11be4:	103fca26 	beq	r2,zero,11b10 <_Z16handleTimerEventv+0xbc>
				tilt_model.Terminate(u_tilt, y_tilt);
   11be8:	010000b4 	movhi	r4,2
   11bec:	2127df04 	addi	r4,r4,-24708
   11bf0:	d1a20f04 	addi	r6,gp,-30660
   11bf4:	800b883a 	mov	r5,r16
   11bf8:	00111200 	call	11120 <_ZN22PositionControllerTilt9TerminateEPfS0_>
				tilt_motor.disable();
   11bfc:	010000b4 	movhi	r4,2
   11c00:	21280c04 	addi	r4,r4,-24528
   11c04:	00123e40 	call	123e4 <_ZN5Plant5Motor7disableEv>
   11c08:	003fc106 	br	11b10 <_Z16handleTimerEventv+0xbc>

00011c0c <_Z15handleUartEventRN6Serial7messageE>:
			encoder_value = r >> 1;
		}

		[[nodiscard]] float getAngle() const
		{
			unsigned int x = encoder_value;
   11c0c:	20800017 	ldw	r2,0(r4)

// Prevent optimization.
volatile float angle = 0;
void handleUartEvent(Serial::message &received_message)
{
   11c10:	defffd04 	addi	sp,sp,-12
   11c14:	dfc00215 	stw	ra,8(sp)
	angle = received_message.getAngle();

	// Determine for which motor this message is intended.
	switch (received_message.motor)
   11c18:	1007883a 	mov	r3,r2
			x <<= 1;
   11c1c:	1004907a 	slli	r2,r2,1
{
   11c20:	dc400115 	stw	r17,4(sp)
   11c24:	dc000015 	stw	r16,0(sp)
	angle = received_message.getAngle();
   11c28:	d0a20b15 	stw	r2,-30676(gp)
	switch (received_message.motor)
   11c2c:	18001816 	blt	r3,zero,11c90 <_Z15handleUartEventRN6Serial7messageE+0x84>
	{
		case 0:
		{
			u_tilt[1] += angle;
   11c30:	044000b4 	movhi	r17,2
   11c34:	8c67fe04 	addi	r17,r17,-24584
   11c38:	88800117 	ldw	r2,4(r17)
   11c3c:	d4220b17 	ldw	r16,-30676(gp)
   11c40:	80a1ff72 	custom	253,r16,r16,r2

			if (u_tilt[1] > 0.1 && u_tilt[1] < 3)
   11c44:	8009883a 	mov	r4,r16
			u_tilt[1] += angle;
   11c48:	8c000115 	stw	r16,4(r17)
			if (u_tilt[1] > 0.1 && u_tilt[1] < 3)
   11c4c:	00168640 	call	16864 <__extendsfdf2>
   11c50:	01a666b4 	movhi	r6,39322
   11c54:	01cfeeb4 	movhi	r7,16314
   11c58:	31a66684 	addi	r6,r6,-26214
   11c5c:	39e66644 	addi	r7,r7,-26215
   11c60:	1009883a 	mov	r4,r2
   11c64:	180b883a 	mov	r5,r3
   11c68:	0015fd00 	call	15fd0 <__gedf2>
   11c6c:	0080030e 	bge	zero,r2,11c7c <_Z15handleUartEventRN6Serial7messageE+0x70>
   11c70:	00901034 	movhi	r2,16448
   11c74:	80a1f9f2 	custom	231,r16,r16,r2
   11c78:	8000221e 	bne	r16,zero,11d04 <_Z15handleUartEventRN6Serial7messageE+0xf8>
			}

			break;
		}
	}
}
   11c7c:	dfc00217 	ldw	ra,8(sp)
   11c80:	dc400117 	ldw	r17,4(sp)
   11c84:	dc000017 	ldw	r16,0(sp)
   11c88:	dec00304 	addi	sp,sp,12
   11c8c:	f800283a 	ret
			u_pan[1] += angle;
   11c90:	044000b4 	movhi	r17,2
   11c94:	8c67fa04 	addi	r17,r17,-24600
   11c98:	88800117 	ldw	r2,4(r17)
   11c9c:	d4220b17 	ldw	r16,-30676(gp)
   11ca0:	80a1ff72 	custom	253,r16,r16,r2
			if (u_pan[1] > 0.1 && u_pan[1] < 5.5)
   11ca4:	8009883a 	mov	r4,r16
			u_pan[1] += angle;
   11ca8:	8c000115 	stw	r16,4(r17)
			if (u_pan[1] > 0.1 && u_pan[1] < 5.5)
   11cac:	00168640 	call	16864 <__extendsfdf2>
   11cb0:	01a666b4 	movhi	r6,39322
   11cb4:	01cfeeb4 	movhi	r7,16314
   11cb8:	31a66684 	addi	r6,r6,-26214
   11cbc:	39e66644 	addi	r7,r7,-26215
   11cc0:	1009883a 	mov	r4,r2
   11cc4:	180b883a 	mov	r5,r3
   11cc8:	0015fd00 	call	15fd0 <__gedf2>
   11ccc:	00bfeb0e 	bge	zero,r2,11c7c <_Z15handleUartEventRN6Serial7messageE+0x70>
   11cd0:	00902c34 	movhi	r2,16560
   11cd4:	80a1f9f2 	custom	231,r16,r16,r2
   11cd8:	803fe826 	beq	r16,zero,11c7c <_Z15handleUartEventRN6Serial7messageE+0x70>
				pan_model.Initialize(u_pan, y_pan, 0.0);
   11cdc:	010000b4 	movhi	r4,2
   11ce0:	000f883a 	mov	r7,zero
   11ce4:	d1a20d04 	addi	r6,gp,-30668
   11ce8:	880b883a 	mov	r5,r17
   11cec:	2127c404 	addi	r4,r4,-24816
}
   11cf0:	dfc00217 	ldw	ra,8(sp)
   11cf4:	dc400117 	ldw	r17,4(sp)
   11cf8:	dc000017 	ldw	r16,0(sp)
   11cfc:	dec00304 	addi	sp,sp,12
				pan_model.Initialize(u_pan, y_pan, 0.0);
   11d00:	00118081 	jmpi	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
				tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11d04:	010000b4 	movhi	r4,2
   11d08:	000f883a 	mov	r7,zero
   11d0c:	d1a20f04 	addi	r6,gp,-30660
   11d10:	880b883a 	mov	r5,r17
   11d14:	2127df04 	addi	r4,r4,-24708
   11d18:	003ff506 	br	11cf0 <_Z15handleUartEventRN6Serial7messageE+0xe4>

00011d1c <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_>:
    { return static_cast<_Up&&>(__t); }

  template<typename _Res, typename _Fn, typename... _Args>
    constexpr _Res
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
   11d1c:	20800017 	ldw	r2,0(r4)
	  }
	return false;
      }

      static _Res
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
   11d20:	2809883a 	mov	r4,r5
   11d24:	1000683a 	jmp	r2

00011d28 <_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data>:
   11d28:	20800017 	ldw	r2,0(r4)
   11d2c:	1000683a 	jmp	r2

00011d30 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
	switch (__op)
   11d30:	30000626 	beq	r6,zero,11d4c <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x1c>
   11d34:	30800060 	cmpeqi	r2,r6,1
   11d38:	1000091e 	bne	r2,zero,11d60 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x30>
	  switch (__op)
   11d3c:	31800098 	cmpnei	r6,r6,2
   11d40:	30000a26 	beq	r6,zero,11d6c <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x3c>
      }
   11d44:	0005883a 	mov	r2,zero
   11d48:	f800283a 	ret
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11d4c:	008000b4 	movhi	r2,2
   11d50:	10a28a04 	addi	r2,r2,-30168
   11d54:	20800015 	stw	r2,0(r4)
      }
   11d58:	0005883a 	mov	r2,zero
   11d5c:	f800283a 	ret
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11d60:	21400015 	stw	r5,0(r4)
      }
   11d64:	0005883a 	mov	r2,zero
   11d68:	f800283a 	ret
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11d6c:	28800017 	ldw	r2,0(r5)
   11d70:	20800015 	stw	r2,0(r4)
	      break;
   11d74:	003ff306 	br	11d44 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x14>

00011d78 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation>:
	switch (__op)
   11d78:	30000626 	beq	r6,zero,11d94 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x1c>
   11d7c:	30800060 	cmpeqi	r2,r6,1
   11d80:	1000091e 	bne	r2,zero,11da8 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x30>
	  switch (__op)
   11d84:	31800098 	cmpnei	r6,r6,2
   11d88:	30000a26 	beq	r6,zero,11db4 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x3c>
      }
   11d8c:	0005883a 	mov	r2,zero
   11d90:	f800283a 	ret
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11d94:	008000b4 	movhi	r2,2
   11d98:	10a28604 	addi	r2,r2,-30184
   11d9c:	20800015 	stw	r2,0(r4)
      }
   11da0:	0005883a 	mov	r2,zero
   11da4:	f800283a 	ret
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11da8:	21400015 	stw	r5,0(r4)
      }
   11dac:	0005883a 	mov	r2,zero
   11db0:	f800283a 	ret
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11db4:	28800017 	ldw	r2,0(r5)
   11db8:	20800015 	stw	r2,0(r4)
	      break;
   11dbc:	003ff306 	br	11d8c <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x14>

00011dc0 <_ZNSt14_Function_baseD1Ev>:
    ~_Function_base()
   11dc0:	defff104 	addi	sp,sp,-60
   11dc4:	00c00074 	movhi	r3,1
   11dc8:	008000b4 	movhi	r2,2
   11dcc:	10a21604 	addi	r2,r2,-30632
   11dd0:	dc000d15 	stw	r16,52(sp)
   11dd4:	18cc3304 	addi	r3,r3,12492
   11dd8:	2021883a 	mov	r16,r4
   11ddc:	d809883a 	mov	r4,sp
   11de0:	d8800715 	stw	r2,28(sp)
   11de4:	dfc00e15 	stw	ra,56(sp)
   11de8:	d8c00615 	stw	r3,24(sp)
   11dec:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
      if (_M_manager)
   11df0:	80800217 	ldw	r2,8(r16)
   11df4:	10000526 	beq	r2,zero,11e0c <_ZNSt14_Function_baseD1Ev+0x4c>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   11df8:	d8000115 	stw	zero,4(sp)
   11dfc:	018000c4 	movi	r6,3
   11e00:	800b883a 	mov	r5,r16
   11e04:	8009883a 	mov	r4,r16
   11e08:	103ee83a 	callr	r2
   11e0c:	d809883a 	mov	r4,sp
   11e10:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
    }
   11e14:	dfc00e17 	ldw	ra,56(sp)
   11e18:	dc000d17 	ldw	r16,52(sp)
   11e1c:	dec00f04 	addi	sp,sp,60
   11e20:	f800283a 	ret

00011e24 <main>:
 * Motor 0 = tilt
 * Motor 1 = pan
 */
int main()
{
	u_tilt[0] = 0.0;	/* corr */
   11e24:	018000b4 	movhi	r6,2
	u_tilt[1] = 1.4;	/* in */
   11e28:	00cfecf4 	movhi	r3,16307
   11e2c:	18ccccc4 	addi	r3,r3,13107
	u_tilt[0] = 0.0;	/* corr */
   11e30:	3027fe15 	stw	zero,-24584(r6)
	u_tilt[1] = 1.4;	/* in */
   11e34:	018000b4 	movhi	r6,2
   11e38:	30e7ff15 	stw	r3,-24580(r6)
	u_tilt[2] = 0.0;	/* position */
   11e3c:	00c000b4 	movhi	r3,2
   11e40:	18280015 	stw	zero,-24576(r3)

	u_pan[0] = 0.0;		/* corr */
	u_pan[1] = 2.9;		/* in */
   11e44:	00900eb4 	movhi	r2,16442
	u_pan[0] = 0.0;		/* corr */
   11e48:	00c000b4 	movhi	r3,2
	u_pan[1] = 2.9;		/* in */
   11e4c:	10a66684 	addi	r2,r2,-26214
	u_pan[0] = 0.0;		/* corr */
   11e50:	1827fa15 	stw	zero,-24600(r3)
	u_pan[2] = 0.0;		/* position */

	pan_model.SetFinishTime(1);
   11e54:	010000b4 	movhi	r4,2
	u_pan[1] = 2.9;		/* in */
   11e58:	00c000b4 	movhi	r3,2
{
   11e5c:	deffff04 	addi	sp,sp,-4
	u_pan[1] = 2.9;		/* in */
   11e60:	18a7fb15 	stw	r2,-24596(r3)
	pan_model.SetFinishTime(1);
   11e64:	014fe034 	movhi	r5,16256
   11e68:	2127c404 	addi	r4,r4,-24816
	u_pan[2] = 0.0;		/* position */
   11e6c:	008000b4 	movhi	r2,2
{
   11e70:	dfc00015 	stw	ra,0(sp)
	u_pan[2] = 0.0;		/* position */
   11e74:	1027fc15 	stw	zero,-24592(r2)
	pan_model.SetFinishTime(1);
   11e78:	00111800 	call	11180 <_ZN22PositionControllerTilt13SetFinishTimeEf>
	tilt_model.SetFinishTime(1);
   11e7c:	010000b4 	movhi	r4,2
   11e80:	014fe034 	movhi	r5,16256
   11e84:	2127df04 	addi	r4,r4,-24708
   11e88:	00111800 	call	11180 <_ZN22PositionControllerTilt13SetFinishTimeEf>

	// Let the motor run to the origin position.
	pan_motor.setSpeedAndDirection(-50);
   11e8c:	010000b4 	movhi	r4,2
   11e90:	017ff384 	movi	r5,-50
   11e94:	21280204 	addi	r4,r4,-24568
   11e98:	00121cc0 	call	121cc <_ZN5Plant5Motor20setSpeedAndDirectionEa>
	tilt_motor.setSpeedAndDirection(-50);
   11e9c:	010000b4 	movhi	r4,2
   11ea0:	017ff384 	movi	r5,-50
   11ea4:	21280c04 	addi	r4,r4,-24528
   11ea8:	00121cc0 	call	121cc <_ZN5Plant5Motor20setSpeedAndDirectionEa>

	usleep(10000);
   11eac:	0109c404 	movi	r4,10000
   11eb0:	0017b1c0 	call	17b1c <usleep>

	timer.enable();
   11eb4:	d1221104 	addi	r4,gp,-30652
   11eb8:	00128a80 	call	128a8 <_ZN5Timer6enableEv>

	while(!tilt_homing_done || !pan_homing_done);
   11ebc:	d0a20c43 	ldbu	r2,-30671(gp)
   11ec0:	10803fcc 	andi	r2,r2,255
   11ec4:	103ffd26 	beq	r2,zero,11ebc <main+0x98>
   11ec8:	d0a20c03 	ldbu	r2,-30672(gp)
   11ecc:	10803fcc 	andi	r2,r2,255
   11ed0:	103ffa26 	beq	r2,zero,11ebc <main+0x98>

	usleep(100000);
   11ed4:	010000b4 	movhi	r4,2
   11ed8:	2121a804 	addi	r4,r4,-31072
   11edc:	0017b1c0 	call	17b1c <usleep>

	pan_model.Initialize(u_pan, y_pan, 0.0);
   11ee0:	014000b4 	movhi	r5,2
   11ee4:	010000b4 	movhi	r4,2
   11ee8:	000f883a 	mov	r7,zero
   11eec:	d1a20d04 	addi	r6,gp,-30668
   11ef0:	2967fa04 	addi	r5,r5,-24600
   11ef4:	2127c404 	addi	r4,r4,-24816
   11ef8:	00118080 	call	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
	tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11efc:	014000b4 	movhi	r5,2
   11f00:	010000b4 	movhi	r4,2
   11f04:	000f883a 	mov	r7,zero
   11f08:	d1a20f04 	addi	r6,gp,-30660
   11f0c:	2967fe04 	addi	r5,r5,-24584
   11f10:	2127df04 	addi	r4,r4,-24708
   11f14:	00118080 	call	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
	float prev_tilt = 0;
	float prev_pan = 0;

	while(1)
	{
		usleep(10000);
   11f18:	0109c404 	movi	r4,10000
   11f1c:	0017b1c0 	call	17b1c <usleep>
	while(1)
   11f20:	003ffd06 	br	11f18 <main+0xf4>

00011f24 <_GLOBAL__sub_I_uart>:
			uart.sendData(message);
		}*/
	}

	return 0;
}
   11f24:	deffea04 	addi	sp,sp,-88
   11f28:	01400074 	movhi	r5,1
   11f2c:	00c000b4 	movhi	r3,2
   11f30:	00800074 	movhi	r2,1
   11f34:	294c3304 	addi	r5,r5,12492
   11f38:	18e21704 	addi	r3,r3,-30628
   11f3c:	10882104 	addi	r2,r2,8324
   11f40:	d9000304 	addi	r4,sp,12
   11f44:	d9400915 	stw	r5,36(sp)
   11f48:	d8c00a15 	stw	r3,40(sp)
   11f4c:	d8800c15 	stw	r2,48(sp)
   11f50:	dfc01515 	stw	ra,84(sp)
   11f54:	df001415 	stw	fp,80(sp)
   11f58:	df000b15 	stw	fp,44(sp)
   11f5c:	dec00d15 	stw	sp,52(sp)
   11f60:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>

	if (_My_handler::_M_not_empty_function(__f))
	  {
	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
	    _M_invoker = &_My_handler::_M_invoke;
	    _M_manager = &_My_handler::_M_manager;
   11f64:	00800074 	movhi	r2,1
   11f68:	10875e04 	addi	r2,r2,7544
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f6c:	01800074 	movhi	r6,1
	    _M_invoker = &_My_handler::_M_invoke;
   11f70:	00c00074 	movhi	r3,1
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f74:	31870304 	addi	r6,r6,7180
	    _M_invoker = &_My_handler::_M_invoke;
   11f78:	18c74704 	addi	r3,r3,7452
	    _M_manager = &_My_handler::_M_manager;
   11f7c:	d8801215 	stw	r2,72(sp)
Serial::UART uart = Serial::UART(handleUartEvent);
   11f80:	d9401004 	addi	r5,sp,64
   11f84:	00800044 	movi	r2,1
   11f88:	d1221144 	addi	r4,gp,-30651
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f8c:	d9801015 	stw	r6,64(sp)
	    _M_invoker = &_My_handler::_M_invoke;
   11f90:	d8c01315 	stw	r3,76(sp)
   11f94:	d8800415 	stw	r2,16(sp)
   11f98:	00125600 	call	12560 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE>
    class function<_Res(_ArgTypes...)>
   11f9c:	d9001004 	addi	r4,sp,64
   11fa0:	0011dc00 	call	11dc0 <_ZNSt14_Function_baseD1Ev>
	    _M_manager = &_My_handler::_M_manager;
   11fa4:	00800074 	movhi	r2,1
   11fa8:	10874c04 	addi	r2,r2,7472
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11fac:	01800074 	movhi	r6,1
	    _M_invoker = &_My_handler::_M_invoke;
   11fb0:	00c00074 	movhi	r3,1
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11fb4:	31869504 	addi	r6,r6,6740
	    _M_invoker = &_My_handler::_M_invoke;
   11fb8:	18c74a04 	addi	r3,r3,7464
	    _M_manager = &_My_handler::_M_manager;
   11fbc:	d8801215 	stw	r2,72(sp)
Timer timer = Timer(handleTimerEvent);
   11fc0:	d9401004 	addi	r5,sp,64
   11fc4:	00800084 	movi	r2,2
   11fc8:	d1221104 	addi	r4,gp,-30652
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11fcc:	d9801015 	stw	r6,64(sp)
	    _M_invoker = &_My_handler::_M_invoke;
   11fd0:	d8c01315 	stw	r3,76(sp)
   11fd4:	d8800415 	stw	r2,16(sp)
   11fd8:	001278c0 	call	1278c <_ZN5TimerC1ESt8functionIFvvEE>
    class function<_Res(_ArgTypes...)>
   11fdc:	d9001004 	addi	r4,sp,64
   11fe0:	0011dc00 	call	11dc0 <_ZNSt14_Function_baseD1Ev>
Plant::Motor tilt_motor = Plant::Motor(MOTOR_PWM_0_SLAVE_1_BASE, MOTOR_PWM_0_SLAVE_2_BASE, PWM_FREQUENCY, QUADRATURE_ENCODER_0_BASE, 2000);
   11fe4:	008000b4 	movhi	r2,2
   11fe8:	00c1f404 	movi	r3,2000
   11fec:	10890004 	addi	r2,r2,9216
   11ff0:	018000b4 	movhi	r6,2
   11ff4:	014000b4 	movhi	r5,2
   11ff8:	010000b4 	movhi	r4,2
   11ffc:	d8c00115 	stw	r3,4(sp)
   12000:	d8800015 	stw	r2,0(sp)
   12004:	01c27104 	movi	r7,2500
   12008:	00bfffc4 	movi	r2,-1
   1200c:	31850004 	addi	r6,r6,5120
   12010:	29470004 	addi	r5,r5,7168
   12014:	21280c04 	addi	r4,r4,-24528
   12018:	d8800415 	stw	r2,16(sp)
   1201c:	00120ec0 	call	120ec <_ZN5Plant5MotorC1Emmmmm>
Plant::Motor pan_motor = Plant::Motor(MOTOR_PWM_1_SLAVE_1_BASE, MOTOR_PWM_1_SLAVE_2_BASE, PWM_FREQUENCY, QUADRATURE_ENCODER_1_BASE, 4915);
   12020:	008000b4 	movhi	r2,2
   12024:	10880004 	addi	r2,r2,8192
   12028:	00c4ccc4 	movi	r3,4915
   1202c:	018000b4 	movhi	r6,2
   12030:	014000b4 	movhi	r5,2
   12034:	010000b4 	movhi	r4,2
   12038:	01c27104 	movi	r7,2500
   1203c:	31840004 	addi	r6,r6,4096
   12040:	29460004 	addi	r5,r5,6144
   12044:	d8c00115 	stw	r3,4(sp)
   12048:	d8800015 	stw	r2,0(sp)
   1204c:	21280204 	addi	r4,r4,-24568
   12050:	00120ec0 	call	120ec <_ZN5Plant5MotorC1Emmmmm>
PositionControllerTilt tilt_model;
   12054:	010000b4 	movhi	r4,2
   12058:	2127df04 	addi	r4,r4,-24708
   1205c:	001144c0 	call	1144c <_ZN22PositionControllerTiltC1Ev>
PositionControllerTilt pan_model;
   12060:	010000b4 	movhi	r4,2
   12064:	2127c404 	addi	r4,r4,-24816
   12068:	001144c0 	call	1144c <_ZN22PositionControllerTiltC1Ev>
   1206c:	d9000304 	addi	r4,sp,12
   12070:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
}
   12074:	dfc01517 	ldw	ra,84(sp)
   12078:	df001417 	ldw	fp,80(sp)
   1207c:	dec01604 	addi	sp,sp,88
   12080:	f800283a 	ret
   12084:	d8c00517 	ldw	r3,20(sp)
   12088:	d8800417 	ldw	r2,16(sp)
   1208c:	d8c00215 	stw	r3,8(sp)
   12090:	1000061e 	bne	r2,zero,120ac <_GLOBAL__sub_I_uart+0x188>
   12094:	d9001004 	addi	r4,sp,64
   12098:	0011dc00 	call	11dc0 <_ZNSt14_Function_baseD1Ev>
   1209c:	d9000217 	ldw	r4,8(sp)
   120a0:	00bfffc4 	movi	r2,-1
   120a4:	d8800415 	stw	r2,16(sp)
   120a8:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>
   120ac:	10bfffc4 	addi	r2,r2,-1
   120b0:	d9001004 	addi	r4,sp,64
   120b4:	10000126 	beq	r2,zero,120bc <_GLOBAL__sub_I_uart+0x198>
   120b8:	003b68fa 	trap	3
   120bc:	003ff606 	br	12098 <_GLOBAL__sub_I_uart+0x174>

000120c0 <_GLOBAL__sub_D_uart>:
PositionControllerTilt pan_model;
   120c0:	010000b4 	movhi	r4,2
}
   120c4:	deffff04 	addi	sp,sp,-4
PositionControllerTilt pan_model;
   120c8:	2127c404 	addi	r4,r4,-24816
}
   120cc:	dfc00015 	stw	ra,0(sp)
PositionControllerTilt pan_model;
   120d0:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
PositionControllerTilt tilt_model;
   120d4:	010000b4 	movhi	r4,2
   120d8:	2127df04 	addi	r4,r4,-24708
   120dc:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
}
   120e0:	dfc00017 	ldw	ra,0(sp)
   120e4:	dec00104 	addi	sp,sp,4
   120e8:	f800283a 	ret

000120ec <_ZN5Plant5MotorC1Emmmmm>:
#include "motor.hpp"

Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   120ec:	defffb04 	addi	sp,sp,-20
		uint32_t base_address_encoder, uint32_t steps_per_revolution) :
	base_address_first_word(base_address_first_word),
	base_address_second_word(base_address_second_word),
	frequency(frequency),
	base_address_encoder(base_address_encoder),
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   120f0:	d8c00517 	ldw	r3,20(sp)
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   120f4:	d8800617 	ldw	r2,24(sp)
   120f8:	dcc00315 	stw	r19,12(sp)
   120fc:	dc800215 	stw	r18,8(sp)
   12100:	dc400115 	stw	r17,4(sp)
   12104:	dc000015 	stw	r16,0(sp)
   12108:	dfc00415 	stw	ra,16(sp)
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   1210c:	20000015 	stw	zero,0(r4)
   12110:	21400115 	stw	r5,4(r4)
   12114:	21800215 	stw	r6,8(r4)
   12118:	21c00315 	stw	r7,12(r4)
   1211c:	20c00415 	stw	r3,16(r4)
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   12120:	2021883a 	mov	r16,r4
   12124:	2823883a 	mov	r17,r5
   12128:	3027883a 	mov	r19,r6
   1212c:	3825883a 	mov	r18,r7
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   12130:	10002016 	blt	r2,zero,121b4 <_ZN5Plant5MotorC1Emmmmm+0xc8>
   12134:	1009feb2 	custom	250,r4,r2,zero
   12138:	00168640 	call	16864 <__extendsfdf2>
   1213c:	01501df4 	movhi	r5,16503
   12140:	100d883a 	mov	r6,r2
   12144:	180f883a 	mov	r7,r3
   12148:	0009883a 	mov	r4,zero
   1214c:	29600004 	addi	r5,r5,-32768
   12150:	00156a00 	call	156a0 <__divdf3>
   12154:	01a894f4 	movhi	r6,41555
   12158:	01cfe4b4 	movhi	r7,16274
   1215c:	31a74e44 	addi	r6,r6,-25287
   12160:	39f7d184 	addi	r7,r7,-8378
   12164:	1009883a 	mov	r4,r2
   12168:	180b883a 	mov	r5,r3
   1216c:	00160b80 	call	160b8 <__muldf3>
   12170:	1009883a 	mov	r4,r2
   12174:	180b883a 	mov	r5,r3
   12178:	00169600 	call	16960 <__truncdfsf2>
   1217c:	80800515 	stw	r2,20(r16)
   12180:	80000615 	stw	zero,24(r16)
   12184:	80000715 	stw	zero,28(r16)
   12188:	80000815 	stw	zero,32(r16)
   1218c:	80000915 	stw	zero,36(r16)
}

void Plant::Motor::disable()
{
	en = 0;
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12190:	98000035 	stwio	zero,0(r19)
	IOWR_32DIRECT(base_address_first_word, 0, frequency);
   12194:	8c800035 	stwio	r18,0(r17)
}
   12198:	dfc00417 	ldw	ra,16(sp)
   1219c:	dcc00317 	ldw	r19,12(sp)
   121a0:	dc800217 	ldw	r18,8(sp)
   121a4:	dc400117 	ldw	r17,4(sp)
   121a8:	dc000017 	ldw	r16,0(sp)
   121ac:	dec00504 	addi	sp,sp,20
   121b0:	f800283a 	ret
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   121b4:	1006d07a 	srli	r3,r2,1
   121b8:	1080004c 	andi	r2,r2,1
   121bc:	10c4b03a 	or	r2,r2,r3
   121c0:	1009feb2 	custom	250,r4,r2,zero
   121c4:	2109ff72 	custom	253,r4,r4,r4
   121c8:	003fdb06 	br	12138 <_ZN5Plant5MotorC1Emmmmm+0x4c>

000121cc <_ZN5Plant5Motor20setSpeedAndDirectionEa>:
	if (percentage == 0)
   121cc:	29803fcc 	andi	r6,r5,255
   121d0:	3180201c 	xori	r6,r6,128
   121d4:	31bfe004 	addi	r6,r6,-128
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   121d8:	22000217 	ldw	r8,8(r4)
	if (percentage == 0)
   121dc:	30003b26 	beq	r6,zero,122cc <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x100>
			const uint32_t base_address_encoder;
			const float radians_per_step;

			uint32_t getSecondWord()
			{
				return (duty_cycle << 16) | (direction << 14) | en << 13;
   121e0:	20800817 	ldw	r2,32(r4)
		percentage = percentage * -1;
   121e4:	2807883a 	mov	r3,r5
   121e8:	100e937a 	slli	r7,r2,13
   121ec:	20800617 	ldw	r2,24(r4)
	if (percentage > 0)
   121f0:	0180270e 	bge	zero,r6,12290 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0xc4>
   121f4:	1004943a 	slli	r2,r2,16
	direction = static_cast<uint32_t>(dir);
   121f8:	01400044 	movi	r5,1
   121fc:	21400715 	stw	r5,28(r4)
   12200:	11c4b03a 	or	r2,r2,r7
   12204:	10900014 	ori	r2,r2,16384
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12208:	40800035 	stwio	r2,0(r8)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   1220c:	20800317 	ldw	r2,12(r4)
   12210:	10002816 	blt	r2,zero,122b4 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0xe8>
   12214:	1005feb2 	custom	250,r2,r2,zero
   12218:	18c03fcc 	andi	r3,r3,255
   1221c:	1807feb2 	custom	250,r3,r3,zero
   12220:	0150b234 	movhi	r5,17096
   12224:	1947fff2 	custom	255,r3,r3,r5
   12228:	10c5ff32 	custom	252,r2,r2,r3
   1222c:	00d3c034 	movhi	r3,20224
   12230:	10c7f932 	custom	228,r3,r2,r3
   12234:	18002d1e 	bne	r3,zero,122ec <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x120>
   12238:	1005fe72 	custom	249,r2,r2,zero
   1223c:	20c00717 	ldw	r3,28(r4)
   12240:	21400817 	ldw	r5,32(r4)
   12244:	100e943a 	slli	r7,r2,16
   12248:	180693ba 	slli	r3,r3,14
   1224c:	280a937a 	slli	r5,r5,13
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12250:	21800217 	ldw	r6,8(r4)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12254:	20800615 	stw	r2,24(r4)
   12258:	1944b03a 	or	r2,r3,r5
   1225c:	11c4b03a 	or	r2,r2,r7
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12260:	30800035 	stwio	r2,0(r6)
   12264:	20800617 	ldw	r2,24(r4)
   12268:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   1226c:	21400217 	ldw	r5,8(r4)
   12270:	1004943a 	slli	r2,r2,16
   12274:	180693ba 	slli	r3,r3,14
	en = 1;
   12278:	01800044 	movi	r6,1
   1227c:	21800815 	stw	r6,32(r4)
   12280:	10c4b03a 	or	r2,r2,r3
   12284:	10880014 	ori	r2,r2,8192
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12288:	28800035 	stwio	r2,0(r5)
}
   1228c:	f800283a 	ret
   12290:	1004943a 	slli	r2,r2,16
	direction = static_cast<uint32_t>(dir);
   12294:	00c00084 	movi	r3,2
   12298:	20c00715 	stw	r3,28(r4)
   1229c:	11c4b03a 	or	r2,r2,r7
   122a0:	10a00014 	ori	r2,r2,32768
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   122a4:	40800035 	stwio	r2,0(r8)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   122a8:	20800317 	ldw	r2,12(r4)
		percentage = percentage * -1;
   122ac:	0147c83a 	sub	r3,zero,r5
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   122b0:	103fd80e 	bge	r2,zero,12214 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x48>
   122b4:	100ad07a 	srli	r5,r2,1
   122b8:	1080004c 	andi	r2,r2,1
   122bc:	1144b03a 	or	r2,r2,r5
   122c0:	1005feb2 	custom	250,r2,r2,zero
   122c4:	1085ff72 	custom	253,r2,r2,r2
   122c8:	003fd306 	br	12218 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x4c>
   122cc:	20800617 	ldw	r2,24(r4)
   122d0:	20c00717 	ldw	r3,28(r4)
	en = 0;
   122d4:	20000815 	stw	zero,32(r4)
   122d8:	1004943a 	slli	r2,r2,16
   122dc:	180693ba 	slli	r3,r3,14
   122e0:	10c4b03a 	or	r2,r2,r3
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   122e4:	40800035 	stwio	r2,0(r8)
		return;
   122e8:	f800283a 	ret
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   122ec:	00d3c034 	movhi	r3,20224
   122f0:	10c5ffb2 	custom	254,r2,r2,r3
   122f4:	1005fe72 	custom	249,r2,r2,zero
   122f8:	10a0003c 	xorhi	r2,r2,32768
   122fc:	003fcf06 	br	1223c <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x70>

00012300 <_ZN5Plant5Motor12setDutyCycleEh>:
   12300:	20800317 	ldw	r2,12(r4)
   12304:	10001a16 	blt	r2,zero,12370 <_ZN5Plant5Motor12setDutyCycleEh+0x70>
   12308:	1005feb2 	custom	250,r2,r2,zero
   1230c:	28c03fcc 	andi	r3,r5,255
   12310:	1807feb2 	custom	250,r3,r3,zero
   12314:	0150b234 	movhi	r5,17096
   12318:	1947fff2 	custom	255,r3,r3,r5
   1231c:	10c5ff32 	custom	252,r2,r2,r3
   12320:	00d3c034 	movhi	r3,20224
   12324:	10c7f932 	custom	228,r3,r2,r3
   12328:	18000c1e 	bne	r3,zero,1235c <_ZN5Plant5Motor12setDutyCycleEh+0x5c>
   1232c:	1005fe72 	custom	249,r2,r2,zero
   12330:	20c00717 	ldw	r3,28(r4)
   12334:	21400817 	ldw	r5,32(r4)
   12338:	100e943a 	slli	r7,r2,16
   1233c:	180693ba 	slli	r3,r3,14
   12340:	280a937a 	slli	r5,r5,13
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12344:	21800217 	ldw	r6,8(r4)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12348:	20800615 	stw	r2,24(r4)
   1234c:	1944b03a 	or	r2,r3,r5
   12350:	11c4b03a 	or	r2,r2,r7
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12354:	30800035 	stwio	r2,0(r6)
}
   12358:	f800283a 	ret
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   1235c:	00d3c034 	movhi	r3,20224
   12360:	10c5ffb2 	custom	254,r2,r2,r3
   12364:	1005fe72 	custom	249,r2,r2,zero
   12368:	10a0003c 	xorhi	r2,r2,32768
   1236c:	003ff006 	br	12330 <_ZN5Plant5Motor12setDutyCycleEh+0x30>
   12370:	1006d07a 	srli	r3,r2,1
   12374:	1080004c 	andi	r2,r2,1
   12378:	10c4b03a 	or	r2,r2,r3
   1237c:	1005feb2 	custom	250,r2,r2,zero
   12380:	1085ff72 	custom	253,r2,r2,r2
   12384:	003fe106 	br	1230c <_ZN5Plant5Motor12setDutyCycleEh+0xc>

00012388 <_ZN5Plant5Motor12setDirectionENS0_9DirectionE>:
   12388:	20800617 	ldw	r2,24(r4)
   1238c:	20c00817 	ldw	r3,32(r4)
	direction = static_cast<uint32_t>(dir);
   12390:	29403fcc 	andi	r5,r5,255
   12394:	1004943a 	slli	r2,r2,16
   12398:	1806937a 	slli	r3,r3,13
   1239c:	280e93ba 	slli	r7,r5,14
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123a0:	21800217 	ldw	r6,8(r4)
   123a4:	10c4b03a 	or	r2,r2,r3
	direction = static_cast<uint32_t>(dir);
   123a8:	21400715 	stw	r5,28(r4)
   123ac:	11c4b03a 	or	r2,r2,r7
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123b0:	30800035 	stwio	r2,0(r6)
}
   123b4:	f800283a 	ret

000123b8 <_ZN5Plant5Motor6enableEv>:
   123b8:	20800617 	ldw	r2,24(r4)
   123bc:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123c0:	21400217 	ldw	r5,8(r4)
   123c4:	1004943a 	slli	r2,r2,16
   123c8:	180693ba 	slli	r3,r3,14
	en = 1;
   123cc:	01800044 	movi	r6,1
   123d0:	21800815 	stw	r6,32(r4)
   123d4:	10c4b03a 	or	r2,r2,r3
   123d8:	10880014 	ori	r2,r2,8192
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123dc:	28800035 	stwio	r2,0(r5)
}
   123e0:	f800283a 	ret

000123e4 <_ZN5Plant5Motor7disableEv>:
   123e4:	20800617 	ldw	r2,24(r4)
   123e8:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123ec:	21400217 	ldw	r5,8(r4)
   123f0:	1004943a 	slli	r2,r2,16
   123f4:	180693ba 	slli	r3,r3,14
	en = 0;
   123f8:	20000815 	stw	zero,32(r4)
   123fc:	10c4b03a 	or	r2,r2,r3
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12400:	28800035 	stwio	r2,0(r5)
}
   12404:	f800283a 	ret

00012408 <_ZN5Plant5Motor8getAngleEv>:
    return (readData() - encoder_start_position) * radians_per_step;
}

int32_t Plant::Motor::readData()
{
	return IORD_32DIRECT(base_address_encoder, 0);
   12408:	20800417 	ldw	r2,16(r4)
   1240c:	10800037 	ldwio	r2,0(r2)
    return (readData() - encoder_start_position) * radians_per_step;
   12410:	21400017 	ldw	r5,0(r4)
   12414:	20c00517 	ldw	r3,20(r4)
   12418:	1145c83a 	sub	r2,r2,r5
   1241c:	1005feb2 	custom	250,r2,r2,zero
}
   12420:	10c5ff32 	custom	252,r2,r2,r3
   12424:	f800283a 	ret

00012428 <_ZN5Plant5Motor8readDataEv>:
	return IORD_32DIRECT(base_address_encoder, 0);
   12428:	20800417 	ldw	r2,16(r4)
}
   1242c:	10800037 	ldwio	r2,0(r2)
   12430:	f800283a 	ret

00012434 <_ZN5Plant5Motor19isAtInitialPositionEv>:
	return IORD_32DIRECT(base_address_encoder, 0);
   12434:	20800417 	ldw	r2,16(r4)

bool Plant::Motor::isAtInitialPosition()
{
   12438:	deffff04 	addi	sp,sp,-4
	return IORD_32DIRECT(base_address_encoder, 0);
   1243c:	10800037 	ldwio	r2,0(r2)
	volatile int32_t value = readData();
   12440:	d8800015 	stw	r2,0(sp)

	if (value != encoder_start_position)
   12444:	d8800017 	ldw	r2,0(sp)
   12448:	20c00017 	ldw	r3,0(r4)
   1244c:	18800626 	beq	r3,r2,12468 <_ZN5Plant5Motor19isAtInitialPositionEv+0x34>
	{
		encoder_start_position = value;
   12450:	d8c00017 	ldw	r3,0(sp)
		occurences = 0;
   12454:	20000915 	stw	zero,36(r4)
	{
		disable();
		return true;
	}

	return false;
   12458:	0005883a 	mov	r2,zero
		encoder_start_position = value;
   1245c:	20c00015 	stw	r3,0(r4)
}
   12460:	dec00104 	addi	sp,sp,4
   12464:	f800283a 	ret
		occurences++;
   12468:	20800917 	ldw	r2,36(r4)
		encoder_start_position = value;
   1246c:	d8c00017 	ldw	r3,0(sp)
		occurences++;
   12470:	10800044 	addi	r2,r2,1
   12474:	20800915 	stw	r2,36(r4)
		encoder_start_position = value;
   12478:	20c00015 	stw	r3,0(r4)
	if (occurences > 500)
   1247c:	10807d70 	cmpltui	r2,r2,501
   12480:	10000b1e 	bne	r2,zero,124b0 <_ZN5Plant5Motor19isAtInitialPositionEv+0x7c>
   12484:	20800617 	ldw	r2,24(r4)
   12488:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   1248c:	21400217 	ldw	r5,8(r4)
   12490:	1004943a 	slli	r2,r2,16
   12494:	180693ba 	slli	r3,r3,14
	en = 0;
   12498:	20000815 	stw	zero,32(r4)
   1249c:	10c4b03a 	or	r2,r2,r3
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   124a0:	28800035 	stwio	r2,0(r5)
		return true;
   124a4:	00800044 	movi	r2,1
}
   124a8:	dec00104 	addi	sp,sp,4
   124ac:	f800283a 	ret
	return false;
   124b0:	0005883a 	mov	r2,zero
   124b4:	003fea06 	br	12460 <_ZN5Plant5Motor19isAtInitialPositionEv+0x2c>

000124b8 <_ZN6Serial4UART10uart_0_isrEPv>:
std::function<void(Serial::message &received_message)> Serial::UART::callback;

void Serial::UART::uart_0_isr(void *)
{
	// Check if the UART buffer is empty or if there are more messages waiting.
	alt_u16 status = IORD_ALTERA_AVALON_UART_STATUS(UART_0_BASE);
   124b8:	008000b4 	movhi	r2,2
   124bc:	108a0a37 	ldwio	r2,10280(r2)

	if(status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
   124c0:	1080200c 	andi	r2,r2,128
   124c4:	10002226 	beq	r2,zero,12550 <_ZN6Serial4UART10uart_0_isrEPv+0x98>
	{
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   124c8:	008000b4 	movhi	r2,2
   124cc:	114a0837 	ldwio	r5,10272(r2)
   124d0:	d0a21183 	ldbu	r2,-30650(gp)
   124d4:	d0e211c4 	addi	r3,gp,-30649
		rx_len ++ ;
   124d8:	11000044 	addi	r4,r2,1
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   124dc:	10803fcc 	andi	r2,r2,255
   124e0:	1887883a 	add	r3,r3,r2

		if (rx_len >= MESSAGE_SIZE)
   124e4:	20803fcc 	andi	r2,r4,255
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   124e8:	19400005 	stb	r5,0(r3)
		rx_len ++ ;
   124ec:	d1221185 	stb	r4,-30650(gp)
		if (rx_len >= MESSAGE_SIZE)
   124f0:	10800130 	cmpltui	r2,r2,4
   124f4:	1000161e 	bne	r2,zero,12550 <_ZN6Serial4UART10uart_0_isrEPv+0x98>
		{
			uart_ready = true;
			rx_len = 0;
   124f8:	d0221185 	stb	zero,-30650(gp)
	if (uart_ready)
	{
		uart_ready = 0;

		message received_message;
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   124fc:	d0e211c3 	ldbu	r3,-30649(gp)
{
   12500:	defffe04 	addi	sp,sp,-8
    bool _M_empty() const { return !_M_manager; }
   12504:	010000b4 	movhi	r4,2
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   12508:	d8c00005 	stb	r3,0(sp)
   1250c:	d0e21203 	ldbu	r3,-30648(gp)
   12510:	21281604 	addi	r4,r4,-24488
  template<typename _Res, typename... _ArgTypes>
    _Res
    function<_Res(_ArgTypes...)>::
    operator()(_ArgTypes... __args) const
    {
      if (_M_empty())
   12514:	20800217 	ldw	r2,8(r4)
   12518:	d8c00045 	stb	r3,1(sp)
   1251c:	d0e21243 	ldbu	r3,-30647(gp)
{
   12520:	dfc00115 	stw	ra,4(sp)
		uart_ready = 0;
   12524:	d02212c5 	stb	zero,-30645(gp)
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   12528:	d8c00085 	stb	r3,2(sp)
   1252c:	d0e21283 	ldbu	r3,-30646(gp)
   12530:	d8c000c5 	stb	r3,3(sp)
   12534:	10000926 	beq	r2,zero,1255c <_ZN6Serial4UART10uart_0_isrEPv+0xa4>
	__throw_bad_function_call();
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   12538:	20800317 	ldw	r2,12(r4)
   1253c:	d80b883a 	mov	r5,sp
   12540:	103ee83a 	callr	r2

		callback(received_message);
	}
}
   12544:	dfc00117 	ldw	ra,4(sp)
   12548:	dec00204 	addi	sp,sp,8
   1254c:	f800283a 	ret
	if (uart_ready)
   12550:	d0a212c3 	ldbu	r2,-30645(gp)
   12554:	103fe91e 	bne	r2,zero,124fc <_ZN6Serial4UART10uart_0_isrEPv+0x44>
   12558:	f800283a 	ret
	__throw_bad_function_call();
   1255c:	0014aa00 	call	14aa0 <_ZSt25__throw_bad_function_callv>

00012560 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE>:

Serial::UART::UART(std::function<void(Serial::message &received_message)> func)
   12560:	deffeb04 	addi	sp,sp,-84
   12564:	01800074 	movhi	r6,1
   12568:	00c000b4 	movhi	r3,2
   1256c:	00800074 	movhi	r2,1
   12570:	18e21904 	addi	r3,r3,-30620
   12574:	1089a804 	addi	r2,r2,9888
   12578:	318c3304 	addi	r6,r6,12492
   1257c:	d9000204 	addi	r4,sp,8
   12580:	d8c00915 	stw	r3,36(sp)
   12584:	d8800b15 	stw	r2,44(sp)
   12588:	dfc01415 	stw	ra,80(sp)
   1258c:	df001315 	stw	fp,76(sp)
   12590:	d9400115 	stw	r5,4(sp)
   12594:	d9800815 	stw	r6,32(sp)
   12598:	df000a15 	stw	fp,40(sp)
   1259c:	dec00c15 	stw	sp,48(sp)
   125a0:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   125a4:	d8800117 	ldw	r2,4(sp)
    _Function_base() : _M_manager(nullptr) { }
   125a8:	d8001115 	stw	zero,68(sp)
    bool _M_empty() const { return !_M_manager; }
   125ac:	10c00217 	ldw	r3,8(r2)
      if (static_cast<bool>(__x))
   125b0:	18003926 	beq	r3,zero,12698 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0x138>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   125b4:	d9400117 	ldw	r5,4(sp)
   125b8:	00800044 	movi	r2,1
   125bc:	d8800315 	stw	r2,12(sp)
   125c0:	01800084 	movi	r6,2
   125c4:	d9000f04 	addi	r4,sp,60
   125c8:	183ee83a 	callr	r3
	  _M_invoker = __x._M_invoker;
   125cc:	d8800117 	ldw	r2,4(sp)
   125d0:	11000317 	ldw	r4,12(r2)
	  _M_manager = __x._M_manager;
   125d4:	10c00217 	ldw	r3,8(r2)
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
      __a = _GLIBCXX_MOVE(__b);
   125d8:	008000b4 	movhi	r2,2
   125dc:	10a81604 	addi	r2,r2,-24488
      __b = _GLIBCXX_MOVE(__tmp);
   125e0:	dac00f17 	ldw	r11,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   125e4:	014000b4 	movhi	r5,2
   125e8:	2a681617 	ldw	r9,-24488(r5)
   125ec:	12000117 	ldw	r8,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   125f0:	d9801017 	ldw	r6,64(sp)
      __a = _GLIBCXX_MOVE(__b);
   125f4:	11c00217 	ldw	r7,8(r2)
   125f8:	11400317 	ldw	r5,12(r2)
      __b = _GLIBCXX_MOVE(__tmp);
   125fc:	028000b4 	movhi	r10,2
   12600:	52e81615 	stw	r11,-24488(r10)
      __a = _GLIBCXX_MOVE(__b);
   12604:	da400f15 	stw	r9,60(sp)
   12608:	da001015 	stw	r8,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   1260c:	11800115 	stw	r6,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   12610:	d9c01115 	stw	r7,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12614:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   12618:	d9401215 	stw	r5,72(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   1261c:	11000315 	stw	r4,12(r2)
      if (_M_manager)
   12620:	38000526 	beq	r7,zero,12638 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0xd8>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   12624:	d9400f04 	addi	r5,sp,60
   12628:	d8000315 	stw	zero,12(sp)
   1262c:	018000c4 	movi	r6,3
   12630:	2809883a 	mov	r4,r5
   12634:	383ee83a 	callr	r7
{
	callback = func;

	// Clear status flag.
	IOWR_ALTERA_AVALON_UART_STATUS(UART_0_BASE, 0x00);
   12638:	008000b4 	movhi	r2,2
   1263c:	100a0a35 	stwio	zero,10280(r2)

	// Read the useless value in the empty receive register.
	IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   12640:	108a0837 	ldwio	r2,10272(r2)

	// Setup RX IRQ routine.
	alt_u16 control = ALTERA_AVALON_UART_CONTROL_RRDY_MSK | ALTERA_AVALON_UART_CONTROL_E_MSK;
	IOWR_ALTERA_AVALON_UART_CONTROL (UART_0_BASE, control);
   12644:	00c06004 	movi	r3,384
   12648:	008000b4 	movhi	r2,2
   1264c:	10ca0b35 	stwio	r3,10284(r2)

	// Install IRQ service routine.
    alt_ic_isr_register(UART_0_IRQ_INTERRUPT_CONTROLLER_ID, UART_0_IRQ, uart_0_isr, NULL, NULL);
   12650:	01800074 	movhi	r6,1
   12654:	d8000015 	stw	zero,0(sp)
   12658:	000f883a 	mov	r7,zero
   1265c:	31892e04 	addi	r6,r6,9400
   12660:	01400104 	movi	r5,4
   12664:	0009883a 	mov	r4,zero
   12668:	00bfffc4 	movi	r2,-1
   1266c:	d8800315 	stw	r2,12(sp)
   12670:	00177fc0 	call	177fc <alt_ic_isr_register>

    // Enable interrupt.
	IOWR_ALTERA_AVALON_UART_CONTROL(UART_0_BASE, ALTERA_AVALON_UART_CONTROL_RRDY_MSK);
   12674:	00c02004 	movi	r3,128
   12678:	008000b4 	movhi	r2,2
   1267c:	10ca0b35 	stwio	r3,10284(r2)
   12680:	d9000204 	addi	r4,sp,8
   12684:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
}
   12688:	dfc01417 	ldw	ra,80(sp)
   1268c:	df001317 	ldw	fp,76(sp)
   12690:	dec01504 	addi	sp,sp,84
   12694:	f800283a 	ret
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12698:	d9001217 	ldw	r4,72(sp)
   1269c:	003fce06 	br	125d8 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0x78>
    : _Function_base()
   126a0:	d8800417 	ldw	r2,16(sp)
   126a4:	d8c00f04 	addi	r3,sp,60
   126a8:	1809883a 	mov	r4,r3
   126ac:	d8800115 	stw	r2,4(sp)
   126b0:	0011dc00 	call	11dc0 <_ZNSt14_Function_baseD1Ev>
   126b4:	d9000117 	ldw	r4,4(sp)
   126b8:	00bfffc4 	movi	r2,-1
   126bc:	d8800315 	stw	r2,12(sp)
   126c0:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

000126c4 <_ZN6Serial4UART8sendDataENS_7messageE>:


void Serial::UART::sendData(message msg)
{
   126c4:	defffd04 	addi	sp,sp,-12
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   126c8:	d9400115 	stw	r5,4(sp)
    std::copy(
            reinterpret_cast<uint8_t *>(&msg),
            reinterpret_cast<uint8_t *>(&msg) + 4,
            &temp[0]
    );
    return temp;
   126cc:	d9400215 	stw	r5,8(sp)
	std::array<uint8_t, 4> data	= convertToArray(msg);
   126d0:	d9400015 	stw	r5,0(sp)
	for (uint8_t data_byte : data)
   126d4:	d807883a 	mov	r3,sp
   126d8:	d9400104 	addi	r5,sp,4
   126dc:	19000003 	ldbu	r4,0(r3)
		alt_u8 status = IORD_ALTERA_AVALON_UART_STATUS (UART_0_BASE);
   126e0:	008000b4 	movhi	r2,2
   126e4:	108a0a37 	ldwio	r2,10280(r2)
		while (! (status & ALTERA_AVALON_UART_STATUS_TRDY_MSK))
   126e8:	1080100c 	andi	r2,r2,64
   126ec:	103ffc26 	beq	r2,zero,126e0 <_ZN6Serial4UART8sendDataENS_7messageE+0x1c>
		IOWR_ALTERA_AVALON_UART_TXDATA(UART_0_BASE, data_byte);
   126f0:	20803fcc 	andi	r2,r4,255
   126f4:	010000b4 	movhi	r4,2
   126f8:	208a0935 	stwio	r2,10276(r4)
	for (uint8_t data_byte : data)
   126fc:	18c00044 	addi	r3,r3,1
   12700:	197ff61e 	bne	r3,r5,126dc <_ZN6Serial4UART8sendDataENS_7messageE+0x18>
}
   12704:	dec00304 	addi	sp,sp,12
   12708:	f800283a 	ret

0001270c <_ZN6Serial4UART14convertToArrayENS_7messageE>:
{
   1270c:	defffd04 	addi	sp,sp,-12
    return temp;
   12710:	d9400215 	stw	r5,8(sp)
   12714:	d9000243 	ldbu	r4,9(sp)
   12718:	d8c00283 	ldbu	r3,10(sp)
   1271c:	d88002c3 	ldbu	r2,11(sp)
   12720:	2008923a 	slli	r4,r4,8
   12724:	1806943a 	slli	r3,r3,16
   12728:	1004963a 	slli	r2,r2,24
   1272c:	29403fcc 	andi	r5,r5,255
   12730:	290ab03a 	or	r5,r5,r4
   12734:	28cab03a 	or	r5,r5,r3
}
   12738:	2884b03a 	or	r2,r5,r2
   1273c:	dec00304 	addi	sp,sp,12
   12740:	f800283a 	ret

00012744 <_GLOBAL__sub_I__ZN6Serial4UART10uart_readyE>:
    _Function_base() : _M_manager(nullptr) { }
   12744:	008000b4 	movhi	r2,2
   12748:	10281815 	stw	zero,-24480(r2)
   1274c:	f800283a 	ret

00012750 <_GLOBAL__sub_D__ZN6Serial4UART10uart_readyE>:
    class function<_Res(_ArgTypes...)>
   12750:	010000b4 	movhi	r4,2
   12754:	21281604 	addi	r4,r4,-24488
   12758:	0011dc01 	jmpi	11dc0 <_ZNSt14_Function_baseD1Ev>

0001275c <_ZN5Timer11timer_0_isrEPv>:
std::function<void()> Timer::callback;

void Timer::timer_0_isr(void* timer_isr_context)
{
    // Answer interrupt, clear STATUS register.
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE,
   1275c:	00ffff84 	movi	r3,-2
   12760:	008000b4 	movhi	r2,2
   12764:	10ca0035 	stwio	r3,10240(r2)
    bool _M_empty() const { return !_M_manager; }
   12768:	010000b4 	movhi	r4,2
   1276c:	21281a04 	addi	r4,r4,-24472
      if (_M_empty())
   12770:	20800217 	ldw	r2,8(r4)
   12774:	10000226 	beq	r2,zero,12780 <_ZN5Timer11timer_0_isrEPv+0x24>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   12778:	20800317 	ldw	r2,12(r4)
   1277c:	1000683a 	jmp	r2
{
   12780:	deffff04 	addi	sp,sp,-4
   12784:	dfc00015 	stw	ra,0(sp)
	__throw_bad_function_call();
   12788:	0014aa00 	call	14aa0 <_ZSt25__throw_bad_function_callv>

0001278c <_ZN5TimerC1ESt8functionIFvvEE>:

	// Call callback.
	callback();
}

Timer::Timer(std::function<void ()> func)
   1278c:	deffec04 	addi	sp,sp,-80
   12790:	01800074 	movhi	r6,1
   12794:	00c000b4 	movhi	r3,2
   12798:	00800074 	movhi	r2,1
   1279c:	18e21a84 	addi	r3,r3,-30614
   127a0:	108a2104 	addi	r2,r2,10372
   127a4:	318c3304 	addi	r6,r6,12492
   127a8:	d9000104 	addi	r4,sp,4
   127ac:	d8c00815 	stw	r3,32(sp)
   127b0:	d8800a15 	stw	r2,40(sp)
   127b4:	dfc01315 	stw	ra,76(sp)
   127b8:	df001215 	stw	fp,72(sp)
   127bc:	d9400015 	stw	r5,0(sp)
   127c0:	d9800715 	stw	r6,28(sp)
   127c4:	df000915 	stw	fp,36(sp)
   127c8:	dec00b15 	stw	sp,44(sp)
   127cc:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   127d0:	d8800017 	ldw	r2,0(sp)
    _Function_base() : _M_manager(nullptr) { }
   127d4:	d8001015 	stw	zero,64(sp)
    bool _M_empty() const { return !_M_manager; }
   127d8:	10c00217 	ldw	r3,8(r2)
      if (static_cast<bool>(__x))
   127dc:	18002726 	beq	r3,zero,1287c <_ZN5TimerC1ESt8functionIFvvEE+0xf0>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   127e0:	d9400017 	ldw	r5,0(sp)
   127e4:	00800044 	movi	r2,1
   127e8:	d8800215 	stw	r2,8(sp)
   127ec:	01800084 	movi	r6,2
   127f0:	d9000e04 	addi	r4,sp,56
   127f4:	183ee83a 	callr	r3
	  _M_invoker = __x._M_invoker;
   127f8:	d8800017 	ldw	r2,0(sp)
   127fc:	11000317 	ldw	r4,12(r2)
	  _M_manager = __x._M_manager;
   12800:	10c00217 	ldw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   12804:	008000b4 	movhi	r2,2
   12808:	10a81a04 	addi	r2,r2,-24472
      __b = _GLIBCXX_MOVE(__tmp);
   1280c:	dac00e17 	ldw	r11,56(sp)
      __a = _GLIBCXX_MOVE(__b);
   12810:	014000b4 	movhi	r5,2
   12814:	2a681a17 	ldw	r9,-24472(r5)
   12818:	12000117 	ldw	r8,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   1281c:	d9800f17 	ldw	r6,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   12820:	11c00217 	ldw	r7,8(r2)
   12824:	11400317 	ldw	r5,12(r2)
      __b = _GLIBCXX_MOVE(__tmp);
   12828:	028000b4 	movhi	r10,2
   1282c:	52e81a15 	stw	r11,-24472(r10)
      __a = _GLIBCXX_MOVE(__b);
   12830:	da400e15 	stw	r9,56(sp)
   12834:	da000f15 	stw	r8,60(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12838:	11800115 	stw	r6,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   1283c:	d9c01015 	stw	r7,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12840:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   12844:	d9401115 	stw	r5,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12848:	11000315 	stw	r4,12(r2)
      if (_M_manager)
   1284c:	38000526 	beq	r7,zero,12864 <_ZN5TimerC1ESt8functionIFvvEE+0xd8>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   12850:	d9400e04 	addi	r5,sp,56
   12854:	d8000215 	stw	zero,8(sp)
   12858:	018000c4 	movi	r6,3
   1285c:	2809883a 	mov	r4,r5
   12860:	383ee83a 	callr	r7
   12864:	d9000104 	addi	r4,sp,4
   12868:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
{
	callback = func;
}
   1286c:	dfc01317 	ldw	ra,76(sp)
   12870:	df001217 	ldw	fp,72(sp)
   12874:	dec01404 	addi	sp,sp,80
   12878:	f800283a 	ret
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   1287c:	d9001117 	ldw	r4,68(sp)
   12880:	003fe006 	br	12804 <_ZN5TimerC1ESt8functionIFvvEE+0x78>
    : _Function_base()
   12884:	d8800317 	ldw	r2,12(sp)
   12888:	d8c00e04 	addi	r3,sp,56
   1288c:	1809883a 	mov	r4,r3
   12890:	d8800015 	stw	r2,0(sp)
   12894:	0011dc00 	call	11dc0 <_ZNSt14_Function_baseD1Ev>
   12898:	d9000017 	ldw	r4,0(sp)
   1289c:	00bfffc4 	movi	r2,-1
   128a0:	d8800215 	stw	r2,8(sp)
   128a4:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

000128a8 <_ZN5Timer6enableEv>:

void Timer::enable()
{
   128a8:	defffe04 	addi	sp,sp,-8
   128ac:	dfc00115 	stw	ra,4(sp)
	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE,
   128b0:	00c001c4 	movi	r3,7
   128b4:	008000b4 	movhi	r2,2
   128b8:	10ca0135 	stwio	r3,10244(r2)
		ALTERA_AVALON_TIMER_CONTROL_CONT_MSK  | // CONT  = 1
		ALTERA_AVALON_TIMER_CONTROL_ITO_MSK);   // ITO   = 1

	void* isr_context_ptr = (void*) &timer_isr_context;

	alt_ic_isr_register(
   128bc:	01800074 	movhi	r6,1
   128c0:	d8000015 	stw	zero,0(sp)
   128c4:	d1e21304 	addi	r7,gp,-30644
   128c8:	3189d704 	addi	r6,r6,10076
   128cc:	014000c4 	movi	r5,3
   128d0:	0009883a 	mov	r4,zero
   128d4:	00177fc0 	call	177fc <alt_ic_isr_register>
		TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, // interrupt controller label, copied from system.h
		TIMER_0_IRQ, // hardware interrupt number, copied from system.h
		timer_0_isr, // interrupt service subfunction
		isr_context_ptr, // points to the data structure related to the device driver instance
		0x0); // flags, reserved unused
}
   128d8:	dfc00117 	ldw	ra,4(sp)
   128dc:	dec00204 	addi	sp,sp,8
   128e0:	f800283a 	ret

000128e4 <_GLOBAL__sub_I__ZN5Timer17timer_isr_contextE>:
    _Function_base() : _M_manager(nullptr) { }
   128e4:	008000b4 	movhi	r2,2
   128e8:	10281c15 	stw	zero,-24464(r2)
   128ec:	f800283a 	ret

000128f0 <_GLOBAL__sub_D__ZN5Timer17timer_isr_contextE>:
    class function<_Res(_ArgTypes...)>
   128f0:	010000b4 	movhi	r4,2
   128f4:	21281a04 	addi	r4,r4,-24472
   128f8:	0011dc01 	jmpi	11dc0 <_ZNSt14_Function_baseD1Ev>

000128fc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   128fc:	20800017 	ldw	r2,0(r4)
   12900:	defffa04 	addi	sp,sp,-24
   12904:	dc000415 	stw	r16,16(sp)
   12908:	10800617 	ldw	r2,24(r2)
   1290c:	3021883a 	mov	r16,r6
   12910:	31800017 	ldw	r6,0(r6)
   12914:	00c00404 	movi	r3,16
   12918:	dfc00515 	stw	ra,20(sp)
   1291c:	d8000015 	stw	zero,0(sp)
   12920:	d8000115 	stw	zero,4(sp)
   12924:	d8c00215 	stw	r3,8(sp)
   12928:	d8000315 	stw	zero,12(sp)
   1292c:	d80f883a 	mov	r7,sp
   12930:	103ee83a 	callr	r2
   12934:	d8800117 	ldw	r2,4(sp)
   12938:	1080018c 	andi	r2,r2,6
   1293c:	10800198 	cmpnei	r2,r2,6
   12940:	1000071e 	bne	r2,zero,12960 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
   12944:	d8c00017 	ldw	r3,0(sp)
   12948:	00800044 	movi	r2,1
   1294c:	80c00015 	stw	r3,0(r16)
   12950:	dfc00517 	ldw	ra,20(sp)
   12954:	dc000417 	ldw	r16,16(sp)
   12958:	dec00604 	addi	sp,sp,24
   1295c:	f800283a 	ret
   12960:	0005883a 	mov	r2,zero
   12964:	dfc00517 	ldw	ra,20(sp)
   12968:	dc000417 	ldw	r16,16(sp)
   1296c:	dec00604 	addi	sp,sp,24
   12970:	f800283a 	ret

00012974 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
   12974:	d8c00017 	ldw	r3,0(sp)
   12978:	00800044 	movi	r2,1
   1297c:	19800126 	beq	r3,r6,12984 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
   12980:	f800283a 	ret
   12984:	00800184 	movi	r2,6
   12988:	f800283a 	ret

0001298c <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   1298c:	008000b4 	movhi	r2,2
   12990:	10a29c04 	addi	r2,r2,-30096
   12994:	20800015 	stw	r2,0(r4)
   12998:	00140001 	jmpi	14000 <_ZNSt9type_infoD1Ev>

0001299c <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   1299c:	defffe04 	addi	sp,sp,-8
   129a0:	008000b4 	movhi	r2,2
   129a4:	dc000015 	stw	r16,0(sp)
   129a8:	dfc00115 	stw	ra,4(sp)
   129ac:	10a29c04 	addi	r2,r2,-30096
   129b0:	20800015 	stw	r2,0(r4)
   129b4:	2021883a 	mov	r16,r4
   129b8:	00140000 	call	14000 <_ZNSt9type_infoD1Ev>
   129bc:	01400204 	movi	r5,8
   129c0:	8009883a 	mov	r4,r16
   129c4:	dfc00117 	ldw	ra,4(sp)
   129c8:	dc000017 	ldw	r16,0(sp)
   129cc:	dec00204 	addi	sp,sp,8
   129d0:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000129d4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
   129d4:	21000117 	ldw	r4,4(r4)
   129d8:	29400117 	ldw	r5,4(r5)
   129dc:	defffd04 	addi	sp,sp,-12
   129e0:	dc400115 	stw	r17,4(sp)
   129e4:	dc000015 	stw	r16,0(sp)
   129e8:	dfc00215 	stw	ra,8(sp)
   129ec:	3023883a 	mov	r17,r6
   129f0:	3821883a 	mov	r16,r7
   129f4:	21400526 	beq	r4,r5,12a0c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
   129f8:	20800007 	ldb	r2,0(r4)
   129fc:	10800aa0 	cmpeqi	r2,r2,42
   12a00:	10000d1e 	bne	r2,zero,12a38 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   12a04:	001779c0 	call	1779c <strcmp>
   12a08:	10000b1e 	bne	r2,zero,12a38 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   12a0c:	00800204 	movi	r2,8
   12a10:	80800315 	stw	r2,12(r16)
   12a14:	00800184 	movi	r2,6
   12a18:	80800115 	stw	r2,4(r16)
   12a1c:	84400015 	stw	r17,0(r16)
   12a20:	00800044 	movi	r2,1
   12a24:	dfc00217 	ldw	ra,8(sp)
   12a28:	dc400117 	ldw	r17,4(sp)
   12a2c:	dc000017 	ldw	r16,0(sp)
   12a30:	dec00304 	addi	sp,sp,12
   12a34:	f800283a 	ret
   12a38:	0005883a 	mov	r2,zero
   12a3c:	003ff906 	br	12a24 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>

00012a40 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
   12a40:	defffb04 	addi	sp,sp,-20
   12a44:	dc800315 	stw	r18,12(sp)
   12a48:	dc400215 	stw	r17,8(sp)
   12a4c:	2025883a 	mov	r18,r4
   12a50:	2823883a 	mov	r17,r5
   12a54:	21000117 	ldw	r4,4(r4)
   12a58:	29400117 	ldw	r5,4(r5)
   12a5c:	dfc00415 	stw	ra,16(sp)
   12a60:	dc000115 	stw	r16,4(sp)
   12a64:	21400826 	beq	r4,r5,12a88 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x48>
   12a68:	20800007 	ldb	r2,0(r4)
   12a6c:	3821883a 	mov	r16,r7
   12a70:	10800aa0 	cmpeqi	r2,r2,42
   12a74:	10000b1e 	bne	r2,zero,12aa4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12a78:	d9800015 	stw	r6,0(sp)
   12a7c:	001779c0 	call	1779c <strcmp>
   12a80:	d9800017 	ldw	r6,0(sp)
   12a84:	1000071e 	bne	r2,zero,12aa4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12a88:	00800044 	movi	r2,1
   12a8c:	dfc00417 	ldw	ra,16(sp)
   12a90:	dc800317 	ldw	r18,12(sp)
   12a94:	dc400217 	ldw	r17,8(sp)
   12a98:	dc000117 	ldw	r16,4(sp)
   12a9c:	dec00504 	addi	sp,sp,20
   12aa0:	f800283a 	ret
   12aa4:	81c00128 	cmpgeui	r7,r16,4
   12aa8:	38000a1e 	bne	r7,zero,12ad4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x94>
   12aac:	88800017 	ldw	r2,0(r17)
   12ab0:	900b883a 	mov	r5,r18
   12ab4:	8809883a 	mov	r4,r17
   12ab8:	10800517 	ldw	r2,20(r2)
   12abc:	dfc00417 	ldw	ra,16(sp)
   12ac0:	dc800317 	ldw	r18,12(sp)
   12ac4:	dc400217 	ldw	r17,8(sp)
   12ac8:	dc000117 	ldw	r16,4(sp)
   12acc:	dec00504 	addi	sp,sp,20
   12ad0:	1000683a 	jmp	r2
   12ad4:	0005883a 	mov	r2,zero
   12ad8:	003fec06 	br	12a8c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x4c>

00012adc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
   12adc:	defffa04 	addi	sp,sp,-24
   12ae0:	dc400315 	stw	r17,12(sp)
   12ae4:	d8800817 	ldw	r2,32(sp)
   12ae8:	dc400617 	ldw	r17,24(sp)
   12aec:	dc800415 	stw	r18,16(sp)
   12af0:	dc000215 	stw	r16,8(sp)
   12af4:	dfc00515 	stw	ra,20(sp)
   12af8:	dc800917 	ldw	r18,36(sp)
   12afc:	21000117 	ldw	r4,4(r4)
   12b00:	3021883a 	mov	r16,r6
   12b04:	88801226 	beq	r17,r2,12b50 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x74>
   12b08:	39400117 	ldw	r5,4(r7)
   12b0c:	21400526 	beq	r4,r5,12b24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12b10:	20800007 	ldb	r2,0(r4)
   12b14:	10800aa0 	cmpeqi	r2,r2,42
   12b18:	1000061e 	bne	r2,zero,12b34 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12b1c:	001779c0 	call	1779c <strcmp>
   12b20:	1000041e 	bne	r2,zero,12b34 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12b24:	00800044 	movi	r2,1
   12b28:	94400015 	stw	r17,0(r18)
   12b2c:	94000115 	stw	r16,4(r18)
   12b30:	90800315 	stw	r2,12(r18)
   12b34:	0005883a 	mov	r2,zero
   12b38:	dfc00517 	ldw	ra,20(sp)
   12b3c:	dc800417 	ldw	r18,16(sp)
   12b40:	dc400317 	ldw	r17,12(sp)
   12b44:	dc000217 	ldw	r16,8(sp)
   12b48:	dec00604 	addi	sp,sp,24
   12b4c:	f800283a 	ret
   12b50:	d8800717 	ldw	r2,28(sp)
   12b54:	11400117 	ldw	r5,4(r2)
   12b58:	21400f26 	beq	r4,r5,12b98 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12b5c:	20800007 	ldb	r2,0(r4)
   12b60:	10800aa0 	cmpeqi	r2,r2,42
   12b64:	1000091e 	bne	r2,zero,12b8c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
   12b68:	d9c00115 	stw	r7,4(sp)
   12b6c:	d9000015 	stw	r4,0(sp)
   12b70:	001779c0 	call	1779c <strcmp>
   12b74:	d9000017 	ldw	r4,0(sp)
   12b78:	d9c00117 	ldw	r7,4(sp)
   12b7c:	10000626 	beq	r2,zero,12b98 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12b80:	39400117 	ldw	r5,4(r7)
   12b84:	217fe51e 	bne	r4,r5,12b1c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x40>
   12b88:	003fe606 	br	12b24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12b8c:	38800117 	ldw	r2,4(r7)
   12b90:	20bfe81e 	bne	r4,r2,12b34 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12b94:	003fe306 	br	12b24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12b98:	94000215 	stw	r16,8(r18)
   12b9c:	003fe506 	br	12b34 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>

00012ba0 <_ZdlPvj>:
   12ba0:	0014ad41 	jmpi	14ad4 <_ZdlPv>

00012ba4 <_ZdaPv>:
   12ba4:	0014ad41 	jmpi	14ad4 <_ZdlPv>

00012ba8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
   12ba8:	28800017 	ldw	r2,0(r5)
   12bac:	30c00017 	ldw	r3,0(r6)
   12bb0:	defffb04 	addi	sp,sp,-20
   12bb4:	10800217 	ldw	r2,8(r2)
   12bb8:	dc800315 	stw	r18,12(sp)
   12bbc:	dc400215 	stw	r17,8(sp)
   12bc0:	dc000115 	stw	r16,4(sp)
   12bc4:	dfc00415 	stw	ra,16(sp)
   12bc8:	2023883a 	mov	r17,r4
   12bcc:	d8c00015 	stw	r3,0(sp)
   12bd0:	2809883a 	mov	r4,r5
   12bd4:	2821883a 	mov	r16,r5
   12bd8:	3025883a 	mov	r18,r6
   12bdc:	103ee83a 	callr	r2
   12be0:	10803fcc 	andi	r2,r2,255
   12be4:	10000326 	beq	r2,zero,12bf4 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
   12be8:	d8800017 	ldw	r2,0(sp)
   12bec:	10800017 	ldw	r2,0(r2)
   12bf0:	d8800015 	stw	r2,0(sp)
   12bf4:	88800017 	ldw	r2,0(r17)
   12bf8:	01c00044 	movi	r7,1
   12bfc:	d80d883a 	mov	r6,sp
   12c00:	10800417 	ldw	r2,16(r2)
   12c04:	800b883a 	mov	r5,r16
   12c08:	8809883a 	mov	r4,r17
   12c0c:	103ee83a 	callr	r2
   12c10:	10c03fcc 	andi	r3,r2,255
   12c14:	18000226 	beq	r3,zero,12c20 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x78>
   12c18:	d8c00017 	ldw	r3,0(sp)
   12c1c:	90c00015 	stw	r3,0(r18)
   12c20:	dfc00417 	ldw	ra,16(sp)
   12c24:	dc800317 	ldw	r18,12(sp)
   12c28:	dc400217 	ldw	r17,8(sp)
   12c2c:	dc000117 	ldw	r16,4(sp)
   12c30:	dec00504 	addi	sp,sp,20
   12c34:	f800283a 	ret

00012c38 <_ZL28read_encoded_value_with_basehjPKhPj>:
   12c38:	20803fcc 	andi	r2,r4,255
   12c3c:	10801418 	cmpnei	r2,r2,80
   12c40:	10002c26 	beq	r2,zero,12cf4 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
   12c44:	208003cc 	andi	r2,r4,15
   12c48:	10c00368 	cmpgeui	r3,r2,13
   12c4c:	1800711e 	bne	r3,zero,12e14 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
   12c50:	100490ba 	slli	r2,r2,2
   12c54:	00c00074 	movhi	r3,1
   12c58:	10c7883a 	add	r3,r2,r3
   12c5c:	188b1917 	ldw	r2,11364(r3)
   12c60:	1000683a 	jmp	r2
   12c64:	00012c98 	cmpnei	zero,zero,1202
   12c68:	00012d88 	cmpgei	zero,zero,1206
   12c6c:	00012d4c 	andi	zero,zero,1205
   12c70:	00012c98 	cmpnei	zero,zero,1202
   12c74:	00012d1c 	xori	zero,zero,1204
   12c78:	00012e14 	movui	zero,1208
   12c7c:	00012e14 	movui	zero,1208
   12c80:	00012e14 	movui	zero,1208
   12c84:	00012e14 	movui	zero,1208
   12c88:	00012dc0 	call	12dc <__alt_mem_onchip_mem-0xed24>
   12c8c:	00012d64 	muli	zero,zero,1205
   12c90:	00012c98 	cmpnei	zero,zero,1202
   12c94:	00012d1c 	xori	zero,zero,1204
   12c98:	32000043 	ldbu	r8,1(r6)
   12c9c:	30800083 	ldbu	r2,2(r6)
   12ca0:	30c000c3 	ldbu	r3,3(r6)
   12ca4:	32400003 	ldbu	r9,0(r6)
   12ca8:	4010923a 	slli	r8,r8,8
   12cac:	1004943a 	slli	r2,r2,16
   12cb0:	1806963a 	slli	r3,r3,24
   12cb4:	4250b03a 	or	r8,r8,r9
   12cb8:	1204b03a 	or	r2,r2,r8
   12cbc:	1886b03a 	or	r3,r3,r2
   12cc0:	30800104 	addi	r2,r6,4
   12cc4:	18000926 	beq	r3,zero,12cec <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
   12cc8:	22001c0c 	andi	r8,r4,112
   12ccc:	42000418 	cmpnei	r8,r8,16
   12cd0:	4000011e 	bne	r8,zero,12cd8 <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
   12cd4:	300b883a 	mov	r5,r6
   12cd8:	21003fcc 	andi	r4,r4,255
   12cdc:	2100201c 	xori	r4,r4,128
   12ce0:	213fe004 	addi	r4,r4,-128
   12ce4:	1947883a 	add	r3,r3,r5
   12ce8:	20000916 	blt	r4,zero,12d10 <_ZL28read_encoded_value_with_basehjPKhPj+0xd8>
   12cec:	38c00015 	stw	r3,0(r7)
   12cf0:	f800283a 	ret
   12cf4:	308000c4 	addi	r2,r6,3
   12cf8:	01bfff04 	movi	r6,-4
   12cfc:	1184703a 	and	r2,r2,r6
   12d00:	10c00017 	ldw	r3,0(r2)
   12d04:	10800104 	addi	r2,r2,4
   12d08:	38c00015 	stw	r3,0(r7)
   12d0c:	f800283a 	ret
   12d10:	18c00017 	ldw	r3,0(r3)
   12d14:	38c00015 	stw	r3,0(r7)
   12d18:	f800283a 	ret
   12d1c:	32000043 	ldbu	r8,1(r6)
   12d20:	30800083 	ldbu	r2,2(r6)
   12d24:	30c000c3 	ldbu	r3,3(r6)
   12d28:	32400003 	ldbu	r9,0(r6)
   12d2c:	4010923a 	slli	r8,r8,8
   12d30:	1004943a 	slli	r2,r2,16
   12d34:	1806963a 	slli	r3,r3,24
   12d38:	4250b03a 	or	r8,r8,r9
   12d3c:	1204b03a 	or	r2,r2,r8
   12d40:	1886b03a 	or	r3,r3,r2
   12d44:	30800204 	addi	r2,r6,8
   12d48:	003fde06 	br	12cc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d4c:	30c00043 	ldbu	r3,1(r6)
   12d50:	32000003 	ldbu	r8,0(r6)
   12d54:	30800084 	addi	r2,r6,2
   12d58:	1806923a 	slli	r3,r3,8
   12d5c:	1a06b03a 	or	r3,r3,r8
   12d60:	003fd806 	br	12cc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d64:	30c00043 	ldbu	r3,1(r6)
   12d68:	32000003 	ldbu	r8,0(r6)
   12d6c:	30800084 	addi	r2,r6,2
   12d70:	1806923a 	slli	r3,r3,8
   12d74:	1a06b03a 	or	r3,r3,r8
   12d78:	18ffffcc 	andi	r3,r3,65535
   12d7c:	18e0001c 	xori	r3,r3,32768
   12d80:	18e00004 	addi	r3,r3,-32768
   12d84:	003fcf06 	br	12cc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d88:	3005883a 	mov	r2,r6
   12d8c:	0007883a 	mov	r3,zero
   12d90:	0015883a 	mov	r10,zero
   12d94:	12000003 	ldbu	r8,0(r2)
   12d98:	10800044 	addi	r2,r2,1
   12d9c:	42401fcc 	andi	r9,r8,127
   12da0:	4a92983a 	sll	r9,r9,r10
   12da4:	42003fcc 	andi	r8,r8,255
   12da8:	4200201c 	xori	r8,r8,128
   12dac:	423fe004 	addi	r8,r8,-128
   12db0:	1a46b03a 	or	r3,r3,r9
   12db4:	528001c4 	addi	r10,r10,7
   12db8:	403ff616 	blt	r8,zero,12d94 <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
   12dbc:	003fc106 	br	12cc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12dc0:	3005883a 	mov	r2,r6
   12dc4:	0007883a 	mov	r3,zero
   12dc8:	0013883a 	mov	r9,zero
   12dcc:	12800003 	ldbu	r10,0(r2)
   12dd0:	10800044 	addi	r2,r2,1
   12dd4:	52001fcc 	andi	r8,r10,127
   12dd8:	4250983a 	sll	r8,r8,r9
   12ddc:	52c03fcc 	andi	r11,r10,255
   12de0:	5ac0201c 	xori	r11,r11,128
   12de4:	5affe004 	addi	r11,r11,-128
   12de8:	1a06b03a 	or	r3,r3,r8
   12dec:	4a4001c4 	addi	r9,r9,7
   12df0:	583ff616 	blt	r11,zero,12dcc <_ZL28read_encoded_value_with_basehjPKhPj+0x194>
   12df4:	4a000828 	cmpgeui	r8,r9,32
   12df8:	403fb21e 	bne	r8,zero,12cc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12dfc:	5280100c 	andi	r10,r10,64
   12e00:	503fb026 	beq	r10,zero,12cc4 <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12e04:	023fffc4 	movi	r8,-1
   12e08:	4252983a 	sll	r9,r8,r9
   12e0c:	1a46b03a 	or	r3,r3,r9
   12e10:	003fad06 	br	12cc8 <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
   12e14:	deffff04 	addi	sp,sp,-4
   12e18:	dfc00015 	stw	ra,0(sp)
   12e1c:	00172240 	call	17224 <abort>

00012e20 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
   12e20:	20803fcc 	andi	r2,r4,255
   12e24:	10803fe0 	cmpeqi	r2,r2,255
   12e28:	1000161e 	bne	r2,zero,12e84 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12e2c:	2007883a 	mov	r3,r4
   12e30:	18801c0c 	andi	r2,r3,112
   12e34:	2809883a 	mov	r4,r5
   12e38:	11400c20 	cmpeqi	r5,r2,48
   12e3c:	2800131e 	bne	r5,zero,12e8c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
   12e40:	11400c68 	cmpgeui	r5,r2,49
   12e44:	2800031e 	bne	r5,zero,12e54 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
   12e48:	11400820 	cmpeqi	r5,r2,32
   12e4c:	28000426 	beq	r5,zero,12e60 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
   12e50:	0016dbc1 	jmpi	16dbc <_Unwind_GetTextRelBase>
   12e54:	10c01020 	cmpeqi	r3,r2,64
   12e58:	18000826 	beq	r3,zero,12e7c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
   12e5c:	0016da41 	jmpi	16da4 <_Unwind_GetRegionStart>
   12e60:	10800868 	cmpgeui	r2,r2,33
   12e64:	1000021e 	bne	r2,zero,12e70 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12e68:	18c0180c 	andi	r3,r3,96
   12e6c:	18000526 	beq	r3,zero,12e84 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12e70:	deffff04 	addi	sp,sp,-4
   12e74:	dfc00015 	stw	ra,0(sp)
   12e78:	00172240 	call	17224 <abort>
   12e7c:	10801420 	cmpeqi	r2,r2,80
   12e80:	103ffb26 	beq	r2,zero,12e70 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12e84:	0005883a 	mov	r2,zero
   12e88:	f800283a 	ret
   12e8c:	0016db41 	jmpi	16db4 <_Unwind_GetDataRelBase>

00012e90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
   12e90:	defffb04 	addi	sp,sp,-20
   12e94:	dc800215 	stw	r18,8(sp)
   12e98:	dc400115 	stw	r17,4(sp)
   12e9c:	dc000015 	stw	r16,0(sp)
   12ea0:	dfc00415 	stw	ra,16(sp)
   12ea4:	dcc00315 	stw	r19,12(sp)
   12ea8:	2025883a 	mov	r18,r4
   12eac:	2821883a 	mov	r16,r5
   12eb0:	3023883a 	mov	r17,r6
   12eb4:	20003d26 	beq	r4,zero,12fac <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
   12eb8:	0016da40 	call	16da4 <_Unwind_GetRegionStart>
   12ebc:	88800015 	stw	r2,0(r17)
   12ec0:	84c00003 	ldbu	r19,0(r16)
   12ec4:	84000044 	addi	r16,r16,1
   12ec8:	98c03fe0 	cmpeqi	r3,r19,255
   12ecc:	18002d26 	beq	r3,zero,12f84 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
   12ed0:	88800115 	stw	r2,4(r17)
   12ed4:	81000003 	ldbu	r4,0(r16)
   12ed8:	80800044 	addi	r2,r16,1
   12edc:	20c03fcc 	andi	r3,r4,255
   12ee0:	89000505 	stb	r4,20(r17)
   12ee4:	18c03fe0 	cmpeqi	r3,r3,255
   12ee8:	1800321e 	bne	r3,zero,12fb4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
   12eec:	000d883a 	mov	r6,zero
   12ef0:	000b883a 	mov	r5,zero
   12ef4:	10c00003 	ldbu	r3,0(r2)
   12ef8:	10800044 	addi	r2,r2,1
   12efc:	19001fcc 	andi	r4,r3,127
   12f00:	2148983a 	sll	r4,r4,r5
   12f04:	18c03fcc 	andi	r3,r3,255
   12f08:	18c0201c 	xori	r3,r3,128
   12f0c:	18ffe004 	addi	r3,r3,-128
   12f10:	310cb03a 	or	r6,r6,r4
   12f14:	294001c4 	addi	r5,r5,7
   12f18:	183ff616 	blt	r3,zero,12ef4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
   12f1c:	118d883a 	add	r6,r2,r6
   12f20:	89800315 	stw	r6,12(r17)
   12f24:	10c00003 	ldbu	r3,0(r2)
   12f28:	000f883a 	mov	r7,zero
   12f2c:	10800044 	addi	r2,r2,1
   12f30:	88c00545 	stb	r3,21(r17)
   12f34:	000b883a 	mov	r5,zero
   12f38:	10c00003 	ldbu	r3,0(r2)
   12f3c:	10800044 	addi	r2,r2,1
   12f40:	19001fcc 	andi	r4,r3,127
   12f44:	2148983a 	sll	r4,r4,r5
   12f48:	18c03fcc 	andi	r3,r3,255
   12f4c:	18c0201c 	xori	r3,r3,128
   12f50:	18ffe004 	addi	r3,r3,-128
   12f54:	390eb03a 	or	r7,r7,r4
   12f58:	294001c4 	addi	r5,r5,7
   12f5c:	183ff616 	blt	r3,zero,12f38 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
   12f60:	11cf883a 	add	r7,r2,r7
   12f64:	89c00415 	stw	r7,16(r17)
   12f68:	dfc00417 	ldw	ra,16(sp)
   12f6c:	dcc00317 	ldw	r19,12(sp)
   12f70:	dc800217 	ldw	r18,8(sp)
   12f74:	dc400117 	ldw	r17,4(sp)
   12f78:	dc000017 	ldw	r16,0(sp)
   12f7c:	dec00504 	addi	sp,sp,20
   12f80:	f800283a 	ret
   12f84:	900b883a 	mov	r5,r18
   12f88:	9809883a 	mov	r4,r19
   12f8c:	0012e200 	call	12e20 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12f90:	800d883a 	mov	r6,r16
   12f94:	89c00104 	addi	r7,r17,4
   12f98:	100b883a 	mov	r5,r2
   12f9c:	9809883a 	mov	r4,r19
   12fa0:	0012c380 	call	12c38 <_ZL28read_encoded_value_with_basehjPKhPj>
   12fa4:	1021883a 	mov	r16,r2
   12fa8:	003fca06 	br	12ed4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
   12fac:	0005883a 	mov	r2,zero
   12fb0:	003fc206 	br	12ebc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
   12fb4:	88000315 	stw	zero,12(r17)
   12fb8:	003fda06 	br	12f24 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

00012fbc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
   12fbc:	defffa04 	addi	sp,sp,-24
   12fc0:	dc000215 	stw	r16,8(sp)
   12fc4:	24000317 	ldw	r16,12(r4)
   12fc8:	01ce303a 	nor	r7,zero,r7
   12fcc:	dc800415 	stw	r18,16(sp)
   12fd0:	dc400315 	stw	r17,12(sp)
   12fd4:	dfc00515 	stw	ra,20(sp)
   12fd8:	2025883a 	mov	r18,r4
   12fdc:	2823883a 	mov	r17,r5
   12fe0:	d9800015 	stw	r6,0(sp)
   12fe4:	81e1883a 	add	r16,r16,r7
   12fe8:	000f883a 	mov	r7,zero
   12fec:	000d883a 	mov	r6,zero
   12ff0:	80800003 	ldbu	r2,0(r16)
   12ff4:	84000044 	addi	r16,r16,1
   12ff8:	10c01fcc 	andi	r3,r2,127
   12ffc:	1986983a 	sll	r3,r3,r6
   13000:	10803fcc 	andi	r2,r2,255
   13004:	1080201c 	xori	r2,r2,128
   13008:	10bfe004 	addi	r2,r2,-128
   1300c:	38ceb03a 	or	r7,r7,r3
   13010:	318001c4 	addi	r6,r6,7
   13014:	103ff616 	blt	r2,zero,12ff0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
   13018:	38002926 	beq	r7,zero,130c0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x104>
   1301c:	90800503 	ldbu	r2,20(r18)
   13020:	11003fcc 	andi	r4,r2,255
   13024:	20c03fe0 	cmpeqi	r3,r4,255
   13028:	1800231e 	bne	r3,zero,130b8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xfc>
   1302c:	108001cc 	andi	r2,r2,7
   13030:	10c000a0 	cmpeqi	r3,r2,2
   13034:	18001d1e 	bne	r3,zero,130ac <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xf0>
   13038:	10c000e8 	cmpgeui	r3,r2,3
   1303c:	18001726 	beq	r3,zero,1309c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe0>
   13040:	10c000e0 	cmpeqi	r3,r2,3
   13044:	1800161e 	bne	r3,zero,130a0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe4>
   13048:	10800120 	cmpeqi	r2,r2,4
   1304c:	10001e26 	beq	r2,zero,130c8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   13050:	380e90fa 	slli	r7,r7,3
   13054:	01c5c83a 	sub	r2,zero,r7
   13058:	91800317 	ldw	r6,12(r18)
   1305c:	91400217 	ldw	r5,8(r18)
   13060:	d9c00104 	addi	r7,sp,4
   13064:	308d883a 	add	r6,r6,r2
   13068:	0012c380 	call	12c38 <_ZL28read_encoded_value_with_basehjPKhPj>
   1306c:	d9000117 	ldw	r4,4(sp)
   13070:	d80d883a 	mov	r6,sp
   13074:	880b883a 	mov	r5,r17
   13078:	0012ba80 	call	12ba8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   1307c:	10c03fcc 	andi	r3,r2,255
   13080:	183fd926 	beq	r3,zero,12fe8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
   13084:	dfc00517 	ldw	ra,20(sp)
   13088:	dc800417 	ldw	r18,16(sp)
   1308c:	dc400317 	ldw	r17,12(sp)
   13090:	dc000217 	ldw	r16,8(sp)
   13094:	dec00604 	addi	sp,sp,24
   13098:	f800283a 	ret
   1309c:	10000a1e 	bne	r2,zero,130c8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   130a0:	380e90ba 	slli	r7,r7,2
   130a4:	01c5c83a 	sub	r2,zero,r7
   130a8:	003feb06 	br	13058 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   130ac:	39cf883a 	add	r7,r7,r7
   130b0:	01c5c83a 	sub	r2,zero,r7
   130b4:	003fe806 	br	13058 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   130b8:	0005883a 	mov	r2,zero
   130bc:	003fe606 	br	13058 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   130c0:	0005883a 	mov	r2,zero
   130c4:	003fef06 	br	13084 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xc8>
   130c8:	00172240 	call	17224 <abort>

000130cc <__gxx_personality_sj0>:
   130cc:	deffdb04 	addi	sp,sp,-148
   130d0:	02000074 	movhi	r8,1
   130d4:	00c000b4 	movhi	r3,2
   130d8:	00800074 	movhi	r2,1
   130dc:	108dd004 	addi	r2,r2,14144
   130e0:	d9000015 	stw	r4,0(sp)
   130e4:	420c3304 	addi	r8,r8,12492
   130e8:	18e21c04 	addi	r3,r3,-30608
   130ec:	d9000d04 	addi	r4,sp,52
   130f0:	d8801615 	stw	r2,88(sp)
   130f4:	dfc02415 	stw	ra,144(sp)
   130f8:	df002315 	stw	fp,140(sp)
   130fc:	d9400315 	stw	r5,12(sp)
   13100:	d9800115 	stw	r6,4(sp)
   13104:	d9c00215 	stw	r7,8(sp)
   13108:	da001315 	stw	r8,76(sp)
   1310c:	d8c01415 	stw	r3,80(sp)
   13110:	df001515 	stw	fp,84(sp)
   13114:	dec01715 	stw	sp,92(sp)
   13118:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   1311c:	d8800017 	ldw	r2,0(sp)
   13120:	d8001a15 	stw	zero,104(sp)
   13124:	d8001b15 	stw	zero,108(sp)
   13128:	10800058 	cmpnei	r2,r2,1
   1312c:	1000471e 	bne	r2,zero,1324c <__gxx_personality_sj0+0x180>
   13130:	d9800117 	ldw	r6,4(sp)
   13134:	00af3574 	movhi	r2,48341
   13138:	10b54004 	addi	r2,r2,-11008
   1313c:	3085883a 	add	r2,r6,r2
   13140:	d8800715 	stw	r2,28(sp)
   13144:	1185803a 	cmpltu	r2,r2,r6
   13148:	d9800217 	ldw	r6,8(sp)
   1314c:	00ee2cb4 	movhi	r3,47282
   13150:	d9000317 	ldw	r4,12(sp)
   13154:	18eaaf04 	addi	r3,r3,-21828
   13158:	30c7883a 	add	r3,r6,r3
   1315c:	10c7883a 	add	r3,r2,r3
   13160:	21000198 	cmpnei	r4,r4,6
   13164:	d8c00615 	stw	r3,24(sp)
   13168:	2000011e 	bne	r4,zero,13170 <__gxx_personality_sj0+0xa4>
   1316c:	1800d026 	beq	r3,zero,134b0 <__gxx_personality_sj0+0x3e4>
   13170:	d9002617 	ldw	r4,152(sp)
   13174:	00bfffc4 	movi	r2,-1
   13178:	d8800e15 	stw	r2,56(sp)
   1317c:	0016d980 	call	16d98 <_Unwind_GetLanguageSpecificData>
   13180:	d8800515 	stw	r2,20(sp)
   13184:	10005d26 	beq	r2,zero,132fc <__gxx_personality_sj0+0x230>
   13188:	d9400517 	ldw	r5,20(sp)
   1318c:	d9002617 	ldw	r4,152(sp)
   13190:	d9801d04 	addi	r6,sp,116
   13194:	00bfffc4 	movi	r2,-1
   13198:	d8800e15 	stw	r2,56(sp)
   1319c:	0012e900 	call	12e90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   131a0:	d9002203 	ldbu	r4,136(sp)
   131a4:	d9402617 	ldw	r5,152(sp)
   131a8:	d8800015 	stw	r2,0(sp)
   131ac:	0012e200 	call	12e20 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   131b0:	d9002617 	ldw	r4,152(sp)
   131b4:	d9401b04 	addi	r5,sp,108
   131b8:	d8801f15 	stw	r2,124(sp)
   131bc:	0016d680 	call	16d68 <_Unwind_GetIPInfo>
   131c0:	d8c01b17 	ldw	r3,108(sp)
   131c4:	d8800115 	stw	r2,4(sp)
   131c8:	18004f26 	beq	r3,zero,13308 <__gxx_personality_sj0+0x23c>
   131cc:	d8800117 	ldw	r2,4(sp)
   131d0:	10004a16 	blt	r2,zero,132fc <__gxx_personality_sj0+0x230>
   131d4:	1000381e 	bne	r2,zero,132b8 <__gxx_personality_sj0+0x1ec>
   131d8:	d8000415 	stw	zero,16(sp)
   131dc:	d8000215 	stw	zero,8(sp)
   131e0:	00800044 	movi	r2,1
   131e4:	d8c00317 	ldw	r3,12(sp)
   131e8:	18c0004c 	andi	r3,r3,1
   131ec:	1801061e 	bne	r3,zero,13608 <__gxx_personality_sj0+0x53c>
   131f0:	d8c00317 	ldw	r3,12(sp)
   131f4:	18c0020c 	andi	r3,r3,8
   131f8:	18010a26 	beq	r3,zero,13624 <__gxx_personality_sj0+0x558>
   131fc:	10800058 	cmpnei	r2,r2,1
   13200:	10015126 	beq	r2,zero,13748 <__gxx_personality_sj0+0x67c>
   13204:	d8800417 	ldw	r2,16(sp)
   13208:	10014a16 	blt	r2,zero,13734 <__gxx_personality_sj0+0x668>
   1320c:	d9002617 	ldw	r4,152(sp)
   13210:	d9802517 	ldw	r6,148(sp)
   13214:	00bfffc4 	movi	r2,-1
   13218:	000b883a 	mov	r5,zero
   1321c:	d8800e15 	stw	r2,56(sp)
   13220:	0016d400 	call	16d40 <_Unwind_SetGR>
   13224:	d9800417 	ldw	r6,16(sp)
   13228:	d9002617 	ldw	r4,152(sp)
   1322c:	01400044 	movi	r5,1
   13230:	0016d400 	call	16d40 <_Unwind_SetGR>
   13234:	d9400117 	ldw	r5,4(sp)
   13238:	d9002617 	ldw	r4,152(sp)
   1323c:	0016d880 	call	16d88 <_Unwind_SetIP>
   13240:	008001c4 	movi	r2,7
   13244:	d8800015 	stw	r2,0(sp)
   13248:	00000206 	br	13254 <__gxx_personality_sj0+0x188>
   1324c:	008000c4 	movi	r2,3
   13250:	d8800015 	stw	r2,0(sp)
   13254:	d9000d04 	addi	r4,sp,52
   13258:	0016d000 	call	16d00 <_Unwind_SjLj_Unregister>
   1325c:	d8800017 	ldw	r2,0(sp)
   13260:	dfc02417 	ldw	ra,144(sp)
   13264:	df002317 	ldw	fp,140(sp)
   13268:	dec02504 	addi	sp,sp,148
   1326c:	f800283a 	ret
   13270:	000b883a 	mov	r5,zero
   13274:	0009883a 	mov	r4,zero
   13278:	d8c00017 	ldw	r3,0(sp)
   1327c:	18800003 	ldbu	r2,0(r3)
   13280:	18c00044 	addi	r3,r3,1
   13284:	d8c00015 	stw	r3,0(sp)
   13288:	10c01fcc 	andi	r3,r2,127
   1328c:	1906983a 	sll	r3,r3,r4
   13290:	10803fcc 	andi	r2,r2,255
   13294:	1080201c 	xori	r2,r2,128
   13298:	10bfe004 	addi	r2,r2,-128
   1329c:	28cab03a 	or	r5,r5,r3
   132a0:	210001c4 	addi	r4,r4,7
   132a4:	103ff416 	blt	r2,zero,13278 <__gxx_personality_sj0+0x1ac>
   132a8:	d8800117 	ldw	r2,4(sp)
   132ac:	10bfffc4 	addi	r2,r2,-1
   132b0:	d8800115 	stw	r2,4(sp)
   132b4:	10001726 	beq	r2,zero,13314 <__gxx_personality_sj0+0x248>
   132b8:	000d883a 	mov	r6,zero
   132bc:	0009883a 	mov	r4,zero
   132c0:	d8c00017 	ldw	r3,0(sp)
   132c4:	18800003 	ldbu	r2,0(r3)
   132c8:	18c00044 	addi	r3,r3,1
   132cc:	d8c00015 	stw	r3,0(sp)
   132d0:	10c01fcc 	andi	r3,r2,127
   132d4:	1906983a 	sll	r3,r3,r4
   132d8:	10803fcc 	andi	r2,r2,255
   132dc:	1080201c 	xori	r2,r2,128
   132e0:	10bfe004 	addi	r2,r2,-128
   132e4:	30ccb03a 	or	r6,r6,r3
   132e8:	210001c4 	addi	r4,r4,7
   132ec:	103ff416 	blt	r2,zero,132c0 <__gxx_personality_sj0+0x1f4>
   132f0:	003fdf06 	br	13270 <__gxx_personality_sj0+0x1a4>
   132f4:	d88008c3 	ldbu	r2,35(sp)
   132f8:	10008c1e 	bne	r2,zero,1352c <__gxx_personality_sj0+0x460>
   132fc:	00800204 	movi	r2,8
   13300:	d8800015 	stw	r2,0(sp)
   13304:	003fd306 	br	13254 <__gxx_personality_sj0+0x188>
   13308:	10bfffc4 	addi	r2,r2,-1
   1330c:	d8800115 	stw	r2,4(sp)
   13310:	003fae06 	br	131cc <__gxx_personality_sj0+0x100>
   13314:	30800044 	addi	r2,r6,1
   13318:	d8800a15 	stw	r2,40(sp)
   1331c:	283ff626 	beq	r5,zero,132f8 <__gxx_personality_sj0+0x22c>
   13320:	d8800a17 	ldw	r2,40(sp)
   13324:	103ff526 	beq	r2,zero,132fc <__gxx_personality_sj0+0x230>
   13328:	d8802117 	ldw	r2,132(sp)
   1332c:	297fffc4 	addi	r5,r5,-1
   13330:	1145883a 	add	r2,r2,r5
   13334:	d8800215 	stw	r2,8(sp)
   13338:	10007c26 	beq	r2,zero,1352c <__gxx_personality_sj0+0x460>
   1333c:	d8800317 	ldw	r2,12(sp)
   13340:	1080020c 	andi	r2,r2,8
   13344:	d8800b15 	stw	r2,44(sp)
   13348:	1000bf1e 	bne	r2,zero,13648 <__gxx_personality_sj0+0x57c>
   1334c:	d8800617 	ldw	r2,24(sp)
   13350:	1000e526 	beq	r2,zero,136e8 <__gxx_personality_sj0+0x61c>
   13354:	008000b4 	movhi	r2,2
   13358:	10a5b904 	addi	r2,r2,-26908
   1335c:	d8800915 	stw	r2,36(sp)
   13360:	d8800717 	ldw	r2,28(sp)
   13364:	d80008c5 	stb	zero,35(sp)
   13368:	108000a8 	cmpgeui	r2,r2,2
   1336c:	d8800c15 	stw	r2,48(sp)
   13370:	d8800217 	ldw	r2,8(sp)
   13374:	000f883a 	mov	r7,zero
   13378:	0007883a 	mov	r3,zero
   1337c:	d8800015 	stw	r2,0(sp)
   13380:	d8800017 	ldw	r2,0(sp)
   13384:	11000003 	ldbu	r4,0(r2)
   13388:	10800044 	addi	r2,r2,1
   1338c:	d8800015 	stw	r2,0(sp)
   13390:	20801fcc 	andi	r2,r4,127
   13394:	10c4983a 	sll	r2,r2,r3
   13398:	21403fcc 	andi	r5,r4,255
   1339c:	2940201c 	xori	r5,r5,128
   133a0:	297fe004 	addi	r5,r5,-128
   133a4:	388eb03a 	or	r7,r7,r2
   133a8:	18c001c4 	addi	r3,r3,7
   133ac:	283ff416 	blt	r5,zero,13380 <__gxx_personality_sj0+0x2b4>
   133b0:	18800828 	cmpgeui	r2,r3,32
   133b4:	1000061e 	bne	r2,zero,133d0 <__gxx_personality_sj0+0x304>
   133b8:	2100100c 	andi	r4,r4,64
   133bc:	20000426 	beq	r4,zero,133d0 <__gxx_personality_sj0+0x304>
   133c0:	00800044 	movi	r2,1
   133c4:	10c6983a 	sll	r3,r2,r3
   133c8:	00c7c83a 	sub	r3,zero,r3
   133cc:	38ceb03a 	or	r7,r7,r3
   133d0:	d9400017 	ldw	r5,0(sp)
   133d4:	d9c00415 	stw	r7,16(sp)
   133d8:	d8000115 	stw	zero,4(sp)
   133dc:	0007883a 	mov	r3,zero
   133e0:	29000003 	ldbu	r4,0(r5)
   133e4:	da000117 	ldw	r8,4(sp)
   133e8:	29400044 	addi	r5,r5,1
   133ec:	20801fcc 	andi	r2,r4,127
   133f0:	10c4983a 	sll	r2,r2,r3
   133f4:	21803fcc 	andi	r6,r4,255
   133f8:	3180201c 	xori	r6,r6,128
   133fc:	4084b03a 	or	r2,r8,r2
   13400:	31bfe004 	addi	r6,r6,-128
   13404:	d8800115 	stw	r2,4(sp)
   13408:	18c001c4 	addi	r3,r3,7
   1340c:	303ff416 	blt	r6,zero,133e0 <__gxx_personality_sj0+0x314>
   13410:	18800828 	cmpgeui	r2,r3,32
   13414:	1000081e 	bne	r2,zero,13438 <__gxx_personality_sj0+0x36c>
   13418:	2100100c 	andi	r4,r4,64
   1341c:	20000626 	beq	r4,zero,13438 <__gxx_personality_sj0+0x36c>
   13420:	00800044 	movi	r2,1
   13424:	10c6983a 	sll	r3,r2,r3
   13428:	d8800117 	ldw	r2,4(sp)
   1342c:	00c7c83a 	sub	r3,zero,r3
   13430:	10c4b03a 	or	r2,r2,r3
   13434:	d8800115 	stw	r2,4(sp)
   13438:	38004726 	beq	r7,zero,13558 <__gxx_personality_sj0+0x48c>
   1343c:	01c04916 	blt	zero,r7,13564 <__gxx_personality_sj0+0x498>
   13440:	d8800917 	ldw	r2,36(sp)
   13444:	10000426 	beq	r2,zero,13458 <__gxx_personality_sj0+0x38c>
   13448:	d8800b17 	ldw	r2,44(sp)
   1344c:	1000021e 	bne	r2,zero,13458 <__gxx_personality_sj0+0x38c>
   13450:	d8800617 	ldw	r2,24(sp)
   13454:	10008026 	beq	r2,zero,13658 <__gxx_personality_sj0+0x58c>
   13458:	d8802017 	ldw	r2,128(sp)
   1345c:	01ce303a 	nor	r7,zero,r7
   13460:	000b883a 	mov	r5,zero
   13464:	11cf883a 	add	r7,r2,r7
   13468:	0009883a 	mov	r4,zero
   1346c:	38800003 	ldbu	r2,0(r7)
   13470:	39c00044 	addi	r7,r7,1
   13474:	10c01fcc 	andi	r3,r2,127
   13478:	1906983a 	sll	r3,r3,r4
   1347c:	10803fcc 	andi	r2,r2,255
   13480:	1080201c 	xori	r2,r2,128
   13484:	10bfe004 	addi	r2,r2,-128
   13488:	28cab03a 	or	r5,r5,r3
   1348c:	210001c4 	addi	r4,r4,7
   13490:	103ff616 	blt	r2,zero,1346c <__gxx_personality_sj0+0x3a0>
   13494:	28005126 	beq	r5,zero,135dc <__gxx_personality_sj0+0x510>
   13498:	d8800117 	ldw	r2,4(sp)
   1349c:	103f9526 	beq	r2,zero,132f4 <__gxx_personality_sj0+0x228>
   134a0:	d8c00017 	ldw	r3,0(sp)
   134a4:	1885883a 	add	r2,r3,r2
   134a8:	d8800215 	stw	r2,8(sp)
   134ac:	003fb006 	br	13370 <__gxx_personality_sj0+0x2a4>
   134b0:	d8800717 	ldw	r2,28(sp)
   134b4:	108000a8 	cmpgeui	r2,r2,2
   134b8:	103f2d1e 	bne	r2,zero,13170 <__gxx_personality_sj0+0xa4>
   134bc:	d8802517 	ldw	r2,148(sp)
   134c0:	10bffe17 	ldw	r2,-8(r2)
   134c4:	d8800115 	stw	r2,4(sp)
   134c8:	10005d26 	beq	r2,zero,13640 <__gxx_personality_sj0+0x574>
   134cc:	d8802517 	ldw	r2,148(sp)
   134d0:	10bffb17 	ldw	r2,-20(r2)
   134d4:	d8800415 	stw	r2,16(sp)
   134d8:	d8802517 	ldw	r2,148(sp)
   134dc:	10bffd17 	ldw	r2,-12(r2)
   134e0:	d8800515 	stw	r2,20(sp)
   134e4:	d8800417 	ldw	r2,16(sp)
   134e8:	103f480e 	bge	r2,zero,1320c <__gxx_personality_sj0+0x140>
   134ec:	d9002617 	ldw	r4,152(sp)
   134f0:	d9400517 	ldw	r5,20(sp)
   134f4:	d9801d04 	addi	r6,sp,116
   134f8:	00bfffc4 	movi	r2,-1
   134fc:	d8800e15 	stw	r2,56(sp)
   13500:	0012e900 	call	12e90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   13504:	d9402617 	ldw	r5,152(sp)
   13508:	d9002203 	ldbu	r4,136(sp)
   1350c:	0012e200 	call	12e20 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   13510:	d9002203 	ldbu	r4,136(sp)
   13514:	d9402617 	ldw	r5,152(sp)
   13518:	d8801f15 	stw	r2,124(sp)
   1351c:	0012e200 	call	12e20 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   13520:	d8c02517 	ldw	r3,148(sp)
   13524:	18bffe15 	stw	r2,-8(r3)
   13528:	003f3806 	br	1320c <__gxx_personality_sj0+0x140>
   1352c:	d8800317 	ldw	r2,12(sp)
   13530:	1080004c 	andi	r2,r2,1
   13534:	103f711e 	bne	r2,zero,132fc <__gxx_personality_sj0+0x230>
   13538:	d8800317 	ldw	r2,12(sp)
   1353c:	1080020c 	andi	r2,r2,8
   13540:	d8800415 	stw	r2,16(sp)
   13544:	10008126 	beq	r2,zero,1374c <__gxx_personality_sj0+0x680>
   13548:	d8800a17 	ldw	r2,40(sp)
   1354c:	d8000415 	stw	zero,16(sp)
   13550:	d8800115 	stw	r2,4(sp)
   13554:	003f2d06 	br	1320c <__gxx_personality_sj0+0x140>
   13558:	00800044 	movi	r2,1
   1355c:	d88008c5 	stb	r2,35(sp)
   13560:	003fcd06 	br	13498 <__gxx_personality_sj0+0x3cc>
   13564:	d8802203 	ldbu	r2,136(sp)
   13568:	11003fcc 	andi	r4,r2,255
   1356c:	20c03fe0 	cmpeqi	r3,r4,255
   13570:	18002a1e 	bne	r3,zero,1361c <__gxx_personality_sj0+0x550>
   13574:	108001cc 	andi	r2,r2,7
   13578:	10c000a0 	cmpeqi	r3,r2,2
   1357c:	18001f1e 	bne	r3,zero,135fc <__gxx_personality_sj0+0x530>
   13580:	10c000e8 	cmpgeui	r3,r2,3
   13584:	18001926 	beq	r3,zero,135ec <__gxx_personality_sj0+0x520>
   13588:	10c000e0 	cmpeqi	r3,r2,3
   1358c:	1800181e 	bne	r3,zero,135f0 <__gxx_personality_sj0+0x524>
   13590:	10800120 	cmpeqi	r2,r2,4
   13594:	10007026 	beq	r2,zero,13758 <__gxx_personality_sj0+0x68c>
   13598:	380490fa 	slli	r2,r7,3
   1359c:	0085c83a 	sub	r2,zero,r2
   135a0:	d9802017 	ldw	r6,128(sp)
   135a4:	d9401f17 	ldw	r5,124(sp)
   135a8:	d9c01c04 	addi	r7,sp,112
   135ac:	308d883a 	add	r6,r6,r2
   135b0:	00bfffc4 	movi	r2,-1
   135b4:	d8800e15 	stw	r2,56(sp)
   135b8:	0012c380 	call	12c38 <_ZL28read_encoded_value_with_basehjPKhPj>
   135bc:	d9001c17 	ldw	r4,112(sp)
   135c0:	20000626 	beq	r4,zero,135dc <__gxx_personality_sj0+0x510>
   135c4:	d9400917 	ldw	r5,36(sp)
   135c8:	283fb326 	beq	r5,zero,13498 <__gxx_personality_sj0+0x3cc>
   135cc:	d9801a04 	addi	r6,sp,104
   135d0:	0012ba80 	call	12ba8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   135d4:	10803fcc 	andi	r2,r2,255
   135d8:	103faf26 	beq	r2,zero,13498 <__gxx_personality_sj0+0x3cc>
   135dc:	d8800a17 	ldw	r2,40(sp)
   135e0:	d8800115 	stw	r2,4(sp)
   135e4:	008000c4 	movi	r2,3
   135e8:	003efe06 	br	131e4 <__gxx_personality_sj0+0x118>
   135ec:	10005a1e 	bne	r2,zero,13758 <__gxx_personality_sj0+0x68c>
   135f0:	380490ba 	slli	r2,r7,2
   135f4:	0085c83a 	sub	r2,zero,r2
   135f8:	003fe906 	br	135a0 <__gxx_personality_sj0+0x4d4>
   135fc:	39cf883a 	add	r7,r7,r7
   13600:	01c5c83a 	sub	r2,zero,r7
   13604:	003fe606 	br	135a0 <__gxx_personality_sj0+0x4d4>
   13608:	d8800617 	ldw	r2,24(sp)
   1360c:	10002326 	beq	r2,zero,1369c <__gxx_personality_sj0+0x5d0>
   13610:	00800184 	movi	r2,6
   13614:	d8800015 	stw	r2,0(sp)
   13618:	003f0e06 	br	13254 <__gxx_personality_sj0+0x188>
   1361c:	0005883a 	mov	r2,zero
   13620:	003fdf06 	br	135a0 <__gxx_personality_sj0+0x4d4>
   13624:	d8c00617 	ldw	r3,24(sp)
   13628:	183ef41e 	bne	r3,zero,131fc <__gxx_personality_sj0+0x130>
   1362c:	d8c00717 	ldw	r3,28(sp)
   13630:	18c000a8 	cmpgeui	r3,r3,2
   13634:	183ef11e 	bne	r3,zero,131fc <__gxx_personality_sj0+0x130>
   13638:	10800060 	cmpeqi	r2,r2,1
   1363c:	103fa926 	beq	r2,zero,134e4 <__gxx_personality_sj0+0x418>
   13640:	d9002517 	ldw	r4,148(sp)
   13644:	0014db80 	call	14db8 <__cxa_call_terminate>
   13648:	008000b4 	movhi	r2,2
   1364c:	10a5b704 	addi	r2,r2,-26916
   13650:	d8800915 	stw	r2,36(sp)
   13654:	003f4206 	br	13360 <__gxx_personality_sj0+0x294>
   13658:	d8800c17 	ldw	r2,48(sp)
   1365c:	103f7e1e 	bne	r2,zero,13458 <__gxx_personality_sj0+0x38c>
   13660:	d9801a17 	ldw	r6,104(sp)
   13664:	d9400917 	ldw	r5,36(sp)
   13668:	00bfffc4 	movi	r2,-1
   1366c:	d9001d04 	addi	r4,sp,116
   13670:	d8800e15 	stw	r2,56(sp)
   13674:	0012fbc0 	call	12fbc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13678:	10803fcc 	andi	r2,r2,255
   1367c:	103f861e 	bne	r2,zero,13498 <__gxx_personality_sj0+0x3cc>
   13680:	d8800317 	ldw	r2,12(sp)
   13684:	1080004c 	andi	r2,r2,1
   13688:	1000271e 	bne	r2,zero,13728 <__gxx_personality_sj0+0x65c>
   1368c:	d8800a17 	ldw	r2,40(sp)
   13690:	d8800115 	stw	r2,4(sp)
   13694:	008000c4 	movi	r2,3
   13698:	003fe406 	br	1362c <__gxx_personality_sj0+0x560>
   1369c:	d8800717 	ldw	r2,28(sp)
   136a0:	108000a8 	cmpgeui	r2,r2,2
   136a4:	103fda1e 	bne	r2,zero,13610 <__gxx_personality_sj0+0x544>
   136a8:	d8802517 	ldw	r2,148(sp)
   136ac:	d8c00417 	ldw	r3,16(sp)
   136b0:	10fffb15 	stw	r3,-20(r2)
   136b4:	d8c00217 	ldw	r3,8(sp)
   136b8:	10fffc15 	stw	r3,-16(r2)
   136bc:	d8c00517 	ldw	r3,20(sp)
   136c0:	10fffd15 	stw	r3,-12(r2)
   136c4:	d8c02517 	ldw	r3,148(sp)
   136c8:	d8801a17 	ldw	r2,104(sp)
   136cc:	18bfff15 	stw	r2,-4(r3)
   136d0:	1805883a 	mov	r2,r3
   136d4:	d8c00117 	ldw	r3,4(sp)
   136d8:	10fffe15 	stw	r3,-8(r2)
   136dc:	00800184 	movi	r2,6
   136e0:	d8800015 	stw	r2,0(sp)
   136e4:	003edb06 	br	13254 <__gxx_personality_sj0+0x188>
   136e8:	d8800717 	ldw	r2,28(sp)
   136ec:	108000a8 	cmpgeui	r2,r2,2
   136f0:	103f181e 	bne	r2,zero,13354 <__gxx_personality_sj0+0x288>
   136f4:	d8802517 	ldw	r2,148(sp)
   136f8:	10800003 	ldbu	r2,0(r2)
   136fc:	1080004c 	andi	r2,r2,1
   13700:	10000626 	beq	r2,zero,1371c <__gxx_personality_sj0+0x650>
   13704:	d8802517 	ldw	r2,148(sp)
   13708:	10bff517 	ldw	r2,-44(r2)
   1370c:	10fff017 	ldw	r3,-64(r2)
   13710:	d8801a15 	stw	r2,104(sp)
   13714:	d8c00915 	stw	r3,36(sp)
   13718:	003f1106 	br	13360 <__gxx_personality_sj0+0x294>
   1371c:	d8802517 	ldw	r2,148(sp)
   13720:	10800504 	addi	r2,r2,20
   13724:	003ff906 	br	1370c <__gxx_personality_sj0+0x640>
   13728:	d8800a17 	ldw	r2,40(sp)
   1372c:	d8800115 	stw	r2,4(sp)
   13730:	003fdd06 	br	136a8 <__gxx_personality_sj0+0x5dc>
   13734:	00800044 	movi	r2,1
   13738:	d8800e15 	stw	r2,56(sp)
   1373c:	00139cc0 	call	139cc <_ZSt10unexpectedv>
   13740:	d9000f17 	ldw	r4,60(sp)
   13744:	0014e180 	call	14e18 <__cxa_begin_catch>
   13748:	00139a80 	call	139a8 <_ZSt9terminatev>
   1374c:	d8800a17 	ldw	r2,40(sp)
   13750:	d8800115 	stw	r2,4(sp)
   13754:	003ead06 	br	1320c <__gxx_personality_sj0+0x140>
   13758:	00bfffc4 	movi	r2,-1
   1375c:	d8800e15 	stw	r2,56(sp)
   13760:	00172240 	call	17224 <abort>

00013764 <__cxa_call_unexpected>:
   13764:	deffe704 	addi	sp,sp,-100
   13768:	01400074 	movhi	r5,1
   1376c:	00c000b4 	movhi	r3,2
   13770:	00800074 	movhi	r2,1
   13774:	294c3304 	addi	r5,r5,12492
   13778:	18e22004 	addi	r3,r3,-30592
   1377c:	108df904 	addi	r2,r2,14308
   13780:	d9000015 	stw	r4,0(sp)
   13784:	d9000404 	addi	r4,sp,16
   13788:	d9400a15 	stw	r5,40(sp)
   1378c:	d8c00b15 	stw	r3,44(sp)
   13790:	dfc01815 	stw	ra,96(sp)
   13794:	d8800d15 	stw	r2,52(sp)
   13798:	df001715 	stw	fp,92(sp)
   1379c:	df000c15 	stw	fp,48(sp)
   137a0:	dec00e15 	stw	sp,56(sp)
   137a4:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   137a8:	d9000017 	ldw	r4,0(sp)
   137ac:	0014e180 	call	14e18 <__cxa_begin_catch>
   137b0:	d8c00017 	ldw	r3,0(sp)
   137b4:	197ffd17 	ldw	r5,-12(r3)
   137b8:	18bffe17 	ldw	r2,-8(r3)
   137bc:	193ff717 	ldw	r4,-36(r3)
   137c0:	d9400115 	stw	r5,4(sp)
   137c4:	197ffb17 	ldw	r5,-20(r3)
   137c8:	18fff817 	ldw	r3,-32(r3)
   137cc:	d8801315 	stw	r2,76(sp)
   137d0:	00800044 	movi	r2,1
   137d4:	d9400015 	stw	r5,0(sp)
   137d8:	d8c00215 	stw	r3,8(sp)
   137dc:	d8800515 	stw	r2,20(sp)
   137e0:	00139bc0 	call	139bc <_ZN10__cxxabiv112__unexpectedEPFvvE>
   137e4:	d8c00617 	ldw	r3,24(sp)
   137e8:	d8800517 	ldw	r2,20(sp)
   137ec:	d8c00315 	stw	r3,12(sp)
   137f0:	10002b1e 	bne	r2,zero,138a0 <__cxa_call_unexpected+0x13c>
   137f4:	d9000317 	ldw	r4,12(sp)
   137f8:	0014e180 	call	14e18 <__cxa_begin_catch>
   137fc:	00150100 	call	15010 <__cxa_get_globals_fast>
   13800:	10800017 	ldw	r2,0(r2)
   13804:	10c00b03 	ldbu	r3,44(r2)
   13808:	18c0004c 	andi	r3,r3,1
   1380c:	18002e26 	beq	r3,zero,138c8 <__cxa_call_unexpected+0x164>
   13810:	10800017 	ldw	r2,0(r2)
   13814:	d8800315 	stw	r2,12(sp)
   13818:	d9400117 	ldw	r5,4(sp)
   1381c:	00800084 	movi	r2,2
   13820:	d9801104 	addi	r6,sp,68
   13824:	0009883a 	mov	r4,zero
   13828:	d8800515 	stw	r2,20(sp)
   1382c:	0012e900 	call	12e90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   13830:	d9800317 	ldw	r6,12(sp)
   13834:	d9c00017 	ldw	r7,0(sp)
   13838:	d9001104 	addi	r4,sp,68
   1383c:	317ff017 	ldw	r5,-64(r6)
   13840:	0012fbc0 	call	12fbc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13844:	10803fcc 	andi	r2,r2,255
   13848:	1000221e 	bne	r2,zero,138d4 <__cxa_call_unexpected+0x170>
   1384c:	d9c00017 	ldw	r7,0(sp)
   13850:	014000b4 	movhi	r5,2
   13854:	00800084 	movi	r2,2
   13858:	000d883a 	mov	r6,zero
   1385c:	29633004 	addi	r5,r5,-29504
   13860:	d9001104 	addi	r4,sp,68
   13864:	d8800515 	stw	r2,20(sp)
   13868:	0012fbc0 	call	12fbc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   1386c:	10803fcc 	andi	r2,r2,255
   13870:	10001926 	beq	r2,zero,138d8 <__cxa_call_unexpected+0x174>
   13874:	01000104 	movi	r4,4
   13878:	0014c640 	call	14c64 <__cxa_allocate_exception>
   1387c:	1009883a 	mov	r4,r2
   13880:	008000b4 	movhi	r2,2
   13884:	01800074 	movhi	r6,1
   13888:	014000b4 	movhi	r5,2
   1388c:	10a34b04 	addi	r2,r2,-29396
   13890:	3193f104 	addi	r6,r6,20420
   13894:	29633004 	addi	r5,r5,-29504
   13898:	20800015 	stw	r2,0(r4)
   1389c:	0013b0c0 	call	13b0c <__cxa_throw>
   138a0:	10bfffc4 	addi	r2,r2,-1
   138a4:	10000126 	beq	r2,zero,138ac <__cxa_call_unexpected+0x148>
   138a8:	003b68fa 	trap	3
   138ac:	d8000515 	stw	zero,20(sp)
   138b0:	0014ed00 	call	14ed0 <__cxa_end_catch>
   138b4:	0014ed00 	call	14ed0 <__cxa_end_catch>
   138b8:	d9000317 	ldw	r4,12(sp)
   138bc:	00bfffc4 	movi	r2,-1
   138c0:	d8800515 	stw	r2,20(sp)
   138c4:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>
   138c8:	10801004 	addi	r2,r2,64
   138cc:	d8800315 	stw	r2,12(sp)
   138d0:	003fd106 	br	13818 <__cxa_call_unexpected+0xb4>
   138d4:	0013b6c0 	call	13b6c <__cxa_rethrow>
   138d8:	d9000217 	ldw	r4,8(sp)
   138dc:	00138e00 	call	138e0 <_ZN10__cxxabiv111__terminateEPFvvE>

000138e0 <_ZN10__cxxabiv111__terminateEPFvvE>:
   138e0:	deffef04 	addi	sp,sp,-68
   138e4:	01400074 	movhi	r5,1
   138e8:	00c000b4 	movhi	r3,2
   138ec:	00800074 	movhi	r2,1
   138f0:	200d883a 	mov	r6,r4
   138f4:	108e4f04 	addi	r2,r2,14652
   138f8:	294c3304 	addi	r5,r5,12492
   138fc:	18e22404 	addi	r3,r3,-30576
   13900:	d9000204 	addi	r4,sp,8
   13904:	d8800b15 	stw	r2,44(sp)
   13908:	dfc01015 	stw	ra,64(sp)
   1390c:	df000f15 	stw	fp,60(sp)
   13910:	d9800015 	stw	r6,0(sp)
   13914:	d9400815 	stw	r5,32(sp)
   13918:	d8c00915 	stw	r3,36(sp)
   1391c:	df000a15 	stw	fp,40(sp)
   13920:	dec00c15 	stw	sp,48(sp)
   13924:	0016ce80 	call	16ce8 <_Unwind_SjLj_Register>
   13928:	00800044 	movi	r2,1
   1392c:	d8800315 	stw	r2,12(sp)
   13930:	d8800017 	ldw	r2,0(sp)
   13934:	103ee83a 	callr	r2
   13938:	00172240 	call	17224 <abort>
   1393c:	d8c00417 	ldw	r3,16(sp)
   13940:	d8800317 	ldw	r2,12(sp)
   13944:	d8c00015 	stw	r3,0(sp)
   13948:	d8c00517 	ldw	r3,20(sp)
   1394c:	d8c00115 	stw	r3,4(sp)
   13950:	1000051e 	bne	r2,zero,13968 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
   13954:	d9000017 	ldw	r4,0(sp)
   13958:	0014e180 	call	14e18 <__cxa_begin_catch>
   1395c:	00800084 	movi	r2,2
   13960:	d8800315 	stw	r2,12(sp)
   13964:	00172240 	call	17224 <abort>
   13968:	10bfffc4 	addi	r2,r2,-1
   1396c:	10000126 	beq	r2,zero,13974 <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
   13970:	003b68fa 	trap	3
   13974:	d8000315 	stw	zero,12(sp)
   13978:	0014ed00 	call	14ed0 <__cxa_end_catch>
   1397c:	d8c00117 	ldw	r3,4(sp)
   13980:	18bfffe0 	cmpeqi	r2,r3,-1
   13984:	10000426 	beq	r2,zero,13998 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
   13988:	d8800117 	ldw	r2,4(sp)
   1398c:	d9000017 	ldw	r4,0(sp)
   13990:	d8800315 	stw	r2,12(sp)
   13994:	00137640 	call	13764 <__cxa_call_unexpected>
   13998:	d9000017 	ldw	r4,0(sp)
   1399c:	00bfffc4 	movi	r2,-1
   139a0:	d8800315 	stw	r2,12(sp)
   139a4:	0016ed00 	call	16ed0 <_Unwind_SjLj_Resume>

000139a8 <_ZSt9terminatev>:
   139a8:	008000b4 	movhi	r2,2
   139ac:	1125bb17 	ldw	r4,-26900(r2)
   139b0:	deffff04 	addi	sp,sp,-4
   139b4:	dfc00015 	stw	ra,0(sp)
   139b8:	00138e00 	call	138e0 <_ZN10__cxxabiv111__terminateEPFvvE>

000139bc <_ZN10__cxxabiv112__unexpectedEPFvvE>:
   139bc:	deffff04 	addi	sp,sp,-4
   139c0:	dfc00015 	stw	ra,0(sp)
   139c4:	203ee83a 	callr	r4
   139c8:	00139a80 	call	139a8 <_ZSt9terminatev>

000139cc <_ZSt10unexpectedv>:
   139cc:	008000b4 	movhi	r2,2
   139d0:	1125b217 	ldw	r4,-26936(r2)
   139d4:	deffff04 	addi	sp,sp,-4
   139d8:	dfc00015 	stw	ra,0(sp)
   139dc:	00139bc0 	call	139bc <_ZN10__cxxabiv112__unexpectedEPFvvE>

000139e0 <_ZSt13set_terminatePFvvE>:
   139e0:	20000526 	beq	r4,zero,139f8 <_ZSt13set_terminatePFvvE+0x18>
   139e4:	00c000b4 	movhi	r3,2
   139e8:	008000b4 	movhi	r2,2
   139ec:	10a5bb17 	ldw	r2,-26900(r2)
   139f0:	1925bb15 	stw	r4,-26900(r3)
   139f4:	f800283a 	ret
   139f8:	01000074 	movhi	r4,1
   139fc:	211c8904 	addi	r4,r4,29220
   13a00:	003ff806 	br	139e4 <_ZSt13set_terminatePFvvE+0x4>

00013a04 <_ZSt13get_terminatev>:
   13a04:	008000b4 	movhi	r2,2
   13a08:	10a5bb17 	ldw	r2,-26900(r2)
   13a0c:	f800283a 	ret

00013a10 <_ZSt14set_unexpectedPFvvE>:
   13a10:	20000526 	beq	r4,zero,13a28 <_ZSt14set_unexpectedPFvvE+0x18>
   13a14:	00c000b4 	movhi	r3,2
   13a18:	008000b4 	movhi	r2,2
   13a1c:	10a5b217 	ldw	r2,-26936(r2)
   13a20:	1925b215 	stw	r4,-26936(r3)
   13a24:	f800283a 	ret
   13a28:	01000074 	movhi	r4,1
   13a2c:	210e6a04 	addi	r4,r4,14760
   13a30:	003ff806 	br	13a14 <_ZSt14set_unexpectedPFvvE+0x4>

00013a34 <_ZSt14get_unexpectedv>:
   13a34:	008000b4 	movhi	r2,2
   13a38:	10a5b217 	ldw	r2,-26936(r2)
   13a3c:	f800283a 	ret

00013a40 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   13a40:	defffe04 	addi	sp,sp,-8
   13a44:	dfc00115 	stw	ra,4(sp)
   13a48:	dc000015 	stw	r16,0(sp)
   13a4c:	210000b0 	cmpltui	r4,r4,2
   13a50:	20001326 	beq	r4,zero,13aa0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
   13a54:	28bff417 	ldw	r2,-48(r5)
   13a58:	10ffffc4 	addi	r3,r2,-1
   13a5c:	28fff415 	stw	r3,-48(r5)
   13a60:	10800058 	cmpnei	r2,r2,1
   13a64:	10000426 	beq	r2,zero,13a78 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
   13a68:	dfc00117 	ldw	ra,4(sp)
   13a6c:	dc000017 	ldw	r16,0(sp)
   13a70:	dec00204 	addi	sp,sp,8
   13a74:	f800283a 	ret
   13a78:	28bff617 	ldw	r2,-40(r5)
   13a7c:	2c000504 	addi	r16,r5,20
   13a80:	10000226 	beq	r2,zero,13a8c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
   13a84:	8009883a 	mov	r4,r16
   13a88:	103ee83a 	callr	r2
   13a8c:	8009883a 	mov	r4,r16
   13a90:	dfc00117 	ldw	ra,4(sp)
   13a94:	dc000017 	ldw	r16,0(sp)
   13a98:	dec00204 	addi	sp,sp,8
   13a9c:	0014cbc1 	jmpi	14cbc <__cxa_free_exception>
   13aa0:	293ff817 	ldw	r4,-32(r5)
   13aa4:	00138e00 	call	138e0 <_ZN10__cxxabiv111__terminateEPFvvE>

00013aa8 <__cxa_init_primary_exception>:
   13aa8:	defffe04 	addi	sp,sp,-8
   13aac:	dfc00115 	stw	ra,4(sp)
   13ab0:	dc000015 	stw	r16,0(sp)
   13ab4:	217ff015 	stw	r5,-64(r4)
   13ab8:	21bff115 	stw	r6,-60(r4)
   13abc:	203fef15 	stw	zero,-68(r4)
   13ac0:	2021883a 	mov	r16,r4
   13ac4:	0013a340 	call	13a34 <_ZSt14get_unexpectedv>
   13ac8:	80bff215 	stw	r2,-56(r16)
   13acc:	0013a040 	call	13a04 <_ZSt13get_terminatev>
   13ad0:	0150caf4 	movhi	r5,17195
   13ad4:	0111d3b4 	movhi	r4,18254
   13ad8:	00c00074 	movhi	r3,1
   13adc:	294ac004 	addi	r5,r5,11008
   13ae0:	211550c4 	addi	r4,r4,21827
   13ae4:	18ce9004 	addi	r3,r3,14912
   13ae8:	80bff315 	stw	r2,-52(r16)
   13aec:	80bfef04 	addi	r2,r16,-68
   13af0:	817ffb15 	stw	r5,-20(r16)
   13af4:	813ffc15 	stw	r4,-16(r16)
   13af8:	80fffd15 	stw	r3,-12(r16)
   13afc:	dfc00117 	ldw	ra,4(sp)
   13b00:	dc000017 	ldw	r16,0(sp)
   13b04:	dec00204 	addi	sp,sp,8
   13b08:	f800283a 	ret

00013b0c <__cxa_throw>:
   13b0c:	defffc04 	addi	sp,sp,-16
   13b10:	dfc00315 	stw	ra,12(sp)
   13b14:	dc800215 	stw	r18,8(sp)
   13b18:	dc400115 	stw	r17,4(sp)
   13b1c:	dc000015 	stw	r16,0(sp)
   13b20:	2823883a 	mov	r17,r5
   13b24:	2021883a 	mov	r16,r4
   13b28:	3025883a 	mov	r18,r6
   13b2c:	001501c0 	call	1501c <__cxa_get_globals>
   13b30:	10c00117 	ldw	r3,4(r2)
   13b34:	900d883a 	mov	r6,r18
   13b38:	880b883a 	mov	r5,r17
   13b3c:	18c00044 	addi	r3,r3,1
   13b40:	8009883a 	mov	r4,r16
   13b44:	10c00115 	stw	r3,4(r2)
   13b48:	0013aa80 	call	13aa8 <__cxa_init_primary_exception>
   13b4c:	14000c04 	addi	r16,r2,48
   13b50:	00c00044 	movi	r3,1
   13b54:	10c00015 	stw	r3,0(r2)
   13b58:	8009883a 	mov	r4,r16
   13b5c:	0016dc40 	call	16dc4 <_Unwind_SjLj_RaiseException>
   13b60:	8009883a 	mov	r4,r16
   13b64:	0014e180 	call	14e18 <__cxa_begin_catch>
   13b68:	00139a80 	call	139a8 <_ZSt9terminatev>

00013b6c <__cxa_rethrow>:
   13b6c:	defffe04 	addi	sp,sp,-8
   13b70:	dfc00115 	stw	ra,4(sp)
   13b74:	dc000015 	stw	r16,0(sp)
   13b78:	001501c0 	call	1501c <__cxa_get_globals>
   13b7c:	10c00117 	ldw	r3,4(r2)
   13b80:	11000017 	ldw	r4,0(r2)
   13b84:	18c00044 	addi	r3,r3,1
   13b88:	10c00115 	stw	r3,4(r2)
   13b8c:	20001126 	beq	r4,zero,13bd4 <__cxa_rethrow+0x68>
   13b90:	20c00b17 	ldw	r3,44(r4)
   13b94:	21800c17 	ldw	r6,48(r4)
   13b98:	016f3574 	movhi	r5,48341
   13b9c:	29754004 	addi	r5,r5,-11008
   13ba0:	01ee2cb4 	movhi	r7,47282
   13ba4:	39eaaf04 	addi	r7,r7,-21828
   13ba8:	194b883a 	add	r5,r3,r5
   13bac:	28c7803a 	cmpltu	r3,r5,r3
   13bb0:	31cd883a 	add	r6,r6,r7
   13bb4:	1987883a 	add	r3,r3,r6
   13bb8:	18000726 	beq	r3,zero,13bd8 <__cxa_rethrow+0x6c>
   13bbc:	10000015 	stw	zero,0(r2)
   13bc0:	24000b04 	addi	r16,r4,44
   13bc4:	8009883a 	mov	r4,r16
   13bc8:	0016f140 	call	16f14 <_Unwind_SjLj_Resume_or_Rethrow>
   13bcc:	8009883a 	mov	r4,r16
   13bd0:	0014e180 	call	14e18 <__cxa_begin_catch>
   13bd4:	00139a80 	call	139a8 <_ZSt9terminatev>
   13bd8:	294000a8 	cmpgeui	r5,r5,2
   13bdc:	283ff71e 	bne	r5,zero,13bbc <__cxa_rethrow+0x50>
   13be0:	20800517 	ldw	r2,20(r4)
   13be4:	0085c83a 	sub	r2,zero,r2
   13be8:	20800515 	stw	r2,20(r4)
   13bec:	003ff406 	br	13bc0 <__cxa_rethrow+0x54>

00013bf0 <_ZNK10__cxxabiv120__function_type_info15__is_function_pEv>:
   13bf0:	00800044 	movi	r2,1
   13bf4:	f800283a 	ret

00013bf8 <_ZN10__cxxabiv120__function_type_infoD1Ev>:
   13bf8:	008000b4 	movhi	r2,2
   13bfc:	10a2b404 	addi	r2,r2,-30000
   13c00:	20800015 	stw	r2,0(r4)
   13c04:	00140001 	jmpi	14000 <_ZNSt9type_infoD1Ev>

00013c08 <_ZN10__cxxabiv120__function_type_infoD0Ev>:
   13c08:	defffe04 	addi	sp,sp,-8
   13c0c:	008000b4 	movhi	r2,2
   13c10:	dc000015 	stw	r16,0(sp)
   13c14:	dfc00115 	stw	ra,4(sp)
   13c18:	10a2b404 	addi	r2,r2,-30000
   13c1c:	20800015 	stw	r2,0(r4)
   13c20:	2021883a 	mov	r16,r4
   13c24:	00140000 	call	14000 <_ZNSt9type_infoD1Ev>
   13c28:	01400204 	movi	r5,8
   13c2c:	8009883a 	mov	r4,r16
   13c30:	dfc00117 	ldw	ra,4(sp)
   13c34:	dc000017 	ldw	r16,0(sp)
   13c38:	dec00204 	addi	sp,sp,8
   13c3c:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00013c40 <_Znaj>:
   13c40:	00150701 	jmpi	15070 <_Znwj>

00013c44 <_ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv>:
   13c44:	00800044 	movi	r2,1
   13c48:	f800283a 	ret

00013c4c <_ZN10__cxxabiv119__pointer_type_infoD1Ev>:
   13c4c:	008000b4 	movhi	r2,2
   13c50:	10a2c804 	addi	r2,r2,-29920
   13c54:	20800015 	stw	r2,0(r4)
   13c58:	00150f81 	jmpi	150f8 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

00013c5c <_ZN10__cxxabiv119__pointer_type_infoD0Ev>:
   13c5c:	defffe04 	addi	sp,sp,-8
   13c60:	008000b4 	movhi	r2,2
   13c64:	dc000015 	stw	r16,0(sp)
   13c68:	dfc00115 	stw	ra,4(sp)
   13c6c:	10a2c804 	addi	r2,r2,-29920
   13c70:	20800015 	stw	r2,0(r4)
   13c74:	2021883a 	mov	r16,r4
   13c78:	00150f80 	call	150f8 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   13c7c:	01400404 	movi	r5,16
   13c80:	8009883a 	mov	r4,r16
   13c84:	dfc00117 	ldw	ra,4(sp)
   13c88:	dc000017 	ldw	r16,0(sp)
   13c8c:	dec00204 	addi	sp,sp,8
   13c90:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00013c94 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   13c94:	defffb04 	addi	sp,sp,-20
   13c98:	dc800315 	stw	r18,12(sp)
   13c9c:	dc400215 	stw	r17,8(sp)
   13ca0:	dfc00415 	stw	ra,16(sp)
   13ca4:	388000a8 	cmpgeui	r2,r7,2
   13ca8:	24800317 	ldw	r18,12(r4)
   13cac:	2823883a 	mov	r17,r5
   13cb0:	10000a26 	beq	r2,zero,13cdc <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x48>
   13cb4:	90800017 	ldw	r2,0(r18)
   13cb8:	89400317 	ldw	r5,12(r17)
   13cbc:	39c00084 	addi	r7,r7,2
   13cc0:	10800417 	ldw	r2,16(r2)
   13cc4:	9009883a 	mov	r4,r18
   13cc8:	dfc00417 	ldw	ra,16(sp)
   13ccc:	dc800317 	ldw	r18,12(sp)
   13cd0:	dc400217 	ldw	r17,8(sp)
   13cd4:	dec00504 	addi	sp,sp,20
   13cd8:	1000683a 	jmp	r2
   13cdc:	008000b4 	movhi	r2,2
   13ce0:	91000117 	ldw	r4,4(r18)
   13ce4:	11663a17 	ldw	r5,-26392(r2)
   13ce8:	21400926 	beq	r4,r5,13d10 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x7c>
   13cec:	20800007 	ldb	r2,0(r4)
   13cf0:	10800aa0 	cmpeqi	r2,r2,42
   13cf4:	103fef1e 	bne	r2,zero,13cb4 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   13cf8:	d9c00115 	stw	r7,4(sp)
   13cfc:	d9800015 	stw	r6,0(sp)
   13d00:	001779c0 	call	1779c <strcmp>
   13d04:	d9800017 	ldw	r6,0(sp)
   13d08:	d9c00117 	ldw	r7,4(sp)
   13d0c:	103fe91e 	bne	r2,zero,13cb4 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   13d10:	89000317 	ldw	r4,12(r17)
   13d14:	20800017 	ldw	r2,0(r4)
   13d18:	10800317 	ldw	r2,12(r2)
   13d1c:	103ee83a 	callr	r2
   13d20:	1080005c 	xori	r2,r2,1
   13d24:	dfc00417 	ldw	ra,16(sp)
   13d28:	dc800317 	ldw	r18,12(sp)
   13d2c:	dc400217 	ldw	r17,8(sp)
   13d30:	dec00504 	addi	sp,sp,20
   13d34:	f800283a 	ret

00013d38 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   13d38:	008000b4 	movhi	r2,2
   13d3c:	10a2de04 	addi	r2,r2,-29832
   13d40:	20800015 	stw	r2,0(r4)
   13d44:	001298c1 	jmpi	1298c <_ZN10__cxxabiv117__class_type_infoD1Ev>

00013d48 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   13d48:	defffe04 	addi	sp,sp,-8
   13d4c:	008000b4 	movhi	r2,2
   13d50:	dc000015 	stw	r16,0(sp)
   13d54:	dfc00115 	stw	ra,4(sp)
   13d58:	10a2de04 	addi	r2,r2,-29832
   13d5c:	20800015 	stw	r2,0(r4)
   13d60:	2021883a 	mov	r16,r4
   13d64:	001298c0 	call	1298c <_ZN10__cxxabiv117__class_type_infoD1Ev>
   13d68:	01400304 	movi	r5,12
   13d6c:	8009883a 	mov	r4,r16
   13d70:	dfc00117 	ldw	ra,4(sp)
   13d74:	dc000017 	ldw	r16,0(sp)
   13d78:	dec00204 	addi	sp,sp,8
   13d7c:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00013d80 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   13d80:	defff504 	addi	sp,sp,-44
   13d84:	dcc00415 	stw	r19,16(sp)
   13d88:	38800117 	ldw	r2,4(r7)
   13d8c:	24c00117 	ldw	r19,4(r4)
   13d90:	df000915 	stw	fp,36(sp)
   13d94:	dd800715 	stw	r22,28(sp)
   13d98:	dd400615 	stw	r21,24(sp)
   13d9c:	dd000515 	stw	r20,20(sp)
   13da0:	dc000115 	stw	r16,4(sp)
   13da4:	dfc00a15 	stw	ra,40(sp)
   13da8:	ddc00815 	stw	r23,32(sp)
   13dac:	dc800315 	stw	r18,12(sp)
   13db0:	dc400215 	stw	r17,8(sp)
   13db4:	dd000b17 	ldw	r20,44(sp)
   13db8:	df000c17 	ldw	fp,48(sp)
   13dbc:	dd800d17 	ldw	r22,52(sp)
   13dc0:	dd400e17 	ldw	r21,56(sp)
   13dc4:	2821883a 	mov	r16,r5
   13dc8:	98800b26 	beq	r19,r2,13df8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
   13dcc:	9dc00007 	ldb	r23,0(r19)
   13dd0:	2025883a 	mov	r18,r4
   13dd4:	3823883a 	mov	r17,r7
   13dd8:	b8c00aa0 	cmpeqi	r3,r23,42
   13ddc:	18001a1e 	bne	r3,zero,13e48 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13de0:	100b883a 	mov	r5,r2
   13de4:	9809883a 	mov	r4,r19
   13de8:	d9800015 	stw	r6,0(sp)
   13dec:	001779c0 	call	1779c <strcmp>
   13df0:	d9800017 	ldw	r6,0(sp)
   13df4:	1000141e 	bne	r2,zero,13e48 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13df8:	ad000015 	stw	r20,0(r21)
   13dfc:	a9800115 	stw	r6,4(r21)
   13e00:	80003416 	blt	r16,zero,13ed4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
   13e04:	a421883a 	add	r16,r20,r16
   13e08:	b4003026 	beq	r22,r16,13ecc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
   13e0c:	00800044 	movi	r2,1
   13e10:	a8800315 	stw	r2,12(r21)
   13e14:	0005883a 	mov	r2,zero
   13e18:	dfc00a17 	ldw	ra,40(sp)
   13e1c:	df000917 	ldw	fp,36(sp)
   13e20:	ddc00817 	ldw	r23,32(sp)
   13e24:	dd800717 	ldw	r22,28(sp)
   13e28:	dd400617 	ldw	r21,24(sp)
   13e2c:	dd000517 	ldw	r20,20(sp)
   13e30:	dcc00417 	ldw	r19,16(sp)
   13e34:	dc800317 	ldw	r18,12(sp)
   13e38:	dc400217 	ldw	r17,8(sp)
   13e3c:	dc000117 	ldw	r16,4(sp)
   13e40:	dec00b04 	addi	sp,sp,44
   13e44:	f800283a 	ret
   13e48:	a5801526 	beq	r20,r22,13ea0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
   13e4c:	91000217 	ldw	r4,8(r18)
   13e50:	880f883a 	mov	r7,r17
   13e54:	800b883a 	mov	r5,r16
   13e58:	20800017 	ldw	r2,0(r4)
   13e5c:	dd400e15 	stw	r21,56(sp)
   13e60:	dd800d15 	stw	r22,52(sp)
   13e64:	df000c15 	stw	fp,48(sp)
   13e68:	dd000b15 	stw	r20,44(sp)
   13e6c:	10800717 	ldw	r2,28(r2)
   13e70:	dfc00a17 	ldw	ra,40(sp)
   13e74:	df000917 	ldw	fp,36(sp)
   13e78:	ddc00817 	ldw	r23,32(sp)
   13e7c:	dd800717 	ldw	r22,28(sp)
   13e80:	dd400617 	ldw	r21,24(sp)
   13e84:	dd000517 	ldw	r20,20(sp)
   13e88:	dcc00417 	ldw	r19,16(sp)
   13e8c:	dc800317 	ldw	r18,12(sp)
   13e90:	dc400217 	ldw	r17,8(sp)
   13e94:	dc000117 	ldw	r16,4(sp)
   13e98:	dec00b04 	addi	sp,sp,44
   13e9c:	1000683a 	jmp	r2
   13ea0:	e1400117 	ldw	r5,4(fp)
   13ea4:	99400726 	beq	r19,r5,13ec4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x144>
   13ea8:	bdc00aa0 	cmpeqi	r23,r23,42
   13eac:	b83fe71e 	bne	r23,zero,13e4c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13eb0:	9809883a 	mov	r4,r19
   13eb4:	d9800015 	stw	r6,0(sp)
   13eb8:	001779c0 	call	1779c <strcmp>
   13ebc:	d9800017 	ldw	r6,0(sp)
   13ec0:	103fe21e 	bne	r2,zero,13e4c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13ec4:	a9800215 	stw	r6,8(r21)
   13ec8:	003fd206 	br	13e14 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13ecc:	00800184 	movi	r2,6
   13ed0:	003fcf06 	br	13e10 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x90>
   13ed4:	843fff98 	cmpnei	r16,r16,-2
   13ed8:	803fce1e 	bne	r16,zero,13e14 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13edc:	003fcb06 	br	13e0c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x8c>

00013ee0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   13ee0:	defffa04 	addi	sp,sp,-24
   13ee4:	dc800415 	stw	r18,16(sp)
   13ee8:	dc800617 	ldw	r18,24(sp)
   13eec:	dc400315 	stw	r17,12(sp)
   13ef0:	dc000215 	stw	r16,8(sp)
   13ef4:	dfc00515 	stw	ra,20(sp)
   13ef8:	2021883a 	mov	r16,r4
   13efc:	2823883a 	mov	r17,r5
   13f00:	91800b26 	beq	r18,r6,13f30 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
   13f04:	81000217 	ldw	r4,8(r16)
   13f08:	880b883a 	mov	r5,r17
   13f0c:	20800017 	ldw	r2,0(r4)
   13f10:	dc800615 	stw	r18,24(sp)
   13f14:	10800817 	ldw	r2,32(r2)
   13f18:	dfc00517 	ldw	ra,20(sp)
   13f1c:	dc800417 	ldw	r18,16(sp)
   13f20:	dc400317 	ldw	r17,12(sp)
   13f24:	dc000217 	ldw	r16,8(sp)
   13f28:	dec00604 	addi	sp,sp,24
   13f2c:	1000683a 	jmp	r2
   13f30:	21000117 	ldw	r4,4(r4)
   13f34:	39400117 	ldw	r5,4(r7)
   13f38:	21400926 	beq	r4,r5,13f60 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
   13f3c:	20800007 	ldb	r2,0(r4)
   13f40:	10800aa0 	cmpeqi	r2,r2,42
   13f44:	103fef1e 	bne	r2,zero,13f04 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13f48:	d9c00115 	stw	r7,4(sp)
   13f4c:	d9800015 	stw	r6,0(sp)
   13f50:	001779c0 	call	1779c <strcmp>
   13f54:	d9800017 	ldw	r6,0(sp)
   13f58:	d9c00117 	ldw	r7,4(sp)
   13f5c:	103fe91e 	bne	r2,zero,13f04 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13f60:	00800184 	movi	r2,6
   13f64:	dfc00517 	ldw	ra,20(sp)
   13f68:	dc800417 	ldw	r18,16(sp)
   13f6c:	dc400317 	ldw	r17,12(sp)
   13f70:	dc000217 	ldw	r16,8(sp)
   13f74:	dec00604 	addi	sp,sp,24
   13f78:	f800283a 	ret

00013f7c <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   13f7c:	defffb04 	addi	sp,sp,-20
   13f80:	dcc00315 	stw	r19,12(sp)
   13f84:	dc800215 	stw	r18,8(sp)
   13f88:	dc400115 	stw	r17,4(sp)
   13f8c:	dc000015 	stw	r16,0(sp)
   13f90:	dfc00415 	stw	ra,16(sp)
   13f94:	2025883a 	mov	r18,r4
   13f98:	2827883a 	mov	r19,r5
   13f9c:	3021883a 	mov	r16,r6
   13fa0:	3823883a 	mov	r17,r7
   13fa4:	00129d40 	call	129d4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   13fa8:	10c03fcc 	andi	r3,r2,255
   13fac:	18000d1e 	bne	r3,zero,13fe4 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
   13fb0:	91000217 	ldw	r4,8(r18)
   13fb4:	880f883a 	mov	r7,r17
   13fb8:	800d883a 	mov	r6,r16
   13fbc:	20800017 	ldw	r2,0(r4)
   13fc0:	980b883a 	mov	r5,r19
   13fc4:	10800617 	ldw	r2,24(r2)
   13fc8:	dfc00417 	ldw	ra,16(sp)
   13fcc:	dcc00317 	ldw	r19,12(sp)
   13fd0:	dc800217 	ldw	r18,8(sp)
   13fd4:	dc400117 	ldw	r17,4(sp)
   13fd8:	dc000017 	ldw	r16,0(sp)
   13fdc:	dec00504 	addi	sp,sp,20
   13fe0:	1000683a 	jmp	r2
   13fe4:	dfc00417 	ldw	ra,16(sp)
   13fe8:	dcc00317 	ldw	r19,12(sp)
   13fec:	dc800217 	ldw	r18,8(sp)
   13ff0:	dc400117 	ldw	r17,4(sp)
   13ff4:	dc000017 	ldw	r16,0(sp)
   13ff8:	dec00504 	addi	sp,sp,20
   13ffc:	f800283a 	ret

00014000 <_ZNSt9type_infoD1Ev>:
   14000:	f800283a 	ret

00014004 <_ZNKSt9type_info14__is_pointer_pEv>:
   14004:	0005883a 	mov	r2,zero
   14008:	f800283a 	ret

0001400c <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
   1400c:	0005883a 	mov	r2,zero
   14010:	f800283a 	ret

00014014 <_ZNSt9type_infoD0Ev>:
   14014:	01400204 	movi	r5,8
   14018:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

0001401c <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   1401c:	21000117 	ldw	r4,4(r4)
   14020:	29400117 	ldw	r5,4(r5)
   14024:	21400c26 	beq	r4,r5,14058 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
   14028:	20800007 	ldb	r2,0(r4)
   1402c:	10800aa0 	cmpeqi	r2,r2,42
   14030:	1000071e 	bne	r2,zero,14050 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
   14034:	deffff04 	addi	sp,sp,-4
   14038:	dfc00015 	stw	ra,0(sp)
   1403c:	001779c0 	call	1779c <strcmp>
   14040:	1005003a 	cmpeq	r2,r2,zero
   14044:	dfc00017 	ldw	ra,0(sp)
   14048:	dec00104 	addi	sp,sp,4
   1404c:	f800283a 	ret
   14050:	0005883a 	mov	r2,zero
   14054:	f800283a 	ret
   14058:	00800044 	movi	r2,1
   1405c:	f800283a 	ret

00014060 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
   14060:	008000b4 	movhi	r2,2
   14064:	10a30204 	addi	r2,r2,-29688
   14068:	20800015 	stw	r2,0(r4)
   1406c:	001298c1 	jmpi	1298c <_ZN10__cxxabiv117__class_type_infoD1Ev>

00014070 <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
   14070:	defffe04 	addi	sp,sp,-8
   14074:	008000b4 	movhi	r2,2
   14078:	dc000015 	stw	r16,0(sp)
   1407c:	dfc00115 	stw	ra,4(sp)
   14080:	10a30204 	addi	r2,r2,-29688
   14084:	20800015 	stw	r2,0(r4)
   14088:	2021883a 	mov	r16,r4
   1408c:	001298c0 	call	1298c <_ZN10__cxxabiv117__class_type_infoD1Ev>
   14090:	01400604 	movi	r5,24
   14094:	8009883a 	mov	r4,r16
   14098:	dfc00117 	ldw	ra,4(sp)
   1409c:	dc000017 	ldw	r16,0(sp)
   140a0:	dec00204 	addi	sp,sp,8
   140a4:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000140a8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   140a8:	defff604 	addi	sp,sp,-40
   140ac:	dc800315 	stw	r18,12(sp)
   140b0:	dc800a17 	ldw	r18,40(sp)
   140b4:	ddc00815 	stw	r23,32(sp)
   140b8:	dd800715 	stw	r22,28(sp)
   140bc:	dd400615 	stw	r21,24(sp)
   140c0:	dc000115 	stw	r16,4(sp)
   140c4:	dfc00915 	stw	ra,36(sp)
   140c8:	dd000515 	stw	r20,20(sp)
   140cc:	dcc00415 	stw	r19,16(sp)
   140d0:	dc400215 	stw	r17,8(sp)
   140d4:	302f883a 	mov	r23,r6
   140d8:	2021883a 	mov	r16,r4
   140dc:	282b883a 	mov	r21,r5
   140e0:	382d883a 	mov	r22,r7
   140e4:	34803026 	beq	r6,r18,141a8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x100>
   140e8:	80800317 	ldw	r2,12(r16)
   140ec:	147fffc4 	addi	r17,r2,-1
   140f0:	10001d26 	beq	r2,zero,14168 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc0>
   140f4:	10800044 	addi	r2,r2,1
   140f8:	100490fa 	slli	r2,r2,3
   140fc:	acffff60 	cmpeqi	r19,r21,-3
   14100:	80a1883a 	add	r16,r16,r2
   14104:	80800117 	ldw	r2,4(r16)
   14108:	b00f883a 	mov	r7,r22
   1410c:	a80b883a 	mov	r5,r21
   14110:	1100008c 	andi	r4,r2,2
   14114:	8c7fffc4 	addi	r17,r17,-1
   14118:	10c0004c 	andi	r3,r2,1
   1411c:	20000f26 	beq	r4,zero,1415c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   14120:	1005d23a 	srai	r2,r2,8
   14124:	1829883a 	mov	r20,r3
   14128:	18000426 	beq	r3,zero,1413c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x94>
   1412c:	98000b1e 	bne	r19,zero,1415c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   14130:	b9800017 	ldw	r6,0(r23)
   14134:	3085883a 	add	r2,r6,r2
   14138:	10800017 	ldw	r2,0(r2)
   1413c:	81000017 	ldw	r4,0(r16)
   14140:	b88d883a 	add	r6,r23,r2
   14144:	20800017 	ldw	r2,0(r4)
   14148:	dc800015 	stw	r18,0(sp)
   1414c:	10800817 	ldw	r2,32(r2)
   14150:	103ee83a 	callr	r2
   14154:	10c00110 	cmplti	r3,r2,4
   14158:	18000f26 	beq	r3,zero,14198 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xf0>
   1415c:	88bfffe0 	cmpeqi	r2,r17,-1
   14160:	843ffe04 	addi	r16,r16,-8
   14164:	103fe726 	beq	r2,zero,14104 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5c>
   14168:	00800044 	movi	r2,1
   1416c:	dfc00917 	ldw	ra,36(sp)
   14170:	ddc00817 	ldw	r23,32(sp)
   14174:	dd800717 	ldw	r22,28(sp)
   14178:	dd400617 	ldw	r21,24(sp)
   1417c:	dd000517 	ldw	r20,20(sp)
   14180:	dcc00417 	ldw	r19,16(sp)
   14184:	dc800317 	ldw	r18,12(sp)
   14188:	dc400217 	ldw	r17,8(sp)
   1418c:	dc000117 	ldw	r16,4(sp)
   14190:	dec00a04 	addi	sp,sp,40
   14194:	f800283a 	ret
   14198:	a5003fcc 	andi	r20,r20,255
   1419c:	a03ff326 	beq	r20,zero,1416c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   141a0:	10800054 	ori	r2,r2,1
   141a4:	003ff106 	br	1416c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   141a8:	21000117 	ldw	r4,4(r4)
   141ac:	39400117 	ldw	r5,4(r7)
   141b0:	21400526 	beq	r4,r5,141c8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x120>
   141b4:	20800007 	ldb	r2,0(r4)
   141b8:	10800aa0 	cmpeqi	r2,r2,42
   141bc:	103fca1e 	bne	r2,zero,140e8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   141c0:	001779c0 	call	1779c <strcmp>
   141c4:	103fc81e 	bne	r2,zero,140e8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   141c8:	00800184 	movi	r2,6
   141cc:	003fe706 	br	1416c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>

000141d0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   141d0:	deffe504 	addi	sp,sp,-108
   141d4:	dc001115 	stw	r16,68(sp)
   141d8:	dc001e17 	ldw	r16,120(sp)
   141dc:	df001915 	stw	fp,100(sp)
   141e0:	dd401615 	stw	r21,88(sp)
   141e4:	80800417 	ldw	r2,16(r16)
   141e8:	dcc01415 	stw	r19,80(sp)
   141ec:	dc801315 	stw	r18,76(sp)
   141f0:	dfc01a15 	stw	ra,104(sp)
   141f4:	ddc01815 	stw	r23,96(sp)
   141f8:	dd801715 	stw	r22,92(sp)
   141fc:	dd001515 	stw	r20,84(sp)
   14200:	dc401215 	stw	r17,72(sp)
   14204:	1080040c 	andi	r2,r2,16
   14208:	d9000615 	stw	r4,24(sp)
   1420c:	dd401b17 	ldw	r21,108(sp)
   14210:	2839883a 	mov	fp,r5
   14214:	3025883a 	mov	r18,r6
   14218:	3827883a 	mov	r19,r7
   1421c:	10000226 	beq	r2,zero,14228 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58>
   14220:	20800217 	ldw	r2,8(r4)
   14224:	80800415 	stw	r2,16(r16)
   14228:	d8800617 	ldw	r2,24(sp)
   1422c:	11000117 	ldw	r4,4(r2)
   14230:	d8801d17 	ldw	r2,116(sp)
   14234:	a8801d26 	beq	r21,r2,142ac <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
   14238:	99400117 	ldw	r5,4(r19)
   1423c:	29000526 	beq	r5,r4,14254 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   14240:	20800007 	ldb	r2,0(r4)
   14244:	10800aa0 	cmpeqi	r2,r2,42
   14248:	1000201e 	bne	r2,zero,142cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   1424c:	001779c0 	call	1779c <strcmp>
   14250:	10001e1e 	bne	r2,zero,142cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   14254:	85400015 	stw	r21,0(r16)
   14258:	84800115 	stw	r18,4(r16)
   1425c:	e0011d16 	blt	fp,zero,146d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x504>
   14260:	d8801d17 	ldw	r2,116(sp)
   14264:	af15883a 	add	r10,r21,fp
   14268:	12814026 	beq	r2,r10,1476c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x59c>
   1426c:	00800044 	movi	r2,1
   14270:	80800315 	stw	r2,12(r16)
   14274:	0023883a 	mov	r17,zero
   14278:	8805883a 	mov	r2,r17
   1427c:	dfc01a17 	ldw	ra,104(sp)
   14280:	df001917 	ldw	fp,100(sp)
   14284:	ddc01817 	ldw	r23,96(sp)
   14288:	dd801717 	ldw	r22,92(sp)
   1428c:	dd401617 	ldw	r21,88(sp)
   14290:	dd001517 	ldw	r20,84(sp)
   14294:	dcc01417 	ldw	r19,80(sp)
   14298:	dc801317 	ldw	r18,76(sp)
   1429c:	dc401217 	ldw	r17,72(sp)
   142a0:	dc001117 	ldw	r16,68(sp)
   142a4:	dec01b04 	addi	sp,sp,108
   142a8:	f800283a 	ret
   142ac:	d8801c17 	ldw	r2,112(sp)
   142b0:	11400117 	ldw	r5,4(r2)
   142b4:	29012626 	beq	r5,r4,14750 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   142b8:	20800007 	ldb	r2,0(r4)
   142bc:	10800aa0 	cmpeqi	r2,r2,42
   142c0:	1000ea26 	beq	r2,zero,1466c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x49c>
   142c4:	98800117 	ldw	r2,4(r19)
   142c8:	113fe226 	beq	r2,r4,14254 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   142cc:	e000b516 	blt	fp,zero,145a4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3d4>
   142d0:	d8801d17 	ldw	r2,116(sp)
   142d4:	172fc83a 	sub	r23,r2,fp
   142d8:	dc001e15 	stw	r16,120(sp)
   142dc:	00800084 	movi	r2,2
   142e0:	b821883a 	mov	r16,r23
   142e4:	a82f883a 	mov	r23,r21
   142e8:	dd401e17 	ldw	r21,120(sp)
   142ec:	d8800915 	stw	r2,36(sp)
   142f0:	e0bfff98 	cmpnei	r2,fp,-2
   142f4:	0023883a 	mov	r17,zero
   142f8:	d80007c5 	stb	zero,31(sp)
   142fc:	05800044 	movi	r22,1
   14300:	d8800515 	stw	r2,20(sp)
   14304:	d8800617 	ldw	r2,24(sp)
   14308:	12400317 	ldw	r9,12(r2)
   1430c:	4d3fffc4 	addi	r20,r9,-1
   14310:	48007226 	beq	r9,zero,144dc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30c>
   14314:	4a400044 	addi	r9,r9,1
   14318:	481290fa 	slli	r9,r9,3
   1431c:	ddc01b15 	stw	r23,108(sp)
   14320:	e0ffffa0 	cmpeqi	r3,fp,-2
   14324:	a02f883a 	mov	r23,r20
   14328:	dd001b17 	ldw	r20,108(sp)
   1432c:	d8c00815 	stw	r3,32(sp)
   14330:	b0c03fcc 	andi	r3,r22,255
   14334:	126d883a 	add	r22,r2,r9
   14338:	e005883a 	mov	r2,fp
   1433c:	d8c00415 	stw	r3,16(sp)
   14340:	8039883a 	mov	fp,r16
   14344:	b021883a 	mov	r16,r22
   14348:	102d883a 	mov	r22,r2
   1434c:	80800117 	ldw	r2,4(r16)
   14350:	a9000417 	ldw	r4,16(r21)
   14354:	d8000c15 	stw	zero,48(sp)
   14358:	d8000d15 	stw	zero,52(sp)
   1435c:	d8000e15 	stw	zero,56(sp)
   14360:	d8000f15 	stw	zero,60(sp)
   14364:	d9001015 	stw	r4,64(sp)
   14368:	1180004c 	andi	r6,r2,1
   1436c:	1007d23a 	srai	r3,r2,8
   14370:	30009626 	beq	r6,zero,145cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3fc>
   14374:	a1c00017 	ldw	r7,0(r20)
   14378:	91800054 	ori	r6,r18,1
   1437c:	38c7883a 	add	r3,r7,r3
   14380:	18c00017 	ldw	r3,0(r3)
   14384:	a0c7883a 	add	r3,r20,r3
   14388:	e0000326 	beq	fp,zero,14398 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c8>
   1438c:	d9400417 	ldw	r5,16(sp)
   14390:	e0cf803a 	cmpltu	r7,fp,r3
   14394:	29c09526 	beq	r5,r7,145ec <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x41c>
   14398:	1080008c 	andi	r2,r2,2
   1439c:	1000041e 	bne	r2,zero,143b0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e0>
   143a0:	d8800517 	ldw	r2,20(sp)
   143a4:	10008e26 	beq	r2,zero,145e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x410>
   143a8:	00bfff44 	movi	r2,-3
   143ac:	308c703a 	and	r6,r6,r2
   143b0:	81000017 	ldw	r4,0(r16)
   143b4:	d9400c04 	addi	r5,sp,48
   143b8:	980f883a 	mov	r7,r19
   143bc:	20800017 	ldw	r2,0(r4)
   143c0:	d9400315 	stw	r5,12(sp)
   143c4:	d9401d17 	ldw	r5,116(sp)
   143c8:	d8c00015 	stw	r3,0(sp)
   143cc:	d9400215 	stw	r5,8(sp)
   143d0:	d9401c17 	ldw	r5,112(sp)
   143d4:	d9400115 	stw	r5,4(sp)
   143d8:	10800717 	ldw	r2,28(r2)
   143dc:	b00b883a 	mov	r5,r22
   143e0:	103ee83a 	callr	r2
   143e4:	a9800217 	ldw	r6,8(r21)
   143e8:	d9000e17 	ldw	r4,56(sp)
   143ec:	d8c00f17 	ldw	r3,60(sp)
   143f0:	3108b03a 	or	r4,r6,r4
   143f4:	a9000215 	stw	r4,8(r21)
   143f8:	19800198 	cmpnei	r6,r3,6
   143fc:	3000ca26 	beq	r6,zero,14728 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x558>
   14400:	d9800c17 	ldw	r6,48(sp)
   14404:	1a800098 	cmpnei	r10,r3,2
   14408:	300f883a 	mov	r7,r6
   1440c:	5000ce26 	beq	r10,zero,14748 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x578>
   14410:	89c03fcc 	andi	r7,r17,255
   14414:	abc00017 	ldw	r15,0(r21)
   14418:	38006e1e 	bne	r7,zero,145d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x404>
   1441c:	78001c26 	beq	r15,zero,14490 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c0>
   14420:	79807526 	beq	r15,r6,145f8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x428>
   14424:	30007926 	beq	r6,zero,1460c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x43c>
   14428:	20800110 	cmplti	r2,r4,4
   1442c:	ab000317 	ldw	r12,12(r21)
   14430:	1000331e 	bne	r2,zero,14500 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   14434:	2080004c 	andi	r2,r4,1
   14438:	10000326 	beq	r2,zero,14448 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x278>
   1443c:	a8800417 	ldw	r2,16(r21)
   14440:	1080008c 	andi	r2,r2,2
   14444:	10002e1e 	bne	r2,zero,14500 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   14448:	6000011e 	bne	r12,zero,14450 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x280>
   1444c:	03000044 	movi	r12,1
   14450:	1800011e 	bne	r3,zero,14458 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x288>
   14454:	00c00044 	movi	r3,1
   14458:	6015883a 	mov	r10,r12
   1445c:	50c4f03a 	xor	r2,r10,r3
   14460:	10800110 	cmplti	r2,r2,4
   14464:	181d883a 	mov	r14,r3
   14468:	10002c26 	beq	r2,zero,1451c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>
   1446c:	7294703a 	and	r10,r14,r10
   14470:	52800110 	cmplti	r10,r10,4
   14474:	5000cb26 	beq	r10,zero,147a4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5d4>
   14478:	a9000217 	ldw	r4,8(r21)
   1447c:	00800044 	movi	r2,1
   14480:	a8000015 	stw	zero,0(r21)
   14484:	a8800315 	stw	r2,12(r21)
   14488:	04400044 	movi	r17,1
   1448c:	00000a06 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14490:	d8c00d17 	ldw	r3,52(sp)
   14494:	a9800015 	stw	r6,0(r21)
   14498:	a8c00115 	stw	r3,4(r21)
   1449c:	30007126 	beq	r6,zero,14664 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x494>
   144a0:	20006e26 	beq	r4,zero,1465c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x48c>
   144a4:	d8c00617 	ldw	r3,24(sp)
   144a8:	1023883a 	mov	r17,r2
   144ac:	18c00217 	ldw	r3,8(r3)
   144b0:	18c0004c 	andi	r3,r3,1
   144b4:	183f7026 	beq	r3,zero,14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   144b8:	21000120 	cmpeqi	r4,r4,4
   144bc:	203f6e1e 	bne	r4,zero,14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   144c0:	bdffffc4 	addi	r23,r23,-1
   144c4:	b8bfffe0 	cmpeqi	r2,r23,-1
   144c8:	843ffe04 	addi	r16,r16,-8
   144cc:	103f9f26 	beq	r2,zero,1434c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17c>
   144d0:	e021883a 	mov	r16,fp
   144d4:	a02f883a 	mov	r23,r20
   144d8:	b039883a 	mov	fp,r22
   144dc:	d88007c3 	ldbu	r2,31(sp)
   144e0:	103f6526 	beq	r2,zero,14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   144e4:	d8800917 	ldw	r2,36(sp)
   144e8:	002d883a 	mov	r22,zero
   144ec:	10800058 	cmpnei	r2,r2,1
   144f0:	103f6126 	beq	r2,zero,14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   144f4:	00800044 	movi	r2,1
   144f8:	d8800915 	stw	r2,36(sp)
   144fc:	003f8106 	br	14304 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
   14500:	6015883a 	mov	r10,r12
   14504:	181d883a 	mov	r14,r3
   14508:	0300120e 	bge	zero,r12,14554 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x384>
   1450c:	00c0420e 	bge	zero,r3,14618 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x448>
   14510:	50c4f03a 	xor	r2,r10,r3
   14514:	10800110 	cmplti	r2,r2,4
   14518:	103fd41e 	bne	r2,zero,1446c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   1451c:	18800108 	cmpgei	r2,r3,4
   14520:	10004b26 	beq	r2,zero,14650 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x480>
   14524:	d9800c17 	ldw	r6,48(sp)
   14528:	1a80008c 	andi	r10,r3,2
   1452c:	d8800d17 	ldw	r2,52(sp)
   14530:	a9800015 	stw	r6,0(r21)
   14534:	0023883a 	mov	r17,zero
   14538:	a8800115 	stw	r2,4(r21)
   1453c:	a8c00315 	stw	r3,12(r21)
   14540:	503f4c1e 	bne	r10,zero,14274 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   14544:	1880004c 	andi	r2,r3,1
   14548:	10009b26 	beq	r2,zero,147b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e8>
   1454c:	a9000217 	ldw	r4,8(r21)
   14550:	003fd906 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14554:	18800110 	cmplti	r2,r3,4
   14558:	1000061e 	bne	r2,zero,14574 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3a4>
   1455c:	1880004c 	andi	r2,r3,1
   14560:	10001226 	beq	r2,zero,145ac <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   14564:	d8800617 	ldw	r2,24(sp)
   14568:	10800217 	ldw	r2,8(r2)
   1456c:	1080008c 	andi	r2,r2,2
   14570:	10000e26 	beq	r2,zero,145ac <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   14574:	b0005a16 	blt	r22,zero,146e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x510>
   14578:	d8801d17 	ldw	r2,116(sp)
   1457c:	7d9f883a 	add	r15,r15,r22
   14580:	13c07c26 	beq	r2,r15,14774 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5a4>
   14584:	00c09416 	blt	zero,r3,147d8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   14588:	d8c01d17 	ldw	r3,116(sp)
   1458c:	3585883a 	add	r2,r6,r22
   14590:	18808b26 	beq	r3,r2,147c0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   14594:	02800044 	movi	r10,1
   14598:	03000044 	movi	r12,1
   1459c:	5080005c 	xori	r2,r10,1
   145a0:	00002606 	br	1463c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x46c>
   145a4:	002f883a 	mov	r23,zero
   145a8:	003f4b06 	br	142d8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x108>
   145ac:	1880005c 	xori	r2,r3,1
   145b0:	10800108 	cmpgei	r2,r2,4
   145b4:	103fdc1e 	bne	r2,zero,14528 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x358>
   145b8:	00800044 	movi	r2,1
   145bc:	a8000015 	stw	zero,0(r21)
   145c0:	a8800315 	stw	r2,12(r21)
   145c4:	04400044 	movi	r17,1
   145c8:	003fbb06 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   145cc:	900d883a 	mov	r6,r18
   145d0:	003f6c06 	br	14384 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b4>
   145d4:	783f921e 	bne	r15,zero,14420 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x250>
   145d8:	303f931e 	bne	r6,zero,14428 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   145dc:	003fb606 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   145e0:	210000cc 	andi	r4,r4,3
   145e4:	203f701e 	bne	r4,zero,143a8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1d8>
   145e8:	003fb506 	br	144c0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   145ec:	00800044 	movi	r2,1
   145f0:	d88007c5 	stb	r2,31(sp)
   145f4:	003fb206 	br	144c0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   145f8:	a8800117 	ldw	r2,4(r21)
   145fc:	d8c00d17 	ldw	r3,52(sp)
   14600:	10c4b03a 	or	r2,r2,r3
   14604:	a8800115 	stw	r2,4(r21)
   14608:	003fab06 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   1460c:	10803fcc 	andi	r2,r2,255
   14610:	103f851e 	bne	r2,zero,14428 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   14614:	003fa806 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14618:	60800108 	cmpgei	r2,r12,4
   1461c:	10001a26 	beq	r2,zero,14688 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   14620:	6080004c 	andi	r2,r12,1
   14624:	10000426 	beq	r2,zero,14638 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x468>
   14628:	d8800617 	ldw	r2,24(sp)
   1462c:	10800217 	ldw	r2,8(r2)
   14630:	1080008c 	andi	r2,r2,2
   14634:	1000141e 	bne	r2,zero,14688 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   14638:	6080005c 	xori	r2,r12,1
   1463c:	10800108 	cmpgei	r2,r2,4
   14640:	103f8d26 	beq	r2,zero,14478 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2a8>
   14644:	5280008c 	andi	r10,r10,2
   14648:	6007883a 	mov	r3,r12
   1464c:	003fbb06 	br	1453c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   14650:	6280008c 	andi	r10,r12,2
   14654:	6007883a 	mov	r3,r12
   14658:	003fb806 	br	1453c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   1465c:	1023883a 	mov	r17,r2
   14660:	003f9706 	br	144c0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   14664:	1023883a 	mov	r17,r2
   14668:	003f9306 	br	144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   1466c:	d9000415 	stw	r4,16(sp)
   14670:	001779c0 	call	1779c <strcmp>
   14674:	d9000417 	ldw	r4,16(sp)
   14678:	10003526 	beq	r2,zero,14750 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   1467c:	99400117 	ldw	r5,4(r19)
   14680:	293ef21e 	bne	r5,r4,1424c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
   14684:	003ef306 	br	14254 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   14688:	d9800c17 	ldw	r6,48(sp)
   1468c:	b0003d0e 	bge	r22,zero,14784 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5b4>
   14690:	d8800517 	ldw	r2,20(sp)
   14694:	103fc126 	beq	r2,zero,1459c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14698:	d8c01d17 	ldw	r3,116(sp)
   1469c:	98800017 	ldw	r2,0(r19)
   146a0:	d9c01c17 	ldw	r7,112(sp)
   146a4:	d8c00015 	stw	r3,0(sp)
   146a8:	10800817 	ldw	r2,32(r2)
   146ac:	db000b15 	stw	r12,44(sp)
   146b0:	da800a15 	stw	r10,40(sp)
   146b4:	b00b883a 	mov	r5,r22
   146b8:	9809883a 	mov	r4,r19
   146bc:	103ee83a 	callr	r2
   146c0:	da800a17 	ldw	r10,40(sp)
   146c4:	db000b17 	ldw	r12,44(sp)
   146c8:	1007883a 	mov	r3,r2
   146cc:	101d883a 	mov	r14,r2
   146d0:	003f8f06 	br	14510 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   146d4:	e33fff98 	cmpnei	r12,fp,-2
   146d8:	603ee61e 	bne	r12,zero,14274 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   146dc:	003ee306 	br	1426c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9c>
   146e0:	d8800817 	ldw	r2,32(sp)
   146e4:	db800a15 	stw	r14,40(sp)
   146e8:	10001c1e 	bne	r2,zero,1475c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58c>
   146ec:	d8c00b15 	stw	r3,44(sp)
   146f0:	d8c01d17 	ldw	r3,116(sp)
   146f4:	98800017 	ldw	r2,0(r19)
   146f8:	d9c01c17 	ldw	r7,112(sp)
   146fc:	d8c00015 	stw	r3,0(sp)
   14700:	10800817 	ldw	r2,32(r2)
   14704:	780d883a 	mov	r6,r15
   14708:	b00b883a 	mov	r5,r22
   1470c:	9809883a 	mov	r4,r19
   14710:	103ee83a 	callr	r2
   14714:	db800a17 	ldw	r14,40(sp)
   14718:	d8c00b17 	ldw	r3,44(sp)
   1471c:	1019883a 	mov	r12,r2
   14720:	1015883a 	mov	r10,r2
   14724:	003f7906 	br	1450c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x33c>
   14728:	d9c00c17 	ldw	r7,48(sp)
   1472c:	a821883a 	mov	r16,r21
   14730:	80c00315 	stw	r3,12(r16)
   14734:	d8c00d17 	ldw	r3,52(sp)
   14738:	81c00015 	stw	r7,0(r16)
   1473c:	1023883a 	mov	r17,r2
   14740:	80c00115 	stw	r3,4(r16)
   14744:	003ecc06 	br	14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14748:	a821883a 	mov	r16,r21
   1474c:	003ff806 	br	14730 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x560>
   14750:	84800215 	stw	r18,8(r16)
   14754:	0023883a 	mov	r17,zero
   14758:	003ec706 	br	14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   1475c:	00c01e16 	blt	zero,r3,147d8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   14760:	03000044 	movi	r12,1
   14764:	02800044 	movi	r10,1
   14768:	003f8c06 	br	1459c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   1476c:	00800184 	movi	r2,6
   14770:	003ebf06 	br	14270 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa0>
   14774:	00c0150e 	bge	zero,r3,147cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5fc>
   14778:	02800184 	movi	r10,6
   1477c:	03000184 	movi	r12,6
   14780:	003f6306 	br	14510 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   14784:	d8c01d17 	ldw	r3,116(sp)
   14788:	3585883a 	add	r2,r6,r22
   1478c:	18bf831e 	bne	r3,r2,1459c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14790:	6080019c 	xori	r2,r12,6
   14794:	10800108 	cmpgei	r2,r2,4
   14798:	1000091e 	bne	r2,zero,147c0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   1479c:	03800184 	movi	r14,6
   147a0:	003f3206 	br	1446c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   147a4:	00800084 	movi	r2,2
   147a8:	a8000015 	stw	zero,0(r21)
   147ac:	a8800315 	stw	r2,12(r21)
   147b0:	04400044 	movi	r17,1
   147b4:	003eb006 	br	14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   147b8:	1023883a 	mov	r17,r2
   147bc:	003eae06 	br	14278 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   147c0:	02800084 	movi	r10,2
   147c4:	00c00184 	movi	r3,6
   147c8:	003f5806 	br	1452c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x35c>
   147cc:	03000184 	movi	r12,6
   147d0:	02800184 	movi	r10,6
   147d4:	003f9b06 	br	14644 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x474>
   147d8:	1880005c 	xori	r2,r3,1
   147dc:	10800108 	cmpgei	r2,r2,4
   147e0:	103f2626 	beq	r2,zero,1447c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2ac>
   147e4:	03000044 	movi	r12,1
   147e8:	003f4c06 	br	1451c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>

000147ec <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   147ec:	defff004 	addi	sp,sp,-64
   147f0:	dd800c15 	stw	r22,48(sp)
   147f4:	dd400b15 	stw	r21,44(sp)
   147f8:	dd000a15 	stw	r20,40(sp)
   147fc:	dcc00915 	stw	r19,36(sp)
   14800:	dc000615 	stw	r16,24(sp)
   14804:	dfc00f15 	stw	ra,60(sp)
   14808:	df000e15 	stw	fp,56(sp)
   1480c:	ddc00d15 	stw	r23,52(sp)
   14810:	dc800815 	stw	r18,32(sp)
   14814:	dc400715 	stw	r17,28(sp)
   14818:	2021883a 	mov	r16,r4
   1481c:	d9000115 	stw	r4,4(sp)
   14820:	2827883a 	mov	r19,r5
   14824:	3029883a 	mov	r20,r6
   14828:	382b883a 	mov	r21,r7
   1482c:	00129d40 	call	129d4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   14830:	102d883a 	mov	r22,r2
   14834:	10803fcc 	andi	r2,r2,255
   14838:	1000551e 	bne	r2,zero,14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   1483c:	ac400217 	ldw	r17,8(r21)
   14840:	8880040c 	andi	r2,r17,16
   14844:	10007c1e 	bne	r2,zero,14a38 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x24c>
   14848:	d8c00117 	ldw	r3,4(sp)
   1484c:	18800317 	ldw	r2,12(r3)
   14850:	15ffffc4 	addi	r23,r2,-1
   14854:	10007526 	beq	r2,zero,14a2c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   14858:	14000044 	addi	r16,r2,1
   1485c:	802090fa 	slli	r16,r16,3
   14860:	8880004c 	andi	r2,r17,1
   14864:	d8800015 	stw	r2,0(sp)
   14868:	1c21883a 	add	r16,r3,r16
   1486c:	00002706 	br	1490c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   14870:	1005d23a 	srai	r2,r2,8
   14874:	90000326 	beq	r18,zero,14884 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x98>
   14878:	a1800017 	ldw	r6,0(r20)
   1487c:	3085883a 	add	r2,r6,r2
   14880:	10800017 	ldw	r2,0(r2)
   14884:	a08d883a 	add	r6,r20,r2
   14888:	81000017 	ldw	r4,0(r16)
   1488c:	d9c00204 	addi	r7,sp,8
   14890:	980b883a 	mov	r5,r19
   14894:	20800017 	ldw	r2,0(r4)
   14898:	10800617 	ldw	r2,24(r2)
   1489c:	103ee83a 	callr	r2
   148a0:	102d883a 	mov	r22,r2
   148a4:	10803fcc 	andi	r2,r2,255
   148a8:	10001426 	beq	r2,zero,148fc <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   148ac:	d8800517 	ldw	r2,20(sp)
   148b0:	10800218 	cmpnei	r2,r2,8
   148b4:	10002226 	beq	r2,zero,14940 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x154>
   148b8:	d8800317 	ldw	r2,12(sp)
   148bc:	11000110 	cmplti	r4,r2,4
   148c0:	2000041e 	bne	r4,zero,148d4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   148c4:	e000031e 	bne	fp,zero,148d4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   148c8:	00ffff44 	movi	r3,-3
   148cc:	10c4703a 	and	r2,r2,r3
   148d0:	d8800315 	stw	r2,12(sp)
   148d4:	a8800317 	ldw	r2,12(r21)
   148d8:	10001d26 	beq	r2,zero,14950 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x164>
   148dc:	a9000017 	ldw	r4,0(r21)
   148e0:	d9400217 	ldw	r5,8(sp)
   148e4:	2140561e 	bne	r4,r5,14a40 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x254>
   148e8:	20003626 	beq	r4,zero,149c4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1d8>
   148ec:	a8800117 	ldw	r2,4(r21)
   148f0:	d9000317 	ldw	r4,12(sp)
   148f4:	1104b03a 	or	r2,r2,r4
   148f8:	a8800115 	stw	r2,4(r21)
   148fc:	bdffffc4 	addi	r23,r23,-1
   14900:	b8bfffd8 	cmpnei	r2,r23,-1
   14904:	843ffe04 	addi	r16,r16,-8
   14908:	10004826 	beq	r2,zero,14a2c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   1490c:	80800117 	ldw	r2,4(r16)
   14910:	d8c00017 	ldw	r3,0(sp)
   14914:	d8000215 	stw	zero,8(sp)
   14918:	1700008c 	andi	fp,r2,2
   1491c:	d8000315 	stw	zero,12(sp)
   14920:	dc400415 	stw	r17,16(sp)
   14924:	d8000515 	stw	zero,20(sp)
   14928:	e0c8b03a 	or	r4,fp,r3
   1492c:	1480004c 	andi	r18,r2,1
   14930:	203ff226 	beq	r4,zero,148fc <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14934:	a03fce1e 	bne	r20,zero,14870 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x84>
   14938:	000d883a 	mov	r6,zero
   1493c:	003fd206 	br	14888 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x9c>
   14940:	903fdd26 	beq	r18,zero,148b8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   14944:	80800017 	ldw	r2,0(r16)
   14948:	d8800515 	stw	r2,20(sp)
   1494c:	003fda06 	br	148b8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   14950:	d9000217 	ldw	r4,8(sp)
   14954:	d8800317 	ldw	r2,12(sp)
   14958:	a9000015 	stw	r4,0(r21)
   1495c:	d9000417 	ldw	r4,16(sp)
   14960:	a8800115 	stw	r2,4(r21)
   14964:	a9000215 	stw	r4,8(r21)
   14968:	d9000517 	ldw	r4,20(sp)
   1496c:	a9000315 	stw	r4,12(r21)
   14970:	11000110 	cmplti	r4,r2,4
   14974:	2000061e 	bne	r4,zero,14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14978:	1100008c 	andi	r4,r2,2
   1497c:	20002126 	beq	r4,zero,14a04 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x218>
   14980:	d8800117 	ldw	r2,4(sp)
   14984:	10800217 	ldw	r2,8(r2)
   14988:	1080004c 	andi	r2,r2,1
   1498c:	103fdb1e 	bne	r2,zero,148fc <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14990:	b005883a 	mov	r2,r22
   14994:	dfc00f17 	ldw	ra,60(sp)
   14998:	df000e17 	ldw	fp,56(sp)
   1499c:	ddc00d17 	ldw	r23,52(sp)
   149a0:	dd800c17 	ldw	r22,48(sp)
   149a4:	dd400b17 	ldw	r21,44(sp)
   149a8:	dd000a17 	ldw	r20,40(sp)
   149ac:	dcc00917 	ldw	r19,36(sp)
   149b0:	dc800817 	ldw	r18,32(sp)
   149b4:	dc400717 	ldw	r17,28(sp)
   149b8:	dc000617 	ldw	r16,24(sp)
   149bc:	dec01004 	addi	sp,sp,64
   149c0:	f800283a 	ret
   149c4:	d9000517 	ldw	r4,20(sp)
   149c8:	21400220 	cmpeqi	r5,r4,8
   149cc:	28000a1e 	bne	r5,zero,149f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   149d0:	11400220 	cmpeqi	r5,r2,8
   149d4:	2800081e 	bne	r5,zero,149f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   149d8:	21000117 	ldw	r4,4(r4)
   149dc:	11400117 	ldw	r5,4(r2)
   149e0:	217fc226 	beq	r4,r5,148ec <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   149e4:	20800007 	ldb	r2,0(r4)
   149e8:	10800aa0 	cmpeqi	r2,r2,42
   149ec:	1000021e 	bne	r2,zero,149f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   149f0:	001779c0 	call	1779c <strcmp>
   149f4:	103fbd26 	beq	r2,zero,148ec <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   149f8:	00800084 	movi	r2,2
   149fc:	a8800115 	stw	r2,4(r21)
   14a00:	003fe306 	br	14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14a04:	1080004c 	andi	r2,r2,1
   14a08:	103fe126 	beq	r2,zero,14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14a0c:	d8800117 	ldw	r2,4(sp)
   14a10:	10800217 	ldw	r2,8(r2)
   14a14:	1080008c 	andi	r2,r2,2
   14a18:	103fdd26 	beq	r2,zero,14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14a1c:	bdffffc4 	addi	r23,r23,-1
   14a20:	b8bfffd8 	cmpnei	r2,r23,-1
   14a24:	843ffe04 	addi	r16,r16,-8
   14a28:	103fb81e 	bne	r2,zero,1490c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   14a2c:	ad800117 	ldw	r22,4(r21)
   14a30:	b02cc03a 	cmpne	r22,r22,zero
   14a34:	003fd606 	br	14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14a38:	84400217 	ldw	r17,8(r16)
   14a3c:	003f8206 	br	14848 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x5c>
   14a40:	00800084 	movi	r2,2
   14a44:	a8000015 	stw	zero,0(r21)
   14a48:	a8800115 	stw	r2,4(r21)
   14a4c:	003fd006 	br	14990 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>

00014a50 <_ZNKSt17bad_function_call4whatEv>:
   14a50:	008000b4 	movhi	r2,2
   14a54:	10a30b04 	addi	r2,r2,-29652
   14a58:	f800283a 	ret

00014a5c <_ZNSt17bad_function_callD1Ev>:
   14a5c:	008000b4 	movhi	r2,2
   14a60:	10a31b04 	addi	r2,r2,-29588
   14a64:	20800015 	stw	r2,0(r4)
   14a68:	0014fc01 	jmpi	14fc0 <_ZNSt9exceptionD1Ev>

00014a6c <_ZNSt17bad_function_callD0Ev>:
   14a6c:	defffe04 	addi	sp,sp,-8
   14a70:	008000b4 	movhi	r2,2
   14a74:	dc000015 	stw	r16,0(sp)
   14a78:	dfc00115 	stw	ra,4(sp)
   14a7c:	10a31b04 	addi	r2,r2,-29588
   14a80:	20800015 	stw	r2,0(r4)
   14a84:	2021883a 	mov	r16,r4
   14a88:	0014fc00 	call	14fc0 <_ZNSt9exceptionD1Ev>
   14a8c:	8009883a 	mov	r4,r16
   14a90:	dfc00117 	ldw	ra,4(sp)
   14a94:	dc000017 	ldw	r16,0(sp)
   14a98:	dec00204 	addi	sp,sp,8
   14a9c:	0014ad41 	jmpi	14ad4 <_ZdlPv>

00014aa0 <_ZSt25__throw_bad_function_callv>:
   14aa0:	deffff04 	addi	sp,sp,-4
   14aa4:	01000104 	movi	r4,4
   14aa8:	dfc00015 	stw	ra,0(sp)
   14aac:	0014c640 	call	14c64 <__cxa_allocate_exception>
   14ab0:	1009883a 	mov	r4,r2
   14ab4:	008000b4 	movhi	r2,2
   14ab8:	01800074 	movhi	r6,1
   14abc:	014000b4 	movhi	r5,2
   14ac0:	10a31b04 	addi	r2,r2,-29588
   14ac4:	31929704 	addi	r6,r6,19036
   14ac8:	29631604 	addi	r5,r5,-29608
   14acc:	20800015 	stw	r2,0(r4)
   14ad0:	0013b0c0 	call	13b0c <__cxa_throw>

00014ad4 <_ZdlPv>:
   14ad4:	00172481 	jmpi	17248 <free>

00014ad8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
   14ad8:	014000b4 	movhi	r5,2
   14adc:	29681e04 	addi	r5,r5,-24456
   14ae0:	28c00117 	ldw	r3,4(r5)
   14ae4:	223fff04 	addi	r8,r4,-4
   14ae8:	18001a26 	beq	r3,zero,14b54 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   14aec:	227fff17 	ldw	r9,-4(r4)
   14af0:	424d883a 	add	r6,r8,r9
   14af4:	30c01736 	bltu	r6,r3,14b54 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   14af8:	18800117 	ldw	r2,4(r3)
   14afc:	19802326 	beq	r3,r6,14b8c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xb4>
   14b00:	01c000b4 	movhi	r7,2
   14b04:	39e81f04 	addi	r7,r7,-24452
   14b08:	10000726 	beq	r2,zero,14b28 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   14b0c:	3080062e 	bgeu	r6,r2,14b28 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   14b10:	11400117 	ldw	r5,4(r2)
   14b14:	19c00104 	addi	r7,r3,4
   14b18:	1007883a 	mov	r3,r2
   14b1c:	28001826 	beq	r5,zero,14b80 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xa8>
   14b20:	2805883a 	mov	r2,r5
   14b24:	30bffa36 	bltu	r6,r2,14b10 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x38>
   14b28:	30801026 	beq	r6,r2,14b6c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14b2c:	38800017 	ldw	r2,0(r7)
   14b30:	10c00017 	ldw	r3,0(r2)
   14b34:	10cb883a 	add	r5,r2,r3
   14b38:	41400926 	beq	r8,r5,14b60 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x88>
   14b3c:	10800117 	ldw	r2,4(r2)
   14b40:	227fff15 	stw	r9,-4(r4)
   14b44:	20800015 	stw	r2,0(r4)
   14b48:	38800017 	ldw	r2,0(r7)
   14b4c:	12000115 	stw	r8,4(r2)
   14b50:	f800283a 	ret
   14b54:	20c00015 	stw	r3,0(r4)
   14b58:	2a000115 	stw	r8,4(r5)
   14b5c:	f800283a 	ret
   14b60:	1a47883a 	add	r3,r3,r9
   14b64:	10c00015 	stw	r3,0(r2)
   14b68:	f800283a 	ret
   14b6c:	31400017 	ldw	r5,0(r6)
   14b70:	30800117 	ldw	r2,4(r6)
   14b74:	4953883a 	add	r9,r9,r5
   14b78:	18800115 	stw	r2,4(r3)
   14b7c:	003feb06 	br	14b2c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14b80:	0005883a 	mov	r2,zero
   14b84:	30bfe91e 	bne	r6,r2,14b2c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14b88:	003ff806 	br	14b6c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14b8c:	18c00017 	ldw	r3,0(r3)
   14b90:	20800015 	stw	r2,0(r4)
   14b94:	1a53883a 	add	r9,r3,r9
   14b98:	227fff15 	stw	r9,-4(r4)
   14b9c:	2a000115 	stw	r8,4(r5)
   14ba0:	f800283a 	ret

00014ba4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
   14ba4:	21000104 	addi	r4,r4,4
   14ba8:	20800228 	cmpgeui	r2,r4,8
   14bac:	1000011e 	bne	r2,zero,14bb4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x10>
   14bb0:	01000204 	movi	r4,8
   14bb4:	008000b4 	movhi	r2,2
   14bb8:	10a81f17 	ldw	r2,-24452(r2)
   14bbc:	210000c4 	addi	r4,r4,3
   14bc0:	00ffff04 	movi	r3,-4
   14bc4:	20c8703a 	and	r4,r4,r3
   14bc8:	10001026 	beq	r2,zero,14c0c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x68>
   14bcc:	018000b4 	movhi	r6,2
   14bd0:	31a81f04 	addi	r6,r6,-24452
   14bd4:	00000206 	br	14be0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3c>
   14bd8:	19800104 	addi	r6,r3,4
   14bdc:	10001426 	beq	r2,zero,14c30 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x8c>
   14be0:	11400017 	ldw	r5,0(r2)
   14be4:	1007883a 	mov	r3,r2
   14be8:	10800117 	ldw	r2,4(r2)
   14bec:	293ffa36 	bltu	r5,r4,14bd8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x34>
   14bf0:	290fc83a 	sub	r7,r5,r4
   14bf4:	3a000228 	cmpgeui	r8,r7,8
   14bf8:	4000051e 	bne	r8,zero,14c10 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x6c>
   14bfc:	19400015 	stw	r5,0(r3)
   14c00:	30800015 	stw	r2,0(r6)
   14c04:	18800104 	addi	r2,r3,4
   14c08:	f800283a 	ret
   14c0c:	f800283a 	ret
   14c10:	190b883a 	add	r5,r3,r4
   14c14:	28800115 	stw	r2,4(r5)
   14c18:	30c00017 	ldw	r3,0(r6)
   14c1c:	29c00015 	stw	r7,0(r5)
   14c20:	19000015 	stw	r4,0(r3)
   14c24:	31400015 	stw	r5,0(r6)
   14c28:	18800104 	addi	r2,r3,4
   14c2c:	f800283a 	ret
   14c30:	f800283a 	ret

00014c34 <_ZN9__gnu_cxx9__freeresEv>:
   14c34:	008000b4 	movhi	r2,2
   14c38:	11282017 	ldw	r4,-24448(r2)
   14c3c:	20000826 	beq	r4,zero,14c60 <_ZN9__gnu_cxx9__freeresEv+0x2c>
   14c40:	deffff04 	addi	sp,sp,-4
   14c44:	dfc00015 	stw	ra,0(sp)
   14c48:	00172480 	call	17248 <free>
   14c4c:	008000b4 	movhi	r2,2
   14c50:	10282015 	stw	zero,-24448(r2)
   14c54:	dfc00017 	ldw	ra,0(sp)
   14c58:	dec00104 	addi	sp,sp,4
   14c5c:	f800283a 	ret
   14c60:	f800283a 	ret

00014c64 <__cxa_allocate_exception>:
   14c64:	defffe04 	addi	sp,sp,-8
   14c68:	dc000015 	stw	r16,0(sp)
   14c6c:	24001104 	addi	r16,r4,68
   14c70:	8009883a 	mov	r4,r16
   14c74:	dfc00115 	stw	ra,4(sp)
   14c78:	001723c0 	call	1723c <malloc>
   14c7c:	1007883a 	mov	r3,r2
   14c80:	10000926 	beq	r2,zero,14ca8 <__cxa_allocate_exception+0x44>
   14c84:	01801104 	movi	r6,68
   14c88:	000b883a 	mov	r5,zero
   14c8c:	1809883a 	mov	r4,r3
   14c90:	00172540 	call	17254 <memset>
   14c94:	10801104 	addi	r2,r2,68
   14c98:	dfc00117 	ldw	ra,4(sp)
   14c9c:	dc000017 	ldw	r16,0(sp)
   14ca0:	dec00204 	addi	sp,sp,8
   14ca4:	f800283a 	ret
   14ca8:	8009883a 	mov	r4,r16
   14cac:	0014ba40 	call	14ba4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14cb0:	1007883a 	mov	r3,r2
   14cb4:	103ff31e 	bne	r2,zero,14c84 <__cxa_allocate_exception+0x20>
   14cb8:	00139a80 	call	139a8 <_ZSt9terminatev>

00014cbc <__cxa_free_exception>:
   14cbc:	008000b4 	movhi	r2,2
   14cc0:	10a81e04 	addi	r2,r2,-24456
   14cc4:	10c00217 	ldw	r3,8(r2)
   14cc8:	213fef04 	addi	r4,r4,-68
   14ccc:	1900042e 	bgeu	r3,r4,14ce0 <__cxa_free_exception+0x24>
   14cd0:	10800317 	ldw	r2,12(r2)
   14cd4:	1887883a 	add	r3,r3,r2
   14cd8:	20c0012e 	bgeu	r4,r3,14ce0 <__cxa_free_exception+0x24>
   14cdc:	0014ad81 	jmpi	14ad8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14ce0:	00172481 	jmpi	17248 <free>

00014ce4 <__cxa_allocate_dependent_exception>:
   14ce4:	deffff04 	addi	sp,sp,-4
   14ce8:	01001004 	movi	r4,64
   14cec:	dfc00015 	stw	ra,0(sp)
   14cf0:	001723c0 	call	1723c <malloc>
   14cf4:	1009883a 	mov	r4,r2
   14cf8:	10000626 	beq	r2,zero,14d14 <__cxa_allocate_dependent_exception+0x30>
   14cfc:	01801004 	movi	r6,64
   14d00:	000b883a 	mov	r5,zero
   14d04:	00172540 	call	17254 <memset>
   14d08:	dfc00017 	ldw	ra,0(sp)
   14d0c:	dec00104 	addi	sp,sp,4
   14d10:	f800283a 	ret
   14d14:	01001004 	movi	r4,64
   14d18:	0014ba40 	call	14ba4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14d1c:	1009883a 	mov	r4,r2
   14d20:	103ff61e 	bne	r2,zero,14cfc <__cxa_allocate_dependent_exception+0x18>
   14d24:	00139a80 	call	139a8 <_ZSt9terminatev>

00014d28 <__cxa_free_dependent_exception>:
   14d28:	00c000b4 	movhi	r3,2
   14d2c:	18e81e04 	addi	r3,r3,-24456
   14d30:	19400217 	ldw	r5,8(r3)
   14d34:	2005883a 	mov	r2,r4
   14d38:	2900042e 	bgeu	r5,r4,14d4c <__cxa_free_dependent_exception+0x24>
   14d3c:	18c00317 	ldw	r3,12(r3)
   14d40:	28cb883a 	add	r5,r5,r3
   14d44:	2140012e 	bgeu	r4,r5,14d4c <__cxa_free_dependent_exception+0x24>
   14d48:	0014ad81 	jmpi	14ad8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14d4c:	1009883a 	mov	r4,r2
   14d50:	00172481 	jmpi	17248 <free>

00014d54 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
   14d54:	defffd04 	addi	sp,sp,-12
   14d58:	dc000015 	stw	r16,0(sp)
   14d5c:	040000b4 	movhi	r16,2
   14d60:	dc400115 	stw	r17,4(sp)
   14d64:	84281e04 	addi	r16,r16,-24456
   14d68:	04424004 	movi	r17,2304
   14d6c:	01024004 	movi	r4,2304
   14d70:	dfc00215 	stw	ra,8(sp)
   14d74:	84400315 	stw	r17,12(r16)
   14d78:	001723c0 	call	1723c <malloc>
   14d7c:	80800215 	stw	r2,8(r16)
   14d80:	10000826 	beq	r2,zero,14da4 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
   14d84:	80800115 	stw	r2,4(r16)
   14d88:	14400015 	stw	r17,0(r2)
   14d8c:	10000115 	stw	zero,4(r2)
   14d90:	dfc00217 	ldw	ra,8(sp)
   14d94:	dc400117 	ldw	r17,4(sp)
   14d98:	dc000017 	ldw	r16,0(sp)
   14d9c:	dec00304 	addi	sp,sp,12
   14da0:	f800283a 	ret
   14da4:	008000b4 	movhi	r2,2
   14da8:	10282115 	stw	zero,-24444(r2)
   14dac:	008000b4 	movhi	r2,2
   14db0:	10281f15 	stw	zero,-24452(r2)
   14db4:	003ff606 	br	14d90 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

00014db8 <__cxa_call_terminate>:
   14db8:	defffe04 	addi	sp,sp,-8
   14dbc:	dfc00115 	stw	ra,4(sp)
   14dc0:	dc000015 	stw	r16,0(sp)
   14dc4:	20000d26 	beq	r4,zero,14dfc <__cxa_call_terminate+0x44>
   14dc8:	2021883a 	mov	r16,r4
   14dcc:	0014e180 	call	14e18 <__cxa_begin_catch>
   14dd0:	80800017 	ldw	r2,0(r16)
   14dd4:	81000117 	ldw	r4,4(r16)
   14dd8:	00ef3574 	movhi	r3,48341
   14ddc:	18f54004 	addi	r3,r3,-11008
   14de0:	016e2cb4 	movhi	r5,47282
   14de4:	296aaf04 	addi	r5,r5,-21828
   14de8:	10c7883a 	add	r3,r2,r3
   14dec:	1885803a 	cmpltu	r2,r3,r2
   14df0:	2149883a 	add	r4,r4,r5
   14df4:	1105883a 	add	r2,r2,r4
   14df8:	10000126 	beq	r2,zero,14e00 <__cxa_call_terminate+0x48>
   14dfc:	00139a80 	call	139a8 <_ZSt9terminatev>
   14e00:	18c000a8 	cmpgeui	r3,r3,2
   14e04:	183ffd1e 	bne	r3,zero,14dfc <__cxa_call_terminate+0x44>
   14e08:	813ff817 	ldw	r4,-32(r16)
   14e0c:	00138e00 	call	138e0 <_ZN10__cxxabiv111__terminateEPFvvE>

00014e10 <__cxa_get_exception_ptr>:
   14e10:	20bfff17 	ldw	r2,-4(r4)
   14e14:	f800283a 	ret

00014e18 <__cxa_begin_catch>:
   14e18:	defffe04 	addi	sp,sp,-8
   14e1c:	dc000015 	stw	r16,0(sp)
   14e20:	dfc00115 	stw	ra,4(sp)
   14e24:	2021883a 	mov	r16,r4
   14e28:	001501c0 	call	1501c <__cxa_get_globals>
   14e2c:	80c00017 	ldw	r3,0(r16)
   14e30:	81800117 	ldw	r6,4(r16)
   14e34:	012f3574 	movhi	r4,48341
   14e38:	21354004 	addi	r4,r4,-11008
   14e3c:	016e2cb4 	movhi	r5,47282
   14e40:	296aaf04 	addi	r5,r5,-21828
   14e44:	1909883a 	add	r4,r3,r4
   14e48:	314d883a 	add	r6,r6,r5
   14e4c:	20c7803a 	cmpltu	r3,r4,r3
   14e50:	1987883a 	add	r3,r3,r6
   14e54:	100b883a 	mov	r5,r2
   14e58:	81bff504 	addi	r6,r16,-44
   14e5c:	10800017 	ldw	r2,0(r2)
   14e60:	18000626 	beq	r3,zero,14e7c <__cxa_begin_catch+0x64>
   14e64:	1000191e 	bne	r2,zero,14ecc <__cxa_begin_catch+0xb4>
   14e68:	29800015 	stw	r6,0(r5)
   14e6c:	dfc00117 	ldw	ra,4(sp)
   14e70:	dc000017 	ldw	r16,0(sp)
   14e74:	dec00204 	addi	sp,sp,8
   14e78:	f800283a 	ret
   14e7c:	210000a8 	cmpgeui	r4,r4,2
   14e80:	203ff81e 	bne	r4,zero,14e64 <__cxa_begin_catch+0x4c>
   14e84:	80fffa17 	ldw	r3,-24(r16)
   14e88:	18000d16 	blt	r3,zero,14ec0 <__cxa_begin_catch+0xa8>
   14e8c:	18c00044 	addi	r3,r3,1
   14e90:	29000117 	ldw	r4,4(r5)
   14e94:	80fffa15 	stw	r3,-24(r16)
   14e98:	20ffffc4 	addi	r3,r4,-1
   14e9c:	28c00115 	stw	r3,4(r5)
   14ea0:	11800226 	beq	r2,r6,14eac <__cxa_begin_catch+0x94>
   14ea4:	80bff915 	stw	r2,-28(r16)
   14ea8:	29800015 	stw	r6,0(r5)
   14eac:	80bfff17 	ldw	r2,-4(r16)
   14eb0:	dfc00117 	ldw	ra,4(sp)
   14eb4:	dc000017 	ldw	r16,0(sp)
   14eb8:	dec00204 	addi	sp,sp,8
   14ebc:	f800283a 	ret
   14ec0:	01000044 	movi	r4,1
   14ec4:	20c7c83a 	sub	r3,r4,r3
   14ec8:	003ff106 	br	14e90 <__cxa_begin_catch+0x78>
   14ecc:	00139a80 	call	139a8 <_ZSt9terminatev>

00014ed0 <__cxa_end_catch>:
   14ed0:	deffff04 	addi	sp,sp,-4
   14ed4:	dfc00015 	stw	ra,0(sp)
   14ed8:	00150100 	call	15010 <__cxa_get_globals_fast>
   14edc:	11000017 	ldw	r4,0(r2)
   14ee0:	20001426 	beq	r4,zero,14f34 <__cxa_end_catch+0x64>
   14ee4:	20c00b17 	ldw	r3,44(r4)
   14ee8:	21800c17 	ldw	r6,48(r4)
   14eec:	016f3574 	movhi	r5,48341
   14ef0:	29754004 	addi	r5,r5,-11008
   14ef4:	01ee2cb4 	movhi	r7,47282
   14ef8:	39eaaf04 	addi	r7,r7,-21828
   14efc:	194b883a 	add	r5,r3,r5
   14f00:	28c7803a 	cmpltu	r3,r5,r3
   14f04:	31cd883a 	add	r6,r6,r7
   14f08:	1987883a 	add	r3,r3,r6
   14f0c:	1800111e 	bne	r3,zero,14f54 <__cxa_end_catch+0x84>
   14f10:	294000a8 	cmpgeui	r5,r5,2
   14f14:	28000f1e 	bne	r5,zero,14f54 <__cxa_end_catch+0x84>
   14f18:	20c00517 	ldw	r3,20(r4)
   14f1c:	18000816 	blt	r3,zero,14f40 <__cxa_end_catch+0x70>
   14f20:	18ffffc4 	addi	r3,r3,-1
   14f24:	18001026 	beq	r3,zero,14f68 <__cxa_end_catch+0x98>
   14f28:	18bfffd8 	cmpnei	r2,r3,-1
   14f2c:	10001426 	beq	r2,zero,14f80 <__cxa_end_catch+0xb0>
   14f30:	20c00515 	stw	r3,20(r4)
   14f34:	dfc00017 	ldw	ra,0(sp)
   14f38:	dec00104 	addi	sp,sp,4
   14f3c:	f800283a 	ret
   14f40:	18c00044 	addi	r3,r3,1
   14f44:	183ffa1e 	bne	r3,zero,14f30 <__cxa_end_catch+0x60>
   14f48:	21400417 	ldw	r5,16(r4)
   14f4c:	11400015 	stw	r5,0(r2)
   14f50:	003ff706 	br	14f30 <__cxa_end_catch+0x60>
   14f54:	21000b04 	addi	r4,r4,44
   14f58:	10000015 	stw	zero,0(r2)
   14f5c:	dfc00017 	ldw	ra,0(sp)
   14f60:	dec00104 	addi	sp,sp,4
   14f64:	0016f541 	jmpi	16f54 <_Unwind_DeleteException>
   14f68:	20c00417 	ldw	r3,16(r4)
   14f6c:	21000b04 	addi	r4,r4,44
   14f70:	10c00015 	stw	r3,0(r2)
   14f74:	dfc00017 	ldw	ra,0(sp)
   14f78:	dec00104 	addi	sp,sp,4
   14f7c:	0016f541 	jmpi	16f54 <_Unwind_DeleteException>
   14f80:	00139a80 	call	139a8 <_ZSt9terminatev>

00014f84 <_ZSt18uncaught_exceptionv>:
   14f84:	deffff04 	addi	sp,sp,-4
   14f88:	dfc00015 	stw	ra,0(sp)
   14f8c:	001501c0 	call	1501c <__cxa_get_globals>
   14f90:	10800117 	ldw	r2,4(r2)
   14f94:	1004c03a 	cmpne	r2,r2,zero
   14f98:	dfc00017 	ldw	ra,0(sp)
   14f9c:	dec00104 	addi	sp,sp,4
   14fa0:	f800283a 	ret

00014fa4 <_ZSt19uncaught_exceptionsv>:
   14fa4:	deffff04 	addi	sp,sp,-4
   14fa8:	dfc00015 	stw	ra,0(sp)
   14fac:	001501c0 	call	1501c <__cxa_get_globals>
   14fb0:	10800117 	ldw	r2,4(r2)
   14fb4:	dfc00017 	ldw	ra,0(sp)
   14fb8:	dec00104 	addi	sp,sp,4
   14fbc:	f800283a 	ret

00014fc0 <_ZNSt9exceptionD1Ev>:
   14fc0:	f800283a 	ret

00014fc4 <_ZNSt13bad_exceptionD1Ev>:
   14fc4:	f800283a 	ret

00014fc8 <_ZGTtNKSt9exception4whatEv>:
   14fc8:	008000b4 	movhi	r2,2
   14fcc:	10a31e04 	addi	r2,r2,-29576
   14fd0:	f800283a 	ret

00014fd4 <_ZGTtNKSt13bad_exception4whatEv>:
   14fd4:	008000b4 	movhi	r2,2
   14fd8:	10a32204 	addi	r2,r2,-29560
   14fdc:	f800283a 	ret

00014fe0 <_ZNSt9exceptionD0Ev>:
   14fe0:	01400104 	movi	r5,4
   14fe4:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00014fe8 <_ZNSt13bad_exceptionD0Ev>:
   14fe8:	01400104 	movi	r5,4
   14fec:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00014ff0 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
   14ff0:	f800283a 	ret

00014ff4 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
   14ff4:	01400104 	movi	r5,4
   14ff8:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00014ffc <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
   14ffc:	f800283a 	ret

00015000 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
   15000:	01400104 	movi	r5,4
   15004:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00015008 <_ZGTtNKSt9exceptionD1Ev>:
   15008:	f800283a 	ret

0001500c <_ZGTtNKSt13bad_exceptionD1Ev>:
   1500c:	f800283a 	ret

00015010 <__cxa_get_globals_fast>:
   15010:	008000b4 	movhi	r2,2
   15014:	10a7b604 	addi	r2,r2,-24872
   15018:	f800283a 	ret

0001501c <__cxa_get_globals>:
   1501c:	008000b4 	movhi	r2,2
   15020:	10a7b604 	addi	r2,r2,-24872
   15024:	f800283a 	ret

00015028 <_ZN10__cxxabiv123__fundamental_type_infoD1Ev>:
   15028:	008000b4 	movhi	r2,2
   1502c:	10a36704 	addi	r2,r2,-29284
   15030:	20800015 	stw	r2,0(r4)
   15034:	00140001 	jmpi	14000 <_ZNSt9type_infoD1Ev>

00015038 <_ZN10__cxxabiv123__fundamental_type_infoD0Ev>:
   15038:	defffe04 	addi	sp,sp,-8
   1503c:	008000b4 	movhi	r2,2
   15040:	dc000015 	stw	r16,0(sp)
   15044:	dfc00115 	stw	ra,4(sp)
   15048:	10a36704 	addi	r2,r2,-29284
   1504c:	20800015 	stw	r2,0(r4)
   15050:	2021883a 	mov	r16,r4
   15054:	00140000 	call	14000 <_ZNSt9type_infoD1Ev>
   15058:	01400204 	movi	r5,8
   1505c:	8009883a 	mov	r4,r16
   15060:	dfc00117 	ldw	ra,4(sp)
   15064:	dc000017 	ldw	r16,0(sp)
   15068:	dec00204 	addi	sp,sp,8
   1506c:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00015070 <_Znwj>:
   15070:	defffe04 	addi	sp,sp,-8
   15074:	dc000015 	stw	r16,0(sp)
   15078:	dfc00115 	stw	ra,4(sp)
   1507c:	2021883a 	mov	r16,r4
   15080:	2000011e 	bne	r4,zero,15088 <_Znwj+0x18>
   15084:	04000044 	movi	r16,1
   15088:	8009883a 	mov	r4,r16
   1508c:	001723c0 	call	1723c <malloc>
   15090:	10000426 	beq	r2,zero,150a4 <_Znwj+0x34>
   15094:	dfc00117 	ldw	ra,4(sp)
   15098:	dc000017 	ldw	r16,0(sp)
   1509c:	dec00204 	addi	sp,sp,8
   150a0:	f800283a 	ret
   150a4:	00155980 	call	15598 <_ZSt15get_new_handlerv>
   150a8:	10000226 	beq	r2,zero,150b4 <_Znwj+0x44>
   150ac:	103ee83a 	callr	r2
   150b0:	003ff506 	br	15088 <_Znwj+0x18>
   150b4:	01000104 	movi	r4,4
   150b8:	0014c640 	call	14c64 <__cxa_allocate_exception>
   150bc:	1009883a 	mov	r4,r2
   150c0:	008000b4 	movhi	r2,2
   150c4:	01800074 	movhi	r6,1
   150c8:	014000b4 	movhi	r5,2
   150cc:	10a46704 	addi	r2,r2,-28260
   150d0:	31952804 	addi	r6,r6,21664
   150d4:	29646204 	addi	r5,r5,-28280
   150d8:	20800015 	stw	r2,0(r4)
   150dc:	0013b0c0 	call	13b0c <__cxa_throw>

000150e0 <_ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj>:
   150e0:	21000317 	ldw	r4,12(r4)
   150e4:	29400317 	ldw	r5,12(r5)
   150e8:	39c00084 	addi	r7,r7,2
   150ec:	20800017 	ldw	r2,0(r4)
   150f0:	10800417 	ldw	r2,16(r2)
   150f4:	1000683a 	jmp	r2

000150f8 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>:
   150f8:	008000b4 	movhi	r2,2
   150fc:	10a43b04 	addi	r2,r2,-28436
   15100:	20800015 	stw	r2,0(r4)
   15104:	00140001 	jmpi	14000 <_ZNSt9type_infoD1Ev>

00015108 <_ZN10__cxxabiv117__pbase_type_infoD0Ev>:
   15108:	defffe04 	addi	sp,sp,-8
   1510c:	008000b4 	movhi	r2,2
   15110:	dc000015 	stw	r16,0(sp)
   15114:	dfc00115 	stw	ra,4(sp)
   15118:	10a43b04 	addi	r2,r2,-28436
   1511c:	20800015 	stw	r2,0(r4)
   15120:	2021883a 	mov	r16,r4
   15124:	00140000 	call	14000 <_ZNSt9type_infoD1Ev>
   15128:	01400404 	movi	r5,16
   1512c:	8009883a 	mov	r4,r16
   15130:	dfc00117 	ldw	ra,4(sp)
   15134:	dc000017 	ldw	r16,0(sp)
   15138:	dec00204 	addi	sp,sp,8
   1513c:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

00015140 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj>:
   15140:	defff804 	addi	sp,sp,-32
   15144:	dcc00315 	stw	r19,12(sp)
   15148:	dc400115 	stw	r17,4(sp)
   1514c:	2027883a 	mov	r19,r4
   15150:	2c400117 	ldw	r17,4(r5)
   15154:	21000117 	ldw	r4,4(r4)
   15158:	dfc00715 	stw	ra,28(sp)
   1515c:	dd800615 	stw	r22,24(sp)
   15160:	dd400515 	stw	r21,20(sp)
   15164:	dd000415 	stw	r20,16(sp)
   15168:	dc800215 	stw	r18,8(sp)
   1516c:	dc000015 	stw	r16,0(sp)
   15170:	24400926 	beq	r4,r17,15198 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
   15174:	20800007 	ldb	r2,0(r4)
   15178:	2821883a 	mov	r16,r5
   1517c:	3025883a 	mov	r18,r6
   15180:	10800aa0 	cmpeqi	r2,r2,42
   15184:	3829883a 	mov	r20,r7
   15188:	10000e1e 	bne	r2,zero,151c4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   1518c:	880b883a 	mov	r5,r17
   15190:	001779c0 	call	1779c <strcmp>
   15194:	10000b1e 	bne	r2,zero,151c4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   15198:	00800044 	movi	r2,1
   1519c:	dfc00717 	ldw	ra,28(sp)
   151a0:	dd800617 	ldw	r22,24(sp)
   151a4:	dd400517 	ldw	r21,20(sp)
   151a8:	dd000417 	ldw	r20,16(sp)
   151ac:	dcc00317 	ldw	r19,12(sp)
   151b0:	dc800217 	ldw	r18,8(sp)
   151b4:	dc400117 	ldw	r17,4(sp)
   151b8:	dc000017 	ldw	r16,0(sp)
   151bc:	dec00804 	addi	sp,sp,32
   151c0:	f800283a 	ret
   151c4:	008000b4 	movhi	r2,2
   151c8:	9d400017 	ldw	r21,0(r19)
   151cc:	11661217 	ldw	r5,-26552(r2)
   151d0:	adbfff17 	ldw	r22,-4(r21)
   151d4:	89403726 	beq	r17,r5,152b4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   151d8:	88800007 	ldb	r2,0(r17)
   151dc:	10800aa0 	cmpeqi	r2,r2,42
   151e0:	1000031e 	bne	r2,zero,151f0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   151e4:	8809883a 	mov	r4,r17
   151e8:	001779c0 	call	1779c <strcmp>
   151ec:	10003126 	beq	r2,zero,152b4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   151f0:	80006926 	beq	r16,zero,15398 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x258>
   151f4:	80800017 	ldw	r2,0(r16)
   151f8:	b1000117 	ldw	r4,4(r22)
   151fc:	10bfff17 	ldw	r2,-4(r2)
   15200:	11400117 	ldw	r5,4(r2)
   15204:	21400526 	beq	r4,r5,1521c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xdc>
   15208:	20800007 	ldb	r2,0(r4)
   1520c:	10800aa0 	cmpeqi	r2,r2,42
   15210:	1000421e 	bne	r2,zero,1531c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15214:	001779c0 	call	1779c <strcmp>
   15218:	1000401e 	bne	r2,zero,1531c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   1521c:	a080004c 	andi	r2,r20,1
   15220:	10003e26 	beq	r2,zero,1531c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15224:	99000217 	ldw	r4,8(r19)
   15228:	81800217 	ldw	r6,8(r16)
   1522c:	21c0180c 	andi	r7,r4,96
   15230:	3080180c 	andi	r2,r6,96
   15234:	01ca303a 	nor	r5,zero,r7
   15238:	288a703a 	and	r5,r5,r2
   1523c:	28000126 	beq	r5,zero,15244 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x104>
   15240:	31cc703a 	and	r6,r6,r7
   15244:	0084303a 	nor	r2,zero,r2
   15248:	0106303a 	nor	r3,zero,r4
   1524c:	11c4703a 	and	r2,r2,r7
   15250:	1986703a 	and	r3,r3,r6
   15254:	10c4b03a 	or	r2,r2,r3
   15258:	1000301e 	bne	r2,zero,1531c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   1525c:	2100004c 	andi	r4,r4,1
   15260:	20003c26 	beq	r4,zero,15354 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x214>
   15264:	a8c00617 	ldw	r3,24(r21)
   15268:	00800074 	movhi	r2,1
   1526c:	10943804 	addi	r2,r2,20704
   15270:	18803b1e 	bne	r3,r2,15360 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x220>
   15274:	99000317 	ldw	r4,12(r19)
   15278:	81400317 	ldw	r5,12(r16)
   1527c:	a1c00084 	addi	r7,r20,2
   15280:	20800017 	ldw	r2,0(r4)
   15284:	900d883a 	mov	r6,r18
   15288:	10800417 	ldw	r2,16(r2)
   1528c:	dfc00717 	ldw	ra,28(sp)
   15290:	dd800617 	ldw	r22,24(sp)
   15294:	dd400517 	ldw	r21,20(sp)
   15298:	dd000417 	ldw	r20,16(sp)
   1529c:	dcc00317 	ldw	r19,12(sp)
   152a0:	dc800217 	ldw	r18,8(sp)
   152a4:	dc400117 	ldw	r17,4(sp)
   152a8:	dc000017 	ldw	r16,0(sp)
   152ac:	dec00804 	addi	sp,sp,32
   152b0:	1000683a 	jmp	r2
   152b4:	008000b4 	movhi	r2,2
   152b8:	b4400117 	ldw	r17,4(r22)
   152bc:	1162c417 	ldw	r5,-29936(r2)
   152c0:	89401c26 	beq	r17,r5,15334 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   152c4:	88800007 	ldb	r2,0(r17)
   152c8:	10800aa0 	cmpeqi	r2,r2,42
   152cc:	1000151e 	bne	r2,zero,15324 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1e4>
   152d0:	8809883a 	mov	r4,r17
   152d4:	001779c0 	call	1779c <strcmp>
   152d8:	10001626 	beq	r2,zero,15334 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   152dc:	008000b4 	movhi	r2,2
   152e0:	11644f17 	ldw	r5,-28356(r2)
   152e4:	89400326 	beq	r17,r5,152f4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   152e8:	8809883a 	mov	r4,r17
   152ec:	001779c0 	call	1779c <strcmp>
   152f0:	103fbf1e 	bne	r2,zero,151f0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   152f4:	99000317 	ldw	r4,12(r19)
   152f8:	20800017 	ldw	r2,0(r4)
   152fc:	10800317 	ldw	r2,12(r2)
   15300:	103ee83a 	callr	r2
   15304:	10c03fcc 	andi	r3,r2,255
   15308:	18000d26 	beq	r3,zero,15340 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x200>
   1530c:	00c000b4 	movhi	r3,2
   15310:	18e63c04 	addi	r3,r3,-26384
   15314:	90c00015 	stw	r3,0(r18)
   15318:	003fa006 	br	1519c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   1531c:	0005883a 	mov	r2,zero
   15320:	003f9e06 	br	1519c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   15324:	008000b4 	movhi	r2,2
   15328:	10a44f17 	ldw	r2,-28356(r2)
   1532c:	88bfb01e 	bne	r17,r2,151f0 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   15330:	003ff006 	br	152f4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   15334:	90000015 	stw	zero,0(r18)
   15338:	00800044 	movi	r2,1
   1533c:	003f9706 	br	1519c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   15340:	008000b4 	movhi	r2,2
   15344:	10a63b04 	addi	r2,r2,-26388
   15348:	90800015 	stw	r2,0(r18)
   1534c:	00800044 	movi	r2,1
   15350:	003f9206 	br	1519c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   15354:	00bfff84 	movi	r2,-2
   15358:	a0a8703a 	and	r20,r20,r2
   1535c:	003fc106 	br	15264 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x124>
   15360:	a00f883a 	mov	r7,r20
   15364:	900d883a 	mov	r6,r18
   15368:	800b883a 	mov	r5,r16
   1536c:	9809883a 	mov	r4,r19
   15370:	dfc00717 	ldw	ra,28(sp)
   15374:	dd800617 	ldw	r22,24(sp)
   15378:	dd400517 	ldw	r21,20(sp)
   1537c:	dd000417 	ldw	r20,16(sp)
   15380:	dcc00317 	ldw	r19,12(sp)
   15384:	dc800217 	ldw	r18,8(sp)
   15388:	dc400117 	ldw	r17,4(sp)
   1538c:	dc000017 	ldw	r16,0(sp)
   15390:	dec00804 	addi	sp,sp,32
   15394:	1800683a 	jmp	r3
   15398:	001551c0 	call	1551c <__cxa_bad_typeid>

0001539c <_ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev>:
   1539c:	008000b4 	movhi	r2,2
   153a0:	10a45304 	addi	r2,r2,-28340
   153a4:	20800015 	stw	r2,0(r4)
   153a8:	00150f81 	jmpi	150f8 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

000153ac <_ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev>:
   153ac:	defffe04 	addi	sp,sp,-8
   153b0:	008000b4 	movhi	r2,2
   153b4:	dc000015 	stw	r16,0(sp)
   153b8:	dfc00115 	stw	ra,4(sp)
   153bc:	10a45304 	addi	r2,r2,-28340
   153c0:	20800015 	stw	r2,0(r4)
   153c4:	2021883a 	mov	r16,r4
   153c8:	00150f80 	call	150f8 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   153cc:	01400504 	movi	r5,20
   153d0:	8009883a 	mov	r4,r16
   153d4:	dfc00117 	ldw	ra,4(sp)
   153d8:	dc000017 	ldw	r16,0(sp)
   153dc:	dec00204 	addi	sp,sp,8
   153e0:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000153e4 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   153e4:	20c00417 	ldw	r3,16(r4)
   153e8:	28800417 	ldw	r2,16(r5)
   153ec:	defffb04 	addi	sp,sp,-20
   153f0:	dc400215 	stw	r17,8(sp)
   153f4:	dc000115 	stw	r16,4(sp)
   153f8:	2023883a 	mov	r17,r4
   153fc:	2821883a 	mov	r16,r5
   15400:	19000117 	ldw	r4,4(r3)
   15404:	11400117 	ldw	r5,4(r2)
   15408:	dc800315 	stw	r18,12(sp)
   1540c:	dfc00415 	stw	ra,16(sp)
   15410:	3825883a 	mov	r18,r7
   15414:	21400e26 	beq	r4,r5,15450 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   15418:	20800007 	ldb	r2,0(r4)
   1541c:	d9800015 	stw	r6,0(sp)
   15420:	10800aa0 	cmpeqi	r2,r2,42
   15424:	1000031e 	bne	r2,zero,15434 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x50>
   15428:	001779c0 	call	1779c <strcmp>
   1542c:	d9800017 	ldw	r6,0(sp)
   15430:	10000726 	beq	r2,zero,15450 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   15434:	0005883a 	mov	r2,zero
   15438:	dfc00417 	ldw	ra,16(sp)
   1543c:	dc800317 	ldw	r18,12(sp)
   15440:	dc400217 	ldw	r17,8(sp)
   15444:	dc000117 	ldw	r16,4(sp)
   15448:	dec00504 	addi	sp,sp,20
   1544c:	f800283a 	ret
   15450:	89000317 	ldw	r4,12(r17)
   15454:	81400317 	ldw	r5,12(r16)
   15458:	91c00084 	addi	r7,r18,2
   1545c:	20800017 	ldw	r2,0(r4)
   15460:	10800417 	ldw	r2,16(r2)
   15464:	dfc00417 	ldw	ra,16(sp)
   15468:	dc800317 	ldw	r18,12(sp)
   1546c:	dc400217 	ldw	r17,8(sp)
   15470:	dc000117 	ldw	r16,4(sp)
   15474:	dec00504 	addi	sp,sp,20
   15478:	1000683a 	jmp	r2

0001547c <__cxa_pure_virtual>:
   1547c:	deffff04 	addi	sp,sp,-4
   15480:	dfc00015 	stw	ra,0(sp)
   15484:	00139a80 	call	139a8 <_ZSt9terminatev>

00015488 <__cxa_deleted_virtual>:
   15488:	deffff04 	addi	sp,sp,-4
   1548c:	dfc00015 	stw	ra,0(sp)
   15490:	00139a80 	call	139a8 <_ZSt9terminatev>

00015494 <_ZNKSt9bad_alloc4whatEv>:
   15494:	008000b4 	movhi	r2,2
   15498:	10a45a04 	addi	r2,r2,-28312
   1549c:	f800283a 	ret

000154a0 <_ZNSt9bad_allocD1Ev>:
   154a0:	008000b4 	movhi	r2,2
   154a4:	10a46704 	addi	r2,r2,-28260
   154a8:	20800015 	stw	r2,0(r4)
   154ac:	0014fc01 	jmpi	14fc0 <_ZNSt9exceptionD1Ev>

000154b0 <_ZNSt9bad_allocD0Ev>:
   154b0:	defffe04 	addi	sp,sp,-8
   154b4:	008000b4 	movhi	r2,2
   154b8:	dc000015 	stw	r16,0(sp)
   154bc:	dfc00115 	stw	ra,4(sp)
   154c0:	10a46704 	addi	r2,r2,-28260
   154c4:	20800015 	stw	r2,0(r4)
   154c8:	2021883a 	mov	r16,r4
   154cc:	0014fc00 	call	14fc0 <_ZNSt9exceptionD1Ev>
   154d0:	01400104 	movi	r5,4
   154d4:	8009883a 	mov	r4,r16
   154d8:	dfc00117 	ldw	ra,4(sp)
   154dc:	dc000017 	ldw	r16,0(sp)
   154e0:	dec00204 	addi	sp,sp,8
   154e4:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000154e8 <__cxa_bad_cast>:
   154e8:	deffff04 	addi	sp,sp,-4
   154ec:	01000104 	movi	r4,4
   154f0:	dfc00015 	stw	ra,0(sp)
   154f4:	0014c640 	call	14c64 <__cxa_allocate_exception>
   154f8:	1009883a 	mov	r4,r2
   154fc:	008000b4 	movhi	r2,2
   15500:	01800074 	movhi	r6,1
   15504:	014000b4 	movhi	r5,2
   15508:	10a48c04 	addi	r2,r2,-28112
   1550c:	31958104 	addi	r6,r6,22020
   15510:	29648704 	addi	r5,r5,-28132
   15514:	20800015 	stw	r2,0(r4)
   15518:	0013b0c0 	call	13b0c <__cxa_throw>

0001551c <__cxa_bad_typeid>:
   1551c:	deffff04 	addi	sp,sp,-4
   15520:	01000104 	movi	r4,4
   15524:	dfc00015 	stw	ra,0(sp)
   15528:	0014c640 	call	14c64 <__cxa_allocate_exception>
   1552c:	1009883a 	mov	r4,r2
   15530:	008000b4 	movhi	r2,2
   15534:	01800074 	movhi	r6,1
   15538:	014000b4 	movhi	r5,2
   1553c:	10a49c04 	addi	r2,r2,-28048
   15540:	31959604 	addi	r6,r6,22104
   15544:	29649704 	addi	r5,r5,-28068
   15548:	20800015 	stw	r2,0(r4)
   1554c:	0013b0c0 	call	13b0c <__cxa_throw>

00015550 <__cxa_throw_bad_array_new_length>:
   15550:	deffff04 	addi	sp,sp,-4
   15554:	01000104 	movi	r4,4
   15558:	dfc00015 	stw	ra,0(sp)
   1555c:	0014c640 	call	14c64 <__cxa_allocate_exception>
   15560:	1009883a 	mov	r4,r2
   15564:	008000b4 	movhi	r2,2
   15568:	01800074 	movhi	r6,1
   1556c:	014000b4 	movhi	r5,2
   15570:	10a47d04 	addi	r2,r2,-28172
   15574:	31956c04 	addi	r6,r6,21936
   15578:	29647804 	addi	r5,r5,-28192
   1557c:	20800015 	stw	r2,0(r4)
   15580:	0013b0c0 	call	13b0c <__cxa_throw>

00015584 <_ZSt15set_new_handlerPFvvE>:
   15584:	00c000b4 	movhi	r3,2
   15588:	008000b4 	movhi	r2,2
   1558c:	10a7b817 	ldw	r2,-24864(r2)
   15590:	1927b815 	stw	r4,-24864(r3)
   15594:	f800283a 	ret

00015598 <_ZSt15get_new_handlerv>:
   15598:	008000b4 	movhi	r2,2
   1559c:	10a7b817 	ldw	r2,-24864(r2)
   155a0:	f800283a 	ret

000155a4 <_ZNKSt20bad_array_new_length4whatEv>:
   155a4:	008000b4 	movhi	r2,2
   155a8:	10a46a04 	addi	r2,r2,-28248
   155ac:	f800283a 	ret

000155b0 <_ZNSt20bad_array_new_lengthD1Ev>:
   155b0:	008000b4 	movhi	r2,2
   155b4:	10a47d04 	addi	r2,r2,-28172
   155b8:	20800015 	stw	r2,0(r4)
   155bc:	00154a01 	jmpi	154a0 <_ZNSt9bad_allocD1Ev>

000155c0 <_ZNSt20bad_array_new_lengthD0Ev>:
   155c0:	defffe04 	addi	sp,sp,-8
   155c4:	008000b4 	movhi	r2,2
   155c8:	dc000015 	stw	r16,0(sp)
   155cc:	dfc00115 	stw	ra,4(sp)
   155d0:	10a47d04 	addi	r2,r2,-28172
   155d4:	20800015 	stw	r2,0(r4)
   155d8:	2021883a 	mov	r16,r4
   155dc:	00154a00 	call	154a0 <_ZNSt9bad_allocD1Ev>
   155e0:	01400104 	movi	r5,4
   155e4:	8009883a 	mov	r4,r16
   155e8:	dfc00117 	ldw	ra,4(sp)
   155ec:	dc000017 	ldw	r16,0(sp)
   155f0:	dec00204 	addi	sp,sp,8
   155f4:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000155f8 <_ZNKSt8bad_cast4whatEv>:
   155f8:	008000b4 	movhi	r2,2
   155fc:	10a48004 	addi	r2,r2,-28160
   15600:	f800283a 	ret

00015604 <_ZNSt8bad_castD1Ev>:
   15604:	008000b4 	movhi	r2,2
   15608:	10a48c04 	addi	r2,r2,-28112
   1560c:	20800015 	stw	r2,0(r4)
   15610:	0014fc01 	jmpi	14fc0 <_ZNSt9exceptionD1Ev>

00015614 <_ZNSt8bad_castD0Ev>:
   15614:	defffe04 	addi	sp,sp,-8
   15618:	008000b4 	movhi	r2,2
   1561c:	dc000015 	stw	r16,0(sp)
   15620:	dfc00115 	stw	ra,4(sp)
   15624:	10a48c04 	addi	r2,r2,-28112
   15628:	20800015 	stw	r2,0(r4)
   1562c:	2021883a 	mov	r16,r4
   15630:	0014fc00 	call	14fc0 <_ZNSt9exceptionD1Ev>
   15634:	01400104 	movi	r5,4
   15638:	8009883a 	mov	r4,r16
   1563c:	dfc00117 	ldw	ra,4(sp)
   15640:	dc000017 	ldw	r16,0(sp)
   15644:	dec00204 	addi	sp,sp,8
   15648:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

0001564c <_ZNKSt10bad_typeid4whatEv>:
   1564c:	008000b4 	movhi	r2,2
   15650:	10a48f04 	addi	r2,r2,-28100
   15654:	f800283a 	ret

00015658 <_ZNSt10bad_typeidD1Ev>:
   15658:	008000b4 	movhi	r2,2
   1565c:	10a49c04 	addi	r2,r2,-28048
   15660:	20800015 	stw	r2,0(r4)
   15664:	0014fc01 	jmpi	14fc0 <_ZNSt9exceptionD1Ev>

00015668 <_ZNSt10bad_typeidD0Ev>:
   15668:	defffe04 	addi	sp,sp,-8
   1566c:	008000b4 	movhi	r2,2
   15670:	dc000015 	stw	r16,0(sp)
   15674:	dfc00115 	stw	ra,4(sp)
   15678:	10a49c04 	addi	r2,r2,-28048
   1567c:	20800015 	stw	r2,0(r4)
   15680:	2021883a 	mov	r16,r4
   15684:	0014fc00 	call	14fc0 <_ZNSt9exceptionD1Ev>
   15688:	01400104 	movi	r5,4
   1568c:	8009883a 	mov	r4,r16
   15690:	dfc00117 	ldw	ra,4(sp)
   15694:	dc000017 	ldw	r16,0(sp)
   15698:	dec00204 	addi	sp,sp,8
   1569c:	0012ba01 	jmpi	12ba0 <_ZdlPvj>

000156a0 <__divdf3>:
   156a0:	2810d53a 	srli	r8,r5,20
   156a4:	defff004 	addi	sp,sp,-64
   156a8:	dc000615 	stw	r16,24(sp)
   156ac:	04000434 	movhi	r16,16
   156b0:	df000e15 	stw	fp,56(sp)
   156b4:	ddc00d15 	stw	r23,52(sp)
   156b8:	dd800c15 	stw	r22,48(sp)
   156bc:	dd000a15 	stw	r20,40(sp)
   156c0:	843fffc4 	addi	r16,r16,-1
   156c4:	dfc00f15 	stw	ra,60(sp)
   156c8:	dd400b15 	stw	r21,44(sp)
   156cc:	dcc00915 	stw	r19,36(sp)
   156d0:	dc800815 	stw	r18,32(sp)
   156d4:	dc400715 	stw	r17,28(sp)
   156d8:	4201ffcc 	andi	r8,r8,2047
   156dc:	282ed7fa 	srli	r23,r5,31
   156e0:	3039883a 	mov	fp,r6
   156e4:	382d883a 	mov	r22,r7
   156e8:	2029883a 	mov	r20,r4
   156ec:	2c20703a 	and	r16,r5,r16
   156f0:	40006826 	beq	r8,zero,15894 <__divdf3+0x1f4>
   156f4:	4081ffe0 	cmpeqi	r2,r8,2047
   156f8:	1000791e 	bne	r2,zero,158e0 <__divdf3+0x240>
   156fc:	2026d77a 	srli	r19,r4,29
   15700:	800a90fa 	slli	r5,r16,3
   15704:	202890fa 	slli	r20,r4,3
   15708:	44bf0044 	addi	r18,r8,-1023
   1570c:	994ab03a 	or	r5,r19,r5
   15710:	2cc02034 	orhi	r19,r5,128
   15714:	0021883a 	mov	r16,zero
   15718:	0023883a 	mov	r17,zero
   1571c:	b010d53a 	srli	r8,r22,20
   15720:	00c00434 	movhi	r3,16
   15724:	18ffffc4 	addi	r3,r3,-1
   15728:	4201ffcc 	andi	r8,r8,2047
   1572c:	b02ad7fa 	srli	r21,r22,31
   15730:	b0ec703a 	and	r22,r22,r3
   15734:	40004626 	beq	r8,zero,15850 <__divdf3+0x1b0>
   15738:	4081ffe0 	cmpeqi	r2,r8,2047
   1573c:	10006f1e 	bne	r2,zero,158fc <__divdf3+0x25c>
   15740:	b00690fa 	slli	r3,r22,3
   15744:	e004d77a 	srli	r2,fp,29
   15748:	e01290fa 	slli	r9,fp,3
   1574c:	423f0044 	addi	r8,r8,-1023
   15750:	10c6b03a 	or	r3,r2,r3
   15754:	1d802034 	orhi	r22,r3,128
   15758:	9225c83a 	sub	r18,r18,r8
   1575c:	0007883a 	mov	r3,zero
   15760:	80800428 	cmpgeui	r2,r16,16
   15764:	bd4ef03a 	xor	r7,r23,r21
   15768:	1000a71e 	bne	r2,zero,15a08 <__divdf3+0x368>
   1576c:	800c90ba 	slli	r6,r16,2
   15770:	00800074 	movhi	r2,1
   15774:	3085883a 	add	r2,r6,r2
   15778:	1095e017 	ldw	r2,22400(r2)
   1577c:	1000683a 	jmp	r2
   15780:	00015a08 	cmpgei	zero,zero,1384
   15784:	0001582c 	andhi	zero,zero,1376
   15788:	000157dc 	xori	zero,zero,1375
   1578c:	0001583c 	xorhi	zero,zero,1376
   15790:	000157dc 	xori	zero,zero,1375
   15794:	000159ac 	andhi	zero,zero,1382
   15798:	000157dc 	xori	zero,zero,1375
   1579c:	0001583c 	xorhi	zero,zero,1376
   157a0:	0001582c 	andhi	zero,zero,1376
   157a4:	0001582c 	andhi	zero,zero,1376
   157a8:	000159ac 	andhi	zero,zero,1382
   157ac:	0001583c 	xorhi	zero,zero,1376
   157b0:	000157c0 	call	157c <__alt_mem_onchip_mem-0xea84>
   157b4:	000157c0 	call	157c <__alt_mem_onchip_mem-0xea84>
   157b8:	000157c0 	call	157c <__alt_mem_onchip_mem-0xea84>
   157bc:	000159c4 	movi	zero,1383
   157c0:	b80f883a 	mov	r7,r23
   157c4:	888000a0 	cmpeqi	r2,r17,2
   157c8:	1000181e 	bne	r2,zero,1582c <__divdf3+0x18c>
   157cc:	888000e0 	cmpeqi	r2,r17,3
   157d0:	1001f61e 	bne	r2,zero,15fac <__divdf3+0x90c>
   157d4:	88800060 	cmpeqi	r2,r17,1
   157d8:	10006126 	beq	r2,zero,15960 <__divdf3+0x2c0>
   157dc:	0007883a 	mov	r3,zero
   157e0:	000b883a 	mov	r5,zero
   157e4:	0029883a 	mov	r20,zero
   157e8:	1806953a 	slli	r3,r3,20
   157ec:	380e97fa 	slli	r7,r7,31
   157f0:	a005883a 	mov	r2,r20
   157f4:	1946b03a 	or	r3,r3,r5
   157f8:	19c6b03a 	or	r3,r3,r7
   157fc:	dfc00f17 	ldw	ra,60(sp)
   15800:	df000e17 	ldw	fp,56(sp)
   15804:	ddc00d17 	ldw	r23,52(sp)
   15808:	dd800c17 	ldw	r22,48(sp)
   1580c:	dd400b17 	ldw	r21,44(sp)
   15810:	dd000a17 	ldw	r20,40(sp)
   15814:	dcc00917 	ldw	r19,36(sp)
   15818:	dc800817 	ldw	r18,32(sp)
   1581c:	dc400717 	ldw	r17,28(sp)
   15820:	dc000617 	ldw	r16,24(sp)
   15824:	dec01004 	addi	sp,sp,64
   15828:	f800283a 	ret
   1582c:	00c1ffc4 	movi	r3,2047
   15830:	000b883a 	mov	r5,zero
   15834:	0029883a 	mov	r20,zero
   15838:	003feb06 	br	157e8 <__divdf3+0x148>
   1583c:	a80f883a 	mov	r7,r21
   15840:	b027883a 	mov	r19,r22
   15844:	4829883a 	mov	r20,r9
   15848:	1823883a 	mov	r17,r3
   1584c:	003fdd06 	br	157c4 <__divdf3+0x124>
   15850:	b712b03a 	or	r9,r22,fp
   15854:	48003e26 	beq	r9,zero,15950 <__divdf3+0x2b0>
   15858:	b0017726 	beq	r22,zero,15e38 <__divdf3+0x798>
   1585c:	b009883a 	mov	r4,r22
   15860:	0016ff40 	call	16ff4 <__clzsi2>
   15864:	117ffd44 	addi	r5,r2,-11
   15868:	01000744 	movi	r4,29
   1586c:	127ffe04 	addi	r9,r2,-8
   15870:	2149c83a 	sub	r4,r4,r5
   15874:	b246983a 	sll	r3,r22,r9
   15878:	e108d83a 	srl	r4,fp,r4
   1587c:	e252983a 	sll	r9,fp,r9
   15880:	20ecb03a 	or	r22,r4,r3
   15884:	1491883a 	add	r8,r2,r18
   15888:	4480fcc4 	addi	r18,r8,1011
   1588c:	0007883a 	mov	r3,zero
   15890:	003fb306 	br	15760 <__divdf3+0xc0>
   15894:	8126b03a 	or	r19,r16,r4
   15898:	2023883a 	mov	r17,r4
   1589c:	98002726 	beq	r19,zero,1593c <__divdf3+0x29c>
   158a0:	80017026 	beq	r16,zero,15e64 <__divdf3+0x7c4>
   158a4:	8009883a 	mov	r4,r16
   158a8:	0016ff40 	call	16ff4 <__clzsi2>
   158ac:	113ffd44 	addi	r4,r2,-11
   158b0:	00c00744 	movi	r3,29
   158b4:	14fffe04 	addi	r19,r2,-8
   158b8:	1907c83a 	sub	r3,r3,r4
   158bc:	84ca983a 	sll	r5,r16,r19
   158c0:	88c6d83a 	srl	r3,r17,r3
   158c4:	8ce8983a 	sll	r20,r17,r19
   158c8:	1966b03a 	or	r19,r3,r5
   158cc:	023f0344 	movi	r8,-1011
   158d0:	40a5c83a 	sub	r18,r8,r2
   158d4:	0021883a 	mov	r16,zero
   158d8:	0023883a 	mov	r17,zero
   158dc:	003f8f06 	br	1571c <__divdf3+0x7c>
   158e0:	8126b03a 	or	r19,r16,r4
   158e4:	9800101e 	bne	r19,zero,15928 <__divdf3+0x288>
   158e8:	0029883a 	mov	r20,zero
   158ec:	04000204 	movi	r16,8
   158f0:	0481ffc4 	movi	r18,2047
   158f4:	04400084 	movi	r17,2
   158f8:	003f8806 	br	1571c <__divdf3+0x7c>
   158fc:	b712b03a 	or	r9,r22,fp
   15900:	94be0044 	addi	r18,r18,-2047
   15904:	4800041e 	bne	r9,zero,15918 <__divdf3+0x278>
   15908:	84000094 	ori	r16,r16,2
   1590c:	002d883a 	mov	r22,zero
   15910:	00c00084 	movi	r3,2
   15914:	003f9206 	br	15760 <__divdf3+0xc0>
   15918:	840000d4 	ori	r16,r16,3
   1591c:	e013883a 	mov	r9,fp
   15920:	00c000c4 	movi	r3,3
   15924:	003f8e06 	br	15760 <__divdf3+0xc0>
   15928:	8027883a 	mov	r19,r16
   1592c:	0481ffc4 	movi	r18,2047
   15930:	04000304 	movi	r16,12
   15934:	044000c4 	movi	r17,3
   15938:	003f7806 	br	1571c <__divdf3+0x7c>
   1593c:	0029883a 	mov	r20,zero
   15940:	04000104 	movi	r16,4
   15944:	0025883a 	mov	r18,zero
   15948:	04400044 	movi	r17,1
   1594c:	003f7306 	br	1571c <__divdf3+0x7c>
   15950:	84000054 	ori	r16,r16,1
   15954:	002d883a 	mov	r22,zero
   15958:	00c00044 	movi	r3,1
   1595c:	003f8006 	br	15760 <__divdf3+0xc0>
   15960:	9440ffc4 	addi	r17,r18,1023
   15964:	0441050e 	bge	zero,r17,15d7c <__divdf3+0x6dc>
   15968:	a08001cc 	andi	r2,r20,7
   1596c:	10016c1e 	bne	r2,zero,15f20 <__divdf3+0x880>
   15970:	a008d0fa 	srli	r4,r20,3
   15974:	9880402c 	andhi	r2,r19,256
   15978:	10000426 	beq	r2,zero,1598c <__divdf3+0x2ec>
   1597c:	00bfc034 	movhi	r2,65280
   15980:	10bfffc4 	addi	r2,r2,-1
   15984:	98a6703a 	and	r19,r19,r2
   15988:	94410004 	addi	r17,r18,1024
   1598c:	8881ffc8 	cmpgei	r2,r17,2047
   15990:	103fa61e 	bne	r2,zero,1582c <__divdf3+0x18c>
   15994:	9828977a 	slli	r20,r19,29
   15998:	980a927a 	slli	r5,r19,9
   1599c:	88c1ffcc 	andi	r3,r17,2047
   159a0:	a128b03a 	or	r20,r20,r4
   159a4:	280ad33a 	srli	r5,r5,12
   159a8:	003f8f06 	br	157e8 <__divdf3+0x148>
   159ac:	01400434 	movhi	r5,16
   159b0:	000f883a 	mov	r7,zero
   159b4:	297fffc4 	addi	r5,r5,-1
   159b8:	053fffc4 	movi	r20,-1
   159bc:	00c1ffc4 	movi	r3,2047
   159c0:	003f8906 	br	157e8 <__divdf3+0x148>
   159c4:	9880022c 	andhi	r2,r19,8
   159c8:	10000926 	beq	r2,zero,159f0 <__divdf3+0x350>
   159cc:	b080022c 	andhi	r2,r22,8
   159d0:	1000071e 	bne	r2,zero,159f0 <__divdf3+0x350>
   159d4:	00800434 	movhi	r2,16
   159d8:	b1400234 	orhi	r5,r22,8
   159dc:	10bfffc4 	addi	r2,r2,-1
   159e0:	288a703a 	and	r5,r5,r2
   159e4:	a80f883a 	mov	r7,r21
   159e8:	4829883a 	mov	r20,r9
   159ec:	003ff306 	br	159bc <__divdf3+0x31c>
   159f0:	00800434 	movhi	r2,16
   159f4:	99400234 	orhi	r5,r19,8
   159f8:	10bfffc4 	addi	r2,r2,-1
   159fc:	288a703a 	and	r5,r5,r2
   15a00:	b80f883a 	mov	r7,r23
   15a04:	003fed06 	br	159bc <__divdf3+0x31c>
   15a08:	b4c10536 	bltu	r22,r19,15e20 <__divdf3+0x780>
   15a0c:	b4c10326 	beq	r22,r19,15e1c <__divdf3+0x77c>
   15a10:	94bfffc4 	addi	r18,r18,-1
   15a14:	a039883a 	mov	fp,r20
   15a18:	9821883a 	mov	r16,r19
   15a1c:	0023883a 	mov	r17,zero
   15a20:	b006923a 	slli	r3,r22,8
   15a24:	482cd63a 	srli	r22,r9,24
   15a28:	8009883a 	mov	r4,r16
   15a2c:	182ed43a 	srli	r23,r3,16
   15a30:	b0ecb03a 	or	r22,r22,r3
   15a34:	d9c00015 	stw	r7,0(sp)
   15a38:	b80b883a 	mov	r5,r23
   15a3c:	482a923a 	slli	r21,r9,8
   15a40:	b53fffcc 	andi	r20,r22,65535
   15a44:	001713c0 	call	1713c <__udivsi3>
   15a48:	100b883a 	mov	r5,r2
   15a4c:	a009883a 	mov	r4,r20
   15a50:	1027883a 	mov	r19,r2
   15a54:	00171fc0 	call	171fc <__mulsi3>
   15a58:	8009883a 	mov	r4,r16
   15a5c:	b80b883a 	mov	r5,r23
   15a60:	1021883a 	mov	r16,r2
   15a64:	00171a00 	call	171a0 <__umodsi3>
   15a68:	1004943a 	slli	r2,r2,16
   15a6c:	e008d43a 	srli	r4,fp,16
   15a70:	d9c00017 	ldw	r7,0(sp)
   15a74:	2088b03a 	or	r4,r4,r2
   15a78:	2400042e 	bgeu	r4,r16,15a8c <__divdf3+0x3ec>
   15a7c:	2589883a 	add	r4,r4,r22
   15a80:	98bfffc4 	addi	r2,r19,-1
   15a84:	2581082e 	bgeu	r4,r22,15ea8 <__divdf3+0x808>
   15a88:	1027883a 	mov	r19,r2
   15a8c:	2421c83a 	sub	r16,r4,r16
   15a90:	b80b883a 	mov	r5,r23
   15a94:	8009883a 	mov	r4,r16
   15a98:	d9c00215 	stw	r7,8(sp)
   15a9c:	001713c0 	call	1713c <__udivsi3>
   15aa0:	100b883a 	mov	r5,r2
   15aa4:	a009883a 	mov	r4,r20
   15aa8:	d8800115 	stw	r2,4(sp)
   15aac:	00171fc0 	call	171fc <__mulsi3>
   15ab0:	b80b883a 	mov	r5,r23
   15ab4:	8009883a 	mov	r4,r16
   15ab8:	d8800015 	stw	r2,0(sp)
   15abc:	00171a00 	call	171a0 <__umodsi3>
   15ac0:	100c943a 	slli	r6,r2,16
   15ac4:	d8c00017 	ldw	r3,0(sp)
   15ac8:	e73fffcc 	andi	fp,fp,65535
   15acc:	e18cb03a 	or	r6,fp,r6
   15ad0:	da000117 	ldw	r8,4(sp)
   15ad4:	d9c00217 	ldw	r7,8(sp)
   15ad8:	30c0042e 	bgeu	r6,r3,15aec <__divdf3+0x44c>
   15adc:	358d883a 	add	r6,r6,r22
   15ae0:	40bfffc4 	addi	r2,r8,-1
   15ae4:	3580ec2e 	bgeu	r6,r22,15e98 <__divdf3+0x7f8>
   15ae8:	1011883a 	mov	r8,r2
   15aec:	9826943a 	slli	r19,r19,16
   15af0:	af3fffcc 	andi	fp,r21,65535
   15af4:	30c7c83a 	sub	r3,r6,r3
   15af8:	9a26b03a 	or	r19,r19,r8
   15afc:	9810d43a 	srli	r8,r19,16
   15b00:	9abfffcc 	andi	r10,r19,65535
   15b04:	5009883a 	mov	r4,r10
   15b08:	e00b883a 	mov	r5,fp
   15b0c:	d9c00515 	stw	r7,20(sp)
   15b10:	d8c00315 	stw	r3,12(sp)
   15b14:	da800415 	stw	r10,16(sp)
   15b18:	da000015 	stw	r8,0(sp)
   15b1c:	00171fc0 	call	171fc <__mulsi3>
   15b20:	da000017 	ldw	r8,0(sp)
   15b24:	e00b883a 	mov	r5,fp
   15b28:	d8800215 	stw	r2,8(sp)
   15b2c:	4009883a 	mov	r4,r8
   15b30:	00171fc0 	call	171fc <__mulsi3>
   15b34:	da000017 	ldw	r8,0(sp)
   15b38:	a820d43a 	srli	r16,r21,16
   15b3c:	d8800115 	stw	r2,4(sp)
   15b40:	4009883a 	mov	r4,r8
   15b44:	800b883a 	mov	r5,r16
   15b48:	00171fc0 	call	171fc <__mulsi3>
   15b4c:	da800417 	ldw	r10,16(sp)
   15b50:	8009883a 	mov	r4,r16
   15b54:	d8800015 	stw	r2,0(sp)
   15b58:	500b883a 	mov	r5,r10
   15b5c:	00171fc0 	call	171fc <__mulsi3>
   15b60:	d9800217 	ldw	r6,8(sp)
   15b64:	da000117 	ldw	r8,4(sp)
   15b68:	da400017 	ldw	r9,0(sp)
   15b6c:	3008d43a 	srli	r4,r6,16
   15b70:	1205883a 	add	r2,r2,r8
   15b74:	d8c00317 	ldw	r3,12(sp)
   15b78:	2089883a 	add	r4,r4,r2
   15b7c:	d9c00517 	ldw	r7,20(sp)
   15b80:	2200022e 	bgeu	r4,r8,15b8c <__divdf3+0x4ec>
   15b84:	00800074 	movhi	r2,1
   15b88:	4893883a 	add	r9,r9,r2
   15b8c:	200ad43a 	srli	r5,r4,16
   15b90:	2008943a 	slli	r4,r4,16
   15b94:	31bfffcc 	andi	r6,r6,65535
   15b98:	2a4b883a 	add	r5,r5,r9
   15b9c:	218d883a 	add	r6,r4,r6
   15ba0:	19409436 	bltu	r3,r5,15df4 <__divdf3+0x754>
   15ba4:	19409226 	beq	r3,r5,15df0 <__divdf3+0x750>
   15ba8:	898dc83a 	sub	r6,r17,r6
   15bac:	89a3803a 	cmpltu	r17,r17,r6
   15bb0:	1947c83a 	sub	r3,r3,r5
   15bb4:	1c47c83a 	sub	r3,r3,r17
   15bb8:	9440ffc4 	addi	r17,r18,1023
   15bbc:	b0c0d326 	beq	r22,r3,15f0c <__divdf3+0x86c>
   15bc0:	1809883a 	mov	r4,r3
   15bc4:	b80b883a 	mov	r5,r23
   15bc8:	d9800315 	stw	r6,12(sp)
   15bcc:	d9c00215 	stw	r7,8(sp)
   15bd0:	d8c00015 	stw	r3,0(sp)
   15bd4:	001713c0 	call	1713c <__udivsi3>
   15bd8:	100b883a 	mov	r5,r2
   15bdc:	a009883a 	mov	r4,r20
   15be0:	d8800115 	stw	r2,4(sp)
   15be4:	00171fc0 	call	171fc <__mulsi3>
   15be8:	d8c00017 	ldw	r3,0(sp)
   15bec:	b80b883a 	mov	r5,r23
   15bf0:	d8800015 	stw	r2,0(sp)
   15bf4:	1809883a 	mov	r4,r3
   15bf8:	00171a00 	call	171a0 <__umodsi3>
   15bfc:	d9800317 	ldw	r6,12(sp)
   15c00:	1006943a 	slli	r3,r2,16
   15c04:	da400017 	ldw	r9,0(sp)
   15c08:	3008d43a 	srli	r4,r6,16
   15c0c:	da000117 	ldw	r8,4(sp)
   15c10:	d9c00217 	ldw	r7,8(sp)
   15c14:	20c6b03a 	or	r3,r4,r3
   15c18:	1a40062e 	bgeu	r3,r9,15c34 <__divdf3+0x594>
   15c1c:	1d87883a 	add	r3,r3,r22
   15c20:	40bfffc4 	addi	r2,r8,-1
   15c24:	1d80c836 	bltu	r3,r22,15f48 <__divdf3+0x8a8>
   15c28:	1a40c72e 	bgeu	r3,r9,15f48 <__divdf3+0x8a8>
   15c2c:	423fff84 	addi	r8,r8,-2
   15c30:	1d87883a 	add	r3,r3,r22
   15c34:	1a47c83a 	sub	r3,r3,r9
   15c38:	1809883a 	mov	r4,r3
   15c3c:	b80b883a 	mov	r5,r23
   15c40:	d9800415 	stw	r6,16(sp)
   15c44:	d9c00315 	stw	r7,12(sp)
   15c48:	da000215 	stw	r8,8(sp)
   15c4c:	d8c00115 	stw	r3,4(sp)
   15c50:	001713c0 	call	1713c <__udivsi3>
   15c54:	100b883a 	mov	r5,r2
   15c58:	a009883a 	mov	r4,r20
   15c5c:	d8800015 	stw	r2,0(sp)
   15c60:	00171fc0 	call	171fc <__mulsi3>
   15c64:	d8c00117 	ldw	r3,4(sp)
   15c68:	b80b883a 	mov	r5,r23
   15c6c:	102f883a 	mov	r23,r2
   15c70:	1809883a 	mov	r4,r3
   15c74:	00171a00 	call	171a0 <__umodsi3>
   15c78:	d9800417 	ldw	r6,16(sp)
   15c7c:	1004943a 	slli	r2,r2,16
   15c80:	da400017 	ldw	r9,0(sp)
   15c84:	31bfffcc 	andi	r6,r6,65535
   15c88:	308cb03a 	or	r6,r6,r2
   15c8c:	da000217 	ldw	r8,8(sp)
   15c90:	d9c00317 	ldw	r7,12(sp)
   15c94:	35c0062e 	bgeu	r6,r23,15cb0 <__divdf3+0x610>
   15c98:	358d883a 	add	r6,r6,r22
   15c9c:	48bfffc4 	addi	r2,r9,-1
   15ca0:	3580a736 	bltu	r6,r22,15f40 <__divdf3+0x8a0>
   15ca4:	35c0a62e 	bgeu	r6,r23,15f40 <__divdf3+0x8a0>
   15ca8:	4a7fff84 	addi	r9,r9,-2
   15cac:	358d883a 	add	r6,r6,r22
   15cb0:	4028943a 	slli	r20,r8,16
   15cb4:	35d5c83a 	sub	r10,r6,r23
   15cb8:	e009883a 	mov	r4,fp
   15cbc:	a268b03a 	or	r20,r20,r9
   15cc0:	a23fffcc 	andi	r8,r20,65535
   15cc4:	a02ed43a 	srli	r23,r20,16
   15cc8:	400b883a 	mov	r5,r8
   15ccc:	d9c00315 	stw	r7,12(sp)
   15cd0:	da800215 	stw	r10,8(sp)
   15cd4:	da000115 	stw	r8,4(sp)
   15cd8:	00171fc0 	call	171fc <__mulsi3>
   15cdc:	e00b883a 	mov	r5,fp
   15ce0:	b809883a 	mov	r4,r23
   15ce4:	1039883a 	mov	fp,r2
   15ce8:	00171fc0 	call	171fc <__mulsi3>
   15cec:	8009883a 	mov	r4,r16
   15cf0:	b80b883a 	mov	r5,r23
   15cf4:	d8800015 	stw	r2,0(sp)
   15cf8:	00171fc0 	call	171fc <__mulsi3>
   15cfc:	da000117 	ldw	r8,4(sp)
   15d00:	8009883a 	mov	r4,r16
   15d04:	1021883a 	mov	r16,r2
   15d08:	400b883a 	mov	r5,r8
   15d0c:	00171fc0 	call	171fc <__mulsi3>
   15d10:	d9800017 	ldw	r6,0(sp)
   15d14:	e006d43a 	srli	r3,fp,16
   15d18:	da800217 	ldw	r10,8(sp)
   15d1c:	1185883a 	add	r2,r2,r6
   15d20:	1887883a 	add	r3,r3,r2
   15d24:	d9c00317 	ldw	r7,12(sp)
   15d28:	1980022e 	bgeu	r3,r6,15d34 <__divdf3+0x694>
   15d2c:	00800074 	movhi	r2,1
   15d30:	80a1883a 	add	r16,r16,r2
   15d34:	1808d43a 	srli	r4,r3,16
   15d38:	1806943a 	slli	r3,r3,16
   15d3c:	e73fffcc 	andi	fp,fp,65535
   15d40:	2409883a 	add	r4,r4,r16
   15d44:	1f07883a 	add	r3,r3,fp
   15d48:	51000436 	bltu	r10,r4,15d5c <__divdf3+0x6bc>
   15d4c:	51000226 	beq	r10,r4,15d58 <__divdf3+0x6b8>
   15d50:	a5000054 	ori	r20,r20,1
   15d54:	003f0306 	br	15964 <__divdf3+0x2c4>
   15d58:	183f0226 	beq	r3,zero,15964 <__divdf3+0x2c4>
   15d5c:	b28d883a 	add	r6,r22,r10
   15d60:	a0bfffc4 	addi	r2,r20,-1
   15d64:	35806536 	bltu	r6,r22,15efc <__divdf3+0x85c>
   15d68:	31008036 	bltu	r6,r4,15f6c <__divdf3+0x8cc>
   15d6c:	31009426 	beq	r6,r4,15fc0 <__divdf3+0x920>
   15d70:	1029883a 	mov	r20,r2
   15d74:	003ff606 	br	15d50 <__divdf3+0x6b0>
   15d78:	053fffc4 	movi	r20,-1
   15d7c:	01400044 	movi	r5,1
   15d80:	2c4bc83a 	sub	r5,r5,r17
   15d84:	28800e48 	cmpgei	r2,r5,57
   15d88:	103e941e 	bne	r2,zero,157dc <__divdf3+0x13c>
   15d8c:	28800808 	cmpgei	r2,r5,32
   15d90:	1000491e 	bne	r2,zero,15eb8 <__divdf3+0x818>
   15d94:	92010784 	addi	r8,r18,1054
   15d98:	9a04983a 	sll	r2,r19,r8
   15d9c:	a146d83a 	srl	r3,r20,r5
   15da0:	a210983a 	sll	r8,r20,r8
   15da4:	994ad83a 	srl	r5,r19,r5
   15da8:	10e8b03a 	or	r20,r2,r3
   15dac:	4010c03a 	cmpne	r8,r8,zero
   15db0:	a228b03a 	or	r20,r20,r8
   15db4:	a08001cc 	andi	r2,r20,7
   15db8:	10000726 	beq	r2,zero,15dd8 <__divdf3+0x738>
   15dbc:	a08003cc 	andi	r2,r20,15
   15dc0:	10800120 	cmpeqi	r2,r2,4
   15dc4:	1000041e 	bne	r2,zero,15dd8 <__divdf3+0x738>
   15dc8:	a0800104 	addi	r2,r20,4
   15dcc:	1529803a 	cmpltu	r20,r2,r20
   15dd0:	2d0b883a 	add	r5,r5,r20
   15dd4:	1029883a 	mov	r20,r2
   15dd8:	2880202c 	andhi	r2,r5,128
   15ddc:	10006f26 	beq	r2,zero,15f9c <__divdf3+0x8fc>
   15de0:	00c00044 	movi	r3,1
   15de4:	000b883a 	mov	r5,zero
   15de8:	0029883a 	mov	r20,zero
   15dec:	003e7e06 	br	157e8 <__divdf3+0x148>
   15df0:	89bf6d2e 	bgeu	r17,r6,15ba8 <__divdf3+0x508>
   15df4:	8d63883a 	add	r17,r17,r21
   15df8:	8d45803a 	cmpltu	r2,r17,r21
   15dfc:	1585883a 	add	r2,r2,r22
   15e00:	1887883a 	add	r3,r3,r2
   15e04:	98bfffc4 	addi	r2,r19,-1
   15e08:	b0c0202e 	bgeu	r22,r3,15e8c <__divdf3+0x7ec>
   15e0c:	19405136 	bltu	r3,r5,15f54 <__divdf3+0x8b4>
   15e10:	28c04f26 	beq	r5,r3,15f50 <__divdf3+0x8b0>
   15e14:	1027883a 	mov	r19,r2
   15e18:	003f6306 	br	15ba8 <__divdf3+0x508>
   15e1c:	a27efc36 	bltu	r20,r9,15a10 <__divdf3+0x370>
   15e20:	983897fa 	slli	fp,r19,31
   15e24:	a004d07a 	srli	r2,r20,1
   15e28:	9820d07a 	srli	r16,r19,1
   15e2c:	a02297fa 	slli	r17,r20,31
   15e30:	e0b8b03a 	or	fp,fp,r2
   15e34:	003efa06 	br	15a20 <__divdf3+0x380>
   15e38:	e009883a 	mov	r4,fp
   15e3c:	0016ff40 	call	16ff4 <__clzsi2>
   15e40:	11400544 	addi	r5,r2,21
   15e44:	29000748 	cmpgei	r4,r5,29
   15e48:	1007883a 	mov	r3,r2
   15e4c:	10800804 	addi	r2,r2,32
   15e50:	203e8526 	beq	r4,zero,15868 <__divdf3+0x1c8>
   15e54:	18fffe04 	addi	r3,r3,-8
   15e58:	e0ec983a 	sll	r22,fp,r3
   15e5c:	0013883a 	mov	r9,zero
   15e60:	003e8806 	br	15884 <__divdf3+0x1e4>
   15e64:	0016ff40 	call	16ff4 <__clzsi2>
   15e68:	11000544 	addi	r4,r2,21
   15e6c:	20c00748 	cmpgei	r3,r4,29
   15e70:	100b883a 	mov	r5,r2
   15e74:	10800804 	addi	r2,r2,32
   15e78:	183e8d26 	beq	r3,zero,158b0 <__divdf3+0x210>
   15e7c:	297ffe04 	addi	r5,r5,-8
   15e80:	a166983a 	sll	r19,r20,r5
   15e84:	0029883a 	mov	r20,zero
   15e88:	003e9006 	br	158cc <__divdf3+0x22c>
   15e8c:	b0ffe11e 	bne	r22,r3,15e14 <__divdf3+0x774>
   15e90:	8d7fe036 	bltu	r17,r21,15e14 <__divdf3+0x774>
   15e94:	003fdd06 	br	15e0c <__divdf3+0x76c>
   15e98:	30ff132e 	bgeu	r6,r3,15ae8 <__divdf3+0x448>
   15e9c:	423fff84 	addi	r8,r8,-2
   15ea0:	358d883a 	add	r6,r6,r22
   15ea4:	003f1106 	br	15aec <__divdf3+0x44c>
   15ea8:	243ef72e 	bgeu	r4,r16,15a88 <__divdf3+0x3e8>
   15eac:	9cffff84 	addi	r19,r19,-2
   15eb0:	2589883a 	add	r4,r4,r22
   15eb4:	003ef506 	br	15a8c <__divdf3+0x3ec>
   15eb8:	00fff844 	movi	r3,-31
   15ebc:	1c47c83a 	sub	r3,r3,r17
   15ec0:	29400820 	cmpeqi	r5,r5,32
   15ec4:	98c6d83a 	srl	r3,r19,r3
   15ec8:	2800031e 	bne	r5,zero,15ed8 <__divdf3+0x838>
   15ecc:	91410f84 	addi	r5,r18,1086
   15ed0:	994a983a 	sll	r5,r19,r5
   15ed4:	a168b03a 	or	r20,r20,r5
   15ed8:	a028c03a 	cmpne	r20,r20,zero
   15edc:	a0e8b03a 	or	r20,r20,r3
   15ee0:	a4c001cc 	andi	r19,r20,7
   15ee4:	9800291e 	bne	r19,zero,15f8c <__divdf3+0x8ec>
   15ee8:	000b883a 	mov	r5,zero
   15eec:	a028d0fa 	srli	r20,r20,3
   15ef0:	0007883a 	mov	r3,zero
   15ef4:	a4e8b03a 	or	r20,r20,r19
   15ef8:	003e3b06 	br	157e8 <__divdf3+0x148>
   15efc:	1029883a 	mov	r20,r2
   15f00:	313f931e 	bne	r6,r4,15d50 <__divdf3+0x6b0>
   15f04:	1d7f921e 	bne	r3,r21,15d50 <__divdf3+0x6b0>
   15f08:	003e9606 	br	15964 <__divdf3+0x2c4>
   15f0c:	047f9a0e 	bge	zero,r17,15d78 <__divdf3+0x6d8>
   15f10:	0009883a 	mov	r4,zero
   15f14:	05000044 	movi	r20,1
   15f18:	9d27883a 	add	r19,r19,r20
   15f1c:	003e9506 	br	15974 <__divdf3+0x2d4>
   15f20:	a08003cc 	andi	r2,r20,15
   15f24:	10800118 	cmpnei	r2,r2,4
   15f28:	103e9126 	beq	r2,zero,15970 <__divdf3+0x2d0>
   15f2c:	a1000104 	addi	r4,r20,4
   15f30:	00bffec4 	movi	r2,-5
   15f34:	2008d0fa 	srli	r4,r4,3
   15f38:	1529803a 	cmpltu	r20,r2,r20
   15f3c:	003ff606 	br	15f18 <__divdf3+0x878>
   15f40:	1013883a 	mov	r9,r2
   15f44:	003f5a06 	br	15cb0 <__divdf3+0x610>
   15f48:	1011883a 	mov	r8,r2
   15f4c:	003f3906 	br	15c34 <__divdf3+0x594>
   15f50:	89bfb02e 	bgeu	r17,r6,15e14 <__divdf3+0x774>
   15f54:	8d63883a 	add	r17,r17,r21
   15f58:	8d45803a 	cmpltu	r2,r17,r21
   15f5c:	1585883a 	add	r2,r2,r22
   15f60:	9cffff84 	addi	r19,r19,-2
   15f64:	1887883a 	add	r3,r3,r2
   15f68:	003f0f06 	br	15ba8 <__divdf3+0x508>
   15f6c:	ad45883a 	add	r2,r21,r21
   15f70:	156b803a 	cmpltu	r21,r2,r21
   15f74:	adad883a 	add	r22,r21,r22
   15f78:	358d883a 	add	r6,r6,r22
   15f7c:	a53fff84 	addi	r20,r20,-2
   15f80:	102b883a 	mov	r21,r2
   15f84:	313fdf26 	beq	r6,r4,15f04 <__divdf3+0x864>
   15f88:	003f7106 	br	15d50 <__divdf3+0x6b0>
   15f8c:	a08003cc 	andi	r2,r20,15
   15f90:	10800118 	cmpnei	r2,r2,4
   15f94:	000b883a 	mov	r5,zero
   15f98:	103f8b1e 	bne	r2,zero,15dc8 <__divdf3+0x728>
   15f9c:	2804927a 	slli	r2,r5,9
   15fa0:	2826977a 	slli	r19,r5,29
   15fa4:	100ad33a 	srli	r5,r2,12
   15fa8:	003fd006 	br	15eec <__divdf3+0x84c>
   15fac:	00800434 	movhi	r2,16
   15fb0:	99400234 	orhi	r5,r19,8
   15fb4:	10bfffc4 	addi	r2,r2,-1
   15fb8:	288a703a 	and	r5,r5,r2
   15fbc:	003e7f06 	br	159bc <__divdf3+0x31c>
   15fc0:	a8ffea36 	bltu	r21,r3,15f6c <__divdf3+0x8cc>
   15fc4:	1029883a 	mov	r20,r2
   15fc8:	1d7f611e 	bne	r3,r21,15d50 <__divdf3+0x6b0>
   15fcc:	003e6506 	br	15964 <__divdf3+0x2c4>

00015fd0 <__gedf2>:
   15fd0:	2810d53a 	srli	r8,r5,20
   15fd4:	3812d53a 	srli	r9,r7,20
   15fd8:	00c00434 	movhi	r3,16
   15fdc:	4201ffcc 	andi	r8,r8,2047
   15fe0:	18ffffc4 	addi	r3,r3,-1
   15fe4:	4281ffd8 	cmpnei	r10,r8,2047
   15fe8:	2816d7fa 	srli	r11,r5,31
   15fec:	3804d7fa 	srli	r2,r7,31
   15ff0:	28ca703a 	and	r5,r5,r3
   15ff4:	38ce703a 	and	r7,r7,r3
   15ff8:	48c1ffcc 	andi	r3,r9,2047
   15ffc:	50000a26 	beq	r10,zero,16028 <__gedf2+0x58>
   16000:	1a41ffd8 	cmpnei	r9,r3,2047
   16004:	48000c26 	beq	r9,zero,16038 <__gedf2+0x68>
   16008:	4000171e 	bne	r8,zero,16068 <__gedf2+0x98>
   1600c:	2912b03a 	or	r9,r5,r4
   16010:	1800121e 	bne	r3,zero,1605c <__gedf2+0x8c>
   16014:	3994b03a 	or	r10,r7,r6
   16018:	5000101e 	bne	r10,zero,1605c <__gedf2+0x8c>
   1601c:	48000a1e 	bne	r9,zero,16048 <__gedf2+0x78>
   16020:	0005883a 	mov	r2,zero
   16024:	f800283a 	ret
   16028:	2912b03a 	or	r9,r5,r4
   1602c:	48001d1e 	bne	r9,zero,160a4 <__gedf2+0xd4>
   16030:	1a41ffe0 	cmpeqi	r9,r3,2047
   16034:	48000c26 	beq	r9,zero,16068 <__gedf2+0x98>
   16038:	3992b03a 	or	r9,r7,r6
   1603c:	4800191e 	bne	r9,zero,160a4 <__gedf2+0xd4>
   16040:	40000526 	beq	r8,zero,16058 <__gedf2+0x88>
   16044:	58800c26 	beq	r11,r2,16078 <__gedf2+0xa8>
   16048:	00800044 	movi	r2,1
   1604c:	58000526 	beq	r11,zero,16064 <__gedf2+0x94>
   16050:	00bfffc4 	movi	r2,-1
   16054:	f800283a 	ret
   16058:	2912b03a 	or	r9,r5,r4
   1605c:	483ff91e 	bne	r9,zero,16044 <__gedf2+0x74>
   16060:	103ffb26 	beq	r2,zero,16050 <__gedf2+0x80>
   16064:	f800283a 	ret
   16068:	183ff61e 	bne	r3,zero,16044 <__gedf2+0x74>
   1606c:	3992b03a 	or	r9,r7,r6
   16070:	483ff41e 	bne	r9,zero,16044 <__gedf2+0x74>
   16074:	003ff406 	br	16048 <__gedf2+0x78>
   16078:	1a000716 	blt	r3,r8,16098 <__gedf2+0xc8>
   1607c:	40fff816 	blt	r8,r3,16060 <__gedf2+0x90>
   16080:	397ff136 	bltu	r7,r5,16048 <__gedf2+0x78>
   16084:	29c00926 	beq	r5,r7,160ac <__gedf2+0xdc>
   16088:	29ffe52e 	bgeu	r5,r7,16020 <__gedf2+0x50>
   1608c:	583ff026 	beq	r11,zero,16050 <__gedf2+0x80>
   16090:	5805883a 	mov	r2,r11
   16094:	f800283a 	ret
   16098:	103fed1e 	bne	r2,zero,16050 <__gedf2+0x80>
   1609c:	00800044 	movi	r2,1
   160a0:	f800283a 	ret
   160a4:	00bfff84 	movi	r2,-2
   160a8:	f800283a 	ret
   160ac:	313fe636 	bltu	r6,r4,16048 <__gedf2+0x78>
   160b0:	21bfdb2e 	bgeu	r4,r6,16020 <__gedf2+0x50>
   160b4:	003ff506 	br	1608c <__gedf2+0xbc>

000160b8 <__muldf3>:
   160b8:	2810d53a 	srli	r8,r5,20
   160bc:	defff004 	addi	sp,sp,-64
   160c0:	00800434 	movhi	r2,16
   160c4:	df000e15 	stw	fp,56(sp)
   160c8:	dd000a15 	stw	r20,40(sp)
   160cc:	dcc00915 	stw	r19,36(sp)
   160d0:	dc400715 	stw	r17,28(sp)
   160d4:	10bfffc4 	addi	r2,r2,-1
   160d8:	dfc00f15 	stw	ra,60(sp)
   160dc:	ddc00d15 	stw	r23,52(sp)
   160e0:	dd800c15 	stw	r22,48(sp)
   160e4:	dd400b15 	stw	r21,44(sp)
   160e8:	dc800815 	stw	r18,32(sp)
   160ec:	dc000615 	stw	r16,24(sp)
   160f0:	4201ffcc 	andi	r8,r8,2047
   160f4:	2828d7fa 	srli	r20,r5,31
   160f8:	2023883a 	mov	r17,r4
   160fc:	3039883a 	mov	fp,r6
   16100:	28a6703a 	and	r19,r5,r2
   16104:	40013426 	beq	r8,zero,165d8 <__muldf3+0x520>
   16108:	4081ffe0 	cmpeqi	r2,r8,2047
   1610c:	1001461e 	bne	r2,zero,16628 <__muldf3+0x570>
   16110:	980a90fa 	slli	r5,r19,3
   16114:	2026d77a 	srli	r19,r4,29
   16118:	202490fa 	slli	r18,r4,3
   1611c:	423f0044 	addi	r8,r8,-1023
   16120:	9966b03a 	or	r19,r19,r5
   16124:	9cc02034 	orhi	r19,r19,128
   16128:	002b883a 	mov	r21,zero
   1612c:	002d883a 	mov	r22,zero
   16130:	3804d53a 	srli	r2,r7,20
   16134:	00c00434 	movhi	r3,16
   16138:	18ffffc4 	addi	r3,r3,-1
   1613c:	1081ffcc 	andi	r2,r2,2047
   16140:	382ed7fa 	srli	r23,r7,31
   16144:	38e0703a 	and	r16,r7,r3
   16148:	10011026 	beq	r2,zero,1658c <__muldf3+0x4d4>
   1614c:	10c1ffe0 	cmpeqi	r3,r2,2047
   16150:	18013c1e 	bne	r3,zero,16644 <__muldf3+0x58c>
   16154:	e008d77a 	srli	r4,fp,29
   16158:	802090fa 	slli	r16,r16,3
   1615c:	e02290fa 	slli	r17,fp,3
   16160:	10bf0044 	addi	r2,r2,-1023
   16164:	2420b03a 	or	r16,r4,r16
   16168:	84002034 	orhi	r16,r16,128
   1616c:	4091883a 	add	r8,r8,r2
   16170:	0009883a 	mov	r4,zero
   16174:	a8800428 	cmpgeui	r2,r21,16
   16178:	a5ccf03a 	xor	r6,r20,r23
   1617c:	41c00044 	addi	r7,r8,1
   16180:	1000371e 	bne	r2,zero,16260 <__muldf3+0x1a8>
   16184:	a80490ba 	slli	r2,r21,2
   16188:	00c00074 	movhi	r3,1
   1618c:	10c7883a 	add	r3,r2,r3
   16190:	18986617 	ldw	r2,24984(r3)
   16194:	1000683a 	jmp	r2
   16198:	00016260 	cmpeqi	zero,zero,1417
   1619c:	000161dc 	xori	zero,zero,1415
   161a0:	000161dc 	xori	zero,zero,1415
   161a4:	000161d8 	cmpnei	zero,zero,1415
   161a8:	000161e8 	cmpgeui	zero,zero,1415
   161ac:	000161e8 	cmpgeui	zero,zero,1415
   161b0:	000166b8 	rdprs	zero,zero,1434
   161b4:	000161d8 	cmpnei	zero,zero,1415
   161b8:	000161e8 	cmpgeui	zero,zero,1415
   161bc:	000166b8 	rdprs	zero,zero,1434
   161c0:	000161e8 	cmpgeui	zero,zero,1415
   161c4:	000161d8 	cmpnei	zero,zero,1415
   161c8:	00016660 	cmpeqi	zero,zero,1433
   161cc:	00016660 	cmpeqi	zero,zero,1433
   161d0:	00016660 	cmpeqi	zero,zero,1433
   161d4:	00016744 	movi	zero,1437
   161d8:	b80d883a 	mov	r6,r23
   161dc:	8027883a 	mov	r19,r16
   161e0:	8825883a 	mov	r18,r17
   161e4:	202d883a 	mov	r22,r4
   161e8:	b08000a0 	cmpeqi	r2,r22,2
   161ec:	1000181e 	bne	r2,zero,16250 <__muldf3+0x198>
   161f0:	b08000e0 	cmpeqi	r2,r22,3
   161f4:	1001961e 	bne	r2,zero,16850 <__muldf3+0x798>
   161f8:	b0800060 	cmpeqi	r2,r22,1
   161fc:	1000c926 	beq	r2,zero,16524 <__muldf3+0x46c>
   16200:	0007883a 	mov	r3,zero
   16204:	0027883a 	mov	r19,zero
   16208:	0025883a 	mov	r18,zero
   1620c:	1806953a 	slli	r3,r3,20
   16210:	300c97fa 	slli	r6,r6,31
   16214:	9005883a 	mov	r2,r18
   16218:	1cc6b03a 	or	r3,r3,r19
   1621c:	1986b03a 	or	r3,r3,r6
   16220:	dfc00f17 	ldw	ra,60(sp)
   16224:	df000e17 	ldw	fp,56(sp)
   16228:	ddc00d17 	ldw	r23,52(sp)
   1622c:	dd800c17 	ldw	r22,48(sp)
   16230:	dd400b17 	ldw	r21,44(sp)
   16234:	dd000a17 	ldw	r20,40(sp)
   16238:	dcc00917 	ldw	r19,36(sp)
   1623c:	dc800817 	ldw	r18,32(sp)
   16240:	dc400717 	ldw	r17,28(sp)
   16244:	dc000617 	ldw	r16,24(sp)
   16248:	dec01004 	addi	sp,sp,64
   1624c:	f800283a 	ret
   16250:	00c1ffc4 	movi	r3,2047
   16254:	0027883a 	mov	r19,zero
   16258:	0025883a 	mov	r18,zero
   1625c:	003feb06 	br	1620c <__muldf3+0x154>
   16260:	9028d43a 	srli	r20,r18,16
   16264:	8f3fffcc 	andi	fp,r17,65535
   16268:	957fffcc 	andi	r21,r18,65535
   1626c:	a80b883a 	mov	r5,r21
   16270:	e009883a 	mov	r4,fp
   16274:	d9800315 	stw	r6,12(sp)
   16278:	da000215 	stw	r8,8(sp)
   1627c:	d9c00115 	stw	r7,4(sp)
   16280:	8822d43a 	srli	r17,r17,16
   16284:	00171fc0 	call	171fc <__mulsi3>
   16288:	e00b883a 	mov	r5,fp
   1628c:	a009883a 	mov	r4,r20
   16290:	102d883a 	mov	r22,r2
   16294:	00171fc0 	call	171fc <__mulsi3>
   16298:	880b883a 	mov	r5,r17
   1629c:	a009883a 	mov	r4,r20
   162a0:	102f883a 	mov	r23,r2
   162a4:	00171fc0 	call	171fc <__mulsi3>
   162a8:	a80b883a 	mov	r5,r21
   162ac:	8809883a 	mov	r4,r17
   162b0:	d8800015 	stw	r2,0(sp)
   162b4:	00171fc0 	call	171fc <__mulsi3>
   162b8:	b006d43a 	srli	r3,r22,16
   162bc:	15e5883a 	add	r18,r2,r23
   162c0:	d9c00117 	ldw	r7,4(sp)
   162c4:	1c87883a 	add	r3,r3,r18
   162c8:	da000217 	ldw	r8,8(sp)
   162cc:	d9800317 	ldw	r6,12(sp)
   162d0:	1dc0042e 	bgeu	r3,r23,162e4 <__muldf3+0x22c>
   162d4:	d9000017 	ldw	r4,0(sp)
   162d8:	00800074 	movhi	r2,1
   162dc:	2085883a 	add	r2,r4,r2
   162e0:	d8800015 	stw	r2,0(sp)
   162e4:	1804943a 	slli	r2,r3,16
   162e8:	85ffffcc 	andi	r23,r16,65535
   162ec:	b5bfffcc 	andi	r22,r22,65535
   162f0:	1585883a 	add	r2,r2,r22
   162f4:	a80b883a 	mov	r5,r21
   162f8:	b809883a 	mov	r4,r23
   162fc:	1824d43a 	srli	r18,r3,16
   16300:	d9800515 	stw	r6,20(sp)
   16304:	da000415 	stw	r8,16(sp)
   16308:	d9c00315 	stw	r7,12(sp)
   1630c:	8020d43a 	srli	r16,r16,16
   16310:	d8800115 	stw	r2,4(sp)
   16314:	00171fc0 	call	171fc <__mulsi3>
   16318:	a009883a 	mov	r4,r20
   1631c:	b80b883a 	mov	r5,r23
   16320:	d8800215 	stw	r2,8(sp)
   16324:	00171fc0 	call	171fc <__mulsi3>
   16328:	a009883a 	mov	r4,r20
   1632c:	800b883a 	mov	r5,r16
   16330:	102d883a 	mov	r22,r2
   16334:	00171fc0 	call	171fc <__mulsi3>
   16338:	a80b883a 	mov	r5,r21
   1633c:	8009883a 	mov	r4,r16
   16340:	1029883a 	mov	r20,r2
   16344:	00171fc0 	call	171fc <__mulsi3>
   16348:	da800217 	ldw	r10,8(sp)
   1634c:	1585883a 	add	r2,r2,r22
   16350:	d9c00317 	ldw	r7,12(sp)
   16354:	5006d43a 	srli	r3,r10,16
   16358:	da000417 	ldw	r8,16(sp)
   1635c:	d9800517 	ldw	r6,20(sp)
   16360:	1887883a 	add	r3,r3,r2
   16364:	1d80022e 	bgeu	r3,r22,16370 <__muldf3+0x2b8>
   16368:	00800074 	movhi	r2,1
   1636c:	a0a9883a 	add	r20,r20,r2
   16370:	1804d43a 	srli	r2,r3,16
   16374:	1806943a 	slli	r3,r3,16
   16378:	982cd43a 	srli	r22,r19,16
   1637c:	9d7fffcc 	andi	r21,r19,65535
   16380:	e009883a 	mov	r4,fp
   16384:	54ffffcc 	andi	r19,r10,65535
   16388:	a80b883a 	mov	r5,r21
   1638c:	1ce7883a 	add	r19,r3,r19
   16390:	d9800515 	stw	r6,20(sp)
   16394:	da000415 	stw	r8,16(sp)
   16398:	d9c00315 	stw	r7,12(sp)
   1639c:	1529883a 	add	r20,r2,r20
   163a0:	00171fc0 	call	171fc <__mulsi3>
   163a4:	e00b883a 	mov	r5,fp
   163a8:	b009883a 	mov	r4,r22
   163ac:	d8800215 	stw	r2,8(sp)
   163b0:	00171fc0 	call	171fc <__mulsi3>
   163b4:	8809883a 	mov	r4,r17
   163b8:	b00b883a 	mov	r5,r22
   163bc:	1039883a 	mov	fp,r2
   163c0:	00171fc0 	call	171fc <__mulsi3>
   163c4:	8809883a 	mov	r4,r17
   163c8:	a80b883a 	mov	r5,r21
   163cc:	1023883a 	mov	r17,r2
   163d0:	00171fc0 	call	171fc <__mulsi3>
   163d4:	d8c00217 	ldw	r3,8(sp)
   163d8:	1705883a 	add	r2,r2,fp
   163dc:	d9c00317 	ldw	r7,12(sp)
   163e0:	1808d43a 	srli	r4,r3,16
   163e4:	da000417 	ldw	r8,16(sp)
   163e8:	d9800517 	ldw	r6,20(sp)
   163ec:	2089883a 	add	r4,r4,r2
   163f0:	94e5883a 	add	r18,r18,r19
   163f4:	2700022e 	bgeu	r4,fp,16400 <__muldf3+0x348>
   163f8:	00800074 	movhi	r2,1
   163fc:	88a3883a 	add	r17,r17,r2
   16400:	2004d43a 	srli	r2,r4,16
   16404:	2038943a 	slli	fp,r4,16
   16408:	18ffffcc 	andi	r3,r3,65535
   1640c:	b809883a 	mov	r4,r23
   16410:	a80b883a 	mov	r5,r21
   16414:	d9800415 	stw	r6,16(sp)
   16418:	da000315 	stw	r8,12(sp)
   1641c:	d9c00215 	stw	r7,8(sp)
   16420:	e0f9883a 	add	fp,fp,r3
   16424:	1463883a 	add	r17,r2,r17
   16428:	00171fc0 	call	171fc <__mulsi3>
   1642c:	b80b883a 	mov	r5,r23
   16430:	b009883a 	mov	r4,r22
   16434:	102f883a 	mov	r23,r2
   16438:	00171fc0 	call	171fc <__mulsi3>
   1643c:	b00b883a 	mov	r5,r22
   16440:	8009883a 	mov	r4,r16
   16444:	102d883a 	mov	r22,r2
   16448:	00171fc0 	call	171fc <__mulsi3>
   1644c:	a80b883a 	mov	r5,r21
   16450:	8009883a 	mov	r4,r16
   16454:	1021883a 	mov	r16,r2
   16458:	00171fc0 	call	171fc <__mulsi3>
   1645c:	b80ad43a 	srli	r5,r23,16
   16460:	1585883a 	add	r2,r2,r22
   16464:	d9c00217 	ldw	r7,8(sp)
   16468:	288b883a 	add	r5,r5,r2
   1646c:	da000317 	ldw	r8,12(sp)
   16470:	d9800417 	ldw	r6,16(sp)
   16474:	2d80022e 	bgeu	r5,r22,16480 <__muldf3+0x3c8>
   16478:	00800074 	movhi	r2,1
   1647c:	80a1883a 	add	r16,r16,r2
   16480:	2806943a 	slli	r3,r5,16
   16484:	d8800017 	ldw	r2,0(sp)
   16488:	bdffffcc 	andi	r23,r23,65535
   1648c:	1dc7883a 	add	r3,r3,r23
   16490:	90ab883a 	add	r21,r18,r2
   16494:	acd5803a 	cmpltu	r10,r21,r19
   16498:	1d07883a 	add	r3,r3,r20
   1649c:	af2b883a 	add	r21,r21,fp
   164a0:	1a97883a 	add	r11,r3,r10
   164a4:	af09803a 	cmpltu	r4,r21,fp
   164a8:	2826d43a 	srli	r19,r5,16
   164ac:	5c53883a 	add	r9,r11,r17
   164b0:	4905883a 	add	r2,r9,r4
   164b4:	1d07803a 	cmpltu	r3,r3,r20
   164b8:	5a95803a 	cmpltu	r10,r11,r10
   164bc:	1a86b03a 	or	r3,r3,r10
   164c0:	1109803a 	cmpltu	r4,r2,r4
   164c4:	4c53803a 	cmpltu	r9,r9,r17
   164c8:	1ce7883a 	add	r19,r3,r19
   164cc:	4908b03a 	or	r4,r9,r4
   164d0:	a824927a 	slli	r18,r21,9
   164d4:	d8c00117 	ldw	r3,4(sp)
   164d8:	9927883a 	add	r19,r19,r4
   164dc:	9c27883a 	add	r19,r19,r16
   164e0:	9826927a 	slli	r19,r19,9
   164e4:	a82ad5fa 	srli	r21,r21,23
   164e8:	100ad5fa 	srli	r5,r2,23
   164ec:	90e4b03a 	or	r18,r18,r3
   164f0:	1004927a 	slli	r2,r2,9
   164f4:	9024c03a 	cmpne	r18,r18,zero
   164f8:	9564b03a 	or	r18,r18,r21
   164fc:	98c0402c 	andhi	r3,r19,256
   16500:	90a4b03a 	or	r18,r18,r2
   16504:	9966b03a 	or	r19,r19,r5
   16508:	1800b626 	beq	r3,zero,167e4 <__muldf3+0x72c>
   1650c:	9006d07a 	srli	r3,r18,1
   16510:	980497fa 	slli	r2,r19,31
   16514:	9480004c 	andi	r18,r18,1
   16518:	9826d07a 	srli	r19,r19,1
   1651c:	1c86b03a 	or	r3,r3,r18
   16520:	18a4b03a 	or	r18,r3,r2
   16524:	3900ffc4 	addi	r4,r7,1023
   16528:	0100690e 	bge	zero,r4,166d0 <__muldf3+0x618>
   1652c:	908001cc 	andi	r2,r18,7
   16530:	10000726 	beq	r2,zero,16550 <__muldf3+0x498>
   16534:	908003cc 	andi	r2,r18,15
   16538:	10800120 	cmpeqi	r2,r2,4
   1653c:	1000041e 	bne	r2,zero,16550 <__muldf3+0x498>
   16540:	90800104 	addi	r2,r18,4
   16544:	14a5803a 	cmpltu	r18,r2,r18
   16548:	9ca7883a 	add	r19,r19,r18
   1654c:	1025883a 	mov	r18,r2
   16550:	9880402c 	andhi	r2,r19,256
   16554:	10000426 	beq	r2,zero,16568 <__muldf3+0x4b0>
   16558:	00bfc034 	movhi	r2,65280
   1655c:	10bfffc4 	addi	r2,r2,-1
   16560:	98a6703a 	and	r19,r19,r2
   16564:	39010004 	addi	r4,r7,1024
   16568:	2081ffc8 	cmpgei	r2,r4,2047
   1656c:	103f381e 	bne	r2,zero,16250 <__muldf3+0x198>
   16570:	9804977a 	slli	r2,r19,29
   16574:	9024d0fa 	srli	r18,r18,3
   16578:	9826927a 	slli	r19,r19,9
   1657c:	20c1ffcc 	andi	r3,r4,2047
   16580:	14a4b03a 	or	r18,r2,r18
   16584:	9826d33a 	srli	r19,r19,12
   16588:	003f2006 	br	1620c <__muldf3+0x154>
   1658c:	8722b03a 	or	r17,r16,fp
   16590:	88004526 	beq	r17,zero,166a8 <__muldf3+0x5f0>
   16594:	da000015 	stw	r8,0(sp)
   16598:	80008626 	beq	r16,zero,167b4 <__muldf3+0x6fc>
   1659c:	8009883a 	mov	r4,r16
   165a0:	0016ff40 	call	16ff4 <__clzsi2>
   165a4:	da000017 	ldw	r8,0(sp)
   165a8:	117ffd44 	addi	r5,r2,-11
   165ac:	01000744 	movi	r4,29
   165b0:	147ffe04 	addi	r17,r2,-8
   165b4:	2149c83a 	sub	r4,r4,r5
   165b8:	8460983a 	sll	r16,r16,r17
   165bc:	e108d83a 	srl	r4,fp,r4
   165c0:	e462983a 	sll	r17,fp,r17
   165c4:	2420b03a 	or	r16,r4,r16
   165c8:	4091c83a 	sub	r8,r8,r2
   165cc:	423f0344 	addi	r8,r8,-1011
   165d0:	0009883a 	mov	r4,zero
   165d4:	003ee706 	br	16174 <__muldf3+0xbc>
   165d8:	9924b03a 	or	r18,r19,r4
   165dc:	90002d26 	beq	r18,zero,16694 <__muldf3+0x5dc>
   165e0:	d9c00015 	stw	r7,0(sp)
   165e4:	98006826 	beq	r19,zero,16788 <__muldf3+0x6d0>
   165e8:	9809883a 	mov	r4,r19
   165ec:	0016ff40 	call	16ff4 <__clzsi2>
   165f0:	d9c00017 	ldw	r7,0(sp)
   165f4:	113ffd44 	addi	r4,r2,-11
   165f8:	00c00744 	movi	r3,29
   165fc:	14bffe04 	addi	r18,r2,-8
   16600:	1907c83a 	sub	r3,r3,r4
   16604:	9ca6983a 	sll	r19,r19,r18
   16608:	88c6d83a 	srl	r3,r17,r3
   1660c:	8ca4983a 	sll	r18,r17,r18
   16610:	1ce6b03a 	or	r19,r3,r19
   16614:	023f0344 	movi	r8,-1011
   16618:	4091c83a 	sub	r8,r8,r2
   1661c:	002b883a 	mov	r21,zero
   16620:	002d883a 	mov	r22,zero
   16624:	003ec206 	br	16130 <__muldf3+0x78>
   16628:	9924b03a 	or	r18,r19,r4
   1662c:	9000141e 	bne	r18,zero,16680 <__muldf3+0x5c8>
   16630:	0027883a 	mov	r19,zero
   16634:	05400204 	movi	r21,8
   16638:	0201ffc4 	movi	r8,2047
   1663c:	05800084 	movi	r22,2
   16640:	003ebb06 	br	16130 <__muldf3+0x78>
   16644:	8722b03a 	or	r17,r16,fp
   16648:	4201ffc4 	addi	r8,r8,2047
   1664c:	8800081e 	bne	r17,zero,16670 <__muldf3+0x5b8>
   16650:	ad400094 	ori	r21,r21,2
   16654:	0021883a 	mov	r16,zero
   16658:	01000084 	movi	r4,2
   1665c:	003ec506 	br	16174 <__muldf3+0xbc>
   16660:	b08000a0 	cmpeqi	r2,r22,2
   16664:	a00d883a 	mov	r6,r20
   16668:	103ee126 	beq	r2,zero,161f0 <__muldf3+0x138>
   1666c:	003ef806 	br	16250 <__muldf3+0x198>
   16670:	ad4000d4 	ori	r21,r21,3
   16674:	e023883a 	mov	r17,fp
   16678:	010000c4 	movi	r4,3
   1667c:	003ebd06 	br	16174 <__muldf3+0xbc>
   16680:	2025883a 	mov	r18,r4
   16684:	05400304 	movi	r21,12
   16688:	0201ffc4 	movi	r8,2047
   1668c:	058000c4 	movi	r22,3
   16690:	003ea706 	br	16130 <__muldf3+0x78>
   16694:	0027883a 	mov	r19,zero
   16698:	05400104 	movi	r21,4
   1669c:	0011883a 	mov	r8,zero
   166a0:	05800044 	movi	r22,1
   166a4:	003ea206 	br	16130 <__muldf3+0x78>
   166a8:	ad400054 	ori	r21,r21,1
   166ac:	0021883a 	mov	r16,zero
   166b0:	01000044 	movi	r4,1
   166b4:	003eaf06 	br	16174 <__muldf3+0xbc>
   166b8:	04c00434 	movhi	r19,16
   166bc:	000d883a 	mov	r6,zero
   166c0:	9cffffc4 	addi	r19,r19,-1
   166c4:	04bfffc4 	movi	r18,-1
   166c8:	00c1ffc4 	movi	r3,2047
   166cc:	003ecf06 	br	1620c <__muldf3+0x154>
   166d0:	00800044 	movi	r2,1
   166d4:	1105c83a 	sub	r2,r2,r4
   166d8:	10c00e48 	cmpgei	r3,r2,57
   166dc:	183ec81e 	bne	r3,zero,16200 <__muldf3+0x148>
   166e0:	10c00808 	cmpgei	r3,r2,32
   166e4:	1800411e 	bne	r3,zero,167ec <__muldf3+0x734>
   166e8:	39c10784 	addi	r7,r7,1054
   166ec:	99c6983a 	sll	r3,r19,r7
   166f0:	9088d83a 	srl	r4,r18,r2
   166f4:	91ce983a 	sll	r7,r18,r7
   166f8:	98a6d83a 	srl	r19,r19,r2
   166fc:	1904b03a 	or	r2,r3,r4
   16700:	3824c03a 	cmpne	r18,r7,zero
   16704:	1484b03a 	or	r2,r2,r18
   16708:	10c001cc 	andi	r3,r2,7
   1670c:	18000726 	beq	r3,zero,1672c <__muldf3+0x674>
   16710:	10c003cc 	andi	r3,r2,15
   16714:	18c00120 	cmpeqi	r3,r3,4
   16718:	1800041e 	bne	r3,zero,1672c <__muldf3+0x674>
   1671c:	10c00104 	addi	r3,r2,4
   16720:	1885803a 	cmpltu	r2,r3,r2
   16724:	98a7883a 	add	r19,r19,r2
   16728:	1805883a 	mov	r2,r3
   1672c:	98c0202c 	andhi	r3,r19,128
   16730:	18004326 	beq	r3,zero,16840 <__muldf3+0x788>
   16734:	00c00044 	movi	r3,1
   16738:	0027883a 	mov	r19,zero
   1673c:	0025883a 	mov	r18,zero
   16740:	003eb206 	br	1620c <__muldf3+0x154>
   16744:	9880022c 	andhi	r2,r19,8
   16748:	10000926 	beq	r2,zero,16770 <__muldf3+0x6b8>
   1674c:	8080022c 	andhi	r2,r16,8
   16750:	1000071e 	bne	r2,zero,16770 <__muldf3+0x6b8>
   16754:	00800434 	movhi	r2,16
   16758:	84c00234 	orhi	r19,r16,8
   1675c:	10bfffc4 	addi	r2,r2,-1
   16760:	98a6703a 	and	r19,r19,r2
   16764:	b80d883a 	mov	r6,r23
   16768:	8825883a 	mov	r18,r17
   1676c:	003fd606 	br	166c8 <__muldf3+0x610>
   16770:	00800434 	movhi	r2,16
   16774:	9cc00234 	orhi	r19,r19,8
   16778:	10bfffc4 	addi	r2,r2,-1
   1677c:	98a6703a 	and	r19,r19,r2
   16780:	a00d883a 	mov	r6,r20
   16784:	003fd006 	br	166c8 <__muldf3+0x610>
   16788:	0016ff40 	call	16ff4 <__clzsi2>
   1678c:	11000544 	addi	r4,r2,21
   16790:	21400748 	cmpgei	r5,r4,29
   16794:	1007883a 	mov	r3,r2
   16798:	d9c00017 	ldw	r7,0(sp)
   1679c:	10800804 	addi	r2,r2,32
   167a0:	283f9526 	beq	r5,zero,165f8 <__muldf3+0x540>
   167a4:	18fffe04 	addi	r3,r3,-8
   167a8:	88e6983a 	sll	r19,r17,r3
   167ac:	0025883a 	mov	r18,zero
   167b0:	003f9806 	br	16614 <__muldf3+0x55c>
   167b4:	e009883a 	mov	r4,fp
   167b8:	0016ff40 	call	16ff4 <__clzsi2>
   167bc:	11400544 	addi	r5,r2,21
   167c0:	29000748 	cmpgei	r4,r5,29
   167c4:	1007883a 	mov	r3,r2
   167c8:	da000017 	ldw	r8,0(sp)
   167cc:	10800804 	addi	r2,r2,32
   167d0:	203f7626 	beq	r4,zero,165ac <__muldf3+0x4f4>
   167d4:	1c3ffe04 	addi	r16,r3,-8
   167d8:	e420983a 	sll	r16,fp,r16
   167dc:	0023883a 	mov	r17,zero
   167e0:	003f7906 	br	165c8 <__muldf3+0x510>
   167e4:	400f883a 	mov	r7,r8
   167e8:	003f4e06 	br	16524 <__muldf3+0x46c>
   167ec:	00fff844 	movi	r3,-31
   167f0:	1907c83a 	sub	r3,r3,r4
   167f4:	10800820 	cmpeqi	r2,r2,32
   167f8:	98c6d83a 	srl	r3,r19,r3
   167fc:	1000031e 	bne	r2,zero,1680c <__muldf3+0x754>
   16800:	39c10f84 	addi	r7,r7,1086
   16804:	99e6983a 	sll	r19,r19,r7
   16808:	94e4b03a 	or	r18,r18,r19
   1680c:	9024c03a 	cmpne	r18,r18,zero
   16810:	90c4b03a 	or	r2,r18,r3
   16814:	148001cc 	andi	r18,r2,7
   16818:	9000051e 	bne	r18,zero,16830 <__muldf3+0x778>
   1681c:	0027883a 	mov	r19,zero
   16820:	1004d0fa 	srli	r2,r2,3
   16824:	0007883a 	mov	r3,zero
   16828:	14a4b03a 	or	r18,r2,r18
   1682c:	003e7706 	br	1620c <__muldf3+0x154>
   16830:	10c003cc 	andi	r3,r2,15
   16834:	18c00118 	cmpnei	r3,r3,4
   16838:	0027883a 	mov	r19,zero
   1683c:	183fb71e 	bne	r3,zero,1671c <__muldf3+0x664>
   16840:	9806927a 	slli	r3,r19,9
   16844:	9824977a 	slli	r18,r19,29
   16848:	1826d33a 	srli	r19,r3,12
   1684c:	003ff406 	br	16820 <__muldf3+0x768>
   16850:	00800434 	movhi	r2,16
   16854:	9cc00234 	orhi	r19,r19,8
   16858:	10bfffc4 	addi	r2,r2,-1
   1685c:	98a6703a 	and	r19,r19,r2
   16860:	003f9906 	br	166c8 <__muldf3+0x610>

00016864 <__extendsfdf2>:
   16864:	200ad5fa 	srli	r5,r4,23
   16868:	defffd04 	addi	sp,sp,-12
   1686c:	dc000015 	stw	r16,0(sp)
   16870:	29403fcc 	andi	r5,r5,255
   16874:	04002034 	movhi	r16,128
   16878:	28800044 	addi	r2,r5,1
   1687c:	dc400115 	stw	r17,4(sp)
   16880:	843fffc4 	addi	r16,r16,-1
   16884:	dfc00215 	stw	ra,8(sp)
   16888:	10803f8c 	andi	r2,r2,254
   1688c:	2022d7fa 	srli	r17,r4,31
   16890:	8120703a 	and	r16,r16,r4
   16894:	10000d26 	beq	r2,zero,168cc <__extendsfdf2+0x68>
   16898:	8008d0fa 	srli	r4,r16,3
   1689c:	8020977a 	slli	r16,r16,29
   168a0:	28c0e004 	addi	r3,r5,896
   168a4:	180a953a 	slli	r5,r3,20
   168a8:	880697fa 	slli	r3,r17,31
   168ac:	8005883a 	mov	r2,r16
   168b0:	290ab03a 	or	r5,r5,r4
   168b4:	28c6b03a 	or	r3,r5,r3
   168b8:	dfc00217 	ldw	ra,8(sp)
   168bc:	dc400117 	ldw	r17,4(sp)
   168c0:	dc000017 	ldw	r16,0(sp)
   168c4:	dec00304 	addi	sp,sp,12
   168c8:	f800283a 	ret
   168cc:	2800111e 	bne	r5,zero,16914 <__extendsfdf2+0xb0>
   168d0:	80001926 	beq	r16,zero,16938 <__extendsfdf2+0xd4>
   168d4:	8009883a 	mov	r4,r16
   168d8:	0016ff40 	call	16ff4 <__clzsi2>
   168dc:	10c002c8 	cmpgei	r3,r2,11
   168e0:	18001b1e 	bne	r3,zero,16950 <__extendsfdf2+0xec>
   168e4:	010002c4 	movi	r4,11
   168e8:	2089c83a 	sub	r4,r4,r2
   168ec:	10c00544 	addi	r3,r2,21
   168f0:	810ad83a 	srl	r5,r16,r4
   168f4:	80e0983a 	sll	r16,r16,r3
   168f8:	01000434 	movhi	r4,16
   168fc:	00c0e244 	movi	r3,905
   16900:	213fffc4 	addi	r4,r4,-1
   16904:	1887c83a 	sub	r3,r3,r2
   16908:	2908703a 	and	r4,r5,r4
   1690c:	18c1ffcc 	andi	r3,r3,2047
   16910:	003fe406 	br	168a4 <__extendsfdf2+0x40>
   16914:	80000b26 	beq	r16,zero,16944 <__extendsfdf2+0xe0>
   16918:	800ad0fa 	srli	r5,r16,3
   1691c:	00800434 	movhi	r2,16
   16920:	10bfffc4 	addi	r2,r2,-1
   16924:	29000234 	orhi	r4,r5,8
   16928:	8020977a 	slli	r16,r16,29
   1692c:	2088703a 	and	r4,r4,r2
   16930:	00c1ffc4 	movi	r3,2047
   16934:	003fdb06 	br	168a4 <__extendsfdf2+0x40>
   16938:	0007883a 	mov	r3,zero
   1693c:	0009883a 	mov	r4,zero
   16940:	003fd806 	br	168a4 <__extendsfdf2+0x40>
   16944:	00c1ffc4 	movi	r3,2047
   16948:	0009883a 	mov	r4,zero
   1694c:	003fd506 	br	168a4 <__extendsfdf2+0x40>
   16950:	113ffd44 	addi	r4,r2,-11
   16954:	810a983a 	sll	r5,r16,r4
   16958:	0021883a 	mov	r16,zero
   1695c:	003fe606 	br	168f8 <__extendsfdf2+0x94>

00016960 <__truncdfsf2>:
   16960:	2804d53a 	srli	r2,r5,20
   16964:	00c00434 	movhi	r3,16
   16968:	18ffffc4 	addi	r3,r3,-1
   1696c:	28c6703a 	and	r3,r5,r3
   16970:	180c90fa 	slli	r6,r3,3
   16974:	1081ffcc 	andi	r2,r2,2047
   16978:	2006d77a 	srli	r3,r4,29
   1697c:	11c00044 	addi	r7,r2,1
   16980:	39c1ff8c 	andi	r7,r7,2046
   16984:	280ad7fa 	srli	r5,r5,31
   16988:	201090fa 	slli	r8,r4,3
   1698c:	1986b03a 	or	r3,r3,r6
   16990:	38000b26 	beq	r7,zero,169c0 <__truncdfsf2+0x60>
   16994:	11bf2004 	addi	r6,r2,-896
   16998:	31c03fc8 	cmpgei	r7,r6,255
   1699c:	38001226 	beq	r7,zero,169e8 <__truncdfsf2+0x88>
   169a0:	00bfffc4 	movi	r2,-1
   169a4:	0007883a 	mov	r3,zero
   169a8:	10803fcc 	andi	r2,r2,255
   169ac:	100495fa 	slli	r2,r2,23
   169b0:	280a97fa 	slli	r5,r5,31
   169b4:	10c4b03a 	or	r2,r2,r3
   169b8:	1144b03a 	or	r2,r2,r5
   169bc:	f800283a 	ret
   169c0:	1a10b03a 	or	r8,r3,r8
   169c4:	1000041e 	bne	r2,zero,169d8 <__truncdfsf2+0x78>
   169c8:	40001d1e 	bne	r8,zero,16a40 <__truncdfsf2+0xe0>
   169cc:	0005883a 	mov	r2,zero
   169d0:	0007883a 	mov	r3,zero
   169d4:	003ff406 	br	169a8 <__truncdfsf2+0x48>
   169d8:	403ff126 	beq	r8,zero,169a0 <__truncdfsf2+0x40>
   169dc:	18c01034 	orhi	r3,r3,64
   169e0:	00bfffc4 	movi	r2,-1
   169e4:	003ff006 	br	169a8 <__truncdfsf2+0x48>
   169e8:	0180170e 	bge	zero,r6,16a48 <__truncdfsf2+0xe8>
   169ec:	200891ba 	slli	r4,r4,6
   169f0:	180690fa 	slli	r3,r3,3
   169f4:	4010d77a 	srli	r8,r8,29
   169f8:	2008c03a 	cmpne	r4,r4,zero
   169fc:	20c6b03a 	or	r3,r4,r3
   16a00:	1a06b03a 	or	r3,r3,r8
   16a04:	188001cc 	andi	r2,r3,7
   16a08:	10002f26 	beq	r2,zero,16ac8 <__truncdfsf2+0x168>
   16a0c:	188003cc 	andi	r2,r3,15
   16a10:	10800118 	cmpnei	r2,r2,4
   16a14:	10000126 	beq	r2,zero,16a1c <__truncdfsf2+0xbc>
   16a18:	18c00104 	addi	r3,r3,4
   16a1c:	1881002c 	andhi	r2,r3,1024
   16a20:	10002926 	beq	r2,zero,16ac8 <__truncdfsf2+0x168>
   16a24:	30800044 	addi	r2,r6,1
   16a28:	11003fe0 	cmpeqi	r4,r2,255
   16a2c:	203fdc1e 	bne	r4,zero,169a0 <__truncdfsf2+0x40>
   16a30:	180691ba 	slli	r3,r3,6
   16a34:	1806d27a 	srli	r3,r3,9
   16a38:	003fdb06 	br	169a8 <__truncdfsf2+0x48>
   16a3c:	0005883a 	mov	r2,zero
   16a40:	00c00144 	movi	r3,5
   16a44:	003ffa06 	br	16a30 <__truncdfsf2+0xd0>
   16a48:	313ffa50 	cmplti	r4,r6,-23
   16a4c:	203ffb1e 	bne	r4,zero,16a3c <__truncdfsf2+0xdc>
   16a50:	01c00784 	movi	r7,30
   16a54:	398fc83a 	sub	r7,r7,r6
   16a58:	3a400808 	cmpgei	r9,r7,32
   16a5c:	19002034 	orhi	r4,r3,128
   16a60:	48001126 	beq	r9,zero,16aa8 <__truncdfsf2+0x148>
   16a64:	00ffff84 	movi	r3,-2
   16a68:	198dc83a 	sub	r6,r3,r6
   16a6c:	39c00820 	cmpeqi	r7,r7,32
   16a70:	218cd83a 	srl	r6,r4,r6
   16a74:	3800031e 	bne	r7,zero,16a84 <__truncdfsf2+0x124>
   16a78:	10ff2884 	addi	r3,r2,-862
   16a7c:	20c8983a 	sll	r4,r4,r3
   16a80:	4110b03a 	or	r8,r8,r4
   16a84:	4006c03a 	cmpne	r3,r8,zero
   16a88:	1986b03a 	or	r3,r3,r6
   16a8c:	188001cc 	andi	r2,r3,7
   16a90:	000d883a 	mov	r6,zero
   16a94:	103fdd1e 	bne	r2,zero,16a0c <__truncdfsf2+0xac>
   16a98:	1881002c 	andhi	r2,r3,1024
   16a9c:	103fe426 	beq	r2,zero,16a30 <__truncdfsf2+0xd0>
   16aa0:	00800044 	movi	r2,1
   16aa4:	003fe206 	br	16a30 <__truncdfsf2+0xd0>
   16aa8:	10ff2084 	addi	r3,r2,-894
   16aac:	40c4983a 	sll	r2,r8,r3
   16ab0:	20c8983a 	sll	r4,r4,r3
   16ab4:	41c6d83a 	srl	r3,r8,r7
   16ab8:	1004c03a 	cmpne	r2,r2,zero
   16abc:	1108b03a 	or	r4,r2,r4
   16ac0:	1906b03a 	or	r3,r3,r4
   16ac4:	003ff106 	br	16a8c <__truncdfsf2+0x12c>
   16ac8:	3005883a 	mov	r2,r6
   16acc:	003fd806 	br	16a30 <__truncdfsf2+0xd0>

00016ad0 <_Unwind_ForcedUnwind_Phase2>:
   16ad0:	28800017 	ldw	r2,0(r5)
   16ad4:	defff504 	addi	sp,sp,-44
   16ad8:	dd400815 	stw	r21,32(sp)
   16adc:	dd000715 	stw	r20,28(sp)
   16ae0:	dcc00615 	stw	r19,24(sp)
   16ae4:	dc800515 	stw	r18,20(sp)
   16ae8:	dc400415 	stw	r17,16(sp)
   16aec:	dc000315 	stw	r16,12(sp)
   16af0:	dfc00a15 	stw	ra,40(sp)
   16af4:	dd800915 	stw	r22,36(sp)
   16af8:	302b883a 	mov	r21,r6
   16afc:	24c00317 	ldw	r19,12(r4)
   16b00:	25000417 	ldw	r20,16(r4)
   16b04:	21800017 	ldw	r6,0(r4)
   16b08:	21c00117 	ldw	r7,4(r4)
   16b0c:	2823883a 	mov	r17,r5
   16b10:	2021883a 	mov	r16,r4
   16b14:	04800044 	movi	r18,1
   16b18:	10001d26 	beq	r2,zero,16b90 <_Unwind_ForcedUnwind_Phase2+0xc0>
   16b1c:	15800617 	ldw	r22,24(r2)
   16b20:	01400284 	movi	r5,10
   16b24:	01000044 	movi	r4,1
   16b28:	dd000215 	stw	r20,8(sp)
   16b2c:	dc400115 	stw	r17,4(sp)
   16b30:	dc000015 	stw	r16,0(sp)
   16b34:	983ee83a 	callr	r19
   16b38:	01400284 	movi	r5,10
   16b3c:	01000044 	movi	r4,1
   16b40:	10001a1e 	bne	r2,zero,16bac <_Unwind_ForcedUnwind_Phase2+0xdc>
   16b44:	81800017 	ldw	r6,0(r16)
   16b48:	81c00117 	ldw	r7,4(r16)
   16b4c:	b0000926 	beq	r22,zero,16b74 <_Unwind_ForcedUnwind_Phase2+0xa4>
   16b50:	dc400115 	stw	r17,4(sp)
   16b54:	dc000015 	stw	r16,0(sp)
   16b58:	b03ee83a 	callr	r22
   16b5c:	10c001e0 	cmpeqi	r3,r2,7
   16b60:	11000218 	cmpnei	r4,r2,8
   16b64:	18001d1e 	bne	r3,zero,16bdc <_Unwind_ForcedUnwind_Phase2+0x10c>
   16b68:	2000101e 	bne	r4,zero,16bac <_Unwind_ForcedUnwind_Phase2+0xdc>
   16b6c:	81800017 	ldw	r6,0(r16)
   16b70:	81c00117 	ldw	r7,4(r16)
   16b74:	88800017 	ldw	r2,0(r17)
   16b78:	00c000b4 	movhi	r3,2
   16b7c:	94800044 	addi	r18,r18,1
   16b80:	10800017 	ldw	r2,0(r2)
   16b84:	18a7b915 	stw	r2,-24860(r3)
   16b88:	88800015 	stw	r2,0(r17)
   16b8c:	103fe31e 	bne	r2,zero,16b1c <_Unwind_ForcedUnwind_Phase2+0x4c>
   16b90:	dd000215 	stw	r20,8(sp)
   16b94:	dc400115 	stw	r17,4(sp)
   16b98:	dc000015 	stw	r16,0(sp)
   16b9c:	01400684 	movi	r5,26
   16ba0:	01000044 	movi	r4,1
   16ba4:	983ee83a 	callr	r19
   16ba8:	10000b26 	beq	r2,zero,16bd8 <_Unwind_ForcedUnwind_Phase2+0x108>
   16bac:	00800084 	movi	r2,2
   16bb0:	dfc00a17 	ldw	ra,40(sp)
   16bb4:	dd800917 	ldw	r22,36(sp)
   16bb8:	dd400817 	ldw	r21,32(sp)
   16bbc:	dd000717 	ldw	r20,28(sp)
   16bc0:	dcc00617 	ldw	r19,24(sp)
   16bc4:	dc800517 	ldw	r18,20(sp)
   16bc8:	dc400417 	ldw	r17,16(sp)
   16bcc:	dc000317 	ldw	r16,12(sp)
   16bd0:	dec00b04 	addi	sp,sp,44
   16bd4:	f800283a 	ret
   16bd8:	00800144 	movi	r2,5
   16bdc:	ac800015 	stw	r18,0(r21)
   16be0:	003ff306 	br	16bb0 <_Unwind_ForcedUnwind_Phase2+0xe0>

00016be4 <_Unwind_RaiseException_Phase2>:
   16be4:	28800017 	ldw	r2,0(r5)
   16be8:	10002f26 	beq	r2,zero,16ca8 <_Unwind_RaiseException_Phase2+0xc4>
   16bec:	defff804 	addi	sp,sp,-32
   16bf0:	dcc00515 	stw	r19,20(sp)
   16bf4:	dc800415 	stw	r18,16(sp)
   16bf8:	dc400315 	stw	r17,12(sp)
   16bfc:	dc000215 	stw	r16,8(sp)
   16c00:	dfc00715 	stw	ra,28(sp)
   16c04:	dd000615 	stw	r20,24(sp)
   16c08:	2823883a 	mov	r17,r5
   16c0c:	2021883a 	mov	r16,r4
   16c10:	3027883a 	mov	r19,r6
   16c14:	04800044 	movi	r18,1
   16c18:	00001306 	br	16c68 <_Unwind_RaiseException_Phase2+0x84>
   16c1c:	18000e26 	beq	r3,zero,16c58 <_Unwind_RaiseException_Phase2+0x74>
   16c20:	01400084 	movi	r5,2
   16c24:	0029883a 	mov	r20,zero
   16c28:	81800017 	ldw	r6,0(r16)
   16c2c:	81c00117 	ldw	r7,4(r16)
   16c30:	01000044 	movi	r4,1
   16c34:	dc400115 	stw	r17,4(sp)
   16c38:	dc000015 	stw	r16,0(sp)
   16c3c:	183ee83a 	callr	r3
   16c40:	10c001e0 	cmpeqi	r3,r2,7
   16c44:	18001a1e 	bne	r3,zero,16cb0 <_Unwind_RaiseException_Phase2+0xcc>
   16c48:	10800218 	cmpnei	r2,r2,8
   16c4c:	10000d1e 	bne	r2,zero,16c84 <_Unwind_RaiseException_Phase2+0xa0>
   16c50:	a000191e 	bne	r20,zero,16cb8 <_Unwind_RaiseException_Phase2+0xd4>
   16c54:	88800017 	ldw	r2,0(r17)
   16c58:	10800017 	ldw	r2,0(r2)
   16c5c:	94800044 	addi	r18,r18,1
   16c60:	88800015 	stw	r2,0(r17)
   16c64:	10000726 	beq	r2,zero,16c84 <_Unwind_RaiseException_Phase2+0xa0>
   16c68:	81000417 	ldw	r4,16(r16)
   16c6c:	10c00617 	ldw	r3,24(r2)
   16c70:	113fea1e 	bne	r2,r4,16c1c <_Unwind_RaiseException_Phase2+0x38>
   16c74:	18001026 	beq	r3,zero,16cb8 <_Unwind_RaiseException_Phase2+0xd4>
   16c78:	01400184 	movi	r5,6
   16c7c:	05000104 	movi	r20,4
   16c80:	003fe906 	br	16c28 <_Unwind_RaiseException_Phase2+0x44>
   16c84:	00800084 	movi	r2,2
   16c88:	dfc00717 	ldw	ra,28(sp)
   16c8c:	dd000617 	ldw	r20,24(sp)
   16c90:	dcc00517 	ldw	r19,20(sp)
   16c94:	dc800417 	ldw	r18,16(sp)
   16c98:	dc400317 	ldw	r17,12(sp)
   16c9c:	dc000217 	ldw	r16,8(sp)
   16ca0:	dec00804 	addi	sp,sp,32
   16ca4:	f800283a 	ret
   16ca8:	00800084 	movi	r2,2
   16cac:	f800283a 	ret
   16cb0:	9c800015 	stw	r18,0(r19)
   16cb4:	003ff406 	br	16c88 <_Unwind_RaiseException_Phase2+0xa4>
   16cb8:	00172240 	call	17224 <abort>

00016cbc <uw_install_context.constprop.0.isra.0>:
   16cbc:	deffff04 	addi	sp,sp,-4
   16cc0:	df000015 	stw	fp,0(sp)
   16cc4:	20800804 	addi	r2,r4,32
   16cc8:	00c000b4 	movhi	r3,2
   16ccc:	1927b915 	stw	r4,-24860(r3)
   16cd0:	d839883a 	mov	fp,sp
   16cd4:	20c00917 	ldw	r3,36(r4)
   16cd8:	21000817 	ldw	r4,32(r4)
   16cdc:	16c00217 	ldw	sp,8(r2)
   16ce0:	2039883a 	mov	fp,r4
   16ce4:	1800683a 	jmp	r3

00016ce8 <_Unwind_SjLj_Register>:
   16ce8:	008000b4 	movhi	r2,2
   16cec:	10a7b917 	ldw	r2,-24860(r2)
   16cf0:	20800015 	stw	r2,0(r4)
   16cf4:	008000b4 	movhi	r2,2
   16cf8:	1127b915 	stw	r4,-24860(r2)
   16cfc:	f800283a 	ret

00016d00 <_Unwind_SjLj_Unregister>:
   16d00:	20c00017 	ldw	r3,0(r4)
   16d04:	008000b4 	movhi	r2,2
   16d08:	10e7b915 	stw	r3,-24860(r2)
   16d0c:	f800283a 	ret

00016d10 <_Unwind_GetGR>:
   16d10:	29400084 	addi	r5,r5,2
   16d14:	20800017 	ldw	r2,0(r4)
   16d18:	280a90ba 	slli	r5,r5,2
   16d1c:	114b883a 	add	r5,r2,r5
   16d20:	28800017 	ldw	r2,0(r5)
   16d24:	f800283a 	ret

00016d28 <_Unwind_GetCFA>:
   16d28:	20800017 	ldw	r2,0(r4)
   16d2c:	10000226 	beq	r2,zero,16d38 <_Unwind_GetCFA+0x10>
   16d30:	10800a17 	ldw	r2,40(r2)
   16d34:	f800283a 	ret
   16d38:	0005883a 	mov	r2,zero
   16d3c:	f800283a 	ret

00016d40 <_Unwind_SetGR>:
   16d40:	29400084 	addi	r5,r5,2
   16d44:	20800017 	ldw	r2,0(r4)
   16d48:	280a90ba 	slli	r5,r5,2
   16d4c:	114b883a 	add	r5,r2,r5
   16d50:	29800015 	stw	r6,0(r5)
   16d54:	f800283a 	ret

00016d58 <_Unwind_GetIP>:
   16d58:	20800017 	ldw	r2,0(r4)
   16d5c:	10800117 	ldw	r2,4(r2)
   16d60:	10800044 	addi	r2,r2,1
   16d64:	f800283a 	ret

00016d68 <_Unwind_GetIPInfo>:
   16d68:	20800017 	ldw	r2,0(r4)
   16d6c:	28000015 	stw	zero,0(r5)
   16d70:	10000326 	beq	r2,zero,16d80 <_Unwind_GetIPInfo+0x18>
   16d74:	10800117 	ldw	r2,4(r2)
   16d78:	10800044 	addi	r2,r2,1
   16d7c:	f800283a 	ret
   16d80:	0005883a 	mov	r2,zero
   16d84:	f800283a 	ret

00016d88 <_Unwind_SetIP>:
   16d88:	20800017 	ldw	r2,0(r4)
   16d8c:	297fffc4 	addi	r5,r5,-1
   16d90:	11400115 	stw	r5,4(r2)
   16d94:	f800283a 	ret

00016d98 <_Unwind_GetLanguageSpecificData>:
   16d98:	20800017 	ldw	r2,0(r4)
   16d9c:	10800717 	ldw	r2,28(r2)
   16da0:	f800283a 	ret

00016da4 <_Unwind_GetRegionStart>:
   16da4:	0005883a 	mov	r2,zero
   16da8:	f800283a 	ret

00016dac <_Unwind_FindEnclosingFunction>:
   16dac:	0005883a 	mov	r2,zero
   16db0:	f800283a 	ret

00016db4 <_Unwind_GetDataRelBase>:
   16db4:	0005883a 	mov	r2,zero
   16db8:	f800283a 	ret

00016dbc <_Unwind_GetTextRelBase>:
   16dbc:	0005883a 	mov	r2,zero
   16dc0:	f800283a 	ret

00016dc4 <_Unwind_SjLj_RaiseException>:
   16dc4:	defff804 	addi	sp,sp,-32
   16dc8:	008000b4 	movhi	r2,2
   16dcc:	dc400515 	stw	r17,20(sp)
   16dd0:	1467b917 	ldw	r17,-24860(r2)
   16dd4:	dfc00715 	stw	ra,28(sp)
   16dd8:	dc800615 	stw	r18,24(sp)
   16ddc:	dc000415 	stw	r16,16(sp)
   16de0:	dc400215 	stw	r17,8(sp)
   16de4:	88001426 	beq	r17,zero,16e38 <_Unwind_SjLj_RaiseException+0x74>
   16de8:	2021883a 	mov	r16,r4
   16dec:	8805883a 	mov	r2,r17
   16df0:	dc800204 	addi	r18,sp,8
   16df4:	10800617 	ldw	r2,24(r2)
   16df8:	10000b26 	beq	r2,zero,16e28 <_Unwind_SjLj_RaiseException+0x64>
   16dfc:	81800017 	ldw	r6,0(r16)
   16e00:	81c00117 	ldw	r7,4(r16)
   16e04:	01400044 	movi	r5,1
   16e08:	dc800115 	stw	r18,4(sp)
   16e0c:	dc000015 	stw	r16,0(sp)
   16e10:	01000044 	movi	r4,1
   16e14:	103ee83a 	callr	r2
   16e18:	10c001a0 	cmpeqi	r3,r2,6
   16e1c:	18000d1e 	bne	r3,zero,16e54 <_Unwind_SjLj_RaiseException+0x90>
   16e20:	10800218 	cmpnei	r2,r2,8
   16e24:	1000171e 	bne	r2,zero,16e84 <_Unwind_SjLj_RaiseException+0xc0>
   16e28:	d8800217 	ldw	r2,8(sp)
   16e2c:	10800017 	ldw	r2,0(r2)
   16e30:	d8800215 	stw	r2,8(sp)
   16e34:	103fef1e 	bne	r2,zero,16df4 <_Unwind_SjLj_RaiseException+0x30>
   16e38:	00800144 	movi	r2,5
   16e3c:	dfc00717 	ldw	ra,28(sp)
   16e40:	dc800617 	ldw	r18,24(sp)
   16e44:	dc400517 	ldw	r17,20(sp)
   16e48:	dc000417 	ldw	r16,16(sp)
   16e4c:	dec00804 	addi	sp,sp,32
   16e50:	f800283a 	ret
   16e54:	d8800217 	ldw	r2,8(sp)
   16e58:	80000315 	stw	zero,12(r16)
   16e5c:	d9800304 	addi	r6,sp,12
   16e60:	80800415 	stw	r2,16(r16)
   16e64:	900b883a 	mov	r5,r18
   16e68:	8009883a 	mov	r4,r16
   16e6c:	dc400215 	stw	r17,8(sp)
   16e70:	0016be40 	call	16be4 <_Unwind_RaiseException_Phase2>
   16e74:	10c001d8 	cmpnei	r3,r2,7
   16e78:	183ff01e 	bne	r3,zero,16e3c <_Unwind_SjLj_RaiseException+0x78>
   16e7c:	d9000217 	ldw	r4,8(sp)
   16e80:	0016cbc0 	call	16cbc <uw_install_context.constprop.0.isra.0>
   16e84:	008000c4 	movi	r2,3
   16e88:	003fec06 	br	16e3c <_Unwind_SjLj_RaiseException+0x78>

00016e8c <_Unwind_SjLj_ForcedUnwind>:
   16e8c:	008000b4 	movhi	r2,2
   16e90:	defffd04 	addi	sp,sp,-12
   16e94:	10e7b917 	ldw	r3,-24860(r2)
   16e98:	dfc00215 	stw	ra,8(sp)
   16e9c:	21400315 	stw	r5,12(r4)
   16ea0:	21800415 	stw	r6,16(r4)
   16ea4:	d80b883a 	mov	r5,sp
   16ea8:	d9800104 	addi	r6,sp,4
   16eac:	d8c00015 	stw	r3,0(sp)
   16eb0:	0016ad00 	call	16ad0 <_Unwind_ForcedUnwind_Phase2>
   16eb4:	10c001e0 	cmpeqi	r3,r2,7
   16eb8:	1800031e 	bne	r3,zero,16ec8 <_Unwind_SjLj_ForcedUnwind+0x3c>
   16ebc:	dfc00217 	ldw	ra,8(sp)
   16ec0:	dec00304 	addi	sp,sp,12
   16ec4:	f800283a 	ret
   16ec8:	d9000017 	ldw	r4,0(sp)
   16ecc:	0016cbc0 	call	16cbc <uw_install_context.constprop.0.isra.0>

00016ed0 <_Unwind_SjLj_Resume>:
   16ed0:	008000b4 	movhi	r2,2
   16ed4:	10e7b917 	ldw	r3,-24860(r2)
   16ed8:	20800317 	ldw	r2,12(r4)
   16edc:	defffd04 	addi	sp,sp,-12
   16ee0:	dfc00215 	stw	ra,8(sp)
   16ee4:	d8c00015 	stw	r3,0(sp)
   16ee8:	d9800104 	addi	r6,sp,4
   16eec:	d80b883a 	mov	r5,sp
   16ef0:	1000051e 	bne	r2,zero,16f08 <_Unwind_SjLj_Resume+0x38>
   16ef4:	0016be40 	call	16be4 <_Unwind_RaiseException_Phase2>
   16ef8:	108001e0 	cmpeqi	r2,r2,7
   16efc:	10000426 	beq	r2,zero,16f10 <_Unwind_SjLj_Resume+0x40>
   16f00:	d9000017 	ldw	r4,0(sp)
   16f04:	0016cbc0 	call	16cbc <uw_install_context.constprop.0.isra.0>
   16f08:	0016ad00 	call	16ad0 <_Unwind_ForcedUnwind_Phase2>
   16f0c:	003ffa06 	br	16ef8 <_Unwind_SjLj_Resume+0x28>
   16f10:	00172240 	call	17224 <abort>

00016f14 <_Unwind_SjLj_Resume_or_Rethrow>:
   16f14:	20800317 	ldw	r2,12(r4)
   16f18:	1000011e 	bne	r2,zero,16f20 <_Unwind_SjLj_Resume_or_Rethrow+0xc>
   16f1c:	0016dc41 	jmpi	16dc4 <_Unwind_SjLj_RaiseException>
   16f20:	008000b4 	movhi	r2,2
   16f24:	10a7b917 	ldw	r2,-24860(r2)
   16f28:	defffd04 	addi	sp,sp,-12
   16f2c:	d9800104 	addi	r6,sp,4
   16f30:	d80b883a 	mov	r5,sp
   16f34:	dfc00215 	stw	ra,8(sp)
   16f38:	d8800015 	stw	r2,0(sp)
   16f3c:	0016ad00 	call	16ad0 <_Unwind_ForcedUnwind_Phase2>
   16f40:	108001e0 	cmpeqi	r2,r2,7
   16f44:	10000226 	beq	r2,zero,16f50 <_Unwind_SjLj_Resume_or_Rethrow+0x3c>
   16f48:	d9000017 	ldw	r4,0(sp)
   16f4c:	0016cbc0 	call	16cbc <uw_install_context.constprop.0.isra.0>
   16f50:	00172240 	call	17224 <abort>

00016f54 <_Unwind_DeleteException>:
   16f54:	20800217 	ldw	r2,8(r4)
   16f58:	200b883a 	mov	r5,r4
   16f5c:	10000226 	beq	r2,zero,16f68 <_Unwind_DeleteException+0x14>
   16f60:	01000044 	movi	r4,1
   16f64:	1000683a 	jmp	r2
   16f68:	f800283a 	ret

00016f6c <_Unwind_Backtrace>:
   16f6c:	008000b4 	movhi	r2,2
   16f70:	10a7b917 	ldw	r2,-24860(r2)
   16f74:	defffb04 	addi	sp,sp,-20
   16f78:	dc800315 	stw	r18,12(sp)
   16f7c:	dc400215 	stw	r17,8(sp)
   16f80:	dc000115 	stw	r16,4(sp)
   16f84:	dfc00415 	stw	ra,16(sp)
   16f88:	d8800015 	stw	r2,0(sp)
   16f8c:	2021883a 	mov	r16,r4
   16f90:	2823883a 	mov	r17,r5
   16f94:	d825883a 	mov	r18,sp
   16f98:	10000826 	beq	r2,zero,16fbc <_Unwind_Backtrace+0x50>
   16f9c:	880b883a 	mov	r5,r17
   16fa0:	9009883a 	mov	r4,r18
   16fa4:	803ee83a 	callr	r16
   16fa8:	1000101e 	bne	r2,zero,16fec <_Unwind_Backtrace+0x80>
   16fac:	d8800017 	ldw	r2,0(sp)
   16fb0:	10800017 	ldw	r2,0(r2)
   16fb4:	d8800015 	stw	r2,0(sp)
   16fb8:	103ff81e 	bne	r2,zero,16f9c <_Unwind_Backtrace+0x30>
   16fbc:	880b883a 	mov	r5,r17
   16fc0:	9009883a 	mov	r4,r18
   16fc4:	803ee83a 	callr	r16
   16fc8:	00c00144 	movi	r3,5
   16fcc:	1000071e 	bne	r2,zero,16fec <_Unwind_Backtrace+0x80>
   16fd0:	1805883a 	mov	r2,r3
   16fd4:	dfc00417 	ldw	ra,16(sp)
   16fd8:	dc800317 	ldw	r18,12(sp)
   16fdc:	dc400217 	ldw	r17,8(sp)
   16fe0:	dc000117 	ldw	r16,4(sp)
   16fe4:	dec00504 	addi	sp,sp,20
   16fe8:	f800283a 	ret
   16fec:	00c000c4 	movi	r3,3
   16ff0:	003ff706 	br	16fd0 <_Unwind_Backtrace+0x64>

00016ff4 <__clzsi2>:
   16ff4:	00bfffd4 	movui	r2,65535
   16ff8:	11000436 	bltu	r2,r4,1700c <__clzsi2+0x18>
   16ffc:	20804030 	cmpltui	r2,r4,256
   17000:	10000e26 	beq	r2,zero,1703c <__clzsi2+0x48>
   17004:	01400804 	movi	r5,32
   17008:	00000406 	br	1701c <__clzsi2+0x28>
   1700c:	00804034 	movhi	r2,256
   17010:	20800736 	bltu	r4,r2,17030 <__clzsi2+0x3c>
   17014:	2008d63a 	srli	r4,r4,24
   17018:	01400204 	movi	r5,8
   1701c:	00c000b4 	movhi	r3,2
   17020:	20c7883a 	add	r3,r4,r3
   17024:	18a49f03 	ldbu	r2,-28036(r3)
   17028:	2885c83a 	sub	r2,r5,r2
   1702c:	f800283a 	ret
   17030:	2008d43a 	srli	r4,r4,16
   17034:	01400404 	movi	r5,16
   17038:	003ff806 	br	1701c <__clzsi2+0x28>
   1703c:	2008d23a 	srli	r4,r4,8
   17040:	01400604 	movi	r5,24
   17044:	003ff506 	br	1701c <__clzsi2+0x28>

00017048 <__divsi3>:
   17048:	20001a16 	blt	r4,zero,170b4 <__divsi3+0x6c>
   1704c:	000f883a 	mov	r7,zero
   17050:	2800020e 	bge	r5,zero,1705c <__divsi3+0x14>
   17054:	014bc83a 	sub	r5,zero,r5
   17058:	39c0005c 	xori	r7,r7,1
   1705c:	200d883a 	mov	r6,r4
   17060:	00c00044 	movi	r3,1
   17064:	2900092e 	bgeu	r5,r4,1708c <__divsi3+0x44>
   17068:	00800804 	movi	r2,32
   1706c:	00c00044 	movi	r3,1
   17070:	00000106 	br	17078 <__divsi3+0x30>
   17074:	10001226 	beq	r2,zero,170c0 <__divsi3+0x78>
   17078:	294b883a 	add	r5,r5,r5
   1707c:	10bfffc4 	addi	r2,r2,-1
   17080:	18c7883a 	add	r3,r3,r3
   17084:	293ffb36 	bltu	r5,r4,17074 <__divsi3+0x2c>
   17088:	18000d26 	beq	r3,zero,170c0 <__divsi3+0x78>
   1708c:	0005883a 	mov	r2,zero
   17090:	31400236 	bltu	r6,r5,1709c <__divsi3+0x54>
   17094:	314dc83a 	sub	r6,r6,r5
   17098:	10c4b03a 	or	r2,r2,r3
   1709c:	1806d07a 	srli	r3,r3,1
   170a0:	280ad07a 	srli	r5,r5,1
   170a4:	183ffa1e 	bne	r3,zero,17090 <__divsi3+0x48>
   170a8:	38000126 	beq	r7,zero,170b0 <__divsi3+0x68>
   170ac:	0085c83a 	sub	r2,zero,r2
   170b0:	f800283a 	ret
   170b4:	0109c83a 	sub	r4,zero,r4
   170b8:	01c00044 	movi	r7,1
   170bc:	003fe406 	br	17050 <__divsi3+0x8>
   170c0:	0005883a 	mov	r2,zero
   170c4:	003ff806 	br	170a8 <__divsi3+0x60>

000170c8 <__modsi3>:
   170c8:	20001916 	blt	r4,zero,17130 <__modsi3+0x68>
   170cc:	000f883a 	mov	r7,zero
   170d0:	2005883a 	mov	r2,r4
   170d4:	2800010e 	bge	r5,zero,170dc <__modsi3+0x14>
   170d8:	014bc83a 	sub	r5,zero,r5
   170dc:	00c00044 	movi	r3,1
   170e0:	2900092e 	bgeu	r5,r4,17108 <__modsi3+0x40>
   170e4:	01800804 	movi	r6,32
   170e8:	00c00044 	movi	r3,1
   170ec:	00000106 	br	170f4 <__modsi3+0x2c>
   170f0:	30000d26 	beq	r6,zero,17128 <__modsi3+0x60>
   170f4:	294b883a 	add	r5,r5,r5
   170f8:	31bfffc4 	addi	r6,r6,-1
   170fc:	18c7883a 	add	r3,r3,r3
   17100:	293ffb36 	bltu	r5,r4,170f0 <__modsi3+0x28>
   17104:	18000826 	beq	r3,zero,17128 <__modsi3+0x60>
   17108:	1806d07a 	srli	r3,r3,1
   1710c:	11400136 	bltu	r2,r5,17114 <__modsi3+0x4c>
   17110:	1145c83a 	sub	r2,r2,r5
   17114:	280ad07a 	srli	r5,r5,1
   17118:	183ffb1e 	bne	r3,zero,17108 <__modsi3+0x40>
   1711c:	38000126 	beq	r7,zero,17124 <__modsi3+0x5c>
   17120:	0085c83a 	sub	r2,zero,r2
   17124:	f800283a 	ret
   17128:	2005883a 	mov	r2,r4
   1712c:	003ffb06 	br	1711c <__modsi3+0x54>
   17130:	0109c83a 	sub	r4,zero,r4
   17134:	01c00044 	movi	r7,1
   17138:	003fe506 	br	170d0 <__modsi3+0x8>

0001713c <__udivsi3>:
   1713c:	200d883a 	mov	r6,r4
   17140:	2900152e 	bgeu	r5,r4,17198 <__udivsi3+0x5c>
   17144:	28001416 	blt	r5,zero,17198 <__udivsi3+0x5c>
   17148:	00800804 	movi	r2,32
   1714c:	00c00044 	movi	r3,1
   17150:	00000206 	br	1715c <__udivsi3+0x20>
   17154:	10000e26 	beq	r2,zero,17190 <__udivsi3+0x54>
   17158:	28000516 	blt	r5,zero,17170 <__udivsi3+0x34>
   1715c:	294b883a 	add	r5,r5,r5
   17160:	10bfffc4 	addi	r2,r2,-1
   17164:	18c7883a 	add	r3,r3,r3
   17168:	293ffa36 	bltu	r5,r4,17154 <__udivsi3+0x18>
   1716c:	18000826 	beq	r3,zero,17190 <__udivsi3+0x54>
   17170:	0005883a 	mov	r2,zero
   17174:	31400236 	bltu	r6,r5,17180 <__udivsi3+0x44>
   17178:	314dc83a 	sub	r6,r6,r5
   1717c:	10c4b03a 	or	r2,r2,r3
   17180:	1806d07a 	srli	r3,r3,1
   17184:	280ad07a 	srli	r5,r5,1
   17188:	183ffa1e 	bne	r3,zero,17174 <__udivsi3+0x38>
   1718c:	f800283a 	ret
   17190:	0005883a 	mov	r2,zero
   17194:	f800283a 	ret
   17198:	00c00044 	movi	r3,1
   1719c:	003ff406 	br	17170 <__udivsi3+0x34>

000171a0 <__umodsi3>:
   171a0:	2005883a 	mov	r2,r4
   171a4:	2900132e 	bgeu	r5,r4,171f4 <__umodsi3+0x54>
   171a8:	28001216 	blt	r5,zero,171f4 <__umodsi3+0x54>
   171ac:	01800804 	movi	r6,32
   171b0:	00c00044 	movi	r3,1
   171b4:	00000206 	br	171c0 <__umodsi3+0x20>
   171b8:	30000c26 	beq	r6,zero,171ec <__umodsi3+0x4c>
   171bc:	28000516 	blt	r5,zero,171d4 <__umodsi3+0x34>
   171c0:	294b883a 	add	r5,r5,r5
   171c4:	31bfffc4 	addi	r6,r6,-1
   171c8:	18c7883a 	add	r3,r3,r3
   171cc:	293ffa36 	bltu	r5,r4,171b8 <__umodsi3+0x18>
   171d0:	18000626 	beq	r3,zero,171ec <__umodsi3+0x4c>
   171d4:	1806d07a 	srli	r3,r3,1
   171d8:	11400136 	bltu	r2,r5,171e0 <__umodsi3+0x40>
   171dc:	1145c83a 	sub	r2,r2,r5
   171e0:	280ad07a 	srli	r5,r5,1
   171e4:	183ffb1e 	bne	r3,zero,171d4 <__umodsi3+0x34>
   171e8:	f800283a 	ret
   171ec:	2005883a 	mov	r2,r4
   171f0:	f800283a 	ret
   171f4:	00c00044 	movi	r3,1
   171f8:	003ff606 	br	171d4 <__umodsi3+0x34>

000171fc <__mulsi3>:
   171fc:	0005883a 	mov	r2,zero
   17200:	20000726 	beq	r4,zero,17220 <__mulsi3+0x24>
   17204:	20c0004c 	andi	r3,r4,1
   17208:	2008d07a 	srli	r4,r4,1
   1720c:	18000126 	beq	r3,zero,17214 <__mulsi3+0x18>
   17210:	1145883a 	add	r2,r2,r5
   17214:	294b883a 	add	r5,r5,r5
   17218:	203ffa1e 	bne	r4,zero,17204 <__mulsi3+0x8>
   1721c:	f800283a 	ret
   17220:	f800283a 	ret

00017224 <abort>:
#include <unistd.h>
#include <signal.h>

void
abort (void)
{
   17224:	deffff04 	addi	sp,sp,-4
  write (2, "Abort called\n", sizeof ("Abort called\n")-1);
#endif

  while (1)
    {
      raise (SIGABRT);
   17228:	01000184 	movi	r4,6
{
   1722c:	dfc00015 	stw	ra,0(sp)
      raise (SIGABRT);
   17230:	00177240 	call	17724 <raise>
      _exit (1);
   17234:	01000044 	movi	r4,1
   17238:	00177e00 	call	177e0 <_exit>

0001723c <malloc>:
#ifndef _REENT_ONLY

void *
malloc (size_t nbytes)		/* get a block */
{
  return _malloc_r (_REENT, nbytes);
   1723c:	200b883a 	mov	r5,r4
   17240:	d1209e17 	ldw	r4,-32136(gp)
   17244:	001736c1 	jmpi	1736c <_malloc_r>

00017248 <free>:
}

void
free (void *aptr)
{
  _free_r (_REENT, aptr);
   17248:	200b883a 	mov	r5,r4
   1724c:	d1209e17 	ldw	r4,-32136(gp)
   17250:	00172741 	jmpi	17274 <_free_r>

00017254 <memset>:
void *
__inhibit_loop_to_libcall
memset (void *m,
	int c,
	size_t n)
{
   17254:	2005883a 	mov	r2,r4
      s = (char*)aligned_addr;
    }

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (n--)
   17258:	218d883a 	add	r6,r4,r6
  char *s = (char *) m;
   1725c:	2007883a 	mov	r3,r4
  while (n--)
   17260:	1980011e 	bne	r3,r6,17268 <memset+0x14>
    *s++ = (char) c;

  return m;
}
   17264:	f800283a 	ret
    *s++ = (char) c;
   17268:	18c00044 	addi	r3,r3,1
   1726c:	197fffc5 	stb	r5,-1(r3)
   17270:	003ffb06 	br	17260 <memset+0xc>

00017274 <_free_r>:
void nano_free (RARG void * free_p)
{
    chunk * p_to_free;
    chunk * p, * q;

    if (free_p == NULL) return;
   17274:	28003c26 	beq	r5,zero,17368 <_free_r+0xf4>
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   17278:	28bfff17 	ldw	r2,-4(r5)
{
   1727c:	defffd04 	addi	sp,sp,-12
   17280:	dc000115 	stw	r16,4(sp)
   17284:	dfc00215 	stw	ra,8(sp)
    chunk * c = (chunk *)((char *)ptr - CHUNK_OFFSET);
   17288:	2c3fff04 	addi	r16,r5,-4
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   1728c:	1000010e 	bge	r2,zero,17294 <_free_r+0x20>
   17290:	80a1883a 	add	r16,r16,r2

    p_to_free = get_chunk_from_ptr(free_p);

    MALLOC_LOCK;
   17294:	d9000015 	stw	r4,0(sp)
   17298:	0017ac80 	call	17ac8 <__malloc_lock>
    if (free_list == NULL)
   1729c:	d0a21917 	ldw	r2,-30620(gp)
   172a0:	d9000017 	ldw	r4,0(sp)
   172a4:	1000061e 	bne	r2,zero,172c0 <_free_r+0x4c>
    {
        /* Set first free list element */
        p_to_free->next = free_list;
   172a8:	80000115 	stw	zero,4(r16)
        else
        {
            /* Insert before current free_list */
            p_to_free->next = free_list;
        }
        free_list = p_to_free;
   172ac:	d4221915 	stw	r16,-30620(gp)
         * a fragment. */
        p_to_free->next = q;
        p->next = p_to_free;
    }
    MALLOC_UNLOCK;
}
   172b0:	dfc00217 	ldw	ra,8(sp)
   172b4:	dc000117 	ldw	r16,4(sp)
   172b8:	dec00304 	addi	sp,sp,12
    MALLOC_UNLOCK;
   172bc:	0017acc1 	jmpi	17acc <__malloc_unlock>
    if (p_to_free < free_list)
   172c0:	8080092e 	bgeu	r16,r2,172e8 <_free_r+0x74>
        if ((char *)p_to_free + p_to_free->size == (char *)free_list)
   172c4:	81400017 	ldw	r5,0(r16)
   172c8:	8147883a 	add	r3,r16,r5
   172cc:	10c0041e 	bne	r2,r3,172e0 <_free_r+0x6c>
            p_to_free->size += free_list->size;
   172d0:	10c00017 	ldw	r3,0(r2)
            p_to_free->next = free_list->next;
   172d4:	10800117 	ldw	r2,4(r2)
            p_to_free->size += free_list->size;
   172d8:	1947883a 	add	r3,r3,r5
   172dc:	80c00015 	stw	r3,0(r16)
            p_to_free->next = free_list;
   172e0:	80800115 	stw	r2,4(r16)
   172e4:	003ff106 	br	172ac <_free_r+0x38>
        q = q->next;
   172e8:	1007883a 	mov	r3,r2
   172ec:	10800117 	ldw	r2,4(r2)
    } while (q && q <= p_to_free);
   172f0:	10000126 	beq	r2,zero,172f8 <_free_r+0x84>
   172f4:	80bffc2e 	bgeu	r16,r2,172e8 <_free_r+0x74>
    if ((char *)p + p->size == (char *)p_to_free)
   172f8:	19400017 	ldw	r5,0(r3)
   172fc:	194d883a 	add	r6,r3,r5
   17300:	34000b1e 	bne	r6,r16,17330 <_free_r+0xbc>
        p->size += p_to_free->size;
   17304:	81800017 	ldw	r6,0(r16)
   17308:	298b883a 	add	r5,r5,r6
   1730c:	19400015 	stw	r5,0(r3)
        if ((char *)p + p->size == (char *) q)
   17310:	194d883a 	add	r6,r3,r5
   17314:	11bfe61e 	bne	r2,r6,172b0 <_free_r+0x3c>
            p->size += q->size;
   17318:	11800017 	ldw	r6,0(r2)
            p->next = q->next;
   1731c:	10800117 	ldw	r2,4(r2)
            p->size += q->size;
   17320:	314b883a 	add	r5,r6,r5
   17324:	19400015 	stw	r5,0(r3)
            p->next = q->next;
   17328:	18800115 	stw	r2,4(r3)
   1732c:	003fe006 	br	172b0 <_free_r+0x3c>
    else if ((char *)p + p->size > (char *)p_to_free)
   17330:	8180032e 	bgeu	r16,r6,17340 <_free_r+0xcc>
        RERRNO = ENOMEM;
   17334:	00800304 	movi	r2,12
   17338:	20800015 	stw	r2,0(r4)
        MALLOC_UNLOCK;
   1733c:	003fdc06 	br	172b0 <_free_r+0x3c>
    else if ((char *)p_to_free + p_to_free->size == (char *) q)
   17340:	81800017 	ldw	r6,0(r16)
   17344:	818b883a 	add	r5,r16,r6
   17348:	1140041e 	bne	r2,r5,1735c <_free_r+0xe8>
        p_to_free->size += q->size;
   1734c:	11400017 	ldw	r5,0(r2)
        p_to_free->next = q->next;
   17350:	10800117 	ldw	r2,4(r2)
        p_to_free->size += q->size;
   17354:	298b883a 	add	r5,r5,r6
   17358:	81400015 	stw	r5,0(r16)
        p_to_free->next = q;
   1735c:	80800115 	stw	r2,4(r16)
        p->next = p_to_free;
   17360:	1c000115 	stw	r16,4(r3)
   17364:	003fd206 	br	172b0 <_free_r+0x3c>
   17368:	f800283a 	ret

0001736c <_malloc_r>:
{
   1736c:	defffc04 	addi	sp,sp,-16
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   17370:	00bfff04 	movi	r2,-4
{
   17374:	dc400115 	stw	r17,4(sp)
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   17378:	2c4000c4 	addi	r17,r5,3
   1737c:	88a2703a 	and	r17,r17,r2
    alloc_size += CHUNK_OFFSET; /* size of chunk head */
   17380:	8c400204 	addi	r17,r17,8
{
   17384:	dc800215 	stw	r18,8(sp)
   17388:	dfc00315 	stw	ra,12(sp)
   1738c:	dc000015 	stw	r16,0(sp)
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   17390:	88800328 	cmpgeui	r2,r17,12
{
   17394:	2025883a 	mov	r18,r4
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   17398:	1000171e 	bne	r2,zero,173f8 <_malloc_r+0x8c>
   1739c:	04400304 	movi	r17,12
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   173a0:	89401636 	bltu	r17,r5,173fc <_malloc_r+0x90>
    MALLOC_LOCK;
   173a4:	9009883a 	mov	r4,r18
   173a8:	0017ac80 	call	17ac8 <__malloc_lock>
    p = free_list;
   173ac:	d0e21917 	ldw	r3,-30620(gp)
    r = p;
   173b0:	1821883a 	mov	r16,r3
    while (r)
   173b4:	80001a1e 	bne	r16,zero,17420 <_malloc_r+0xb4>
    if (sbrk_start == NULL) sbrk_start = _SBRK_R(RCALL 0);
   173b8:	d0a21817 	ldw	r2,-30624(gp)
   173bc:	1000041e 	bne	r2,zero,173d0 <_malloc_r+0x64>
   173c0:	000b883a 	mov	r5,zero
   173c4:	9009883a 	mov	r4,r18
   173c8:	00174bc0 	call	174bc <_sbrk_r>
   173cc:	d0a21815 	stw	r2,-30624(gp)
    p = _SBRK_R(RCALL s);
   173d0:	880b883a 	mov	r5,r17
   173d4:	9009883a 	mov	r4,r18
   173d8:	00174bc0 	call	174bc <_sbrk_r>
    if (p == (void *)-1)
   173dc:	10ffffd8 	cmpnei	r3,r2,-1
   173e0:	18002c1e 	bne	r3,zero,17494 <_malloc_r+0x128>
            RERRNO = ENOMEM;
   173e4:	00800304 	movi	r2,12
   173e8:	90800015 	stw	r2,0(r18)
            MALLOC_UNLOCK;
   173ec:	9009883a 	mov	r4,r18
   173f0:	0017acc0 	call	17acc <__malloc_unlock>
   173f4:	00000306 	br	17404 <_malloc_r+0x98>
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   173f8:	883fe90e 	bge	r17,zero,173a0 <_malloc_r+0x34>
        RERRNO = ENOMEM;
   173fc:	00800304 	movi	r2,12
   17400:	90800015 	stw	r2,0(r18)
            return NULL;
   17404:	0005883a 	mov	r2,zero
}
   17408:	dfc00317 	ldw	ra,12(sp)
   1740c:	dc800217 	ldw	r18,8(sp)
   17410:	dc400117 	ldw	r17,4(sp)
   17414:	dc000017 	ldw	r16,0(sp)
   17418:	dec00404 	addi	sp,sp,16
   1741c:	f800283a 	ret
        int rem = r->size - alloc_size;
   17420:	80800017 	ldw	r2,0(r16)
   17424:	1445c83a 	sub	r2,r2,r17
        if (rem >= 0)
   17428:	10001716 	blt	r2,zero,17488 <_malloc_r+0x11c>
            if (rem >= MALLOC_MINCHUNK)
   1742c:	11000330 	cmpltui	r4,r2,12
   17430:	2000041e 	bne	r4,zero,17444 <_malloc_r+0xd8>
                r->size = rem;
   17434:	80800015 	stw	r2,0(r16)
                r = (chunk *)((char *)r + rem);
   17438:	80a1883a 	add	r16,r16,r2
        r->size = alloc_size;
   1743c:	84400015 	stw	r17,0(r16)
   17440:	00000306 	br	17450 <_malloc_r+0xe4>
                free_list = r->next;
   17444:	80800117 	ldw	r2,4(r16)
            else if (p == r)
   17448:	1c000d1e 	bne	r3,r16,17480 <_malloc_r+0x114>
                free_list = r->next;
   1744c:	d0a21915 	stw	r2,-30620(gp)
    MALLOC_UNLOCK;
   17450:	9009883a 	mov	r4,r18
   17454:	0017acc0 	call	17acc <__malloc_unlock>
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   17458:	013ffe04 	movi	r4,-8
   1745c:	808002c4 	addi	r2,r16,11
    ptr = (char *)r + CHUNK_OFFSET;
   17460:	80c00104 	addi	r3,r16,4
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   17464:	1104703a 	and	r2,r2,r4
    offset = align_ptr - ptr;
   17468:	10c9c83a 	sub	r4,r2,r3
    if (offset)
   1746c:	10ffe626 	beq	r2,r3,17408 <_malloc_r+0x9c>
        *(long *)((char *)r + offset) = -offset;
   17470:	8121883a 	add	r16,r16,r4
   17474:	1887c83a 	sub	r3,r3,r2
   17478:	80c00015 	stw	r3,0(r16)
   1747c:	003fe206 	br	17408 <_malloc_r+0x9c>
                p->next = r->next;
   17480:	18800115 	stw	r2,4(r3)
   17484:	003ff206 	br	17450 <_malloc_r+0xe4>
        r=r->next;
   17488:	8007883a 	mov	r3,r16
   1748c:	84000117 	ldw	r16,4(r16)
   17490:	003fc806 	br	173b4 <_malloc_r+0x48>
    align_p = (char*)ALIGN_TO((unsigned long)p, CHUNK_ALIGN);
   17494:	140000c4 	addi	r16,r2,3
   17498:	00ffff04 	movi	r3,-4
   1749c:	80e0703a 	and	r16,r16,r3
    if (align_p != p)
   174a0:	143fe626 	beq	r2,r16,1743c <_malloc_r+0xd0>
        p = _SBRK_R(RCALL align_p - p);
   174a4:	808bc83a 	sub	r5,r16,r2
   174a8:	9009883a 	mov	r4,r18
   174ac:	00174bc0 	call	174bc <_sbrk_r>
        if (p == (void *)-1)
   174b0:	10bfffe0 	cmpeqi	r2,r2,-1
   174b4:	103fe126 	beq	r2,zero,1743c <_malloc_r+0xd0>
   174b8:	003fca06 	br	173e4 <_malloc_r+0x78>

000174bc <_sbrk_r>:
*/

void *
_sbrk_r (struct _reent *ptr,
     ptrdiff_t incr)
{
   174bc:	defffe04 	addi	sp,sp,-8
   174c0:	dc000015 	stw	r16,0(sp)
   174c4:	2021883a 	mov	r16,r4
   174c8:	2809883a 	mov	r4,r5
   174cc:	dfc00115 	stw	ra,4(sp)
  char *ret;
  void *_sbrk(ptrdiff_t);

  errno = 0;
   174d0:	d0221a15 	stw	zero,-30616(gp)
  if ((ret = (char *)(_sbrk (incr))) == (void *) -1 && errno != 0)
   174d4:	0017ad00 	call	17ad0 <sbrk>
   174d8:	10ffffd8 	cmpnei	r3,r2,-1
   174dc:	1800031e 	bne	r3,zero,174ec <_sbrk_r+0x30>
   174e0:	d0e21a17 	ldw	r3,-30616(gp)
   174e4:	18000126 	beq	r3,zero,174ec <_sbrk_r+0x30>
    ptr->_errno = errno;
   174e8:	80c00015 	stw	r3,0(r16)
  return ret;
}
   174ec:	dfc00117 	ldw	ra,4(sp)
   174f0:	dc000017 	ldw	r16,0(sp)
   174f4:	dec00204 	addi	sp,sp,8
   174f8:	f800283a 	ret

000174fc <_init_signal_r>:
int
_init_signal_r (struct _reent *ptr)
{
  int i;

  if (ptr->_sig_func == NULL)
   174fc:	20800c17 	ldw	r2,48(r4)
   17500:	1000131e 	bne	r2,zero,17550 <_init_signal_r+0x54>
{
   17504:	defffe04 	addi	sp,sp,-8
    {
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   17508:	01402004 	movi	r5,128
{
   1750c:	dc000015 	stw	r16,0(sp)
   17510:	dfc00115 	stw	ra,4(sp)
   17514:	2021883a 	mov	r16,r4
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   17518:	001736c0 	call	1736c <_malloc_r>
   1751c:	80800c15 	stw	r2,48(r16)
   17520:	1009883a 	mov	r4,r2
      if (ptr->_sig_func == NULL)
   17524:	10000826 	beq	r2,zero,17548 <_init_signal_r+0x4c>
	return -1;

      for (i = 0; i < NSIG; i++)
	ptr->_sig_func[i] = SIG_DFL;
   17528:	01802004 	movi	r6,128
   1752c:	000b883a 	mov	r5,zero
   17530:	00172540 	call	17254 <memset>
    }

  return 0;
   17534:	0005883a 	mov	r2,zero
}
   17538:	dfc00117 	ldw	ra,4(sp)
   1753c:	dc000017 	ldw	r16,0(sp)
   17540:	dec00204 	addi	sp,sp,8
   17544:	f800283a 	ret
	return -1;
   17548:	00bfffc4 	movi	r2,-1
   1754c:	003ffa06 	br	17538 <_init_signal_r+0x3c>
  return 0;
   17550:	0005883a 	mov	r2,zero
}
   17554:	f800283a 	ret

00017558 <_signal_r>:

_sig_func_ptr
_signal_r (struct _reent *ptr,
	int sig,
	_sig_func_ptr func)
{
   17558:	defffc04 	addi	sp,sp,-16
   1755c:	dc400115 	stw	r17,4(sp)
   17560:	dfc00315 	stw	ra,12(sp)
   17564:	dc800215 	stw	r18,8(sp)
   17568:	dc000015 	stw	r16,0(sp)
  _sig_func_ptr old_func;

  if (sig < 0 || sig >= NSIG)
   1756c:	28800830 	cmpltui	r2,r5,32
{
   17570:	2023883a 	mov	r17,r4
  if (sig < 0 || sig >= NSIG)
   17574:	1000041e 	bne	r2,zero,17588 <_signal_r+0x30>
    {
      ptr->_errno = EINVAL;
   17578:	00800584 	movi	r2,22
   1757c:	20800015 	stw	r2,0(r4)
      return SIG_ERR;
    }

  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
    return SIG_ERR;
   17580:	00bfffc4 	movi	r2,-1
   17584:	00000906 	br	175ac <_signal_r+0x54>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17588:	20800c17 	ldw	r2,48(r4)
   1758c:	2821883a 	mov	r16,r5
   17590:	3025883a 	mov	r18,r6
   17594:	10000b26 	beq	r2,zero,175c4 <_signal_r+0x6c>
  
  old_func = ptr->_sig_func[sig];
   17598:	89400c17 	ldw	r5,48(r17)
   1759c:	802090ba 	slli	r16,r16,2
   175a0:	2c21883a 	add	r16,r5,r16
   175a4:	80800017 	ldw	r2,0(r16)
  ptr->_sig_func[sig] = func;
   175a8:	84800015 	stw	r18,0(r16)

  return old_func;
}
   175ac:	dfc00317 	ldw	ra,12(sp)
   175b0:	dc800217 	ldw	r18,8(sp)
   175b4:	dc400117 	ldw	r17,4(sp)
   175b8:	dc000017 	ldw	r16,0(sp)
   175bc:	dec00404 	addi	sp,sp,16
   175c0:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   175c4:	00174fc0 	call	174fc <_init_signal_r>
   175c8:	103ff326 	beq	r2,zero,17598 <_signal_r+0x40>
   175cc:	003fec06 	br	17580 <_signal_r+0x28>

000175d0 <_raise_r>:

int 
_raise_r (struct _reent *ptr,
     int sig)
{
   175d0:	defffd04 	addi	sp,sp,-12
   175d4:	dc000015 	stw	r16,0(sp)
   175d8:	dfc00215 	stw	ra,8(sp)
   175dc:	dc400115 	stw	r17,4(sp)
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   175e0:	28800830 	cmpltui	r2,r5,32
{
   175e4:	2021883a 	mov	r16,r4
  if (sig < 0 || sig >= NSIG)
   175e8:	1000081e 	bne	r2,zero,1760c <_raise_r+0x3c>
    {
      ptr->_errno = EINVAL;
   175ec:	00800584 	movi	r2,22
   175f0:	20800015 	stw	r2,0(r4)
      return -1;
   175f4:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   175f8:	dfc00217 	ldw	ra,8(sp)
   175fc:	dc400117 	ldw	r17,4(sp)
   17600:	dc000017 	ldw	r16,0(sp)
   17604:	dec00304 	addi	sp,sp,12
   17608:	f800283a 	ret
  if (ptr->_sig_func == NULL)
   1760c:	20800c17 	ldw	r2,48(r4)
   17610:	2823883a 	mov	r17,r5
   17614:	10000426 	beq	r2,zero,17628 <_raise_r+0x58>
    func = ptr->_sig_func[sig];
   17618:	280690ba 	slli	r3,r5,2
   1761c:	10c5883a 	add	r2,r2,r3
   17620:	10c00017 	ldw	r3,0(r2)
  if (func == SIG_DFL)
   17624:	18000a1e 	bne	r3,zero,17650 <_raise_r+0x80>
    return _kill_r (ptr, _getpid_r (ptr), sig);
   17628:	8009883a 	mov	r4,r16
   1762c:	00177980 	call	17798 <_getpid_r>
   17630:	880d883a 	mov	r6,r17
   17634:	100b883a 	mov	r5,r2
   17638:	8009883a 	mov	r4,r16
}
   1763c:	dfc00217 	ldw	ra,8(sp)
   17640:	dc400117 	ldw	r17,4(sp)
   17644:	dc000017 	ldw	r16,0(sp)
   17648:	dec00304 	addi	sp,sp,12
    return _kill_r (ptr, _getpid_r (ptr), sig);
   1764c:	00177541 	jmpi	17754 <_kill_r>
  else if (func == SIG_IGN)
   17650:	19000060 	cmpeqi	r4,r3,1
   17654:	2000091e 	bne	r4,zero,1767c <_raise_r+0xac>
  else if (func == SIG_ERR)
   17658:	193fffd8 	cmpnei	r4,r3,-1
   1765c:	2000041e 	bne	r4,zero,17670 <_raise_r+0xa0>
      ptr->_errno = EINVAL;
   17660:	00800584 	movi	r2,22
   17664:	80800015 	stw	r2,0(r16)
      return 1;
   17668:	00800044 	movi	r2,1
   1766c:	003fe206 	br	175f8 <_raise_r+0x28>
      ptr->_sig_func[sig] = SIG_DFL;
   17670:	10000015 	stw	zero,0(r2)
      func (sig);
   17674:	2809883a 	mov	r4,r5
   17678:	183ee83a 	callr	r3
    return 0;
   1767c:	0005883a 	mov	r2,zero
   17680:	003fdd06 	br	175f8 <_raise_r+0x28>

00017684 <__sigtramp_r>:
__sigtramp_r (struct _reent *ptr,
     int sig)
{
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   17684:	28800830 	cmpltui	r2,r5,32
   17688:	1000021e 	bne	r2,zero,17694 <__sigtramp_r+0x10>
    {
      return -1;
   1768c:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   17690:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17694:	20800c17 	ldw	r2,48(r4)
{
   17698:	defffd04 	addi	sp,sp,-12
   1769c:	dc400115 	stw	r17,4(sp)
   176a0:	dc000015 	stw	r16,0(sp)
   176a4:	dfc00215 	stw	ra,8(sp)
   176a8:	2023883a 	mov	r17,r4
   176ac:	2821883a 	mov	r16,r5
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   176b0:	10000726 	beq	r2,zero,176d0 <__sigtramp_r+0x4c>
  func = ptr->_sig_func[sig];
   176b4:	88800c17 	ldw	r2,48(r17)
   176b8:	800690ba 	slli	r3,r16,2
   176bc:	10c7883a 	add	r3,r2,r3
   176c0:	18800017 	ldw	r2,0(r3)
  if (func == SIG_DFL)
   176c4:	10000a1e 	bne	r2,zero,176f0 <__sigtramp_r+0x6c>
    return 1;
   176c8:	00800044 	movi	r2,1
   176cc:	00000306 	br	176dc <__sigtramp_r+0x58>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   176d0:	00174fc0 	call	174fc <_init_signal_r>
   176d4:	103ff726 	beq	r2,zero,176b4 <__sigtramp_r+0x30>
      return -1;
   176d8:	00bfffc4 	movi	r2,-1
}
   176dc:	dfc00217 	ldw	ra,8(sp)
   176e0:	dc400117 	ldw	r17,4(sp)
   176e4:	dc000017 	ldw	r16,0(sp)
   176e8:	dec00304 	addi	sp,sp,12
   176ec:	f800283a 	ret
  else if (func == SIG_ERR)
   176f0:	113fffe0 	cmpeqi	r4,r2,-1
   176f4:	2000071e 	bne	r4,zero,17714 <__sigtramp_r+0x90>
  else if (func == SIG_IGN)
   176f8:	11000060 	cmpeqi	r4,r2,1
   176fc:	2000071e 	bne	r4,zero,1771c <__sigtramp_r+0x98>
      ptr->_sig_func[sig] = SIG_DFL;
   17700:	18000015 	stw	zero,0(r3)
      func (sig);
   17704:	8009883a 	mov	r4,r16
   17708:	103ee83a 	callr	r2
      return 0;
   1770c:	0005883a 	mov	r2,zero
   17710:	003ff206 	br	176dc <__sigtramp_r+0x58>
    return 2;
   17714:	00800084 	movi	r2,2
   17718:	003ff006 	br	176dc <__sigtramp_r+0x58>
    return 3;
   1771c:	008000c4 	movi	r2,3
   17720:	003fee06 	br	176dc <__sigtramp_r+0x58>

00017724 <raise>:
#ifndef _REENT_ONLY

int 
raise (int sig)
{
  return _raise_r (_REENT, sig);
   17724:	200b883a 	mov	r5,r4
   17728:	d1209e17 	ldw	r4,-32136(gp)
   1772c:	00175d01 	jmpi	175d0 <_raise_r>

00017730 <signal>:

_sig_func_ptr
signal (int sig,
	_sig_func_ptr func)
{
  return _signal_r (_REENT, sig, func);
   17730:	280d883a 	mov	r6,r5
   17734:	200b883a 	mov	r5,r4
   17738:	d1209e17 	ldw	r4,-32136(gp)
   1773c:	00175581 	jmpi	17558 <_signal_r>

00017740 <_init_signal>:
}

int 
_init_signal (void)
{
  return _init_signal_r (_REENT);
   17740:	d1209e17 	ldw	r4,-32136(gp)
   17744:	00174fc1 	jmpi	174fc <_init_signal_r>

00017748 <__sigtramp>:
}

int
__sigtramp (int sig)
{
  return __sigtramp_r (_REENT, sig);
   17748:	200b883a 	mov	r5,r4
   1774c:	d1209e17 	ldw	r4,-32136(gp)
   17750:	00176841 	jmpi	17684 <__sigtramp_r>

00017754 <_kill_r>:

int
_kill_r (struct _reent *ptr,
     int pid,
     int sig)
{
   17754:	defffe04 	addi	sp,sp,-8
   17758:	dc000015 	stw	r16,0(sp)
   1775c:	2021883a 	mov	r16,r4
   17760:	2809883a 	mov	r4,r5
   17764:	300b883a 	mov	r5,r6
   17768:	dfc00115 	stw	ra,4(sp)
  int ret;

  errno = 0;
   1776c:	d0221a15 	stw	zero,-30616(gp)
  if ((ret = _kill (pid, sig)) == -1 && errno != 0)
   17770:	00178f00 	call	178f0 <kill>
   17774:	10ffffd8 	cmpnei	r3,r2,-1
   17778:	1800031e 	bne	r3,zero,17788 <_kill_r+0x34>
   1777c:	d0e21a17 	ldw	r3,-30616(gp)
   17780:	18000126 	beq	r3,zero,17788 <_kill_r+0x34>
    ptr->_errno = errno;
   17784:	80c00015 	stw	r3,0(r16)
  return ret;
}
   17788:	dfc00117 	ldw	ra,4(sp)
   1778c:	dc000017 	ldw	r16,0(sp)
   17790:	dec00204 	addi	sp,sp,8
   17794:	f800283a 	ret

00017798 <_getpid_r>:

int
_getpid_r (struct _reent *ptr)
{
  int ret;
  ret = _getpid ();
   17798:	00177f41 	jmpi	177f4 <getpid>

0001779c <strcmp>:
int
strcmp (const char *s1,
	const char *s2)
{ 
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  while (*s1 != '\0' && *s1 == *s2)
   1779c:	20800003 	ldbu	r2,0(r4)
   177a0:	28c00003 	ldbu	r3,0(r5)
   177a4:	11803fcc 	andi	r6,r2,255
   177a8:	3180201c 	xori	r6,r6,128
   177ac:	31bfe004 	addi	r6,r6,-128
   177b0:	30000426 	beq	r6,zero,177c4 <strcmp+0x28>
   177b4:	19c03fcc 	andi	r7,r3,255
   177b8:	39c0201c 	xori	r7,r7,128
   177bc:	39ffe004 	addi	r7,r7,-128
   177c0:	31c00426 	beq	r6,r7,177d4 <strcmp+0x38>
    {
      s1++;
      s2++;
    }

  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
   177c4:	18c03fcc 	andi	r3,r3,255
   177c8:	10803fcc 	andi	r2,r2,255
      s1++;
      s2++;
    }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   177cc:	10c5c83a 	sub	r2,r2,r3
   177d0:	f800283a 	ret
      s1++;
   177d4:	21000044 	addi	r4,r4,1
      s2++;
   177d8:	29400044 	addi	r5,r5,1
   177dc:	003fef06 	br	1779c <strcmp>

000177e0 <_exit>:
   177e0:	20000226 	beq	r4,zero,177ec <_exit+0xc>
   177e4:	002af070 	cmpltui	zero,zero,43969
   177e8:	003fff06 	br	177e8 <_exit+0x8>
   177ec:	002af0b0 	cmpltui	zero,zero,43970
   177f0:	003ffd06 	br	177e8 <_exit+0x8>

000177f4 <getpid>:
   177f4:	0005883a 	mov	r2,zero
   177f8:	f800283a 	ret

000177fc <alt_ic_isr_register>:
   177fc:	00178881 	jmpi	17888 <alt_iic_isr_register>

00017800 <alt_ic_irq_enable>:
   17800:	0007303a 	rdctl	r3,status
   17804:	00bfff84 	movi	r2,-2
   17808:	1884703a 	and	r2,r3,r2
   1780c:	1001703a 	wrctl	status,r2
   17810:	00800044 	movi	r2,1
   17814:	d1221b17 	ldw	r4,-30612(gp)
   17818:	114a983a 	sll	r5,r2,r5
   1781c:	290ab03a 	or	r5,r5,r4
   17820:	d1621b15 	stw	r5,-30612(gp)
   17824:	d0a21b17 	ldw	r2,-30612(gp)
   17828:	100170fa 	wrctl	ienable,r2
   1782c:	1801703a 	wrctl	status,r3
   17830:	0005883a 	mov	r2,zero
   17834:	f800283a 	ret

00017838 <alt_ic_irq_disable>:
   17838:	0007303a 	rdctl	r3,status
   1783c:	00bfff84 	movi	r2,-2
   17840:	1884703a 	and	r2,r3,r2
   17844:	1001703a 	wrctl	status,r2
   17848:	00bfff84 	movi	r2,-2
   1784c:	d1221b17 	ldw	r4,-30612(gp)
   17850:	114a183a 	rol	r5,r2,r5
   17854:	290a703a 	and	r5,r5,r4
   17858:	d1621b15 	stw	r5,-30612(gp)
   1785c:	d0a21b17 	ldw	r2,-30612(gp)
   17860:	100170fa 	wrctl	ienable,r2
   17864:	1801703a 	wrctl	status,r3
   17868:	0005883a 	mov	r2,zero
   1786c:	f800283a 	ret

00017870 <alt_ic_irq_enabled>:
   17870:	000730fa 	rdctl	r3,ienable
   17874:	00800044 	movi	r2,1
   17878:	1144983a 	sll	r2,r2,r5
   1787c:	10c4703a 	and	r2,r2,r3
   17880:	1004c03a 	cmpne	r2,r2,zero
   17884:	f800283a 	ret

00017888 <alt_iic_isr_register>:
   17888:	28800808 	cmpgei	r2,r5,32
   1788c:	1000161e 	bne	r2,zero,178e8 <alt_iic_isr_register+0x60>
   17890:	defffe04 	addi	sp,sp,-8
   17894:	dfc00115 	stw	ra,4(sp)
   17898:	dc000015 	stw	r16,0(sp)
   1789c:	0021303a 	rdctl	r16,status
   178a0:	00bfff84 	movi	r2,-2
   178a4:	8084703a 	and	r2,r16,r2
   178a8:	1001703a 	wrctl	status,r2
   178ac:	280690fa 	slli	r3,r5,3
   178b0:	008000b4 	movhi	r2,2
   178b4:	10a82204 	addi	r2,r2,-24440
   178b8:	10c5883a 	add	r2,r2,r3
   178bc:	11800015 	stw	r6,0(r2)
   178c0:	11c00115 	stw	r7,4(r2)
   178c4:	30000626 	beq	r6,zero,178e0 <alt_iic_isr_register+0x58>
   178c8:	00178000 	call	17800 <alt_ic_irq_enable>
   178cc:	8001703a 	wrctl	status,r16
   178d0:	dfc00117 	ldw	ra,4(sp)
   178d4:	dc000017 	ldw	r16,0(sp)
   178d8:	dec00204 	addi	sp,sp,8
   178dc:	f800283a 	ret
   178e0:	00178380 	call	17838 <alt_ic_irq_disable>
   178e4:	003ff906 	br	178cc <alt_iic_isr_register+0x44>
   178e8:	00bffa84 	movi	r2,-22
   178ec:	f800283a 	ret

000178f0 <kill>:
   178f0:	defffe04 	addi	sp,sp,-8
   178f4:	dfc00115 	stw	ra,4(sp)
   178f8:	dc000015 	stw	r16,0(sp)
   178fc:	01002916 	blt	zero,r4,179a4 <kill+0xb4>
   17900:	28800828 	cmpgeui	r2,r5,32
   17904:	1000311e 	bne	r2,zero,179cc <kill+0xdc>
   17908:	280a90ba 	slli	r5,r5,2
   1790c:	00800074 	movhi	r2,1
   17910:	2885883a 	add	r2,r5,r2
   17914:	109e4717 	ldw	r2,31004(r2)
   17918:	1000683a 	jmp	r2
   1791c:	000179dc 	xori	zero,zero,1511
   17920:	000179cc 	andi	zero,zero,1511
   17924:	000179cc 	andi	zero,zero,1511
   17928:	0001799c 	xori	zero,zero,1510
   1792c:	0001799c 	xori	zero,zero,1510
   17930:	0001799c 	xori	zero,zero,1510
   17934:	0001799c 	xori	zero,zero,1510
   17938:	000179cc 	andi	zero,zero,1511
   1793c:	0001799c 	xori	zero,zero,1510
   17940:	0001799c 	xori	zero,zero,1510
   17944:	0001799c 	xori	zero,zero,1510
   17948:	0001799c 	xori	zero,zero,1510
   1794c:	0001799c 	xori	zero,zero,1510
   17950:	0001799c 	xori	zero,zero,1510
   17954:	0001799c 	xori	zero,zero,1510
   17958:	0001799c 	xori	zero,zero,1510
   1795c:	000179dc 	xori	zero,zero,1511
   17960:	000179cc 	andi	zero,zero,1511
   17964:	000179cc 	andi	zero,zero,1511
   17968:	000179cc 	andi	zero,zero,1511
   1796c:	000179dc 	xori	zero,zero,1511
   17970:	000179cc 	andi	zero,zero,1511
   17974:	000179cc 	andi	zero,zero,1511
   17978:	0001799c 	xori	zero,zero,1510
   1797c:	0001799c 	xori	zero,zero,1510
   17980:	0001799c 	xori	zero,zero,1510
   17984:	0001799c 	xori	zero,zero,1510
   17988:	0001799c 	xori	zero,zero,1510
   1798c:	000179cc 	andi	zero,zero,1511
   17990:	000179cc 	andi	zero,zero,1511
   17994:	0001799c 	xori	zero,zero,1510
   17998:	0001799c 	xori	zero,zero,1510
   1799c:	0009883a 	mov	r4,zero
   179a0:	00177e00 	call	177e0 <_exit>
   179a4:	040000c4 	movi	r16,3
   179a8:	d0a0a617 	ldw	r2,-32104(gp)
   179ac:	10000926 	beq	r2,zero,179d4 <kill+0xe4>
   179b0:	103ee83a 	callr	r2
   179b4:	14000015 	stw	r16,0(r2)
   179b8:	00bfffc4 	movi	r2,-1
   179bc:	dfc00117 	ldw	ra,4(sp)
   179c0:	dc000017 	ldw	r16,0(sp)
   179c4:	dec00204 	addi	sp,sp,8
   179c8:	f800283a 	ret
   179cc:	04000584 	movi	r16,22
   179d0:	003ff506 	br	179a8 <kill+0xb8>
   179d4:	d0a21a04 	addi	r2,gp,-30616
   179d8:	003ff606 	br	179b4 <kill+0xc4>
   179dc:	0005883a 	mov	r2,zero
   179e0:	003ff606 	br	179bc <kill+0xcc>

000179e4 <alt_load>:
   179e4:	deffff04 	addi	sp,sp,-4
   179e8:	010000b4 	movhi	r4,2
   179ec:	014000b4 	movhi	r5,2
   179f0:	dfc00015 	stw	ra,0(sp)
   179f4:	2124e904 	addi	r4,r4,-27740
   179f8:	29664b04 	addi	r5,r5,-26324
   179fc:	21400426 	beq	r4,r5,17a10 <alt_load+0x2c>
   17a00:	018000b4 	movhi	r6,2
   17a04:	31a64b04 	addi	r6,r6,-26324
   17a08:	310dc83a 	sub	r6,r6,r4
   17a0c:	00185c40 	call	185c4 <memcpy>
   17a10:	01000074 	movhi	r4,1
   17a14:	01400074 	movhi	r5,1
   17a18:	21000804 	addi	r4,r4,32
   17a1c:	29400804 	addi	r5,r5,32
   17a20:	21400426 	beq	r4,r5,17a34 <alt_load+0x50>
   17a24:	01800074 	movhi	r6,1
   17a28:	31806004 	addi	r6,r6,384
   17a2c:	310dc83a 	sub	r6,r6,r4
   17a30:	00185c40 	call	185c4 <memcpy>
   17a34:	010000b4 	movhi	r4,2
   17a38:	014000b4 	movhi	r5,2
   17a3c:	21223104 	addi	r4,r4,-30524
   17a40:	29623104 	addi	r5,r5,-30524
   17a44:	21400426 	beq	r4,r5,17a58 <alt_load+0x74>
   17a48:	018000b4 	movhi	r6,2
   17a4c:	31a4e904 	addi	r6,r6,-27740
   17a50:	310dc83a 	sub	r6,r6,r4
   17a54:	00185c40 	call	185c4 <memcpy>
   17a58:	0017f300 	call	17f30 <alt_dcache_flush_all>
   17a5c:	dfc00017 	ldw	ra,0(sp)
   17a60:	dec00104 	addi	sp,sp,4
   17a64:	00180381 	jmpi	18038 <alt_icache_flush_all>

00017a68 <alt_main>:
   17a68:	defffe04 	addi	sp,sp,-8
   17a6c:	0009883a 	mov	r4,zero
   17a70:	dfc00115 	stw	ra,4(sp)
   17a74:	dc000015 	stw	r16,0(sp)
   17a78:	0017b200 	call	17b20 <alt_irq_init>
   17a7c:	0017b400 	call	17b40 <alt_sys_init>
   17a80:	018000b4 	movhi	r6,2
   17a84:	31a4df04 	addi	r6,r6,-27780
   17a88:	300b883a 	mov	r5,r6
   17a8c:	3009883a 	mov	r4,r6
   17a90:	00181240 	call	18124 <alt_io_redirect>
   17a94:	0017fa80 	call	17fa8 <_do_ctors>
   17a98:	01000074 	movhi	r4,1
   17a9c:	211ffc04 	addi	r4,r4,32752
   17aa0:	00185600 	call	18560 <atexit>
   17aa4:	d1a21c17 	ldw	r6,-30608(gp)
   17aa8:	d1621d17 	ldw	r5,-30604(gp)
   17aac:	d1221e17 	ldw	r4,-30600(gp)
   17ab0:	0011e240 	call	11e24 <main>
   17ab4:	01000044 	movi	r4,1
   17ab8:	1021883a 	mov	r16,r2
   17abc:	0017e7c0 	call	17e7c <close>
   17ac0:	8009883a 	mov	r4,r16
   17ac4:	00185740 	call	18574 <exit>

00017ac8 <__malloc_lock>:
   17ac8:	f800283a 	ret

00017acc <__malloc_unlock>:
   17acc:	f800283a 	ret

00017ad0 <sbrk>:
   17ad0:	0007303a 	rdctl	r3,status
   17ad4:	00bfff84 	movi	r2,-2
   17ad8:	1884703a 	and	r2,r3,r2
   17adc:	1001703a 	wrctl	status,r2
   17ae0:	d0a0a017 	ldw	r2,-32128(gp)
   17ae4:	017fff04 	movi	r5,-4
   17ae8:	108000c4 	addi	r2,r2,3
   17aec:	1144703a 	and	r2,r2,r5
   17af0:	014000b4 	movhi	r5,2
   17af4:	d0a0a015 	stw	r2,-32128(gp)
   17af8:	1109883a 	add	r4,r2,r4
   17afc:	296d0004 	addi	r5,r5,-19456
   17b00:	2900032e 	bgeu	r5,r4,17b10 <sbrk+0x40>
   17b04:	1801703a 	wrctl	status,r3
   17b08:	00bfffc4 	movi	r2,-1
   17b0c:	f800283a 	ret
   17b10:	d120a015 	stw	r4,-32128(gp)
   17b14:	1801703a 	wrctl	status,r3
   17b18:	f800283a 	ret

00017b1c <usleep>:
   17b1c:	0017dd01 	jmpi	17dd0 <alt_busy_sleep>

00017b20 <alt_irq_init>:
   17b20:	deffff04 	addi	sp,sp,-4
   17b24:	dfc00015 	stw	ra,0(sp)
   17b28:	00183f80 	call	183f8 <altera_nios2_gen2_irq_init>
   17b2c:	00800044 	movi	r2,1
   17b30:	1001703a 	wrctl	status,r2
   17b34:	dfc00017 	ldw	ra,0(sp)
   17b38:	dec00104 	addi	sp,sp,4
   17b3c:	f800283a 	ret

00017b40 <alt_sys_init>:
   17b40:	010000b4 	movhi	r4,2
   17b44:	deffff04 	addi	sp,sp,-4
   17b48:	01c0fa04 	movi	r7,1000
   17b4c:	01800044 	movi	r6,1
   17b50:	000b883a 	mov	r5,zero
   17b54:	210a1004 	addi	r4,r4,10304
   17b58:	dfc00015 	stw	ra,0(sp)
   17b5c:	0017c6c0 	call	17c6c <alt_avalon_timer_sc_init>
   17b60:	010000b4 	movhi	r4,2
   17b64:	d160a204 	addi	r5,gp,-32120
   17b68:	21252d04 	addi	r4,r4,-27468
   17b6c:	0017f3c0 	call	17f3c <alt_dev_llist_insert>
   17b70:	010000b4 	movhi	r4,2
   17b74:	d160a204 	addi	r5,gp,-32120
   17b78:	21252204 	addi	r4,r4,-27512
   17b7c:	dfc00017 	ldw	ra,0(sp)
   17b80:	dec00104 	addi	sp,sp,4
   17b84:	0017f3c1 	jmpi	17f3c <alt_dev_llist_insert>

00017b88 <altera_avalon_jtag_uart_read_fd>:
   17b88:	20800017 	ldw	r2,0(r4)
   17b8c:	21c00217 	ldw	r7,8(r4)
   17b90:	11000a04 	addi	r4,r2,40
   17b94:	0017ba81 	jmpi	17ba8 <altera_avalon_jtag_uart_read>

00017b98 <altera_avalon_jtag_uart_write_fd>:
   17b98:	20800017 	ldw	r2,0(r4)
   17b9c:	21c00217 	ldw	r7,8(r4)
   17ba0:	11000a04 	addi	r4,r2,40
   17ba4:	0017c001 	jmpi	17c00 <altera_avalon_jtag_uart_write>

00017ba8 <altera_avalon_jtag_uart_read>:
   17ba8:	21000017 	ldw	r4,0(r4)
   17bac:	298d883a 	add	r6,r5,r6
   17bb0:	2805883a 	mov	r2,r5
   17bb4:	3a10000c 	andi	r8,r7,16384
   17bb8:	11800536 	bltu	r2,r6,17bd0 <altera_avalon_jtag_uart_read+0x28>
   17bbc:	11400b1e 	bne	r2,r5,17bec <altera_avalon_jtag_uart_read+0x44>
   17bc0:	39d0000c 	andi	r7,r7,16384
   17bc4:	38000c1e 	bne	r7,zero,17bf8 <altera_avalon_jtag_uart_read+0x50>
   17bc8:	00bffec4 	movi	r2,-5
   17bcc:	f800283a 	ret
   17bd0:	20c00037 	ldwio	r3,0(r4)
   17bd4:	1a60000c 	andi	r9,r3,32768
   17bd8:	48000326 	beq	r9,zero,17be8 <altera_avalon_jtag_uart_read+0x40>
   17bdc:	10c00005 	stb	r3,0(r2)
   17be0:	10800044 	addi	r2,r2,1
   17be4:	003ff406 	br	17bb8 <altera_avalon_jtag_uart_read+0x10>
   17be8:	11400226 	beq	r2,r5,17bf4 <altera_avalon_jtag_uart_read+0x4c>
   17bec:	1145c83a 	sub	r2,r2,r5
   17bf0:	f800283a 	ret
   17bf4:	403ff026 	beq	r8,zero,17bb8 <altera_avalon_jtag_uart_read+0x10>
   17bf8:	00bffd44 	movi	r2,-11
   17bfc:	f800283a 	ret

00017c00 <altera_avalon_jtag_uart_write>:
   17c00:	21000017 	ldw	r4,0(r4)
   17c04:	3005883a 	mov	r2,r6
   17c08:	298d883a 	add	r6,r5,r6
   17c0c:	29800136 	bltu	r5,r6,17c14 <altera_avalon_jtag_uart_write+0x14>
   17c10:	f800283a 	ret
   17c14:	20c00137 	ldwio	r3,4(r4)
   17c18:	18ffffec 	andhi	r3,r3,65535
   17c1c:	183ffb26 	beq	r3,zero,17c0c <altera_avalon_jtag_uart_write+0xc>
   17c20:	28c00007 	ldb	r3,0(r5)
   17c24:	29400044 	addi	r5,r5,1
   17c28:	20c00035 	stwio	r3,0(r4)
   17c2c:	003ff706 	br	17c0c <altera_avalon_jtag_uart_write+0xc>

00017c30 <alt_avalon_timer_sc_irq>:
   17c30:	defffe04 	addi	sp,sp,-8
   17c34:	dfc00115 	stw	ra,4(sp)
   17c38:	dc000015 	stw	r16,0(sp)
   17c3c:	20000035 	stwio	zero,0(r4)
   17c40:	20800137 	ldwio	r2,4(r4)
   17c44:	0021303a 	rdctl	r16,status
   17c48:	00bfff84 	movi	r2,-2
   17c4c:	8084703a 	and	r2,r16,r2
   17c50:	1001703a 	wrctl	status,r2
   17c54:	00183400 	call	18340 <alt_tick>
   17c58:	8001703a 	wrctl	status,r16
   17c5c:	dfc00117 	ldw	ra,4(sp)
   17c60:	dc000017 	ldw	r16,0(sp)
   17c64:	dec00204 	addi	sp,sp,8
   17c68:	f800283a 	ret

00017c6c <alt_avalon_timer_sc_init>:
   17c6c:	d0e22117 	ldw	r3,-30588(gp)
   17c70:	defffe04 	addi	sp,sp,-8
   17c74:	dfc00115 	stw	ra,4(sp)
   17c78:	2005883a 	mov	r2,r4
   17c7c:	2809883a 	mov	r4,r5
   17c80:	300b883a 	mov	r5,r6
   17c84:	1800011e 	bne	r3,zero,17c8c <alt_avalon_timer_sc_init+0x20>
   17c88:	d1e22115 	stw	r7,-30588(gp)
   17c8c:	00c001c4 	movi	r3,7
   17c90:	10c00135 	stwio	r3,4(r2)
   17c94:	01800074 	movhi	r6,1
   17c98:	d8000015 	stw	zero,0(sp)
   17c9c:	100f883a 	mov	r7,r2
   17ca0:	319f0c04 	addi	r6,r6,31792
   17ca4:	00177fc0 	call	177fc <alt_ic_isr_register>
   17ca8:	dfc00117 	ldw	ra,4(sp)
   17cac:	dec00204 	addi	sp,sp,8
   17cb0:	f800283a 	ret

00017cb4 <altera_avalon_uart_read_fd>:
   17cb4:	20800017 	ldw	r2,0(r4)
   17cb8:	21c00217 	ldw	r7,8(r4)
   17cbc:	11000a04 	addi	r4,r2,40
   17cc0:	0017cd41 	jmpi	17cd4 <altera_avalon_uart_read>

00017cc4 <altera_avalon_uart_write_fd>:
   17cc4:	20800017 	ldw	r2,0(r4)
   17cc8:	21c00217 	ldw	r7,8(r4)
   17ccc:	11000a04 	addi	r4,r2,40
   17cd0:	0017d4c1 	jmpi	17d4c <altera_avalon_uart_write>

00017cd4 <altera_avalon_uart_read>:
   17cd4:	39d0000c 	andi	r7,r7,16384
   17cd8:	20c00017 	ldw	r3,0(r4)
   17cdc:	18800237 	ldwio	r2,8(r3)
   17ce0:	18000235 	stwio	zero,8(r3)
   17ce4:	10c0200c 	andi	r3,r2,128
   17ce8:	18000c1e 	bne	r3,zero,17d1c <altera_avalon_uart_read+0x48>
   17cec:	383ffa26 	beq	r7,zero,17cd8 <altera_avalon_uart_read+0x4>
   17cf0:	d0a0a617 	ldw	r2,-32104(gp)
   17cf4:	10001026 	beq	r2,zero,17d38 <altera_avalon_uart_read+0x64>
   17cf8:	deffff04 	addi	sp,sp,-4
   17cfc:	dfc00015 	stw	ra,0(sp)
   17d00:	103ee83a 	callr	r2
   17d04:	00c002c4 	movi	r3,11
   17d08:	10c00015 	stw	r3,0(r2)
   17d0c:	0005883a 	mov	r2,zero
   17d10:	dfc00017 	ldw	ra,0(sp)
   17d14:	dec00104 	addi	sp,sp,4
   17d18:	f800283a 	ret
   17d1c:	20c00017 	ldw	r3,0(r4)
   17d20:	18c00037 	ldwio	r3,0(r3)
   17d24:	28c00005 	stb	r3,0(r5)
   17d28:	108000cc 	andi	r2,r2,3
   17d2c:	103fef1e 	bne	r2,zero,17cec <altera_avalon_uart_read+0x18>
   17d30:	00800044 	movi	r2,1
   17d34:	f800283a 	ret
   17d38:	d0a21a04 	addi	r2,gp,-30616
   17d3c:	00c002c4 	movi	r3,11
   17d40:	10c00015 	stw	r3,0(r2)
   17d44:	0005883a 	mov	r2,zero
   17d48:	f800283a 	ret

00017d4c <altera_avalon_uart_write>:
   17d4c:	defffd04 	addi	sp,sp,-12
   17d50:	dc400115 	stw	r17,4(sp)
   17d54:	dc000015 	stw	r16,0(sp)
   17d58:	dfc00215 	stw	ra,8(sp)
   17d5c:	3023883a 	mov	r17,r6
   17d60:	39d0000c 	andi	r7,r7,16384
   17d64:	3021883a 	mov	r16,r6
   17d68:	20c00017 	ldw	r3,0(r4)
   17d6c:	18800237 	ldwio	r2,8(r3)
   17d70:	1080100c 	andi	r2,r2,64
   17d74:	10000526 	beq	r2,zero,17d8c <altera_avalon_uart_write+0x40>
   17d78:	28800044 	addi	r2,r5,1
   17d7c:	29400007 	ldb	r5,0(r5)
   17d80:	19400135 	stwio	r5,4(r3)
   17d84:	843fffc4 	addi	r16,r16,-1
   17d88:	100b883a 	mov	r5,r2
   17d8c:	3800071e 	bne	r7,zero,17dac <altera_avalon_uart_write+0x60>
   17d90:	803ff51e 	bne	r16,zero,17d68 <altera_avalon_uart_write+0x1c>
   17d94:	8c05c83a 	sub	r2,r17,r16
   17d98:	dfc00217 	ldw	ra,8(sp)
   17d9c:	dc400117 	ldw	r17,4(sp)
   17da0:	dc000017 	ldw	r16,0(sp)
   17da4:	dec00304 	addi	sp,sp,12
   17da8:	f800283a 	ret
   17dac:	803ff926 	beq	r16,zero,17d94 <altera_avalon_uart_write+0x48>
   17db0:	d0a0a617 	ldw	r2,-32104(gp)
   17db4:	10000426 	beq	r2,zero,17dc8 <altera_avalon_uart_write+0x7c>
   17db8:	103ee83a 	callr	r2
   17dbc:	00c002c4 	movi	r3,11
   17dc0:	10c00015 	stw	r3,0(r2)
   17dc4:	003ff306 	br	17d94 <altera_avalon_uart_write+0x48>
   17dc8:	d0a21a04 	addi	r2,gp,-30616
   17dcc:	003ffb06 	br	17dbc <altera_avalon_uart_write+0x70>

00017dd0 <alt_busy_sleep>:
   17dd0:	defffe04 	addi	sp,sp,-8
   17dd4:	008666b4 	movhi	r2,6554
   17dd8:	dc000015 	stw	r16,0(sp)
   17ddc:	dfc00115 	stw	ra,4(sp)
   17de0:	10a66604 	addi	r2,r2,-26216
   17de4:	2021883a 	mov	r16,r4
   17de8:	11001f2e 	bgeu	r2,r4,17e68 <alt_busy_sleep+0x98>
   17dec:	014666b4 	movhi	r5,6554
   17df0:	29666644 	addi	r5,r5,-26215
   17df4:	001713c0 	call	1713c <__udivsi3>
   17df8:	00e00034 	movhi	r3,32768
   17dfc:	1009883a 	mov	r4,r2
   17e00:	18ffffc4 	addi	r3,r3,-1
   17e04:	0005883a 	mov	r2,zero
   17e08:	18ffffc4 	addi	r3,r3,-1
   17e0c:	183ffe1e 	bne	r3,zero,17e08 <alt_busy_sleep+0x38>
   17e10:	10800044 	addi	r2,r2,1
   17e14:	113ffc16 	blt	r2,r4,17e08 <alt_busy_sleep+0x38>
   17e18:	017999b4 	movhi	r5,58982
   17e1c:	295999c4 	addi	r5,r5,26215
   17e20:	8161883a 	add	r16,r16,r5
   17e24:	01000e0e 	bge	zero,r4,17e60 <alt_busy_sleep+0x90>
   17e28:	00171fc0 	call	171fc <__mulsi3>
   17e2c:	00c666b4 	movhi	r3,6554
   17e30:	18e66644 	addi	r3,r3,-26215
   17e34:	10c5883a 	add	r2,r2,r3
   17e38:	1421883a 	add	r16,r2,r16
   17e3c:	800490ba 	slli	r2,r16,2
   17e40:	1421883a 	add	r16,r2,r16
   17e44:	843fffc4 	addi	r16,r16,-1
   17e48:	803ffe1e 	bne	r16,zero,17e44 <alt_busy_sleep+0x74>
   17e4c:	0005883a 	mov	r2,zero
   17e50:	dfc00117 	ldw	ra,4(sp)
   17e54:	dc000017 	ldw	r16,0(sp)
   17e58:	dec00204 	addi	sp,sp,8
   17e5c:	f800283a 	ret
   17e60:	0005883a 	mov	r2,zero
   17e64:	003ff406 	br	17e38 <alt_busy_sleep+0x68>
   17e68:	200890ba 	slli	r4,r4,2
   17e6c:	2421883a 	add	r16,r4,r16
   17e70:	843fffc4 	addi	r16,r16,-1
   17e74:	043ffe16 	blt	zero,r16,17e70 <alt_busy_sleep+0xa0>
   17e78:	003ff406 	br	17e4c <alt_busy_sleep+0x7c>

00017e7c <close>:
   17e7c:	defffd04 	addi	sp,sp,-12
   17e80:	dfc00215 	stw	ra,8(sp)
   17e84:	dc400115 	stw	r17,4(sp)
   17e88:	dc000015 	stw	r16,0(sp)
   17e8c:	20002016 	blt	r4,zero,17f10 <close+0x94>
   17e90:	2004907a 	slli	r2,r4,1
   17e94:	2023883a 	mov	r17,r4
   17e98:	1105883a 	add	r2,r2,r4
   17e9c:	100490ba 	slli	r2,r2,2
   17ea0:	010000b4 	movhi	r4,2
   17ea4:	21253804 	addi	r4,r4,-27424
   17ea8:	1109883a 	add	r4,r2,r4
   17eac:	20001826 	beq	r4,zero,17f10 <close+0x94>
   17eb0:	20800017 	ldw	r2,0(r4)
   17eb4:	10800417 	ldw	r2,16(r2)
   17eb8:	10001126 	beq	r2,zero,17f00 <close+0x84>
   17ebc:	103ee83a 	callr	r2
   17ec0:	1021883a 	mov	r16,r2
   17ec4:	8809883a 	mov	r4,r17
   17ec8:	00182e40 	call	182e4 <alt_release_fd>
   17ecc:	0005883a 	mov	r2,zero
   17ed0:	8000060e 	bge	r16,zero,17eec <close+0x70>
   17ed4:	d0a0a617 	ldw	r2,-32104(gp)
   17ed8:	10000b26 	beq	r2,zero,17f08 <close+0x8c>
   17edc:	103ee83a 	callr	r2
   17ee0:	0421c83a 	sub	r16,zero,r16
   17ee4:	14000015 	stw	r16,0(r2)
   17ee8:	00bfffc4 	movi	r2,-1
   17eec:	dfc00217 	ldw	ra,8(sp)
   17ef0:	dc400117 	ldw	r17,4(sp)
   17ef4:	dc000017 	ldw	r16,0(sp)
   17ef8:	dec00304 	addi	sp,sp,12
   17efc:	f800283a 	ret
   17f00:	0021883a 	mov	r16,zero
   17f04:	003fef06 	br	17ec4 <close+0x48>
   17f08:	d0a21a04 	addi	r2,gp,-30616
   17f0c:	003ff406 	br	17ee0 <close+0x64>
   17f10:	d0a0a617 	ldw	r2,-32104(gp)
   17f14:	10000426 	beq	r2,zero,17f28 <close+0xac>
   17f18:	103ee83a 	callr	r2
   17f1c:	00c01444 	movi	r3,81
   17f20:	10c00015 	stw	r3,0(r2)
   17f24:	003ff006 	br	17ee8 <close+0x6c>
   17f28:	d0a21a04 	addi	r2,gp,-30616
   17f2c:	003ffb06 	br	17f1c <close+0xa0>

00017f30 <alt_dcache_flush_all>:
   17f30:	f800283a 	ret

00017f34 <alt_dev_null_write>:
   17f34:	3005883a 	mov	r2,r6
   17f38:	f800283a 	ret

00017f3c <alt_dev_llist_insert>:
   17f3c:	20000226 	beq	r4,zero,17f48 <alt_dev_llist_insert+0xc>
   17f40:	20800217 	ldw	r2,8(r4)
   17f44:	10000b1e 	bne	r2,zero,17f74 <alt_dev_llist_insert+0x38>
   17f48:	d0a0a617 	ldw	r2,-32104(gp)
   17f4c:	10001126 	beq	r2,zero,17f94 <alt_dev_llist_insert+0x58>
   17f50:	deffff04 	addi	sp,sp,-4
   17f54:	dfc00015 	stw	ra,0(sp)
   17f58:	103ee83a 	callr	r2
   17f5c:	00c00584 	movi	r3,22
   17f60:	10c00015 	stw	r3,0(r2)
   17f64:	00bffa84 	movi	r2,-22
   17f68:	dfc00017 	ldw	ra,0(sp)
   17f6c:	dec00104 	addi	sp,sp,4
   17f70:	f800283a 	ret
   17f74:	28800017 	ldw	r2,0(r5)
   17f78:	21400115 	stw	r5,4(r4)
   17f7c:	20800015 	stw	r2,0(r4)
   17f80:	28800017 	ldw	r2,0(r5)
   17f84:	11000115 	stw	r4,4(r2)
   17f88:	29000015 	stw	r4,0(r5)
   17f8c:	0005883a 	mov	r2,zero
   17f90:	f800283a 	ret
   17f94:	d0a21a04 	addi	r2,gp,-30616
   17f98:	00c00584 	movi	r3,22
   17f9c:	10c00015 	stw	r3,0(r2)
   17fa0:	00bffa84 	movi	r2,-22
   17fa4:	f800283a 	ret

00017fa8 <_do_ctors>:
   17fa8:	defffd04 	addi	sp,sp,-12
   17fac:	dc400115 	stw	r17,4(sp)
   17fb0:	dc000015 	stw	r16,0(sp)
   17fb4:	044000b4 	movhi	r17,2
   17fb8:	040000b4 	movhi	r16,2
   17fbc:	dfc00215 	stw	ra,8(sp)
   17fc0:	84222e04 	addi	r16,r16,-30536
   17fc4:	8c622944 	addi	r17,r17,-30555
   17fc8:	843fff04 	addi	r16,r16,-4
   17fcc:	8440052e 	bgeu	r16,r17,17fe4 <_do_ctors+0x3c>
   17fd0:	dfc00217 	ldw	ra,8(sp)
   17fd4:	dc400117 	ldw	r17,4(sp)
   17fd8:	dc000017 	ldw	r16,0(sp)
   17fdc:	dec00304 	addi	sp,sp,12
   17fe0:	f800283a 	ret
   17fe4:	80800017 	ldw	r2,0(r16)
   17fe8:	103ee83a 	callr	r2
   17fec:	003ff606 	br	17fc8 <_do_ctors+0x20>

00017ff0 <_do_dtors>:
   17ff0:	defffd04 	addi	sp,sp,-12
   17ff4:	dc400115 	stw	r17,4(sp)
   17ff8:	dc000015 	stw	r16,0(sp)
   17ffc:	044000b4 	movhi	r17,2
   18000:	040000b4 	movhi	r16,2
   18004:	dfc00215 	stw	ra,8(sp)
   18008:	84223104 	addi	r16,r16,-30524
   1800c:	8c622e04 	addi	r17,r17,-30536
   18010:	843fff04 	addi	r16,r16,-4
   18014:	8440052e 	bgeu	r16,r17,1802c <_do_dtors+0x3c>
   18018:	dfc00217 	ldw	ra,8(sp)
   1801c:	dc400117 	ldw	r17,4(sp)
   18020:	dc000017 	ldw	r16,0(sp)
   18024:	dec00304 	addi	sp,sp,12
   18028:	f800283a 	ret
   1802c:	80800017 	ldw	r2,0(r16)
   18030:	103ee83a 	callr	r2
   18034:	003ff606 	br	18010 <_do_dtors+0x20>

00018038 <alt_icache_flush_all>:
   18038:	f800283a 	ret

0001803c <alt_exception_cause_generated_bad_addr>:
   1803c:	213ffe84 	addi	r4,r4,-6
   18040:	20800428 	cmpgeui	r2,r4,16
   18044:	1000151e 	bne	r2,zero,1809c <alt_exception_cause_generated_bad_addr+0x60>
   18048:	200890ba 	slli	r4,r4,2
   1804c:	008000b4 	movhi	r2,2
   18050:	2085883a 	add	r2,r4,r2
   18054:	10a01717 	ldw	r2,-32676(r2)
   18058:	1000683a 	jmp	r2
   1805c:	000180a4 	muli	zero,zero,1538
   18060:	000180a4 	muli	zero,zero,1538
   18064:	0001809c 	xori	zero,zero,1538
   18068:	0001809c 	xori	zero,zero,1538
   1806c:	0001809c 	xori	zero,zero,1538
   18070:	000180a4 	muli	zero,zero,1538
   18074:	0001809c 	xori	zero,zero,1538
   18078:	0001809c 	xori	zero,zero,1538
   1807c:	000180a4 	muli	zero,zero,1538
   18080:	000180a4 	muli	zero,zero,1538
   18084:	0001809c 	xori	zero,zero,1538
   18088:	000180a4 	muli	zero,zero,1538
   1808c:	0001809c 	xori	zero,zero,1538
   18090:	0001809c 	xori	zero,zero,1538
   18094:	0001809c 	xori	zero,zero,1538
   18098:	000180a4 	muli	zero,zero,1538
   1809c:	0005883a 	mov	r2,zero
   180a0:	f800283a 	ret
   180a4:	00800044 	movi	r2,1
   180a8:	f800283a 	ret

000180ac <alt_open_fd.constprop.0>:
   180ac:	defffe04 	addi	sp,sp,-8
   180b0:	dc000015 	stw	r16,0(sp)
   180b4:	2021883a 	mov	r16,r4
   180b8:	2809883a 	mov	r4,r5
   180bc:	300b883a 	mov	r5,r6
   180c0:	01807fc4 	movi	r6,511
   180c4:	dfc00115 	stw	ra,4(sp)
   180c8:	00181880 	call	18188 <open>
   180cc:	10001116 	blt	r2,zero,18114 <alt_open_fd.constprop.0+0x68>
   180d0:	1009883a 	mov	r4,r2
   180d4:	1004907a 	slli	r2,r2,1
   180d8:	00c000b4 	movhi	r3,2
   180dc:	18e53804 	addi	r3,r3,-27424
   180e0:	1105883a 	add	r2,r2,r4
   180e4:	100490ba 	slli	r2,r2,2
   180e8:	1887883a 	add	r3,r3,r2
   180ec:	18800017 	ldw	r2,0(r3)
   180f0:	80800015 	stw	r2,0(r16)
   180f4:	18800117 	ldw	r2,4(r3)
   180f8:	80800115 	stw	r2,4(r16)
   180fc:	18800217 	ldw	r2,8(r3)
   18100:	80800215 	stw	r2,8(r16)
   18104:	dfc00117 	ldw	ra,4(sp)
   18108:	dc000017 	ldw	r16,0(sp)
   1810c:	dec00204 	addi	sp,sp,8
   18110:	00182e41 	jmpi	182e4 <alt_release_fd>
   18114:	dfc00117 	ldw	ra,4(sp)
   18118:	dc000017 	ldw	r16,0(sp)
   1811c:	dec00204 	addi	sp,sp,8
   18120:	f800283a 	ret

00018124 <alt_io_redirect>:
   18124:	defffd04 	addi	sp,sp,-12
   18128:	dc400115 	stw	r17,4(sp)
   1812c:	2823883a 	mov	r17,r5
   18130:	200b883a 	mov	r5,r4
   18134:	010000b4 	movhi	r4,2
   18138:	dc000015 	stw	r16,0(sp)
   1813c:	21253b04 	addi	r4,r4,-27412
   18140:	3021883a 	mov	r16,r6
   18144:	01800044 	movi	r6,1
   18148:	dfc00215 	stw	ra,8(sp)
   1814c:	00180ac0 	call	180ac <alt_open_fd.constprop.0>
   18150:	010000b4 	movhi	r4,2
   18154:	880b883a 	mov	r5,r17
   18158:	000d883a 	mov	r6,zero
   1815c:	21253804 	addi	r4,r4,-27424
   18160:	00180ac0 	call	180ac <alt_open_fd.constprop.0>
   18164:	010000b4 	movhi	r4,2
   18168:	01800044 	movi	r6,1
   1816c:	800b883a 	mov	r5,r16
   18170:	21253e04 	addi	r4,r4,-27400
   18174:	dfc00217 	ldw	ra,8(sp)
   18178:	dc400117 	ldw	r17,4(sp)
   1817c:	dc000017 	ldw	r16,0(sp)
   18180:	dec00304 	addi	sp,sp,12
   18184:	00180ac1 	jmpi	180ac <alt_open_fd.constprop.0>

00018188 <open>:
   18188:	defff904 	addi	sp,sp,-28
   1818c:	dc800215 	stw	r18,8(sp)
   18190:	2825883a 	mov	r18,r5
   18194:	d160a204 	addi	r5,gp,-32120
   18198:	dcc00315 	stw	r19,12(sp)
   1819c:	dc400115 	stw	r17,4(sp)
   181a0:	dfc00615 	stw	ra,24(sp)
   181a4:	dd400515 	stw	r21,20(sp)
   181a8:	dd000415 	stw	r20,16(sp)
   181ac:	dc000015 	stw	r16,0(sp)
   181b0:	2023883a 	mov	r17,r4
   181b4:	3027883a 	mov	r19,r6
   181b8:	00184000 	call	18400 <alt_find_dev>
   181bc:	10003b1e 	bne	r2,zero,182ac <open+0x124>
   181c0:	8809883a 	mov	r4,r17
   181c4:	00184700 	call	18470 <alt_find_file>
   181c8:	1029883a 	mov	r20,r2
   181cc:	10003c26 	beq	r2,zero,182c0 <open+0x138>
   181d0:	05400044 	movi	r21,1
   181d4:	a009883a 	mov	r4,r20
   181d8:	001850c0 	call	1850c <alt_get_fd>
   181dc:	1021883a 	mov	r16,r2
   181e0:	10003a16 	blt	r2,zero,182cc <open+0x144>
   181e4:	1006907a 	slli	r3,r2,1
   181e8:	014000b4 	movhi	r5,2
   181ec:	29653804 	addi	r5,r5,-27424
   181f0:	1887883a 	add	r3,r3,r2
   181f4:	180690ba 	slli	r3,r3,2
   181f8:	00900034 	movhi	r2,16384
   181fc:	10bfffc4 	addi	r2,r2,-1
   18200:	1949883a 	add	r4,r3,r5
   18204:	9084703a 	and	r2,r18,r2
   18208:	a8002b1e 	bne	r21,zero,182b8 <open+0x130>
   1820c:	21c00017 	ldw	r7,0(r4)
   18210:	d1a0a117 	ldw	r6,-32124(gp)
   18214:	10900034 	orhi	r2,r2,16384
   18218:	20800215 	stw	r2,8(r4)
   1821c:	2807883a 	mov	r3,r5
   18220:	0005883a 	mov	r2,zero
   18224:	19400017 	ldw	r5,0(r3)
   18228:	29c0031e 	bne	r5,r7,18238 <open+0xb0>
   1822c:	19400217 	ldw	r5,8(r3)
   18230:	2800010e 	bge	r5,zero,18238 <open+0xb0>
   18234:	20c0271e 	bne	r4,r3,182d4 <open+0x14c>
   18238:	10800044 	addi	r2,r2,1
   1823c:	18c00304 	addi	r3,r3,12
   18240:	30bff82e 	bgeu	r6,r2,18224 <open+0x9c>
   18244:	a0800317 	ldw	r2,12(r20)
   18248:	10000e26 	beq	r2,zero,18284 <open+0xfc>
   1824c:	880b883a 	mov	r5,r17
   18250:	980f883a 	mov	r7,r19
   18254:	900d883a 	mov	r6,r18
   18258:	103ee83a 	callr	r2
   1825c:	1023883a 	mov	r17,r2
   18260:	1000080e 	bge	r2,zero,18284 <open+0xfc>
   18264:	8009883a 	mov	r4,r16
   18268:	00182e40 	call	182e4 <alt_release_fd>
   1826c:	d0a0a617 	ldw	r2,-32104(gp)
   18270:	10001a26 	beq	r2,zero,182dc <open+0x154>
   18274:	103ee83a 	callr	r2
   18278:	0463c83a 	sub	r17,zero,r17
   1827c:	14400015 	stw	r17,0(r2)
   18280:	043fffc4 	movi	r16,-1
   18284:	8005883a 	mov	r2,r16
   18288:	dfc00617 	ldw	ra,24(sp)
   1828c:	dd400517 	ldw	r21,20(sp)
   18290:	dd000417 	ldw	r20,16(sp)
   18294:	dcc00317 	ldw	r19,12(sp)
   18298:	dc800217 	ldw	r18,8(sp)
   1829c:	dc400117 	ldw	r17,4(sp)
   182a0:	dc000017 	ldw	r16,0(sp)
   182a4:	dec00704 	addi	sp,sp,28
   182a8:	f800283a 	ret
   182ac:	1029883a 	mov	r20,r2
   182b0:	002b883a 	mov	r21,zero
   182b4:	003fc706 	br	181d4 <open+0x4c>
   182b8:	20800215 	stw	r2,8(r4)
   182bc:	003fe106 	br	18244 <open+0xbc>
   182c0:	047ffb44 	movi	r17,-19
   182c4:	043fffc4 	movi	r16,-1
   182c8:	003fe606 	br	18264 <open+0xdc>
   182cc:	1023883a 	mov	r17,r2
   182d0:	003fe406 	br	18264 <open+0xdc>
   182d4:	047ffcc4 	movi	r17,-13
   182d8:	003fe206 	br	18264 <open+0xdc>
   182dc:	d0a21a04 	addi	r2,gp,-30616
   182e0:	003fe506 	br	18278 <open+0xf0>

000182e4 <alt_release_fd>:
   182e4:	208000d0 	cmplti	r2,r4,3
   182e8:	1000081e 	bne	r2,zero,1830c <alt_release_fd+0x28>
   182ec:	2006907a 	slli	r3,r4,1
   182f0:	008000b4 	movhi	r2,2
   182f4:	10a53804 	addi	r2,r2,-27424
   182f8:	1909883a 	add	r4,r3,r4
   182fc:	200890ba 	slli	r4,r4,2
   18300:	1105883a 	add	r2,r2,r4
   18304:	10000215 	stw	zero,8(r2)
   18308:	10000015 	stw	zero,0(r2)
   1830c:	f800283a 	ret

00018310 <alt_alarm_stop>:
   18310:	0007303a 	rdctl	r3,status
   18314:	00bfff84 	movi	r2,-2
   18318:	1884703a 	and	r2,r3,r2
   1831c:	1001703a 	wrctl	status,r2
   18320:	21400017 	ldw	r5,0(r4)
   18324:	20800117 	ldw	r2,4(r4)
   18328:	28800115 	stw	r2,4(r5)
   1832c:	11400015 	stw	r5,0(r2)
   18330:	21000115 	stw	r4,4(r4)
   18334:	21000015 	stw	r4,0(r4)
   18338:	1801703a 	wrctl	status,r3
   1833c:	f800283a 	ret

00018340 <alt_tick>:
   18340:	d0a22017 	ldw	r2,-30592(gp)
   18344:	defffb04 	addi	sp,sp,-20
   18348:	dc000015 	stw	r16,0(sp)
   1834c:	d420a717 	ldw	r16,-32100(gp)
   18350:	10800044 	addi	r2,r2,1
   18354:	dc800215 	stw	r18,8(sp)
   18358:	dc400115 	stw	r17,4(sp)
   1835c:	dfc00415 	stw	ra,16(sp)
   18360:	dcc00315 	stw	r19,12(sp)
   18364:	d0a22015 	stw	r2,-30592(gp)
   18368:	d460a704 	addi	r17,gp,-32100
   1836c:	04800044 	movi	r18,1
   18370:	8440071e 	bne	r16,r17,18390 <alt_tick+0x50>
   18374:	dfc00417 	ldw	ra,16(sp)
   18378:	dcc00317 	ldw	r19,12(sp)
   1837c:	dc800217 	ldw	r18,8(sp)
   18380:	dc400117 	ldw	r17,4(sp)
   18384:	dc000017 	ldw	r16,0(sp)
   18388:	dec00504 	addi	sp,sp,20
   1838c:	f800283a 	ret
   18390:	80800403 	ldbu	r2,16(r16)
   18394:	84c00017 	ldw	r19,0(r16)
   18398:	10000326 	beq	r2,zero,183a8 <alt_tick+0x68>
   1839c:	d0a22017 	ldw	r2,-30592(gp)
   183a0:	1000011e 	bne	r2,zero,183a8 <alt_tick+0x68>
   183a4:	80000405 	stb	zero,16(r16)
   183a8:	d0e22017 	ldw	r3,-30592(gp)
   183ac:	80800217 	ldw	r2,8(r16)
   183b0:	18800836 	bltu	r3,r2,183d4 <alt_tick+0x94>
   183b4:	80800403 	ldbu	r2,16(r16)
   183b8:	1000061e 	bne	r2,zero,183d4 <alt_tick+0x94>
   183bc:	80800317 	ldw	r2,12(r16)
   183c0:	81000517 	ldw	r4,20(r16)
   183c4:	103ee83a 	callr	r2
   183c8:	1000041e 	bne	r2,zero,183dc <alt_tick+0x9c>
   183cc:	8009883a 	mov	r4,r16
   183d0:	00183100 	call	18310 <alt_alarm_stop>
   183d4:	9821883a 	mov	r16,r19
   183d8:	003fe506 	br	18370 <alt_tick+0x30>
   183dc:	80c00217 	ldw	r3,8(r16)
   183e0:	10c5883a 	add	r2,r2,r3
   183e4:	d0e22017 	ldw	r3,-30592(gp)
   183e8:	80800215 	stw	r2,8(r16)
   183ec:	10fff92e 	bgeu	r2,r3,183d4 <alt_tick+0x94>
   183f0:	84800405 	stb	r18,16(r16)
   183f4:	003ff706 	br	183d4 <alt_tick+0x94>

000183f8 <altera_nios2_gen2_irq_init>:
   183f8:	000170fa 	wrctl	ienable,zero
   183fc:	f800283a 	ret

00018400 <alt_find_dev>:
   18400:	defffb04 	addi	sp,sp,-20
   18404:	dcc00315 	stw	r19,12(sp)
   18408:	dc800215 	stw	r18,8(sp)
   1840c:	dc400115 	stw	r17,4(sp)
   18410:	dc000015 	stw	r16,0(sp)
   18414:	dfc00415 	stw	ra,16(sp)
   18418:	2c000017 	ldw	r16,0(r5)
   1841c:	2027883a 	mov	r19,r4
   18420:	2823883a 	mov	r17,r5
   18424:	00185ec0 	call	185ec <strlen>
   18428:	14800044 	addi	r18,r2,1
   1842c:	8440091e 	bne	r16,r17,18454 <alt_find_dev+0x54>
   18430:	0021883a 	mov	r16,zero
   18434:	8005883a 	mov	r2,r16
   18438:	dfc00417 	ldw	ra,16(sp)
   1843c:	dcc00317 	ldw	r19,12(sp)
   18440:	dc800217 	ldw	r18,8(sp)
   18444:	dc400117 	ldw	r17,4(sp)
   18448:	dc000017 	ldw	r16,0(sp)
   1844c:	dec00504 	addi	sp,sp,20
   18450:	f800283a 	ret
   18454:	81000217 	ldw	r4,8(r16)
   18458:	900d883a 	mov	r6,r18
   1845c:	980b883a 	mov	r5,r19
   18460:	00185940 	call	18594 <memcmp>
   18464:	103ff326 	beq	r2,zero,18434 <alt_find_dev+0x34>
   18468:	84000017 	ldw	r16,0(r16)
   1846c:	003fef06 	br	1842c <alt_find_dev+0x2c>

00018470 <alt_find_file>:
   18470:	defffb04 	addi	sp,sp,-20
   18474:	dc000015 	stw	r16,0(sp)
   18478:	d420a417 	ldw	r16,-32112(gp)
   1847c:	dcc00315 	stw	r19,12(sp)
   18480:	dc400115 	stw	r17,4(sp)
   18484:	dfc00415 	stw	ra,16(sp)
   18488:	dc800215 	stw	r18,8(sp)
   1848c:	2023883a 	mov	r17,r4
   18490:	d4e0a404 	addi	r19,gp,-32112
   18494:	84c0091e 	bne	r16,r19,184bc <alt_find_file+0x4c>
   18498:	0021883a 	mov	r16,zero
   1849c:	8005883a 	mov	r2,r16
   184a0:	dfc00417 	ldw	ra,16(sp)
   184a4:	dcc00317 	ldw	r19,12(sp)
   184a8:	dc800217 	ldw	r18,8(sp)
   184ac:	dc400117 	ldw	r17,4(sp)
   184b0:	dc000017 	ldw	r16,0(sp)
   184b4:	dec00504 	addi	sp,sp,20
   184b8:	f800283a 	ret
   184bc:	84800217 	ldw	r18,8(r16)
   184c0:	9009883a 	mov	r4,r18
   184c4:	00185ec0 	call	185ec <strlen>
   184c8:	100d883a 	mov	r6,r2
   184cc:	9085883a 	add	r2,r18,r2
   184d0:	10bfffc7 	ldb	r2,-1(r2)
   184d4:	10800bd8 	cmpnei	r2,r2,47
   184d8:	1000011e 	bne	r2,zero,184e0 <alt_find_file+0x70>
   184dc:	31bfffc4 	addi	r6,r6,-1
   184e0:	8985883a 	add	r2,r17,r6
   184e4:	10800007 	ldb	r2,0(r2)
   184e8:	10c00be0 	cmpeqi	r3,r2,47
   184ec:	1800011e 	bne	r3,zero,184f4 <alt_find_file+0x84>
   184f0:	1000041e 	bne	r2,zero,18504 <alt_find_file+0x94>
   184f4:	880b883a 	mov	r5,r17
   184f8:	9009883a 	mov	r4,r18
   184fc:	00185940 	call	18594 <memcmp>
   18500:	103fe626 	beq	r2,zero,1849c <alt_find_file+0x2c>
   18504:	84000017 	ldw	r16,0(r16)
   18508:	003fe206 	br	18494 <alt_find_file+0x24>

0001850c <alt_get_fd>:
   1850c:	00c000b4 	movhi	r3,2
   18510:	18e53804 	addi	r3,r3,-27424
   18514:	0005883a 	mov	r2,zero
   18518:	19400017 	ldw	r5,0(r3)
   1851c:	28000a1e 	bne	r5,zero,18548 <alt_get_fd+0x3c>
   18520:	1006907a 	slli	r3,r2,1
   18524:	014000b4 	movhi	r5,2
   18528:	1887883a 	add	r3,r3,r2
   1852c:	180690ba 	slli	r3,r3,2
   18530:	194b883a 	add	r5,r3,r5
   18534:	d0e0a117 	ldw	r3,-32124(gp)
   18538:	29253815 	stw	r4,-27424(r5)
   1853c:	1880070e 	bge	r3,r2,1855c <alt_get_fd+0x50>
   18540:	d0a0a115 	stw	r2,-32124(gp)
   18544:	f800283a 	ret
   18548:	10800044 	addi	r2,r2,1
   1854c:	11400818 	cmpnei	r5,r2,32
   18550:	18c00304 	addi	r3,r3,12
   18554:	283ff01e 	bne	r5,zero,18518 <alt_get_fd+0xc>
   18558:	00bffa04 	movi	r2,-24
   1855c:	f800283a 	ret

00018560 <atexit>:
 */

int
atexit (void (*fn) (void))
{
  return __register_exitproc (__et_atexit, fn, NULL, NULL);
   18560:	200b883a 	mov	r5,r4
   18564:	000f883a 	mov	r7,zero
   18568:	000d883a 	mov	r6,zero
   1856c:	0009883a 	mov	r4,zero
   18570:	00186081 	jmpi	18608 <__register_exitproc>

00018574 <exit>:
 * Exit, flushing stdio buffers if necessary.
 */

void
exit (int code)
{
   18574:	defffe04 	addi	sp,sp,-8
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs (int, void *) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
   18578:	000b883a 	mov	r5,zero
{
   1857c:	dc000015 	stw	r16,0(sp)
   18580:	dfc00115 	stw	ra,4(sp)
   18584:	2021883a 	mov	r16,r4
    __call_exitprocs (code, NULL);
   18588:	00187180 	call	18718 <__call_exitprocs>
#ifndef WANT_SMALL_STDIO        /* IntelSpecific */
  if (_GLOBAL_REENT->__cleanup)
    (*_GLOBAL_REENT->__cleanup) (_GLOBAL_REENT);
#endif                          /* IntelSpecific */
  _exit (code);
   1858c:	8009883a 	mov	r4,r16
   18590:	00177e00 	call	177e0 <_exit>

00018594 <memcmp>:
{
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  unsigned char *s1 = (unsigned char *) m1;
  unsigned char *s2 = (unsigned char *) m2;

  while (n--)
   18594:	0007883a 	mov	r3,zero
   18598:	30c0021e 	bne	r6,r3,185a4 <memcmp+0x10>
	  return *s1 - *s2;
	}
      s1++;
      s2++;
    }
  return 0;
   1859c:	0005883a 	mov	r2,zero
      s2++;
    }

  return 0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   185a0:	f800283a 	ret
      if (*s1 != *s2)
   185a4:	20c5883a 	add	r2,r4,r3
   185a8:	18c00044 	addi	r3,r3,1
   185ac:	28cf883a 	add	r7,r5,r3
   185b0:	10800003 	ldbu	r2,0(r2)
   185b4:	39ffffc3 	ldbu	r7,-1(r7)
   185b8:	11fff726 	beq	r2,r7,18598 <memcmp+0x4>
	  return *s1 - *s2;
   185bc:	11c5c83a 	sub	r2,r2,r7
   185c0:	f800283a 	ret

000185c4 <memcpy>:
void *
__inhibit_loop_to_libcall
memcpy (void *__restrict dst0,
	const void *__restrict src0,
	size_t len0)
{
   185c4:	2005883a 	mov	r2,r4
  char *dst = (char *) dst0;
  char *src = (char *) src0;

  void *save = dst0;

  while (len0--)
   185c8:	0007883a 	mov	r3,zero
   185cc:	30c0011e 	bne	r6,r3,185d4 <memcpy+0x10>
  while (len0--)
    *dst++ = *src++;

  return dst0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   185d0:	f800283a 	ret
      *dst++ = *src++;
   185d4:	28cf883a 	add	r7,r5,r3
   185d8:	39c00003 	ldbu	r7,0(r7)
   185dc:	10c9883a 	add	r4,r2,r3
   185e0:	18c00044 	addi	r3,r3,1
   185e4:	21c00005 	stb	r7,0(r4)
   185e8:	003ff806 	br	185cc <memcpy+0x8>

000185ec <strlen>:
     precise position of the null.  */
  str = (char *) aligned_addr;

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (*str)
   185ec:	2005883a 	mov	r2,r4
   185f0:	10c00007 	ldb	r3,0(r2)
   185f4:	1800021e 	bne	r3,zero,18600 <strlen+0x14>
    str++;
  return str - start;
}
   185f8:	1105c83a 	sub	r2,r2,r4
   185fc:	f800283a 	ret
    str++;
   18600:	10800044 	addi	r2,r2,1
   18604:	003ffa06 	br	185f0 <strlen+0x4>

00018608 <__register_exitproc>:

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

  p = _GLOBAL_ATEXIT;
   18608:	d0a09d17 	ldw	r2,-32140(gp)
{
   1860c:	defff904 	addi	sp,sp,-28
   18610:	dc000015 	stw	r16,0(sp)
  p = _GLOBAL_ATEXIT;
   18614:	14000d17 	ldw	r16,52(r2)
{
   18618:	dd400515 	stw	r21,20(sp)
   1861c:	dd000415 	stw	r20,16(sp)
   18620:	dcc00315 	stw	r19,12(sp)
   18624:	dc800215 	stw	r18,8(sp)
   18628:	dfc00615 	stw	ra,24(sp)
   1862c:	dc400115 	stw	r17,4(sp)
   18630:	2025883a 	mov	r18,r4
   18634:	2827883a 	mov	r19,r5
   18638:	302b883a 	mov	r21,r6
   1863c:	3829883a 	mov	r20,r7
  if (p == NULL)
   18640:	8000061e 	bne	r16,zero,1865c <__register_exitproc+0x54>
    {
      _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
   18644:	14000e04 	addi	r16,r2,56
   18648:	14000d15 	stw	r16,52(r2)
#ifdef _REENT_SMALL
      extern struct _on_exit_args * const __on_exit_args _ATTRIBUTE ((weak));
      if (&__on_exit_args != NULL)
   1864c:	d0fa5e04 	addi	r3,gp,-5768
   18650:	18000226 	beq	r3,zero,1865c <__register_exitproc+0x54>
	p->_on_exit_args_ptr = __on_exit_args;
   18654:	d0fa5e17 	ldw	r3,-5768(gp)
   18658:	10c03015 	stw	r3,192(r2)
#endif	/* def _REENT_SMALL */
    }
  if (p->_ind >= _ATEXIT_SIZE)
   1865c:	84400117 	ldw	r17,4(r16)
   18660:	88800810 	cmplti	r2,r17,32
   18664:	10000a1e 	bne	r2,zero,18690 <__register_exitproc+0x88>
    {
#if !defined (_ATEXIT_DYNAMIC_ALLOC) || !defined (MALLOC_PROVIDED)
#ifndef __SINGLE_THREAD__
      __lock_release_recursive(__atexit_recursive_mutex);
#endif
      return -1;
   18668:	00bfffc4 	movi	r2,-1
  p->_fns[p->_ind++] = fn;
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif
  return 0;
}
   1866c:	dfc00617 	ldw	ra,24(sp)
   18670:	dd400517 	ldw	r21,20(sp)
   18674:	dd000417 	ldw	r20,16(sp)
   18678:	dcc00317 	ldw	r19,12(sp)
   1867c:	dc800217 	ldw	r18,8(sp)
   18680:	dc400117 	ldw	r17,4(sp)
   18684:	dc000017 	ldw	r16,0(sp)
   18688:	dec00704 	addi	sp,sp,28
   1868c:	f800283a 	ret
  if (type != __et_atexit)
   18690:	90001926 	beq	r18,zero,186f8 <__register_exitproc+0xf0>
      args = p->_on_exit_args_ptr;
   18694:	80802217 	ldw	r2,136(r16)
      if (args == NULL)
   18698:	1000091e 	bne	r2,zero,186c0 <__register_exitproc+0xb8>
	  if (malloc)
   1869c:	00800074 	movhi	r2,1
   186a0:	109c8f04 	addi	r2,r2,29244
   186a4:	103ff026 	beq	r2,zero,18668 <__register_exitproc+0x60>
	    args = malloc (sizeof * p->_on_exit_args_ptr);
   186a8:	01004204 	movi	r4,264
   186ac:	001723c0 	call	1723c <malloc>
	  if (args == NULL)
   186b0:	103fed26 	beq	r2,zero,18668 <__register_exitproc+0x60>
	  args->_fntypes = 0;
   186b4:	10004015 	stw	zero,256(r2)
	  args->_is_cxa = 0;
   186b8:	10004115 	stw	zero,260(r2)
	  p->_on_exit_args_ptr = args;
   186bc:	80802215 	stw	r2,136(r16)
      args->_fnargs[p->_ind] = arg;
   186c0:	880890ba 	slli	r4,r17,2
      args->_fntypes |= (1 << p->_ind);
   186c4:	00c00044 	movi	r3,1
   186c8:	1c46983a 	sll	r3,r3,r17
   186cc:	1109883a 	add	r4,r2,r4
      args->_fnargs[p->_ind] = arg;
   186d0:	25400015 	stw	r21,0(r4)
      args->_fntypes |= (1 << p->_ind);
   186d4:	11404017 	ldw	r5,256(r2)
      if (type == __et_cxa)
   186d8:	94800098 	cmpnei	r18,r18,2
      args->_fntypes |= (1 << p->_ind);
   186dc:	28cab03a 	or	r5,r5,r3
   186e0:	11404015 	stw	r5,256(r2)
      args->_dso_handle[p->_ind] = d;
   186e4:	25002015 	stw	r20,128(r4)
      if (type == __et_cxa)
   186e8:	9000031e 	bne	r18,zero,186f8 <__register_exitproc+0xf0>
	args->_is_cxa |= (1 << p->_ind);
   186ec:	11004117 	ldw	r4,260(r2)
   186f0:	20c6b03a 	or	r3,r4,r3
   186f4:	10c04115 	stw	r3,260(r2)
  p->_fns[p->_ind++] = fn;
   186f8:	88800044 	addi	r2,r17,1
   186fc:	8c400084 	addi	r17,r17,2
   18700:	882290ba 	slli	r17,r17,2
   18704:	80800115 	stw	r2,4(r16)
  return 0;
   18708:	0005883a 	mov	r2,zero
  p->_fns[p->_ind++] = fn;
   1870c:	8461883a 	add	r16,r16,r17
   18710:	84c00015 	stw	r19,0(r16)
  return 0;
   18714:	003fd506 	br	1866c <__register_exitproc+0x64>

00018718 <__call_exitprocs>:
 * otherwise only the handlers from that DSO are called.
 */

void 
__call_exitprocs (int code, void *d)
{
   18718:	defff604 	addi	sp,sp,-40
   1871c:	dd800615 	stw	r22,24(sp)
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

 restart:

  p = _GLOBAL_ATEXIT;
   18720:	d5a09d17 	ldw	r22,-32140(gp)
{
   18724:	dd400515 	stw	r21,20(sp)
   18728:	dd000415 	stw	r20,16(sp)
   1872c:	dfc00915 	stw	ra,36(sp)
   18730:	df000815 	stw	fp,32(sp)
   18734:	ddc00715 	stw	r23,28(sp)
   18738:	dcc00315 	stw	r19,12(sp)
   1873c:	dc800215 	stw	r18,8(sp)
   18740:	dc400115 	stw	r17,4(sp)
   18744:	dc000015 	stw	r16,0(sp)
   18748:	202b883a 	mov	r21,r4
   1874c:	2829883a 	mov	r20,r5
  p = _GLOBAL_ATEXIT;
   18750:	b4400d17 	ldw	r17,52(r22)
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   18754:	88000726 	beq	r17,zero,18774 <__call_exitprocs+0x5c>
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   18758:	8c000117 	ldw	r16,4(r17)
      args = p->_on_exit_args_ptr;
   1875c:	8cc02217 	ldw	r19,136(r17)
      for (n = p->_ind - 1; n >= 0; n--)
   18760:	84bfffc4 	addi	r18,r16,-1
   18764:	802090ba 	slli	r16,r16,2
   18768:	9c2f883a 	add	r23,r19,r16
   1876c:	8c21883a 	add	r16,r17,r16
   18770:	90000c0e 	bge	r18,zero,187a4 <__call_exitprocs+0x8c>
    }
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif

}
   18774:	dfc00917 	ldw	ra,36(sp)
   18778:	df000817 	ldw	fp,32(sp)
   1877c:	ddc00717 	ldw	r23,28(sp)
   18780:	dd800617 	ldw	r22,24(sp)
   18784:	dd400517 	ldw	r21,20(sp)
   18788:	dd000417 	ldw	r20,16(sp)
   1878c:	dcc00317 	ldw	r19,12(sp)
   18790:	dc800217 	ldw	r18,8(sp)
   18794:	dc400117 	ldw	r17,4(sp)
   18798:	dc000017 	ldw	r16,0(sp)
   1879c:	dec00a04 	addi	sp,sp,40
   187a0:	f800283a 	ret
	  if (d && (!args || args->_dso_handle[n] != d))
   187a4:	a0000726 	beq	r20,zero,187c4 <__call_exitprocs+0xac>
   187a8:	9800041e 	bne	r19,zero,187bc <__call_exitprocs+0xa4>
      for (n = p->_ind - 1; n >= 0; n--)
   187ac:	94bfffc4 	addi	r18,r18,-1
   187b0:	bdffff04 	addi	r23,r23,-4
   187b4:	843fff04 	addi	r16,r16,-4
   187b8:	003fed06 	br	18770 <__call_exitprocs+0x58>
	  if (d && (!args || args->_dso_handle[n] != d))
   187bc:	b8c01f17 	ldw	r3,124(r23)
   187c0:	1d3ffa1e 	bne	r3,r20,187ac <__call_exitprocs+0x94>
	  if (n == p->_ind - 1)
   187c4:	89000117 	ldw	r4,4(r17)
	  fn = p->_fns[n];
   187c8:	80c00117 	ldw	r3,4(r16)
	  if (n == p->_ind - 1)
   187cc:	213fffc4 	addi	r4,r4,-1
   187d0:	24800f1e 	bne	r4,r18,18810 <__call_exitprocs+0xf8>
	    p->_ind--;
   187d4:	8c800115 	stw	r18,4(r17)
	  if (!fn)
   187d8:	183ff426 	beq	r3,zero,187ac <__call_exitprocs+0x94>
	  ind = p->_ind;
   187dc:	8f000117 	ldw	fp,4(r17)
	  if (!args || (args->_fntypes & i) == 0)
   187e0:	98000526 	beq	r19,zero,187f8 <__call_exitprocs+0xe0>
	  i = 1 << n;
   187e4:	00800044 	movi	r2,1
   187e8:	148c983a 	sll	r6,r2,r18
	  if (!args || (args->_fntypes & i) == 0)
   187ec:	99004017 	ldw	r4,256(r19)
   187f0:	3108703a 	and	r4,r6,r4
   187f4:	2000081e 	bne	r4,zero,18818 <__call_exitprocs+0x100>
	    fn ();
   187f8:	183ee83a 	callr	r3
	  if (ind != p->_ind || *lastp != p)
   187fc:	89000117 	ldw	r4,4(r17)
   18800:	b0c00d17 	ldw	r3,52(r22)
   18804:	273fd21e 	bne	r4,fp,18750 <__call_exitprocs+0x38>
   18808:	88ffe826 	beq	r17,r3,187ac <__call_exitprocs+0x94>
   1880c:	003fd006 	br	18750 <__call_exitprocs+0x38>
	    p->_fns[n] = NULL;
   18810:	80000115 	stw	zero,4(r16)
   18814:	003ff006 	br	187d8 <__call_exitprocs+0xc0>
	  else if ((args->_is_cxa & i) == 0)
   18818:	99404117 	ldw	r5,260(r19)
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   1881c:	b93fff17 	ldw	r4,-4(r23)
	  else if ((args->_is_cxa & i) == 0)
   18820:	314c703a 	and	r6,r6,r5
   18824:	3000041e 	bne	r6,zero,18838 <__call_exitprocs+0x120>
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   18828:	200b883a 	mov	r5,r4
   1882c:	a809883a 	mov	r4,r21
   18830:	183ee83a 	callr	r3
   18834:	003ff106 	br	187fc <__call_exitprocs+0xe4>
	    (*((void (*)(void *)) fn))(args->_fnargs[n]);
   18838:	183ee83a 	callr	r3
   1883c:	003fef06 	br	187fc <__call_exitprocs+0xe4>
   18840:	0201ffff 	0x201ffff
   18844:	ffff0000 	call	ffff000 <_gp+0xffdd978>
   18848:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   1884c:	0201ffff 	0x201ffff
   18850:	ffff0000 	call	ffff000 <_gp+0xffdd978>
   18854:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   18858:	0001ffff 	0x1ffff
   1885c:	0401ffff 	0x401ffff
   18860:	00010000 	call	1000 <__alt_mem_onchip_mem-0xf000>
   18864:	0201ffff 	0x201ffff
   18868:	ffff0000 	call	ffff000 <_gp+0xffdd978>
   1886c:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   18870:	010d00ff 	0x10d00ff
   18874:	01010002 	0x1010002
	...
   18880:	010d00ff 	0x10d00ff
   18884:	01010004 	movi	r4,1024
   18888:	00000100 	call	10 <__alt_mem_onchip_mem-0xfff0>
   1888c:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   18890:	011100ff 	0x11100ff
   18894:	01010004 	movi	r4,1024
   18898:	7f000105 	stb	fp,4(r15)
   1889c:	007d0000 	call	7d000 <_gp+0x5b978>
   188a0:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   188a4:	01883a00 	call	1883a0 <_gp+0x166d18>
   188a8:	00011f24 	muli	zero,zero,1148
   188ac:	00012744 	movi	zero,1181
   188b0:	000128e4 	muli	zero,zero,1187
   188b4:	00014d54 	movui	zero,1333
   188b8:	000120c0 	call	120c <__alt_mem_onchip_mem-0xedf4>
   188bc:	00012750 	cmplti	zero,zero,1181
   188c0:	000128f0 	cmpltui	zero,zero,1187
