
jiwy_demonstrator.elf:     file format elf32-littlenios2
jiwy_demonstrator.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x00009254 memsz 0x00009254 flags r-x
    LOAD off    0x0000a274 vaddr 0x00019274 paddr 0x000197fc align 2**12
         filesz 0x00000588 memsz 0x00000588 flags rw-
    LOAD off    0x0000ad84 vaddr 0x00019d84 paddr 0x00019d84 align 2**12
         filesz 0x00000000 memsz 0x000002d4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00008614  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000ae0  00018794  00018794  00009794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000588  00019274  000197fc  0000a274  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002d4  00019d84  00019d84  0000ad84  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  0001a058  0001a058  0000a7fc  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0000a7fc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000be8  00000000  00000000  0000a830  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00023d33  00000000  00000000  0000b418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c418  00000000  00000000  0002f14b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00012165  00000000  00000000  0003b563  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00001dc4  00000000  00000000  0004d6c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000ad2c  00000000  00000000  0004f48c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000f88a  00000000  00000000  0005a1b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000040  00000000  00000000  00069a44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002a20  00000000  00000000  00069a88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  000739f3  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000739f6  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000739f9  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000739fa  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000739fb  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000739ff  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00073a03  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00073a07  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00073a10  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00073a19  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000013  00000000  00000000  00073a22  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002a  00000000  00000000  00073a35  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
00018794 l    d  .rodata	00000000 .rodata
00019274 l    d  .rwdata	00000000 .rwdata
00019d84 l    d  .bss	00000000 .bss
0001a058 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/gteho/Repositories/EMSYS-LAB/nios/software/jiwy_demonstrator_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 xxinteg.cpp
00000000 l    df *ABS*	00000000 PositionControllerPan.cpp
00010258 l     F .text	000000f8 .LTHUNK2
00010ad8 l     F .text	000000a8 .LTHUNK0
00000000 l    df *ABS*	00000000 PositionControllerTilt.cpp
00010e58 l     F .text	0000010c .LTHUNK2
000116e4 l     F .text	000000a8 .LTHUNK0
00000000 l    df *ABS*	00000000 main.cpp
00011edc l     F .text	0000019c _GLOBAL__sub_I_uart
00012078 l     F .text	0000002c _GLOBAL__sub_D_uart
00000000 l    df *ABS*	00000000 motor.cpp
00000000 l    df *ABS*	00000000 uart.cpp
000126fc l     F .text	0000000c _GLOBAL__sub_I__ZN6Serial4UART10uart_readyE
00012708 l     F .text	0000000c _GLOBAL__sub_D__ZN6Serial4UART10uart_readyE
00000000 l    df *ABS*	00000000 timer.cpp
0001289c l     F .text	0000000c _GLOBAL__sub_I__ZN5Timer17timer_isr_contextE
000128a8 l     F .text	0000000c _GLOBAL__sub_D__ZN5Timer17timer_isr_contextE
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 del_opv.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
00012b60 l     F .text	00000090 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
00012bf0 l     F .text	000001e8 _ZL28read_encoded_value_with_basehjPKhPj
00012dd8 l     F .text	00000070 _ZL21base_of_encoded_valuehP15_Unwind_Context
00012e48 l     F .text	0000012c _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00012f74 l     F .text	00000110 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
000139f8 l     F .text	00000068 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 function_type_info.cc
00000000 l    df *ABS*	00000000 new_opv.cc
00000000 l    df *ABS*	00000000 pointer_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 functional.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
00014a90 l     F .text	000000cc _ZN12_GLOBAL__N_14pool4freeEPv.constprop.0
00019f48 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
00014b5c l     F .text	00000090 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.0
00014d0c l     F .text	00000064 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
00019da8 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 fundamental_type_info.cc
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 pbase_type_info.cc
000197c0 l     O .rwdata	00000008 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE3pmf
000197bc l     O .rwdata	00000004 _ZZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvjE2pm
00000000 l    df *ABS*	00000000 pmem_type_info.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 eh_aux_runtime.cc
00000000 l    df *ABS*	00000000 new_handler.cc
00019db0 l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 bad_array_new.cc
00000000 l    df *ABS*	00000000 bad_cast.cc
00000000 l    df *ABS*	00000000 bad_typeid.cc
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
000169a0 l     F .text	00000114 _Unwind_ForcedUnwind_Phase2
00019db4 l     O .bss	00000004 fc_static
00016ab4 l     F .text	000000d8 _Unwind_RaiseException_Phase2
00016b8c l     F .text	0000002c uw_install_context.constprop.0.isra.0
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 impure.c
00019274 l     O .rwdata	000000e4 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_kill.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000197d8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00019384 l     O .rwdata	0000002c jtag_uart
00019358 l     O .rwdata	0000002c uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00017b00 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00017e04 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00017f7c l     F .text	00000078 alt_open_fd.constprop.0
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00019dd4 g     O .bss	00000004 alt_instruction_exception_handler
000103b0 g     F .text	00000150 _ZN21PositionControllerPan5ResetEf
00014c74 g     F .text	00000028 __cxa_free_exception
00013fbc g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0001886c  w    O .rodata	00000018 _ZTI22PositionControllerTilt
00018ee4  w    O .rodata	00000010 _ZTIPKDs
00013984 g     F .text	00000014 _ZSt10unexpectedv
00012470 g     F .text	000000a8 _ZN6Serial4UART10uart_0_isrEPv
000197a4  w    O .rwdata	00000008 _ZTIw
00019784  w    O .rwdata	00000008 _ZTIc
00017938 g     F .text	00000060 alt_main
00019f58 g     O .bss	00000100 alt_irq
00014fa8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0001977c  w    O .rwdata	00000008 _ZTIa
00013bf8 g     F .text	00000004 _Znaj
00010254  w    F .text	00000004 _ZN13Submodel20sim16CalculateDynamicEv
00010240 g     F .text	00000014 _ZN8DiscreteC2Ev
0001117c g     F .text	00000004 _ZN22PositionControllerTilt14CalculateFinalEv
00016c38 g     F .text	00000020 .hidden _Unwind_GetIPInfo
000197fc g       *ABS*	00000000 __flash_rwdata_start
000120a4 g     F .text	000000e0 _ZN5Plant5MotorC2Emmmmm
00018d74  w    O .rodata	00000010 _ZTIPy
00019620  w    O .rwdata	00000002 _ZTSa
00018b34  w    O .rodata	00000014 _ZTVSt17bad_function_call
00013b24 g     F .text	00000084 __cxa_rethrow
000187ec  w    O .rodata	00000018 _ZTS21PositionControllerPan
00010240 g     F .text	00000014 _ZN8DiscreteC1Ev
00016bd0 g     F .text	00000010 .hidden _Unwind_SjLj_Unregister
000139c8 g     F .text	00000024 _ZSt14set_unexpectedPFvvE
00018e04  w    O .rodata	00000010 _ZTIPKi
00016c28 g     F .text	00000010 .hidden _Unwind_GetIP
0001239c g     F .text	00000024 _ZN5Plant5Motor7disableEv
0001a058 g       *ABS*	00000000 __alt_heap_start
00019660  w    O .rwdata	00000003 _ZTSPj
00017624 g     F .text	00000044 _kill_r
00015458 g     F .text	00000010 _ZNSt9bad_allocD2Ev
00017428 g     F .text	00000078 _signal_r
00019684  w    O .rwdata	00000003 _ZTSPx
0001978c  w    O .rwdata	00000008 _ZTIDi
000196e4  w    O .rwdata	00000005 _ZTSPKDd
00019678  w    O .rwdata	00000003 _ZTSPm
00014ce0 g     F .text	0000002c __cxa_free_dependent_exception
00013cf0 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
00018a0c  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
00010e58 g     F .text	0000010c _ZN22PositionControllerTilt16CalculateDynamicEv
0001799c g     F .text	00000004 __malloc_unlock
000195ec  w    O .rwdata	00000005 _ZTSPKDu
00019014  w    O .rodata	00000024 _ZTVN10__cxxabiv129__pointer_to_member_type_infoE
00014fa8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
000147a4 g     F .text	00000264 _ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
00014f3c g     F .text	00000020 _ZSt18uncaught_exceptionv
00010548 g     F .text	00000004 _ZN21PositionControllerPan14CalculateInputEv
00015440 g     F .text	0000000c __cxa_deleted_virtual
00018cf4  w    O .rodata	00000010 _ZTIPDn
000188f8  w    O .rodata	00000010 _ZTIPFvvE
0001965c  w    O .rwdata	00000002 _ZTSj
00014f78 g     F .text	00000004 _ZNSt9exceptionD2Ev
000189b8  w    O .rodata	00000024 _ZTSN10__cxxabiv119__pointer_type_infoE
00019d9c g     O .bss	00000001 timer
00013c04 g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD1Ev
000190ec  w    O .rodata	0000000c _ZTISt8bad_cast
00018bf4  w    O .rodata	00000014 _ZTVSt13bad_exception
000182c8 g     F .text	00000008 altera_nios2_gen2_irq_init
00019608  w    O .rwdata	00000004 _ZTSPDi
00018794  w    O .rodata	00000014 _ZTS17IntegrationMethod
00015568 g     F .text	00000010 _ZNSt20bad_array_new_lengthD1Ev
000195cc  w    O .rwdata	00000002 _ZTSb
00010000 g     F .entry	0000000c __reset
0001961c  w    O .rwdata	00000004 _ZTSPKc
00016c74 g     F .text	00000008 .hidden _Unwind_GetRegionStart
00019694  w    O .rwdata	00000004 _ZTSPKy
000195d4  w    O .rwdata	00000004 _ZTSPKb
00010020 g       *ABS*	00000000 __flash_exceptions_start
00011a54 g     F .text	000001b8 _Z16handleTimerEventv
00018e24  w    O .rodata	00000010 _ZTIPKt
00019624  w    O .rwdata	00000003 _ZTSPa
00019dc0 g     O .bss	00000004 errno
00019d9f g     O .bss	00000004 _ZN6Serial4UART7rx_dataE
000195c8  w    O .rwdata	00000004 _ZTSPKv
00018884  w    O .rodata	00000034 _ZTV22PositionControllerTilt
00016e3c g     F .text	00000088 .hidden _Unwind_Backtrace
00018f44  w    O .rodata	00000010 _ZTIPKb
00012518 g     F .text	00000164 _ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE
00019dcc g     O .bss	00000004 alt_argv
00021558 g       *ABS*	00000000 _gp
000179ec g     F .text	00000004 usleep
00015620 g     F .text	00000038 _ZNSt10bad_typeidD0Ev
00014fe0 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD1Ev
00019ed8 g     O .bss	00000028 pan_motor
000155cc g     F .text	00000038 _ZNSt8bad_castD0Ev
000176c4 g     F .text	00000008 getpid
0001371c g     F .text	0000017c __cxa_call_unexpected
00014dc8 g     F .text	00000008 __cxa_get_exception_ptr
00019670  w    O .rwdata	00000004 _ZTSPKl
000193b0 g     O .rwdata	00000180 alt_fd_list
000150c0 g     F .text	00000038 _ZN10__cxxabiv117__pbase_type_infoD0Ev
00018dd4  w    O .rodata	00000010 _ZTIPl
00016d5c g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
00016bf8 g     F .text	00000018 .hidden _Unwind_GetCFA
00019764  w    O .rwdata	00000008 _ZTIt
00013998 g     F .text	00000024 _ZSt13set_terminatePFvvE
000182d0 g     F .text	00000070 alt_find_dev
00018494 g     F .text	00000028 memcpy
000195c4  w    O .rwdata	00000003 _ZTSPv
00014c9c g     F .text	00000044 __cxa_allocate_dependent_exception
00011944 g     F .text	00000110 _ZN22PositionControllerTilt9CalculateEPfS0_
00019f28 g     O .bss	00000010 _ZN6Serial4UART8callbackE
0001292c g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
00017ff4 g     F .text	00000064 alt_io_redirect
00019d8c g     O .bss	00000008 y_pan
00018794 g       *ABS*	00000000 __DTOR_END__
00018fd8  w    O .rodata	0000002e _ZTSN10__cxxabiv129__pointer_to_member_type_infoE
00018f74  w    O .rodata	00000010 _ZTIPv
00012944 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
000197ac  w    O .rwdata	00000008 _ZTIb
00018ac4  w    O .rodata	0000000c _ZTIN10__cxxabiv121__vmi_class_type_infoE
00018fa8  w    O .rodata	0000000c _ZTIN10__cxxabiv117__pbase_type_infoE
00017f0c g     F .text	00000070 alt_exception_cause_generated_bad_addr
0001960c  w    O .rwdata	00000005 _ZTSPKDi
00019eb8 g     O .bss	00000010 u_pan
00018dc4  w    O .rodata	00000010 _ZTIPKl
00012744 g     F .text	0000011c _ZN5TimerC2ESt8functionIFvvEE
00013c14 g     F .text	00000038 _ZN10__cxxabiv119__pointer_type_infoD0Ev
00015568 g     F .text	00000010 _ZNSt20bad_array_new_lengthD2Ev
00017a78 g     F .text	00000058 altera_avalon_jtag_uart_read
0001710c g     F .text	0000000c malloc
00019094  w    O .rodata	00000019 _ZTSSt20bad_array_new_length
000117d0 g     F .text	00000038 _ZTv0_n16_N22PositionControllerTiltD0Ev
0001700c g     F .text	00000064 .hidden __udivsi3
00010540 g     F .text	00000004 _ZN21PositionControllerPan16CalculateInitialEv
000174a0 g     F .text	000000b4 _raise_r
00019580  w    O .rwdata	00000005 _ZTSFvvE
00018ce4  w    O .rodata	00000010 _ZTIPKDn
00010350 g     F .text	00000018 _ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv
00019648  w    O .rwdata	00000003 _ZTSPt
00014ff0 g     F .text	00000038 _ZN10__cxxabiv123__fundamental_type_infoD0Ev
00017668 g     F .text	00000004 _getpid_r
00014f5c g     F .text	0000001c _ZSt19uncaught_exceptionsv
00014bec g     F .text	00000030 _ZN9__gnu_cxx9__freeresEv
00014018 g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD1Ev
00019704  w    O .rwdata	00000008 _ZTIDd
000129f8 g     F .text	0000009c _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
000196ac  w    O .rwdata	00000004 _ZTSPKd
00017554 g     F .text	000000a0 __sigtramp_r
000120a4 g     F .text	000000e0 _ZN5Plant5MotorC1Emmmmm
0001738c g     F .text	00000040 _sbrk_r
00014f80 g     F .text	0000000c _ZGTtNKSt9exception4whatEv
00019590  w    O .rwdata	00000006 _ZTSPFvvE
00018a7c  w    O .rodata	00000020 _ZTVSt9type_info
00018804  w    O .rodata	00000018 _ZTI21PositionControllerPan
000150b0 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD1Ev
00014f80 g     F .text	0000000c _ZNKSt9exception4whatEv
0001967c  w    O .rwdata	00000004 _ZTSPKm
000197dc g     O .rwdata	00000004 alt_max_fd
00018ed4  w    O .rodata	00000010 _ZTIPDi
00019058  w    O .rodata	0000000c _ZTISt9bad_alloc
00018d54  w    O .rodata	00000010 _ZTIPf
00016734 g     F .text	000000fc .hidden __extendsfdf2
000189e8  w    O .rodata	00000024 _ZTVN10__cxxabiv119__pointer_type_infoE
00018cb4  w    O .rodata	00000010 _ZTIPDd
000188e8  w    O .rodata	00000010 _ZTIPFvRN6Serial7messageEE
00018b28  w    O .rodata	0000000c _ZTISt17bad_function_call
00010b80 g     F .text	00000018 _ZTv0_n16_N21PositionControllerPanD1Ev
000123c0 g     F .text	00000020 _ZN5Plant5Motor8getAngleEv
00018a40  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
000187a8  w    O .rodata	0000000a _ZTS8Discrete
000155bc g     F .text	00000010 _ZNSt8bad_castD1Ev
0001298c g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
00010570 g     F .text	00000004 _ZN21PositionControllerPan14CalculateFinalEv
00014a8c g     F .text	00000004 _ZdlPv
000197cc g     O .rwdata	00000004 _global_impure_ptr
00014028 g     F .text	00000038 _ZN10__cxxabiv121__vmi_class_type_infoD0Ev
0001a058 g       *ABS*	00000000 __bss_end
00015550 g     F .text	0000000c _ZSt15get_new_handlerv
00019690  w    O .rwdata	00000003 _ZTSPy
000195e4  w    O .rwdata	00000003 _ZTSDu
00017758 g     F .text	00000068 alt_iic_isr_register
00019658  w    O .rwdata	00000004 _ZTSPKi
00018f54  w    O .rodata	00000010 _ZTIPb
00018210 g     F .text	000000b8 alt_tick
00016bb8 g     F .text	00000018 .hidden _Unwind_SjLj_Register
000170f4 g     F .text	00000018 abort
0001178c g     F .text	00000018 _ZTv0_n16_N22PositionControllerTiltD1Ev
00011114 g     F .text	0000000c _ZN22PositionControllerTilt10IsFinishedEv
00019734  w    O .rwdata	00000008 _ZTIy
00018c84  w    O .rodata	00000010 _ZTIPKDe
000123e0 g     F .text	0000000c _ZN5Plant5Motor8readDataEv
00014e88 g     F .text	000000b4 __cxa_end_catch
00011c78  w    F .text	00000048 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
00017740 g     F .text	00000018 alt_ic_irq_enabled
00014f7c g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
00019d94 g     O .bss	00000008 y_tilt
00018d44  w    O .rodata	00000010 _ZTIPKf
00011808 g     F .text	0000013c _ZN22PositionControllerTilt10InitializeEPfS0_f
000181e0 g     F .text	00000030 alt_alarm_stop
00011c70  w    F .text	00000008 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
000117a4 g     F .text	0000002c _ZN22PositionControllerTiltD0Ev
00018d34  w    O .rodata	00000010 _ZTIPd
00019dc4 g     O .bss	00000004 alt_irq_active
000101d0 g     F .text	00000004 _ZN8Discrete9TerminateEv
00013960 g     F .text	00000014 _ZSt9terminatev
00019638  w    O .rwdata	00000002 _ZTSs
000196c0  w    O .rwdata	00000004 _ZTSPDn
00010000 g       *ABS*	00000000 __alt_mem_onchip_mem
00018fb4  w    O .rodata	00000024 _ZTVN10__cxxabiv117__pbase_type_infoE
000100fc g     F .exceptions	00000060 alt_irq_handler
00011d08  w    F .text	00000064 _ZNSt14_Function_baseD2Ev
00019530 g     O .rwdata	00000028 alt_dev_null
00014060 g     F .text	00000128 _ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
00019654  w    O .rwdata	00000003 _ZTSPi
00014fb4 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
0001969c  w    O .rwdata	00000003 _ZTSPf
00018f24  w    O .rodata	00000010 _ZTIPKw
000196a8  w    O .rwdata	00000003 _ZTSPd
000196d0  w    O .rwdata	00000004 _ZTSPDf
00018908  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
00017e00 g     F .text	00000004 alt_dcache_flush_all
0001973c  w    O .rwdata	00000008 _ZTIx
000195dc  w    O .rwdata	00000003 _ZTSPw
000195a4  w    O .rwdata	00000008 _ZTISt9exception
000196dc  w    O .rwdata	00000003 _ZTSDd
000196d4  w    O .rwdata	00000005 _ZTSPKDf
00010368 g     F .text	00000024 _ZN21PositionControllerPan21CopyInputsToVariablesEPf
00019674  w    O .rwdata	00000002 _ZTSm
000197fc g       *ABS*	00000000 __ram_rwdata_end
00018e14  w    O .rodata	00000010 _ZTIPi
00012340 g     F .text	00000030 _ZN5Plant5Motor12setDirectionENS0_9DirectionE
00013fb8 g     F .text	00000004 _ZNSt9type_infoD1Ev
000197e0 g     O .rwdata	00000008 alt_dev_list
00014fb4 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
00013bc0 g     F .text	00000038 _ZN10__cxxabiv120__function_type_infoD0Ev
000195f8  w    O .rwdata	00000004 _ZTSPDs
00013fcc g     F .text	00000008 _ZNSt9type_infoD0Ev
000187b4  w    O .rodata	0000000c _ZTI8Discrete
00019274 g       *ABS*	00000000 __ram_rodata_end
00012b58 g     F .text	00000004 _ZdlPvj
0001972c  w    O .rwdata	00000008 _ZTIf
000177c0 g     F .text	000000f4 kill
00019da4 g     O .bss	00000004 _ZN5Timer17timer_isr_contextE
0001966c  w    O .rwdata	00000003 _ZTSPl
00013ba8 g     F .text	00000008 _ZNK10__cxxabiv120__function_type_info15__is_function_pEv
000195fc  w    O .rwdata	00000005 _ZTSPKDs
00018e54  w    O .rodata	00000010 _ZTIPs
00017070 g     F .text	0000005c .hidden __umodsi3
00013fc4 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
000195f4  w    O .rwdata	00000003 _ZTSDs
00019688  w    O .rwdata	00000004 _ZTSPKx
00013a60 g     F .text	00000064 __cxa_init_primary_exception
00010840 g     F .text	00000190 _ZN21PositionControllerPanC1Ev
000139bc g     F .text	0000000c _ZSt13get_terminatev
0001a058 g       *ABS*	00000000 end
000196cc  w    O .rwdata	00000003 _ZTSDf
00014a14 g     F .text	00000010 _ZNSt17bad_function_callD2Ev
000116e4 g     F .text	000000a8 _ZN22PositionControllerTiltD1Ev
00019614  w    O .rwdata	00000002 _ZTSc
00017c1c g     F .text	00000084 altera_avalon_uart_write
00016e24 g     F .text	00000018 .hidden _Unwind_DeleteException
00011120 g     F .text	00000034 _ZN22PositionControllerTilt9TerminateEPfS0_
00019664  w    O .rwdata	00000004 _ZTSPKj
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00012a94 g     F .text	000000c4 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
00014018 g     F .text	00000010 _ZN10__cxxabiv121__vmi_class_type_infoD2Ev
00018775 g       *ABS*	00000000 __CTOR_LIST__
0001b400 g       *ABS*	00000000 __alt_stack_pointer
00018db4  w    O .rodata	00000010 _ZTIPm
00017b3c g     F .text	00000048 alt_avalon_timer_sc_init
00017b94 g     F .text	00000010 altera_avalon_uart_write_fd
00016ec4 g     F .text	00000054 .hidden __clzsi2
000128b4 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
00017ad0 g     F .text	00000030 altera_avalon_jtag_uart_write
0001038c g     F .text	00000024 _ZN21PositionControllerPan22CopyVariablesToOutputsEPf
00018b7c  w    O .rodata	00000012 _ZTSSt13bad_exception
0001962c  w    O .rwdata	00000002 _ZTSh
00012860 g     F .text	0000003c _ZN5Timer6enableEv
00012184 g     F .text	00000134 _ZN5Plant5Motor20setSpeedAndDirectionEa
0001555c g     F .text	0000000c _ZNKSt20bad_array_new_length4whatEv
00017144 g     F .text	000000f8 _free_r
000155b0 g     F .text	0000000c _ZNKSt8bad_cast4whatEv
0001144c g     F .text	00000190 _ZN22PositionControllerTiltC1Ev
000185e8 g     F .text	00000128 __call_exitprocs
00010180 g     F .text	0000003c _start
00019ddc g     O .bss	00000004 _alt_tick_rate
00018a6c  w    O .rodata	0000000d _ZTSSt9type_info
000150b0 g     F .text	00000010 _ZN10__cxxabiv117__pbase_type_infoD2Ev
0001544c g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
00015434 g     F .text	0000000c __cxa_pure_virtual
000101bc g     F .text	00000004 _ZN8DiscreteD2Ev
00019064  w    O .rodata	00000014 _ZTVSt9bad_alloc
00019dd8 g     O .bss	00000004 _alt_nticks
00017600 g     F .text	00000010 signal
00017a10 g     F .text	00000048 alt_sys_init
000195d0  w    O .rwdata	00000003 _ZTSPb
00019794  w    O .rwdata	00000008 _ZTIDs
00018e74  w    O .rodata	00000010 _ZTIPh
00018f34  w    O .rodata	00000010 _ZTIPw
0001912c  w    O .rodata	0000000c _ZTISt10bad_typeid
000184d8 g     F .text	00000110 __register_exitproc
000190bc  w    O .rodata	00000014 _ZTVSt20bad_array_new_length
00019048  w    O .rodata	0000000d _ZTSSt9bad_alloc
00019f38 g     O .bss	00000010 _ZN5Timer8callbackE
00014f8c g     F .text	0000000c _ZGTtNKSt13bad_exception4whatEv
00013d38 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
00019774  w    O .rwdata	00000008 _ZTIh
00018d84  w    O .rodata	00000010 _ZTIPKx
00012370 g     F .text	0000002c _ZN5Plant5Motor6enableEv
000170cc g     F .text	00000028 .hidden __mulsi3
00019274 g       *ABS*	00000000 __ram_rwdata_start
00016c94 g     F .text	000000c8 .hidden _Unwind_SjLj_RaiseException
00018794 g       *ABS*	00000000 __ram_rodata_start
00016da0 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
00018c1c  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
00019754  w    O .rwdata	00000008 _ZTIj
00015578 g     F .text	00000038 _ZNSt20bad_array_new_lengthD0Ev
00019724  w    O .rwdata	00000008 _ZTId
00015508 g     F .text	00000034 __cxa_throw_bad_array_new_length
00013fb8 g     F .text	00000004 _ZNSt9type_infoD2Ev
000196bc  w    O .rwdata	00000003 _ZTSDn
00014fb8 g     F .text	00000008 _ZN10__cxxabiv119__foreign_exceptionD0Ev
00011c64  w    F .text	0000000c _ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_
00015354 g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD2Ev
00013f34 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
00018de4  w    O .rodata	00000010 _ZTIPKj
00018a9c  w    O .rodata	00000026 _ZTSN10__cxxabiv121__vmi_class_type_infoE
00010d40 g     F .text	00000118 _ZN21PositionControllerPan9CalculateEPfS0_
00013bfc g     F .text	00000008 _ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv
00018c58  w    O .rodata	0000000c _ZTIN10__cxxabiv123__fundamental_type_infoE
00017a58 g     F .text	00000010 altera_avalon_jtag_uart_read_fd
000183dc g     F .text	00000054 alt_get_fd
00017ca0 g     F .text	000000ac alt_busy_sleep
000196c4  w    O .rwdata	00000005 _ZTSPKDn
000195b4  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0001898c  w    O .rodata	0000000c _ZTIN10__cxxabiv120__function_type_infoE
00011c0c g     F .text	00000058 _Z15handleUartEventRN6Serial7messageE
00019d84 g     O .bss	00000004 angle
000196a0  w    O .rwdata	00000004 _ZTSPKf
000101c0 g     F .text	00000010 _ZN8Discrete10InitializeEP13Submodel20sim
00019628  w    O .rwdata	00000004 _ZTSPKa
00018464 g     F .text	00000030 memcmp
0001a058 g       *ABS*	00000000 __alt_stack_base
00015468 g     F .text	00000038 _ZNSt9bad_allocD0Ev
00013cf0 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
00014fe0 g     F .text	00000010 _ZN10__cxxabiv123__fundamental_type_infoD2Ev
00011180 g     F .text	00000038 _ZN22PositionControllerTilt13SetFinishTimeEf
00011160 g     F .text	0000001c _ZN22PositionControllerTilt15CalculateOutputEv
000195e8  w    O .rwdata	00000004 _ZTSPDu
00016de4 g     F .text	00000040 .hidden _Unwind_SjLj_Resume_or_Rethrow
00019588  w    O .rwdata	00000008 _ZTIFvvE
00015658 g     F .text	00000930 .hidden __divdf3
000190e0  w    O .rodata	0000000c _ZTSSt8bad_cast
00013fbc g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
00013c04 g     F .text	00000010 _ZN10__cxxabiv119__pointer_type_infoD2Ev
00019578  w    O .rwdata	00000008 _ZTIFvRN6Serial7messageEE
00010f7c g     F .text	0000002c _ZN22PositionControllerTilt21CopyInputsToVariablesEPf
00015f88 g     F .text	000007ac .hidden __muldf3
00018be0  w    O .rodata	00000014 _ZTVSt9exception
00014fac g     F .text	00000008 _ZN10__cxxabiv115__forced_unwindD0Ev
00018340 g     F .text	0000009c alt_find_file
00017e0c g     F .text	0000006c alt_dev_llist_insert
00017998 g     F .text	00000004 __malloc_lock
000179a0 g     F .text	0000004c sbrk
00015364 g     F .text	00000038 _ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
00018938  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
00013ac4 g     F .text	00000060 __cxa_throw
00016c58 g     F .text	00000010 .hidden _Unwind_SetIP
00018cd4  w    O .rodata	00000010 _ZTIPDf
00019596 g     O .rwdata	00000001 tilt_homing_done
00010500 g     F .text	0000000c _ZN21PositionControllerPan10IsFinishedEv
0001975c  w    O .rwdata	00000008 _ZTIi
00019de0 g     O .bss	0000006c pan_model
00018d64  w    O .rodata	00000010 _ZTIPKy
00018f14  w    O .rodata	00000010 _ZTIPDu
00019d84 g       *ABS*	00000000 __bss_start
00017124 g     F .text	00000020 memset
00011d6c g     F .text	00000170 main
000196b0  w    O .rwdata	00000002 _ZTSe
00019da3 g     O .bss	00000001 _ZN6Serial4UART10uart_readyE
00019dc8 g     O .bss	00000004 alt_envp
00019138  w    O .rodata	00000014 _ZTVSt10bad_typeid
00017a68 g     F .text	00000010 altera_avalon_jtag_uart_write_fd
0001971c  w    O .rwdata	00000008 _ZTIe
00014fc0 g     F .text	00000004 _ZGTtNKSt9exceptionD1Ev
00014fc8 g     F .text	0000000c __cxa_get_globals_fast
00014a58 g     F .text	00000034 _ZSt25__throw_bad_function_callv
000190f8  w    O .rodata	00000014 _ZTVSt8bad_cast
00012b5c g     F .text	00000004 _ZdaPv
0001b400 g       *ABS*	00000000 __alt_heap_limit
00019698  w    O .rwdata	00000002 _ZTSf
00015604 g     F .text	0000000c _ZNKSt10bad_typeid4whatEv
00016830 g     F .text	00000170 .hidden __truncdfsf2
00018ea4  w    O .rodata	00000010 _ZTIPKc
00012714 g     F .text	00000030 _ZN5Timer11timer_0_isrEPv
000188d0  w    O .rodata	00000017 _ZTSPFvRN6Serial7messageEE
0001723c g     F .text	00000150 _malloc_r
00014a08 g     F .text	0000000c _ZNKSt17bad_function_call4whatEv
00018da4  w    O .rodata	00000010 _ZTIPKm
00014f8c g     F .text	0000000c _ZNKSt13bad_exception4whatEv
000197f0 g     O .rwdata	00000004 alt_errno
00019570  w    O .rwdata	00000008 _ZTT22PositionControllerTilt
00017610 g     F .text	00000008 _init_signal
0001892c  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
000122b8 g     F .text	00000088 _ZN5Plant5Motor12setDutyCycleEh
00018ec4  w    O .rodata	00000010 _ZTIPKDi
000115dc g     F .text	00000108 _ZN22PositionControllerTiltD2Ev
00014f7c g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
000190b0  w    O .rodata	0000000c _ZTISt20bad_array_new_length
00016f18 g     F .text	00000080 .hidden __divsi3
00015354 g     F .text	00000010 _ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
00018d04  w    O .rodata	00000010 _ZTIPKe
00018788 g       *ABS*	00000000 __CTOR_END__
00011d08  w    F .text	00000064 _ZNSt14_Function_baseD1Ev
00019568  w    O .rwdata	00000008 _ZTT21PositionControllerPan
000109d0 g     F .text	00000108 _ZN21PositionControllerPanD2Ev
00019604  w    O .rwdata	00000003 _ZTSDi
00019d9e g     O .bss	00000001 _ZN6Serial4UART6rx_lenE
0001766c g     F .text	00000044 strcmp
00018e44  w    O .rodata	00000010 _ZTIPKs
00018eb4  w    O .rodata	00000010 _ZTIPc
00019714  w    O .rwdata	00000008 _ZTIDn
00018794 g       *ABS*	00000000 __flash_rodata_start
00018c08  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
0001267c g     F .text	00000048 _ZN6Serial4UART8sendDataENS_7messageE
00018788 g       *ABS*	00000000 __DTOR_LIST__
0001970c  w    O .rwdata	00000008 _ZTIDf
000155bc g     F .text	00000010 _ZNSt8bad_castD2Ev
000196b4  w    O .rwdata	00000003 _ZTSPe
000195d8  w    O .rwdata	00000002 _ZTSw
000179f0 g     F .text	00000020 alt_irq_init
00019618  w    O .rwdata	00000003 _ZTSPc
000181b4 g     F .text	0000002c alt_release_fd
00013d00 g     F .text	00000038 _ZN10__cxxabiv120__si_class_type_infoD0Ev
000150f8 g     F .text	0000025c _ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj
00018cc4  w    O .rodata	00000010 _ZTIPKDf
0001914c g     O .rodata	00000100 .hidden __clz_tab
000196f4  w    O .rwdata	00000005 _ZTSPKDe
00018430 g     F .text	00000014 atexit
000154a0 g     F .text	00000034 __cxa_bad_cast
00016c8c g     F .text	00000008 .hidden _Unwind_GetTextRelBase
00018ad0  w    O .rodata	0000002c _ZTVN10__cxxabiv121__vmi_class_type_infoE
00014d70 g     F .text	00000058 __cxa_call_terminate
00018850  w    O .rodata	00000019 _ZTS22PositionControllerTilt
00019744  w    O .rwdata	00000008 _ZTIm
000197d0 g     O .rwdata	00000004 _impure_ptr
000195ac  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
00018998  w    O .rodata	00000020 _ZTVN10__cxxabiv120__function_type_infoE
00019dd0 g     O .bss	00000004 alt_argc
00019e4c g     O .bss	0000006c tilt_model
00018c64  w    O .rodata	00000020 _ZTVN10__cxxabiv123__fundamental_type_infoE
00017ec0 g     F .text	00000048 _do_dtors
00019008  w    O .rodata	0000000c _ZTIN10__cxxabiv129__pointer_to_member_type_infoE
0001115c g     F .text	00000004 _ZN22PositionControllerTilt14CalculateInputEv
00018f04  w    O .rodata	00000010 _ZTIPKDu
0001054c g     F .text	00000024 _ZN21PositionControllerPan15CalculateOutputEv
000139ec g     F .text	0000000c _ZSt14get_unexpectedv
00010020 g       .exceptions	00000000 alt_irq_entry
000196ec  w    O .rwdata	00000003 _ZTSDe
00016c7c g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
00018e84  w    O .rodata	00000010 _ZTIPKa
000197e8 g     O .rwdata	00000008 alt_fs_list
00018bbc  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
00019ec8 g     O .bss	00000010 u_tilt
0001979c  w    O .rwdata	00000008 _ZTIDu
00018df4  w    O .rodata	00000010 _ZTIPj
00016c68 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
000196f0  w    O .rwdata	00000004 _ZTSPDe
00014dd0 g     F .text	000000b8 __cxa_begin_catch
00019634  w    O .rwdata	00000004 _ZTSPKh
00012944 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
00013974 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
00018f64  w    O .rodata	00000010 _ZTIPKv
000196b8  w    O .rwdata	00000004 _ZTSPKe
00014a24 g     F .text	00000034 _ZNSt17bad_function_callD0Ev
00010020 g       *ABS*	00000000 __ram_exceptions_start
00018b10  w    O .rodata	00000016 _ZTSSt17bad_function_call
000195c0  w    O .rwdata	00000002 _ZTSv
00014a14 g     F .text	00000010 _ZNSt17bad_function_callD1Ev
00010bc4 g     F .text	00000038 _ZTv0_n16_N21PositionControllerPanD0Ev
00014fa0 g     F .text	00000008 _ZNSt13bad_exceptionD0Ev
000195bc g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
00019644  w    O .rwdata	00000002 _ZTSt
00013c4c g     F .text	000000a4 _ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00018e34  w    O .rodata	00000010 _ZTIPt
00019560  w    O .rwdata	00000008 _ZTI13Submodel20sim
000176cc g     F .text	00000004 alt_ic_isr_register
00014c1c g     F .text	00000058 __cxa_allocate_exception
00018d24  w    O .rodata	00000010 _ZTIPKd
00018a34  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
00018e64  w    O .rodata	00000010 _ZTIPKh
0001553c g     F .text	00000014 _ZSt15set_new_handlerPFvvE
000197fc g       *ABS*	00000000 _edata
00017b84 g     F .text	00000010 altera_avalon_uart_read_fd
0001a058 g       *ABS*	00000000 _end
000197c8 g     O .rwdata	00000001 _ZSt7nothrow
00014188 g     F .text	0000061c _ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
00013084 g     F .text	00000698 __gxx_personality_sj0
00010180 g       *ABS*	00000000 __ram_exceptions_end
00019650  w    O .rwdata	00000002 _ZTSi
00010258 g     F .text	000000f8 _ZN21PositionControllerPan16CalculateDynamicEv
000101dc g     F .text	00000064 _ZN8Discrete4StepEv
0001968c  w    O .rwdata	00000002 _ZTSy
00014f78 g     F .text	00000004 _ZNSt9exceptionD1Ev
00011158 g     F .text	00000004 _ZN22PositionControllerTilt15CalculateStaticEv
00018f84  w    O .rodata	00000022 _ZTSN10__cxxabiv117__pbase_type_infoE
00010fa8 g     F .text	0000001c _ZN22PositionControllerTilt22CopyVariablesToOutputsEPf
00017708 g     F .text	00000038 alt_ic_irq_disable
00019668  w    O .rwdata	00000002 _ZTSl
00015028 g     F .text	00000070 _Znwj
000197b4  w    O .rwdata	00000008 _ZTIv
0001963c  w    O .rwdata	00000003 _ZTSPs
0001881c  w    O .rodata	00000034 _ZTV21PositionControllerPan
00018444 g     F .text	00000020 exit
00016c10 g     F .text	00000018 .hidden _Unwind_SetGR
00013e98 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
00013898 g     F .text	000000c8 _ZN10__cxxabiv111__terminateEPFvvE
00019d88 g     O .bss	00000001 pan_homing_done
00018964  w    O .rodata	00000025 _ZTSN10__cxxabiv120__function_type_infoE
00016f98 g     F .text	00000074 .hidden __modsi3
00015458 g     F .text	00000010 _ZNSt9bad_allocD1Ev
0001b400 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
00019d9d g     O .bss	00000001 uart
000196a4  w    O .rwdata	00000002 _ZTSd
0001974c  w    O .rwdata	00000008 _ZTIl
000196e0  w    O .rwdata	00000004 _ZTSPDd
00018b90  w    O .rodata	0000000c _ZTISt13bad_exception
00018c94  w    O .rodata	00000010 _ZTIPDe
000123ec g     F .text	00000084 _ZN5Plant5Motor19isAtInitialPositionEv
000126c4 g     F .text	00000038 _ZN6Serial4UART14convertToArrayENS_7messageE
000101bc g     F .text	00000004 _ZN8DiscreteD1Ev
000187dc  w    O .rodata	00000010 _ZTS13Submodel20sim
00015098  w    F .text	00000018 _ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj
00013bb0 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD2Ev
00018d94  w    O .rodata	00000010 _ZTIPx
000176b0 g     F .text	00000014 _exit
000187c0  w    O .rodata	0000001c _ZTV8Discrete
00016be0 g     F .text	00000018 .hidden _Unwind_GetGR
00014fd4 g     F .text	0000000c __cxa_get_globals
00019598 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
000184bc g     F .text	0000001c strlen
00010f64 g     F .text	00000018 _ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv
00010544 g     F .text	00000004 _ZN21PositionControllerPan15CalculateStaticEv
000173cc g     F .text	0000005c _init_signal_r
0001959c  w    O .rwdata	00000008 _ZTISt9type_info
00018058 g     F .text	0000015c open
00018d14  w    O .rodata	00000010 _ZTIPe
00014fc4 g     F .text	00000004 _ZGTtNKSt13bad_exceptionD1Ev
00018b6c  w    O .rodata	0000000d _ZTSSt9exception
00019db8 g     O .bss	00000004 __malloc_sbrk_start
00011154 g     F .text	00000004 _ZN22PositionControllerTilt16CalculateInitialEv
0001911c  w    O .rodata	0000000f _ZTSSt10bad_typeid
000196fc  w    O .rwdata	00000008 _ZTIDe
00019f00 g     O .bss	00000028 tilt_motor
000154d4 g     F .text	00000034 __cxa_bad_typeid
00014f98 g     F .text	00000008 _ZNSt9exceptionD0Ev
00017f08 g     F .text	00000004 alt_icache_flush_all
00010ad8 g     F .text	000000a8 _ZN21PositionControllerPanD1Ev
000105ac g     F .text	00000294 _ZN21PositionControllerPanC2Ev
0001050c g     F .text	00000034 _ZN21PositionControllerPan9TerminateEPfS0_
00019680  w    O .rwdata	00000002 _ZTSx
00015610 g     F .text	00000010 _ZNSt10bad_typeidD1Ev
00016c84 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
000197d4 g     O .rwdata	00000004 alt_priority_mask
00019dbc g     O .bss	00000004 __malloc_free_list
00011cc0  w    F .text	00000048 _ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
000176d0 g     F .text	00000038 alt_ic_irq_enable
0001976c  w    O .rwdata	00000008 _ZTIs
00017ba4 g     F .text	00000078 altera_avalon_uart_read
00018e94  w    O .rodata	00000010 _ZTIPa
000195e0  w    O .rwdata	00000004 _ZTSPKw
00010bfc g     F .text	00000144 _ZN21PositionControllerPan10InitializeEPfS0_f
00013bb0 g     F .text	00000010 _ZN10__cxxabiv120__function_type_infoD1Ev
00015610 g     F .text	00000010 _ZNSt10bad_typeidD2Ev
00018ef4  w    O .rodata	00000010 _ZTIPDs
00018ca4  w    O .rodata	00000010 _ZTIPKDd
000197f4 g     O .rwdata	00000008 alt_alarm_list
00018c30  w    O .rodata	00000028 _ZTSN10__cxxabiv123__fundamental_type_infoE
00017e78 g     F .text	00000048 _do_ctors
00017618 g     F .text	0000000c __sigtramp
000101d4 g     F .text	00000008 _ZN8DiscreteD0Ev
000189dc  w    O .rodata	0000000c _ZTIN10__cxxabiv119__pointer_type_infoE
00017d4c g     F .text	000000b4 close
00019630  w    O .rwdata	00000003 _ZTSPh
000188b8  w    O .rodata	00000016 _ZTSFvRN6Serial7messageEE
00010fc4 g     F .text	00000150 _ZN22PositionControllerTilt5ResetEf
00018b9c  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
000178b4 g     F .text	00000084 alt_load
00019558  w    O .rwdata	00000008 _ZTI17IntegrationMethod
00013fd4 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
00019640  w    O .rwdata	00000004 _ZTSPKs
0001539c g     F .text	00000098 _ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj
00010b98 g     F .text	0000002c _ZN21PositionControllerPanD0Ev
000175f4 g     F .text	0000000c raise
0001964c  w    O .rwdata	00000004 _ZTSPKt
00017118 g     F .text	0000000c free
00012954 g     F .text	00000038 _ZN10__cxxabiv117__class_type_infoD0Ev
00012518 g     F .text	00000164 _ZN6Serial4UARTC2ESt8functionIFvRNS_7messageEEE
000111b8 g     F .text	00000294 _ZN22PositionControllerTiltC2Ev
00010574 g     F .text	00000038 _ZN21PositionControllerPan13SetFinishTimeEf
00012744 g     F .text	0000011c _ZN5TimerC1ESt8functionIFvvEE



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
   10108:	0009313a 	rdctl	r4,ipending
   1010c:	040000b4 	movhi	r16,2
   10110:	8427d604 	addi	r16,r16,-24744
   10114:	0005883a 	mov	r2,zero
   10118:	00c00044 	movi	r3,1
   1011c:	20ca703a 	and	r5,r4,r3
   10120:	28000b26 	beq	r5,zero,10150 <alt_irq_handler+0x54>
   10124:	100490fa 	slli	r2,r2,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0009313a 	rdctl	r4,ipending
   1013c:	203ff51e 	bne	r4,zero,10114 <alt_irq_handler+0x18>
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
   10150:	1806907a 	slli	r3,r3,1
   10154:	10800044 	addi	r2,r2,1
   10158:	003ff006 	br	1011c <alt_irq_handler+0x20>

0001015c <alt_instruction_exception_entry>:
   1015c:	d0a21f17 	ldw	r2,-30596(gp)
   10160:	200b883a 	mov	r5,r4
   10164:	10000326 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   10174:	003da03a 	break	0
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	deed0014 	ori	sp,sp,46080
    movhi gp, %hi(_gp)
   10188:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1018c:	d6855614 	ori	gp,gp,5464
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10a76114 	ori	r2,r2,40324

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18e81614 	ori	r3,r3,41048

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	00178b40 	call	178b4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	00179380 	call	17938 <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <alt_after_alt_main>

000101bc <_ZN8DiscreteD1Ev>:
	model = NULL;
}

Discrete::~Discrete(void)
{
}
   101bc:	f800283a 	ret

000101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>:
/*
 * the initialization of the Discrete integration method
 */
void Discrete::Initialize (Submodel20sim* themodel)
{
	model = themodel;
   101c0:	21400115 	stw	r5,4(r4)
	model->m_major = true;
   101c4:	00800044 	movi	r2,1
   101c8:	28800145 	stb	r2,5(r5)
}
   101cc:	f800283a 	ret

000101d0 <_ZN8Discrete9TerminateEv>:

/* the termination of the Discrete integration method */
void Discrete::Terminate ()
{
	/* nothing to be done */
}
   101d0:	f800283a 	ret

000101d4 <_ZN8DiscreteD0Ev>:
}
   101d4:	01400204 	movi	r5,8
   101d8:	0012b581 	jmpi	12b58 <_ZdlPvj>

000101dc <_ZN8Discrete4StepEv>:
void Discrete::Step ()
{
	XXInteger index;

	/* for each of the supplied states */
	for (index = 0; index < model->m_number_states; index++)
   101dc:	21000117 	ldw	r4,4(r4)
   101e0:	21800a17 	ldw	r6,40(r4)
   101e4:	0180090e 	bge	zero,r6,1020c <_ZN8Discrete4StepEv+0x30>
   101e8:	20801317 	ldw	r2,76(r4)
   101ec:	300c90ba 	slli	r6,r6,2
   101f0:	20c01217 	ldw	r3,72(r4)
   101f4:	308d883a 	add	r6,r6,r2
	{
		/* just a move of the new state */
		model->m_s [index] = model->m_R [index];
   101f8:	11400017 	ldw	r5,0(r2)
	for (index = 0; index < model->m_number_states; index++)
   101fc:	10800104 	addi	r2,r2,4
   10200:	18c00104 	addi	r3,r3,4
		model->m_s [index] = model->m_R [index];
   10204:	197fff15 	stw	r5,-4(r3)
	for (index = 0; index < model->m_number_states; index++)
   10208:	11bffb1e 	bne	r2,r6,101f8 <_ZN8Discrete4StepEv+0x1c>
	}

	/* increment the simulation time */
	model->m_time += model->m_step_size;
   1020c:	20c00517 	ldw	r3,20(r4)
   10210:	20800217 	ldw	r2,8(r4)
	model->m_major = true;

	/* evaluate the dynamic part to calculate the new rates */
	model->CalculateDynamic ();
   10214:	21400017 	ldw	r5,0(r4)
	model->m_time += model->m_step_size;
   10218:	1887ff72 	custom	253,r3,r3,r2
	model->CalculateDynamic ();
   1021c:	2a400017 	ldw	r9,0(r5)
   10220:	00800074 	movhi	r2,1
	model->m_time += model->m_step_size;
   10224:	20c00515 	stw	r3,20(r4)
	model->m_major = true;
   10228:	00c00044 	movi	r3,1
   1022c:	20c00145 	stb	r3,5(r4)
	model->CalculateDynamic ();
   10230:	10809504 	addi	r2,r2,596
   10234:	4880011e 	bne	r9,r2,1023c <_ZN8Discrete4StepEv+0x60>
}
   10238:	f800283a 	ret
	model->CalculateDynamic ();
   1023c:	4800683a 	jmp	r9

00010240 <_ZN8DiscreteC1Ev>:
Discrete::Discrete(void)
   10240:	008000b4 	movhi	r2,2
   10244:	10a1f204 	addi	r2,r2,-30776
   10248:	20800015 	stw	r2,0(r4)
	model = NULL;
   1024c:	20000115 	stw	zero,4(r4)
}
   10250:	f800283a 	ret

00010254 <_ZN13Submodel20sim16CalculateDynamicEv>:
		friend class IntegrationMethod;
		friend class Discrete;
		friend class Euler;
		friend class RungeKutta2;
		friend class RungeKutta4;
		virtual void CalculateDynamic (void) {};
   10254:	f800283a 	ret

00010258 <_ZN21PositionControllerPan16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerPan::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10258:	20c00017 	ldw	r3,0(r4)
   1025c:	008fe034 	movhi	r2,16256
   10260:	18fffd17 	ldw	r3,-12(r3)
   10264:	20c9883a 	add	r4,r4,r3
   10268:	21400f17 	ldw	r5,60(r4)
   1026c:	20c01117 	ldw	r3,68(r4)
   10270:	22400217 	ldw	r9,8(r4)
   10274:	2a800317 	ldw	r10,12(r5)
   10278:	2a000217 	ldw	r8,8(r5)

	/* PlusMinus1\plus1 = in; */
	m_V[3] = m_V[7];

	/* Splitter1\input = position; */
	m_V[5] = m_V[8];
   1027c:	19c00817 	ldw	r7,32(r3)
	m_V[3] = m_V[7];
   10280:	19800717 	ldw	r6,28(r3)
	m_V[2] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10284:	4291ff32 	custom	252,r8,r8,r10
   10288:	4251ff72 	custom	253,r8,r8,r9
   1028c:	1211fff2 	custom	255,r8,r2,r8
   10290:	1a000215 	stw	r8,8(r3)
	m_V[5] = m_V[8];
   10294:	19c00515 	stw	r7,20(r3)
	m_V[3] = m_V[7];
   10298:	19800315 	stw	r6,12(r3)

	/* corrGain\corr = corrGain\K * Splitter1\input; */
	m_V[0] = m_P[0] * m_V[5];
   1029c:	28800017 	ldw	r2,0(r5)

	/* PID1\error = PlusMinus1\plus1 - Splitter1\input; */
	m_R[1] = m_V[3] - m_V[5];
   102a0:	22801317 	ldw	r10,76(r4)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   102a4:	22c01217 	ldw	r11,72(r4)
	m_V[0] = m_P[0] * m_V[5];
   102a8:	11c5ff32 	custom	252,r2,r2,r7
   102ac:	18800015 	stw	r2,0(r3)
	m_R[1] = m_V[3] - m_V[5];
   102b0:	31cfffb2 	custom	254,r7,r6,r7
   102b4:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[2] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   102b8:	2a400217 	ldw	r9,8(r5)
   102bc:	29800117 	ldw	r6,4(r5)
   102c0:	58800017 	ldw	r2,0(r11)
   102c4:	5a000117 	ldw	r8,4(r11)
   102c8:	23400217 	ldw	r13,8(r4)
   102cc:	2b800317 	ldw	r14,12(r5)
   102d0:	4885ff32 	custom	252,r2,r9,r2
   102d4:	3a11ffb2 	custom	254,r8,r7,r8
   102d8:	4993ff32 	custom	252,r9,r9,r6
   102dc:	1b000217 	ldw	r12,8(r3)
   102e0:	1385ff32 	custom	252,r2,r2,r14
   102e4:	4251ff32 	custom	252,r8,r8,r9
   102e8:	334dff32 	custom	252,r6,r6,r13
   102ec:	31cdff32 	custom	252,r6,r6,r7
   102f0:	1205ff72 	custom	253,r2,r2,r8
   102f4:	1185ff72 	custom	253,r2,r2,r6
   102f8:	1305ff32 	custom	252,r2,r2,r12
   102fc:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10300:	21000217 	ldw	r4,8(r4)
   10304:	29c00417 	ldw	r7,16(r5)
   10308:	59800217 	ldw	r6,8(r11)
   1030c:	1109ff32 	custom	252,r4,r2,r4
   10310:	21c9fff2 	custom	255,r4,r4,r7
   10314:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[1] = m_R[2] + m_R[0];
   10318:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   1031c:	51000215 	stw	r4,8(r10)
	m_V[1] = m_R[2] + m_R[0];
   10320:	18800115 	stw	r2,4(r3)

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10324:	29000517 	ldw	r4,20(r5)
   10328:	110df9f2 	custom	231,r6,r2,r4
   1032c:	3000031e 	bne	r6,zero,1033c <_ZN21PositionControllerPan16CalculateDynamicEv+0xe4>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) */
		((m_V[1] > m_P[6]) ? 
   10330:	29000617 	ldw	r4,24(r5)
   10334:	110bf972 	custom	229,r5,r2,r4
   10338:	28000226 	beq	r5,zero,10344 <_ZN21PositionControllerPan16CalculateDynamicEv+0xec>
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   1033c:	19000415 	stw	r4,16(r3)
			/* PID1\output */
			m_V[1]
		)
	);

}
   10340:	f800283a 	ret
		((m_V[1] > m_P[6]) ? 
   10344:	1009883a 	mov	r4,r2
	m_V[4] = ((m_V[1] < m_P[5]) ? 
   10348:	19000415 	stw	r4,16(r3)
}
   1034c:	f800283a 	ret

00010350 <_ZTv0_n12_N21PositionControllerPan16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10350:	2009883a 	mov	r4,r4
   10354:	20800017 	ldw	r2,0(r4)
   10358:	10bffd04 	addi	r2,r2,-12
   1035c:	10800017 	ldw	r2,0(r2)
   10360:	2089883a 	add	r4,r4,r2
   10364:	00102581 	jmpi	10258 <_ZN21PositionControllerPan16CalculateDynamicEv>

00010368 <_ZN21PositionControllerPan21CopyInputsToVariablesEPf>:
	m_V[7] = u[0];		/* in */
   10368:	20800017 	ldw	r2,0(r4)
   1036c:	28c00017 	ldw	r3,0(r5)
   10370:	10bffd17 	ldw	r2,-12(r2)
   10374:	2089883a 	add	r4,r4,r2
   10378:	20801117 	ldw	r2,68(r4)
   1037c:	10c00715 	stw	r3,28(r2)
	m_V[8] = u[1];		/* position */
   10380:	28c00117 	ldw	r3,4(r5)
   10384:	10c00815 	stw	r3,32(r2)
}
   10388:	f800283a 	ret

0001038c <_ZN21PositionControllerPan22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[6];		/* corr */
   1038c:	20800017 	ldw	r2,0(r4)
   10390:	10bffd17 	ldw	r2,-12(r2)
   10394:	2089883a 	add	r4,r4,r2
   10398:	20801117 	ldw	r2,68(r4)
   1039c:	10c00617 	ldw	r3,24(r2)
   103a0:	28c00015 	stw	r3,0(r5)
	y[1] = 	m_V[9];		/* out */
   103a4:	10800917 	ldw	r2,36(r2)
   103a8:	28800115 	stw	r2,4(r5)
}
   103ac:	f800283a 	ret

000103b0 <_ZN21PositionControllerPan5ResetEf>:
	m_start_time = starttime;
   103b0:	20800017 	ldw	r2,0(r4)
{
   103b4:	defffe04 	addi	sp,sp,-8
   103b8:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   103bc:	10bffd17 	ldw	r2,-12(r2)
{
   103c0:	2021883a 	mov	r16,r4
	m_step_size = 0.0001;
   103c4:	010e34b4 	movhi	r4,14546
	m_start_time = starttime;
   103c8:	8085883a 	add	r2,r16,r2
{
   103cc:	dfc00115 	stw	ra,4(sp)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103d0:	10c00e17 	ldw	r3,56(r2)
	m_step_size = 0.0001;
   103d4:	212dc5c4 	addi	r4,r4,-18665
   103d8:	11000215 	stw	r4,8(r2)
	m_major = true;
   103dc:	01000044 	movi	r4,1
	m_start_time = starttime;
   103e0:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   103e4:	11400515 	stw	r5,20(r2)
	m_major = true;
   103e8:	11000145 	stb	r4,5(r2)
	m_stop_run = false;
   103ec:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   103f0:	18000005 	stb	zero,0(r3)
   103f4:	18000045 	stb	zero,1(r3)
   103f8:	18000085 	stb	zero,2(r3)
   103fc:	180000c5 	stb	zero,3(r3)
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   10400:	80800017 	ldw	r2,0(r16)
   10404:	01800804 	movi	r6,32
   10408:	000b883a 	mov	r5,zero
   1040c:	10bffd17 	ldw	r2,-12(r2)
   10410:	8085883a 	add	r2,r16,r2
   10414:	11000f17 	ldw	r4,60(r2)
   10418:	00171240 	call	17124 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   1041c:	80800017 	ldw	r2,0(r16)
   10420:	01800404 	movi	r6,16
   10424:	000b883a 	mov	r5,zero
   10428:	10bffd17 	ldw	r2,-12(r2)
   1042c:	8085883a 	add	r2,r16,r2
   10430:	11001017 	ldw	r4,64(r2)
   10434:	00171240 	call	17124 <memset>
	memset(m_V, 0, (10 + 1) * sizeof(XXDouble));
   10438:	80800017 	ldw	r2,0(r16)
   1043c:	01800b04 	movi	r6,44
   10440:	000b883a 	mov	r5,zero
   10444:	10bffd17 	ldw	r2,-12(r2)
   10448:	8085883a 	add	r2,r16,r2
   1044c:	11001117 	ldw	r4,68(r2)
   10450:	00171240 	call	17124 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   10454:	80800017 	ldw	r2,0(r16)
   10458:	01800404 	movi	r6,16
   1045c:	000b883a 	mov	r5,zero
   10460:	10bffd17 	ldw	r2,-12(r2)
   10464:	8085883a 	add	r2,r16,r2
   10468:	11001217 	ldw	r4,72(r2)
   1046c:	00171240 	call	17124 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   10470:	80800017 	ldw	r2,0(r16)
   10474:	01800404 	movi	r6,16
   10478:	000b883a 	mov	r5,zero
   1047c:	10bffd17 	ldw	r2,-12(r2)
   10480:	8085883a 	add	r2,r16,r2
   10484:	11001317 	ldw	r4,76(r2)
   10488:	00171240 	call	17124 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   1048c:	80800017 	ldw	r2,0(r16)
   10490:	10bffd17 	ldw	r2,-12(r2)
   10494:	8085883a 	add	r2,r16,r2
   10498:	10801417 	ldw	r2,80(r2)
   1049c:	10000005 	stb	zero,0(r2)
   104a0:	10000045 	stb	zero,1(r2)
   104a4:	10000085 	stb	zero,2(r2)
   104a8:	100000c5 	stb	zero,3(r2)
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   104ac:	80800017 	ldw	r2,0(r16)
   104b0:	10bffd17 	ldw	r2,-12(r2)
   104b4:	8085883a 	add	r2,r16,r2
   104b8:	10801517 	ldw	r2,84(r2)
   104bc:	10000005 	stb	zero,0(r2)
   104c0:	10000045 	stb	zero,1(r2)
   104c4:	10000085 	stb	zero,2(r2)
   104c8:	100000c5 	stb	zero,3(r2)
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   104cc:	80800017 	ldw	r2,0(r16)
   104d0:	10bffd17 	ldw	r2,-12(r2)
   104d4:	8085883a 	add	r2,r16,r2
   104d8:	10801617 	ldw	r2,88(r2)
   104dc:	10000005 	stb	zero,0(r2)
   104e0:	10000045 	stb	zero,1(r2)
   104e4:	10000085 	stb	zero,2(r2)
   104e8:	100000c5 	stb	zero,3(r2)
	state = initialrun;
   104ec:	80000115 	stw	zero,4(r16)
}
   104f0:	dfc00117 	ldw	ra,4(sp)
   104f4:	dc000017 	ldw	r16,0(sp)
   104f8:	dec00204 	addi	sp,sp,8
   104fc:	f800283a 	ret

00010500 <_ZN21PositionControllerPan10IsFinishedEv>:
	return (state == finished);
   10500:	20800117 	ldw	r2,4(r4)
   10504:	108000a0 	cmpeqi	r2,r2,2
}
   10508:	f800283a 	ret

0001050c <_ZN21PositionControllerPan9TerminateEPfS0_>:
	m_V[7] = u[0];		/* in */
   1050c:	20800017 	ldw	r2,0(r4)
   10510:	28c00017 	ldw	r3,0(r5)
   10514:	10bffd17 	ldw	r2,-12(r2)
   10518:	2089883a 	add	r4,r4,r2
   1051c:	20801117 	ldw	r2,68(r4)
   10520:	10c00715 	stw	r3,28(r2)
	m_V[8] = u[1];		/* position */
   10524:	29000117 	ldw	r4,4(r5)
	y[0] = 	m_V[6];		/* corr */
   10528:	10c00617 	ldw	r3,24(r2)
	m_V[8] = u[1];		/* position */
   1052c:	11000815 	stw	r4,32(r2)
	y[0] = 	m_V[6];		/* corr */
   10530:	30c00015 	stw	r3,0(r6)
	y[1] = 	m_V[9];		/* out */
   10534:	10800917 	ldw	r2,36(r2)
   10538:	30800115 	stw	r2,4(r6)
}
   1053c:	f800283a 	ret

00010540 <_ZN21PositionControllerPan16CalculateInitialEv>:
}
   10540:	f800283a 	ret

00010544 <_ZN21PositionControllerPan15CalculateStaticEv>:
   10544:	f800283a 	ret

00010548 <_ZN21PositionControllerPan14CalculateInputEv>:
   10548:	f800283a 	ret

0001054c <_ZN21PositionControllerPan15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerPan::CalculateOutput (void)
{
	/* corr = corrGain\corr; */
	m_V[6] = m_V[0];
   1054c:	20800017 	ldw	r2,0(r4)
   10550:	10bffd17 	ldw	r2,-12(r2)
   10554:	2089883a 	add	r4,r4,r2
   10558:	20801117 	ldw	r2,68(r4)
   1055c:	11000017 	ldw	r4,0(r2)

	/* out = SignalLimiter2\output; */
	m_V[9] = m_V[4];
   10560:	10c00417 	ldw	r3,16(r2)
	m_V[6] = m_V[0];
   10564:	11000615 	stw	r4,24(r2)
	m_V[9] = m_V[4];
   10568:	10c00915 	stw	r3,36(r2)

}
   1056c:	f800283a 	ret

00010570 <_ZN21PositionControllerPan14CalculateFinalEv>:
   10570:	f800283a 	ret

00010574 <_ZN21PositionControllerPan13SetFinishTimeEf>:



bool PositionControllerPan::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   10574:	20c00017 	ldw	r3,0(r4)
   10578:	0005883a 	mov	r2,zero
   1057c:	2885f9b2 	custom	230,r2,r5,r2
   10580:	18fffd17 	ldw	r3,-12(r3)
   10584:	20c9883a 	add	r4,r4,r3
   10588:	1000051e 	bne	r2,zero,105a0 <_ZN21PositionControllerPan13SetFinishTimeEf+0x2c>
   1058c:	20800517 	ldw	r2,20(r4)
   10590:	1145f9f2 	custom	231,r2,r2,r5
   10594:	1000021e 	bne	r2,zero,105a0 <_ZN21PositionControllerPan13SetFinishTimeEf+0x2c>
	{
		m_finish_time = newtime;
		return true;
	}

	return false;
   10598:	0005883a 	mov	r2,zero
}
   1059c:	f800283a 	ret
		m_finish_time = newtime;
   105a0:	21400415 	stw	r5,16(r4)
		return true;
   105a4:	00800044 	movi	r2,1
   105a8:	f800283a 	ret

000105ac <_ZN21PositionControllerPanC2Ev>:
PositionControllerPan::PositionControllerPan(void)
   105ac:	deffee04 	addi	sp,sp,-72
   105b0:	01800074 	movhi	r6,1
   105b4:	00c000b4 	movhi	r3,2
   105b8:	00800074 	movhi	r2,1
   105bc:	318c2104 	addi	r6,r6,12420
   105c0:	18e1c404 	addi	r3,r3,-30960
   105c4:	10820804 	addi	r2,r2,2080
   105c8:	d9400115 	stw	r5,4(sp)
   105cc:	200b883a 	mov	r5,r4
   105d0:	d9000304 	addi	r4,sp,12
   105d4:	d9800915 	stw	r6,36(sp)
   105d8:	dfc01115 	stw	ra,68(sp)
   105dc:	d9400015 	stw	r5,0(sp)
   105e0:	d8c00a15 	stw	r3,40(sp)
   105e4:	d8800c15 	stw	r2,48(sp)
   105e8:	df001015 	stw	fp,64(sp)
   105ec:	df000b15 	stw	fp,44(sp)
   105f0:	dec00d15 	stw	sp,52(sp)
   105f4:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   105f8:	d8800117 	ldw	r2,4(sp)
   105fc:	d9c00017 	ldw	r7,0(sp)
   10600:	10c00017 	ldw	r3,0(r2)
   10604:	11400117 	ldw	r5,4(r2)
   10608:	39000204 	addi	r4,r7,8
   1060c:	18bffd17 	ldw	r2,-12(r3)
   10610:	38c00015 	stw	r3,0(r7)
   10614:	d9000215 	stw	r4,8(sp)
   10618:	3885883a 	add	r2,r7,r2
   1061c:	11400015 	stw	r5,0(r2)
   10620:	00bfffc4 	movi	r2,-1
   10624:	d8800415 	stw	r2,16(sp)
   10628:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   1062c:	d9c00017 	ldw	r7,0(sp)
	m_number_parameters = 7;
   10630:	018001c4 	movi	r6,7
	m_number_initialvalues = 3;
   10634:	014000c4 	movi	r5,3
	m_number_constants = 0;
   10638:	38800017 	ldw	r2,0(r7)
	m_C = new XXDouble[0 + 1];		/* constants */
   1063c:	01000104 	movi	r4,4
	m_number_constants = 0;
   10640:	10fffd17 	ldw	r3,-12(r2)
   10644:	38c7883a 	add	r3,r7,r3
   10648:	18000615 	stw	zero,24(r3)
	m_number_parameters = 7;
   1064c:	10fffd17 	ldw	r3,-12(r2)
   10650:	38c7883a 	add	r3,r7,r3
   10654:	19800715 	stw	r6,28(r3)
	m_number_initialvalues = 3;
   10658:	10fffd17 	ldw	r3,-12(r2)
	m_number_variables = 10;
   1065c:	01800284 	movi	r6,10
	m_number_initialvalues = 3;
   10660:	38c7883a 	add	r3,r7,r3
   10664:	19400815 	stw	r5,32(r3)
	m_number_variables = 10;
   10668:	10fffd17 	ldw	r3,-12(r2)
   1066c:	38c7883a 	add	r3,r7,r3
   10670:	19800915 	stw	r6,36(r3)
	m_number_states = 3;
   10674:	10fffd17 	ldw	r3,-12(r2)
   10678:	38c7883a 	add	r3,r7,r3
   1067c:	19400a15 	stw	r5,40(r3)
	m_number_rates = 3;
   10680:	10fffd17 	ldw	r3,-12(r2)
   10684:	38c7883a 	add	r3,r7,r3
   10688:	19400b15 	stw	r5,44(r3)
	m_number_matrices = 0;
   1068c:	10fffd17 	ldw	r3,-12(r2)
   10690:	38c7883a 	add	r3,r7,r3
   10694:	18000c15 	stw	zero,48(r3)
	m_number_unnamed = 0;
   10698:	10fffd17 	ldw	r3,-12(r2)
   1069c:	38c7883a 	add	r3,r7,r3
   106a0:	18000d15 	stw	zero,52(r3)
	m_C = new XXDouble[0 + 1];		/* constants */
   106a4:	10bffd17 	ldw	r2,-12(r2)
   106a8:	00c00044 	movi	r3,1
   106ac:	d8c00415 	stw	r3,16(sp)
   106b0:	3885883a 	add	r2,r7,r2
   106b4:	d8800115 	stw	r2,4(sp)
   106b8:	0013bf80 	call	13bf8 <_Znaj>
	m_P = new XXDouble[7 + 1];		/* parameters */
   106bc:	d9400017 	ldw	r5,0(sp)
	m_C = new XXDouble[0 + 1];		/* constants */
   106c0:	d9000117 	ldw	r4,4(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106c4:	28c00017 	ldw	r3,0(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   106c8:	20800e15 	stw	r2,56(r4)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106cc:	01000804 	movi	r4,32
   106d0:	18bffd17 	ldw	r2,-12(r3)
   106d4:	2885883a 	add	r2,r5,r2
   106d8:	d8800115 	stw	r2,4(sp)
   106dc:	0013bf80 	call	13bf8 <_Znaj>
	m_I = new XXDouble[3 + 1];		/* initial values */
   106e0:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106e4:	d9000117 	ldw	r4,4(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   106e8:	28c00017 	ldw	r3,0(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   106ec:	20800f15 	stw	r2,60(r4)
	m_I = new XXDouble[3 + 1];		/* initial values */
   106f0:	01000404 	movi	r4,16
   106f4:	18bffd17 	ldw	r2,-12(r3)
   106f8:	2885883a 	add	r2,r5,r2
   106fc:	d8800115 	stw	r2,4(sp)
   10700:	0013bf80 	call	13bf8 <_Znaj>
	m_V = new XXDouble[10 + 1];		/* variables */
   10704:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10708:	d9000117 	ldw	r4,4(sp)
	m_V = new XXDouble[10 + 1];		/* variables */
   1070c:	28c00017 	ldw	r3,0(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10710:	20801015 	stw	r2,64(r4)
	m_V = new XXDouble[10 + 1];		/* variables */
   10714:	01000b04 	movi	r4,44
   10718:	18bffd17 	ldw	r2,-12(r3)
   1071c:	2885883a 	add	r2,r5,r2
   10720:	d8800115 	stw	r2,4(sp)
   10724:	0013bf80 	call	13bf8 <_Znaj>
	m_s = new XXDouble[3 + 1];		/* states */
   10728:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[10 + 1];		/* variables */
   1072c:	d9000117 	ldw	r4,4(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   10730:	28c00017 	ldw	r3,0(r5)
	m_V = new XXDouble[10 + 1];		/* variables */
   10734:	20801115 	stw	r2,68(r4)
	m_s = new XXDouble[3 + 1];		/* states */
   10738:	01000404 	movi	r4,16
   1073c:	18bffd17 	ldw	r2,-12(r3)
   10740:	2885883a 	add	r2,r5,r2
   10744:	d8800115 	stw	r2,4(sp)
   10748:	0013bf80 	call	13bf8 <_Znaj>
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1074c:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   10750:	d9000117 	ldw	r4,4(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10754:	28c00017 	ldw	r3,0(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   10758:	20801215 	stw	r2,72(r4)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1075c:	01000404 	movi	r4,16
   10760:	18bffd17 	ldw	r2,-12(r3)
   10764:	2885883a 	add	r2,r5,r2
   10768:	d8800115 	stw	r2,4(sp)
   1076c:	0013bf80 	call	13bf8 <_Znaj>
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10770:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10774:	d9000117 	ldw	r4,4(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10778:	28c00017 	ldw	r3,0(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1077c:	20801315 	stw	r2,76(r4)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10780:	01000304 	movi	r4,12
   10784:	18bffd17 	ldw	r2,-12(r3)
   10788:	2885883a 	add	r2,r5,r2
   1078c:	d8800115 	stw	r2,4(sp)
   10790:	0013bf80 	call	13bf8 <_Znaj>
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10794:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10798:	d9000117 	ldw	r4,4(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   1079c:	28c00017 	ldw	r3,0(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   107a0:	20801415 	stw	r2,80(r4)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   107a4:	01000104 	movi	r4,4
   107a8:	18bffd17 	ldw	r2,-12(r3)
   107ac:	2885883a 	add	r2,r5,r2
   107b0:	d8800115 	stw	r2,4(sp)
   107b4:	0013bf80 	call	13bf8 <_Znaj>
	m_workarray = new XXDouble[0 + 1];
   107b8:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   107bc:	d9000117 	ldw	r4,4(sp)
	m_workarray = new XXDouble[0 + 1];
   107c0:	28c00017 	ldw	r3,0(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   107c4:	20801515 	stw	r2,84(r4)
	m_workarray = new XXDouble[0 + 1];
   107c8:	01000104 	movi	r4,4
   107cc:	18bffd17 	ldw	r2,-12(r3)
   107d0:	2885883a 	add	r2,r5,r2
   107d4:	d8800115 	stw	r2,4(sp)
   107d8:	0013bf80 	call	13bf8 <_Znaj>
   107dc:	d8c00117 	ldw	r3,4(sp)
	Reset(0.0);
   107e0:	d9000017 	ldw	r4,0(sp)
   107e4:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   107e8:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   107ec:	00103b00 	call	103b0 <_ZN21PositionControllerPan5ResetEf>
	m_finish_time = 20.0;
   107f0:	d9400017 	ldw	r5,0(sp)
   107f4:	00d06834 	movhi	r3,16800
   107f8:	d9000304 	addi	r4,sp,12
   107fc:	28800017 	ldw	r2,0(r5)
   10800:	10bffd17 	ldw	r2,-12(r2)
   10804:	2885883a 	add	r2,r5,r2
   10808:	10c00415 	stw	r3,16(r2)
   1080c:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
}
   10810:	dfc01117 	ldw	ra,68(sp)
   10814:	df001017 	ldw	fp,64(sp)
   10818:	dec01204 	addi	sp,sp,72
   1081c:	f800283a 	ret
PositionControllerPan::PositionControllerPan(void)
   10820:	d8800517 	ldw	r2,20(sp)
   10824:	d9000217 	ldw	r4,8(sp)
   10828:	d8800015 	stw	r2,0(sp)
   1082c:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   10830:	d9000017 	ldw	r4,0(sp)
   10834:	00bfffc4 	movi	r2,-1
   10838:	d8800415 	stw	r2,16(sp)
   1083c:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

00010840 <_ZN21PositionControllerPanC1Ev>:
   10840:	deffef04 	addi	sp,sp,-68
   10844:	01400074 	movhi	r5,1
   10848:	00c000b4 	movhi	r3,2
   1084c:	00800074 	movhi	r2,1
   10850:	200d883a 	mov	r6,r4
   10854:	294c2104 	addi	r5,r5,12420
   10858:	18e1c584 	addi	r3,r3,-30954
   1085c:	10826c04 	addi	r2,r2,2480
   10860:	d9000204 	addi	r4,sp,8
   10864:	dfc01015 	stw	ra,64(sp)
   10868:	d9800015 	stw	r6,0(sp)
   1086c:	d9400815 	stw	r5,32(sp)
   10870:	d8c00915 	stw	r3,36(sp)
   10874:	d8800b15 	stw	r2,44(sp)
   10878:	df000f15 	stw	fp,60(sp)
   1087c:	df000a15 	stw	fp,40(sp)
   10880:	dec00c15 	stw	sp,48(sp)
   10884:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   10888:	d9400017 	ldw	r5,0(sp)
   1088c:	00c000b4 	movhi	r3,2
   10890:	008000b4 	movhi	r2,2
   10894:	18e20a04 	addi	r3,r3,-30680
   10898:	10a21104 	addi	r2,r2,-30652
   1089c:	29000204 	addi	r4,r5,8
   108a0:	28c00015 	stw	r3,0(r5)
   108a4:	28800415 	stw	r2,16(r5)
   108a8:	00bfffc4 	movi	r2,-1
   108ac:	d9000115 	stw	r4,4(sp)
   108b0:	d8800315 	stw	r2,12(sp)
   108b4:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   108b8:	d9400017 	ldw	r5,0(sp)
	m_number_parameters = 7;
   108bc:	00c001c4 	movi	r3,7
	m_number_initialvalues = 3;
   108c0:	008000c4 	movi	r2,3
	m_number_parameters = 7;
   108c4:	28c00b15 	stw	r3,44(r5)
	m_number_variables = 10;
   108c8:	00c00284 	movi	r3,10
	m_number_initialvalues = 3;
   108cc:	28800c15 	stw	r2,48(r5)
	m_number_states = 3;
   108d0:	28800e15 	stw	r2,56(r5)
	m_number_rates = 3;
   108d4:	28800f15 	stw	r2,60(r5)
	m_number_constants = 0;
   108d8:	28000a15 	stw	zero,40(r5)
	m_number_variables = 10;
   108dc:	28c00d15 	stw	r3,52(r5)
	m_number_matrices = 0;
   108e0:	28001015 	stw	zero,64(r5)
	m_number_unnamed = 0;
   108e4:	28001115 	stw	zero,68(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   108e8:	00800044 	movi	r2,1
   108ec:	01000104 	movi	r4,4
   108f0:	d8800315 	stw	r2,12(sp)
   108f4:	0013bf80 	call	13bf8 <_Znaj>
   108f8:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   108fc:	01000804 	movi	r4,32
	m_C = new XXDouble[0 + 1];		/* constants */
   10900:	28801215 	stw	r2,72(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   10904:	0013bf80 	call	13bf8 <_Znaj>
   10908:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   1090c:	01000404 	movi	r4,16
	m_P = new XXDouble[7 + 1];		/* parameters */
   10910:	28801315 	stw	r2,76(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   10914:	0013bf80 	call	13bf8 <_Znaj>
   10918:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[10 + 1];		/* variables */
   1091c:	01000b04 	movi	r4,44
	m_I = new XXDouble[3 + 1];		/* initial values */
   10920:	28801415 	stw	r2,80(r5)
	m_V = new XXDouble[10 + 1];		/* variables */
   10924:	0013bf80 	call	13bf8 <_Znaj>
   10928:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   1092c:	01000404 	movi	r4,16
	m_V = new XXDouble[10 + 1];		/* variables */
   10930:	28801515 	stw	r2,84(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   10934:	0013bf80 	call	13bf8 <_Znaj>
   10938:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1093c:	01000404 	movi	r4,16
	m_s = new XXDouble[3 + 1];		/* states */
   10940:	28801615 	stw	r2,88(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10944:	0013bf80 	call	13bf8 <_Znaj>
   10948:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1094c:	01000304 	movi	r4,12
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   10950:	28801715 	stw	r2,92(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10954:	0013bf80 	call	13bf8 <_Znaj>
   10958:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   1095c:	01000104 	movi	r4,4
	m_M = new XXMatrix[0 + 1];		/* matrices */
   10960:	28801815 	stw	r2,96(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10964:	0013bf80 	call	13bf8 <_Znaj>
   10968:	d9400017 	ldw	r5,0(sp)
	m_workarray = new XXDouble[0 + 1];
   1096c:	01000104 	movi	r4,4
	m_U = new XXDouble[0 + 1];		/* unnamed */
   10970:	28801915 	stw	r2,100(r5)
	m_workarray = new XXDouble[0 + 1];
   10974:	0013bf80 	call	13bf8 <_Znaj>
   10978:	d8c00017 	ldw	r3,0(sp)
	Reset(0.0);
   1097c:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   10980:	18801a15 	stw	r2,104(r3)
	Reset(0.0);
   10984:	1809883a 	mov	r4,r3
   10988:	00103b00 	call	103b0 <_ZN21PositionControllerPan5ResetEf>
	m_finish_time = 20.0;
   1098c:	d9400017 	ldw	r5,0(sp)
   10990:	00906834 	movhi	r2,16800
   10994:	d9000204 	addi	r4,sp,8
   10998:	28800815 	stw	r2,32(r5)
   1099c:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
}
   109a0:	dfc01017 	ldw	ra,64(sp)
   109a4:	df000f17 	ldw	fp,60(sp)
   109a8:	dec01104 	addi	sp,sp,68
   109ac:	f800283a 	ret
PositionControllerPan::PositionControllerPan(void)
   109b0:	d8800417 	ldw	r2,16(sp)
   109b4:	d9000117 	ldw	r4,4(sp)
   109b8:	d8800015 	stw	r2,0(sp)
   109bc:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   109c0:	d9000017 	ldw	r4,0(sp)
   109c4:	00bfffc4 	movi	r2,-1
   109c8:	d8800315 	stw	r2,12(sp)
   109cc:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

000109d0 <_ZN21PositionControllerPanD2Ev>:
PositionControllerPan::~PositionControllerPan(void)
   109d0:	28c00017 	ldw	r3,0(r5)
   109d4:	defffe04 	addi	sp,sp,-8
   109d8:	dc000015 	stw	r16,0(sp)
   109dc:	18bffd17 	ldw	r2,-12(r3)
   109e0:	dfc00115 	stw	ra,4(sp)
   109e4:	20c00015 	stw	r3,0(r4)
   109e8:	2085883a 	add	r2,r4,r2
   109ec:	28c00117 	ldw	r3,4(r5)
   109f0:	2021883a 	mov	r16,r4
	delete[] m_C;
   109f4:	11000e17 	ldw	r4,56(r2)
PositionControllerPan::~PositionControllerPan(void)
   109f8:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   109fc:	20000126 	beq	r4,zero,10a04 <_ZN21PositionControllerPanD2Ev+0x34>
   10a00:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_P;
   10a04:	80800017 	ldw	r2,0(r16)
   10a08:	10bffd17 	ldw	r2,-12(r2)
   10a0c:	8085883a 	add	r2,r16,r2
   10a10:	11000f17 	ldw	r4,60(r2)
   10a14:	20000426 	beq	r4,zero,10a28 <_ZN21PositionControllerPanD2Ev+0x58>
   10a18:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_I;
   10a1c:	80800017 	ldw	r2,0(r16)
   10a20:	10bffd17 	ldw	r2,-12(r2)
   10a24:	8085883a 	add	r2,r16,r2
   10a28:	11001017 	ldw	r4,64(r2)
   10a2c:	20000426 	beq	r4,zero,10a40 <_ZN21PositionControllerPanD2Ev+0x70>
   10a30:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_V;
   10a34:	80800017 	ldw	r2,0(r16)
   10a38:	10bffd17 	ldw	r2,-12(r2)
   10a3c:	8085883a 	add	r2,r16,r2
   10a40:	11001117 	ldw	r4,68(r2)
   10a44:	20000426 	beq	r4,zero,10a58 <_ZN21PositionControllerPanD2Ev+0x88>
   10a48:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_s;
   10a4c:	80800017 	ldw	r2,0(r16)
   10a50:	10bffd17 	ldw	r2,-12(r2)
   10a54:	8085883a 	add	r2,r16,r2
   10a58:	11001217 	ldw	r4,72(r2)
   10a5c:	20000426 	beq	r4,zero,10a70 <_ZN21PositionControllerPanD2Ev+0xa0>
   10a60:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_R;
   10a64:	80800017 	ldw	r2,0(r16)
   10a68:	10bffd17 	ldw	r2,-12(r2)
   10a6c:	8085883a 	add	r2,r16,r2
   10a70:	11001317 	ldw	r4,76(r2)
   10a74:	20000426 	beq	r4,zero,10a88 <_ZN21PositionControllerPanD2Ev+0xb8>
   10a78:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_M;
   10a7c:	80800017 	ldw	r2,0(r16)
   10a80:	10bffd17 	ldw	r2,-12(r2)
   10a84:	8085883a 	add	r2,r16,r2
   10a88:	11001417 	ldw	r4,80(r2)
   10a8c:	20000426 	beq	r4,zero,10aa0 <_ZN21PositionControllerPanD2Ev+0xd0>
   10a90:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_U;
   10a94:	80800017 	ldw	r2,0(r16)
   10a98:	10bffd17 	ldw	r2,-12(r2)
   10a9c:	8085883a 	add	r2,r16,r2
   10aa0:	11001517 	ldw	r4,84(r2)
   10aa4:	20000426 	beq	r4,zero,10ab8 <_ZN21PositionControllerPanD2Ev+0xe8>
   10aa8:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_workarray;
   10aac:	80800017 	ldw	r2,0(r16)
   10ab0:	10bffd17 	ldw	r2,-12(r2)
   10ab4:	8085883a 	add	r2,r16,r2
   10ab8:	11001617 	ldw	r4,88(r2)
   10abc:	20000126 	beq	r4,zero,10ac4 <_ZN21PositionControllerPanD2Ev+0xf4>
   10ac0:	0012b5c0 	call	12b5c <_ZdaPv>
PositionControllerPan::~PositionControllerPan(void)
   10ac4:	81000204 	addi	r4,r16,8
}
   10ac8:	dfc00117 	ldw	ra,4(sp)
   10acc:	dc000017 	ldw	r16,0(sp)
   10ad0:	dec00204 	addi	sp,sp,8
PositionControllerPan::~PositionControllerPan(void)
   10ad4:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

00010ad8 <_ZN21PositionControllerPanD1Ev>:
   10ad8:	defffe04 	addi	sp,sp,-8
   10adc:	dc000015 	stw	r16,0(sp)
   10ae0:	00c000b4 	movhi	r3,2
   10ae4:	2021883a 	mov	r16,r4
   10ae8:	008000b4 	movhi	r2,2
	delete[] m_C;
   10aec:	21001217 	ldw	r4,72(r4)
PositionControllerPan::~PositionControllerPan(void)
   10af0:	dfc00115 	stw	ra,4(sp)
   10af4:	18e20a04 	addi	r3,r3,-30680
   10af8:	10a21104 	addi	r2,r2,-30652
   10afc:	80c00015 	stw	r3,0(r16)
   10b00:	80800415 	stw	r2,16(r16)
	delete[] m_C;
   10b04:	20000126 	beq	r4,zero,10b0c <_ZN21PositionControllerPanD1Ev+0x34>
   10b08:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_P;
   10b0c:	81001317 	ldw	r4,76(r16)
   10b10:	20000126 	beq	r4,zero,10b18 <_ZN21PositionControllerPanD1Ev+0x40>
   10b14:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_I;
   10b18:	81001417 	ldw	r4,80(r16)
   10b1c:	20000126 	beq	r4,zero,10b24 <_ZN21PositionControllerPanD1Ev+0x4c>
   10b20:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_V;
   10b24:	81001517 	ldw	r4,84(r16)
   10b28:	20000126 	beq	r4,zero,10b30 <_ZN21PositionControllerPanD1Ev+0x58>
   10b2c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_s;
   10b30:	81001617 	ldw	r4,88(r16)
   10b34:	20000126 	beq	r4,zero,10b3c <_ZN21PositionControllerPanD1Ev+0x64>
   10b38:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_R;
   10b3c:	81001717 	ldw	r4,92(r16)
   10b40:	20000126 	beq	r4,zero,10b48 <_ZN21PositionControllerPanD1Ev+0x70>
   10b44:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_M;
   10b48:	81001817 	ldw	r4,96(r16)
   10b4c:	20000126 	beq	r4,zero,10b54 <_ZN21PositionControllerPanD1Ev+0x7c>
   10b50:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_U;
   10b54:	81001917 	ldw	r4,100(r16)
   10b58:	20000126 	beq	r4,zero,10b60 <_ZN21PositionControllerPanD1Ev+0x88>
   10b5c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_workarray;
   10b60:	81001a17 	ldw	r4,104(r16)
   10b64:	20000126 	beq	r4,zero,10b6c <_ZN21PositionControllerPanD1Ev+0x94>
   10b68:	0012b5c0 	call	12b5c <_ZdaPv>
PositionControllerPan::~PositionControllerPan(void)
   10b6c:	81000204 	addi	r4,r16,8
}
   10b70:	dfc00117 	ldw	ra,4(sp)
   10b74:	dc000017 	ldw	r16,0(sp)
   10b78:	dec00204 	addi	sp,sp,8
PositionControllerPan::~PositionControllerPan(void)
   10b7c:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

00010b80 <_ZTv0_n16_N21PositionControllerPanD1Ev>:
		virtual ~PositionControllerPan(void);
   10b80:	2009883a 	mov	r4,r4
   10b84:	20800017 	ldw	r2,0(r4)
   10b88:	10bffc04 	addi	r2,r2,-16
   10b8c:	10800017 	ldw	r2,0(r2)
   10b90:	2089883a 	add	r4,r4,r2
   10b94:	0010ad81 	jmpi	10ad8 <_ZN21PositionControllerPanD1Ev>

00010b98 <_ZN21PositionControllerPanD0Ev>:
   10b98:	defffe04 	addi	sp,sp,-8
   10b9c:	dc000015 	stw	r16,0(sp)
   10ba0:	dfc00115 	stw	ra,4(sp)
   10ba4:	2021883a 	mov	r16,r4
}
   10ba8:	0010ad80 	call	10ad8 <_ZN21PositionControllerPanD1Ev>
   10bac:	01401b04 	movi	r5,108
   10bb0:	8009883a 	mov	r4,r16
   10bb4:	dfc00117 	ldw	ra,4(sp)
   10bb8:	dc000017 	ldw	r16,0(sp)
   10bbc:	dec00204 	addi	sp,sp,8
   10bc0:	0012b581 	jmpi	12b58 <_ZdlPvj>

00010bc4 <_ZTv0_n16_N21PositionControllerPanD0Ev>:
   10bc4:	20800017 	ldw	r2,0(r4)
   10bc8:	defffe04 	addi	sp,sp,-8
   10bcc:	dc000015 	stw	r16,0(sp)
   10bd0:	143ffc17 	ldw	r16,-16(r2)
   10bd4:	dfc00115 	stw	ra,4(sp)
   10bd8:	2421883a 	add	r16,r4,r16
   10bdc:	8009883a 	mov	r4,r16
   10be0:	0010ad80 	call	10ad8 <_ZN21PositionControllerPanD1Ev>
   10be4:	01401b04 	movi	r5,108
   10be8:	8009883a 	mov	r4,r16
   10bec:	dfc00117 	ldw	ra,4(sp)
   10bf0:	dc000017 	ldw	r16,0(sp)
   10bf4:	dec00204 	addi	sp,sp,8
   10bf8:	0012b581 	jmpi	12b58 <_ZdlPvj>

00010bfc <_ZN21PositionControllerPan10InitializeEPfS0_f>:
	m_initialize = true;
   10bfc:	20800017 	ldw	r2,0(r4)
{
   10c00:	defffb04 	addi	sp,sp,-20
   10c04:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   10c08:	10bffd17 	ldw	r2,-12(r2)
{
   10c0c:	dcc00315 	stw	r19,12(sp)
   10c10:	dc800215 	stw	r18,8(sp)
	m_initialize = true;
   10c14:	2085883a 	add	r2,r4,r2
	m_P[0] = 0.0;		/* corrGain\K */
   10c18:	10c00f17 	ldw	r3,60(r2)
{
   10c1c:	dc400115 	stw	r17,4(sp)
   10c20:	dc000015 	stw	r16,0(sp)
	m_initialize = true;
   10c24:	02000044 	movi	r8,1
	m_P[3] = 0.17;		/* PID1\beta */
   10c28:	02cf8bb4 	movhi	r11,15918
	m_initialize = true;
   10c2c:	12000105 	stb	r8,4(r2)
	m_stop_run = false;
   10c30:	10000185 	stb	zero,6(r2)
{
   10c34:	2021883a 	mov	r16,r4
	m_P[3] = 0.17;		/* PID1\beta */
   10c38:	5ac51ec4 	addi	r11,r11,5243
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10c3c:	11001017 	ldw	r4,64(r2)
	m_P[1] = 2.6;		/* PID1\kp */
   10c40:	035009b4 	movhi	r13,16422
	m_P[2] = 0.05;		/* PID1\tauD */
   10c44:	030f5374 	movhi	r12,15693
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10c48:	02afdf74 	movhi	r10,49021
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10c4c:	024fdf74 	movhi	r9,16253
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10c50:	12001217 	ldw	r8,72(r2)
	m_P[1] = 2.6;		/* PID1\kp */
   10c54:	6b599984 	addi	r13,r13,26214
	m_P[3] = 0.17;		/* PID1\beta */
   10c58:	1ac00315 	stw	r11,12(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   10c5c:	63333344 	addi	r12,r12,-13107
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10c60:	529c2904 	addi	r10,r10,28836
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10c64:	4a5c2904 	addi	r9,r9,28836
	m_P[4] = 9.0;		/* PID1\tauI */
   10c68:	02d04434 	movhi	r11,16656
	m_P[1] = 2.6;		/* PID1\kp */
   10c6c:	1b400115 	stw	r13,4(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   10c70:	1b000215 	stw	r12,8(r3)
	m_P[4] = 9.0;		/* PID1\tauI */
   10c74:	1ac00415 	stw	r11,16(r3)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   10c78:	1a800515 	stw	r10,20(r3)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   10c7c:	1a400615 	stw	r9,24(r3)
	m_P[0] = 0.0;		/* corrGain\K */
   10c80:	18000015 	stw	zero,0(r3)
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   10c84:	20000115 	stw	zero,4(r4)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   10c88:	20000215 	stw	zero,8(r4)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   10c8c:	20000015 	stw	zero,0(r4)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   10c90:	40000015 	stw	zero,0(r8)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10c94:	20c00117 	ldw	r3,4(r4)
{
   10c98:	2825883a 	mov	r18,r5
	myintegmethod.Initialize(this);
   10c9c:	100b883a 	mov	r5,r2
	m_s[1] = m_I[1];		/* PID1\error_previous */
   10ca0:	40c00115 	stw	r3,4(r8)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10ca4:	20c00217 	ldw	r3,8(r4)
	myintegmethod.Initialize(this);
   10ca8:	81000204 	addi	r4,r16,8
{
   10cac:	3023883a 	mov	r17,r6
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   10cb0:	40c00215 	stw	r3,8(r8)
{
   10cb4:	3827883a 	mov	r19,r7
	myintegmethod.Initialize(this);
   10cb8:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   10cbc:	80c00017 	ldw	r3,0(r16)
	CalculateDynamic ();
   10cc0:	8009883a 	mov	r4,r16
	m_time = t;
   10cc4:	18bffd17 	ldw	r2,-12(r3)
	CalculateDynamic ();
   10cc8:	18c00217 	ldw	r3,8(r3)
	m_time = t;
   10ccc:	8085883a 	add	r2,r16,r2
   10cd0:	14c00515 	stw	r19,20(r2)
	m_V[7] = u[0];		/* in */
   10cd4:	91400017 	ldw	r5,0(r18)
   10cd8:	10801117 	ldw	r2,68(r2)
   10cdc:	11400715 	stw	r5,28(r2)
	m_V[8] = u[1];		/* position */
   10ce0:	91400117 	ldw	r5,4(r18)
   10ce4:	11400815 	stw	r5,32(r2)
	CalculateDynamic ();
   10ce8:	183ee83a 	callr	r3
	m_V[6] = m_V[0];
   10cec:	80800017 	ldw	r2,0(r16)
   10cf0:	10fffd17 	ldw	r3,-12(r2)
   10cf4:	80c7883a 	add	r3,r16,r3
   10cf8:	18801117 	ldw	r2,68(r3)
   10cfc:	11000017 	ldw	r4,0(r2)
	m_V[9] = m_V[4];
   10d00:	11400417 	ldw	r5,16(r2)
	m_V[6] = m_V[0];
   10d04:	11000615 	stw	r4,24(r2)
	m_V[9] = m_V[4];
   10d08:	11400915 	stw	r5,36(r2)
	y[0] = 	m_V[6];		/* corr */
   10d0c:	89000015 	stw	r4,0(r17)
	y[1] = 	m_V[9];		/* out */
   10d10:	10800917 	ldw	r2,36(r2)
   10d14:	88800115 	stw	r2,4(r17)
	m_initialize = false;
   10d18:	18000105 	stb	zero,4(r3)
	state = mainrun;
   10d1c:	00800044 	movi	r2,1
   10d20:	80800115 	stw	r2,4(r16)
}
   10d24:	dfc00417 	ldw	ra,16(sp)
   10d28:	dcc00317 	ldw	r19,12(sp)
   10d2c:	dc800217 	ldw	r18,8(sp)
   10d30:	dc400117 	ldw	r17,4(sp)
   10d34:	dc000017 	ldw	r16,0(sp)
   10d38:	dec00504 	addi	sp,sp,20
   10d3c:	f800283a 	ret

00010d40 <_ZN21PositionControllerPan9CalculateEPfS0_>:
	switch (state)
   10d40:	20800117 	ldw	r2,4(r4)
   10d44:	10004226 	beq	r2,zero,10e50 <_ZN21PositionControllerPan9CalculateEPfS0_+0x110>
   10d48:	10800060 	cmpeqi	r2,r2,1
   10d4c:	10002526 	beq	r2,zero,10de4 <_ZN21PositionControllerPan9CalculateEPfS0_+0xa4>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10d50:	20800017 	ldw	r2,0(r4)
{
   10d54:	defffd04 	addi	sp,sp,-12
   10d58:	dc000015 	stw	r16,0(sp)
   10d5c:	2021883a 	mov	r16,r4
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10d60:	113ffd17 	ldw	r4,-12(r2)
{
   10d64:	dc400115 	stw	r17,4(sp)
   10d68:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   10d6c:	8109883a 	add	r4,r16,r4
   10d70:	20800217 	ldw	r2,8(r4)
   10d74:	3023883a 	mov	r17,r6
   10d78:	21800417 	ldw	r6,16(r4)
   10d7c:	21c00517 	ldw	r7,20(r4)
   10d80:	2807883a 	mov	r3,r5
   10d84:	014cf5f4 	movhi	r5,13271
   10d88:	296fe544 	addi	r5,r5,-16491
   10d8c:	3085ffb2 	custom	254,r2,r6,r2
   10d90:	1145ff72 	custom	253,r2,r2,r5
   10d94:	3885f9b2 	custom	230,r2,r7,r2
   10d98:	1000131e 	bne	r2,zero,10de8 <_ZN21PositionControllerPan9CalculateEPfS0_+0xa8>
   10d9c:	3085f8b2 	custom	226,r2,r6,r2
   10da0:	10001126 	beq	r2,zero,10de8 <_ZN21PositionControllerPan9CalculateEPfS0_+0xa8>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10da4:	20800183 	ldbu	r2,6(r4)
				state = finished;
   10da8:	00c00084 	movi	r3,2
   10dac:	80c00115 	stw	r3,4(r16)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10db0:	1000051e 	bne	r2,zero,10dc8 <_ZN21PositionControllerPan9CalculateEPfS0_+0x88>
   10db4:	008cf5f4 	movhi	r2,13271
   10db8:	10afe544 	addi	r2,r2,-16491
   10dbc:	388fff72 	custom	253,r7,r7,r2
   10dc0:	398df932 	custom	228,r6,r7,r6
   10dc4:	30000226 	beq	r6,zero,10dd0 <_ZN21PositionControllerPan9CalculateEPfS0_+0x90>
				state = finished;
   10dc8:	00800084 	movi	r2,2
   10dcc:	80800115 	stw	r2,4(r16)
}
   10dd0:	dfc00217 	ldw	ra,8(sp)
   10dd4:	dc400117 	ldw	r17,4(sp)
   10dd8:	dc000017 	ldw	r16,0(sp)
   10ddc:	dec00304 	addi	sp,sp,12
   10de0:	f800283a 	ret
   10de4:	f800283a 	ret
	m_V[7] = u[0];		/* in */
   10de8:	20801117 	ldw	r2,68(r4)
   10dec:	19400017 	ldw	r5,0(r3)
				myintegmethod.Step();
   10df0:	81000204 	addi	r4,r16,8
	m_V[7] = u[0];		/* in */
   10df4:	11400715 	stw	r5,28(r2)
	m_V[8] = u[1];		/* position */
   10df8:	18c00117 	ldw	r3,4(r3)
   10dfc:	10c00815 	stw	r3,32(r2)
				myintegmethod.Step();
   10e00:	00101dc0 	call	101dc <_ZN8Discrete4StepEv>
	m_V[6] = m_V[0];
   10e04:	80800017 	ldw	r2,0(r16)
   10e08:	10fffd17 	ldw	r3,-12(r2)
   10e0c:	80c7883a 	add	r3,r16,r3
   10e10:	18801117 	ldw	r2,68(r3)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10e14:	19400183 	ldbu	r5,6(r3)
	m_V[6] = m_V[0];
   10e18:	11000017 	ldw	r4,0(r2)
	m_V[9] = m_V[4];
   10e1c:	11800417 	ldw	r6,16(r2)
	m_V[6] = m_V[0];
   10e20:	11000615 	stw	r4,24(r2)
	m_V[9] = m_V[4];
   10e24:	11800915 	stw	r6,36(r2)
	y[0] = 	m_V[6];		/* corr */
   10e28:	89000015 	stw	r4,0(r17)
	y[1] = 	m_V[9];		/* out */
   10e2c:	10800917 	ldw	r2,36(r2)
   10e30:	88800115 	stw	r2,4(r17)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   10e34:	283fe41e 	bne	r5,zero,10dc8 <_ZN21PositionControllerPan9CalculateEPfS0_+0x88>
   10e38:	19800417 	ldw	r6,16(r3)
   10e3c:	0005883a 	mov	r2,zero
   10e40:	3085f8b2 	custom	226,r2,r6,r2
   10e44:	103fe226 	beq	r2,zero,10dd0 <_ZN21PositionControllerPan9CalculateEPfS0_+0x90>
   10e48:	19c00517 	ldw	r7,20(r3)
   10e4c:	003fd906 	br	10db4 <_ZN21PositionControllerPan9CalculateEPfS0_+0x74>
			Initialize(u, y, 0.0);
   10e50:	000f883a 	mov	r7,zero
   10e54:	0010bfc1 	jmpi	10bfc <_ZN21PositionControllerPan10InitializeEPfS0_f>

00010e58 <_ZN22PositionControllerTilt16CalculateDynamicEv>:
 * to calculate the new model rates (that are then integrated).
 */
void PositionControllerTilt::CalculateDynamic (void)
{
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10e58:	20800017 	ldw	r2,0(r4)
   10e5c:	024fe034 	movhi	r9,16256
   10e60:	10bffd17 	ldw	r2,-12(r2)
   10e64:	2089883a 	add	r4,r4,r2
   10e68:	21400f17 	ldw	r5,60(r4)
   10e6c:	20c01117 	ldw	r3,68(r4)
   10e70:	22800217 	ldw	r10,8(r4)
   10e74:	2ac00317 	ldw	r11,12(r5)
   10e78:	2a000217 	ldw	r8,8(r5)

	/* corrGain\input = corr; */
	m_V[0] = m_V[8];
   10e7c:	18800817 	ldw	r2,32(r3)

	/* PlusMinus2\plus1 = in; */
	m_V[5] = m_V[9];
   10e80:	19800917 	ldw	r6,36(r3)

	/* PlusMinus2\minus1 = position; */
	m_V[6] = m_V[10];
   10e84:	19c00a17 	ldw	r7,40(r3)
	m_V[3] = 1.0 / (m_step_size + m_P[2] * m_P[3]);
   10e88:	42d1ff32 	custom	252,r8,r8,r11
   10e8c:	4291ff72 	custom	253,r8,r8,r10
   10e90:	4a11fff2 	custom	255,r8,r9,r8
   10e94:	1a000315 	stw	r8,12(r3)
	m_V[6] = m_V[10];
   10e98:	19c00615 	stw	r7,24(r3)
	m_V[0] = m_V[8];
   10e9c:	18800015 	stw	r2,0(r3)
	m_V[5] = m_V[9];
   10ea0:	19800515 	stw	r6,20(r3)

	/* corrGain\output = corrGain\K * corrGain\input; */
	m_V[1] = m_P[0] * m_V[0];
   10ea4:	2a000017 	ldw	r8,0(r5)

	/* PID1\error = PlusMinus2\plus1 - PlusMinus2\minus1; */
	m_R[1] = m_V[5] - m_V[6];
   10ea8:	22801317 	ldw	r10,76(r4)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10eac:	22c01217 	ldw	r11,72(r4)
	m_V[1] = m_P[0] * m_V[0];
   10eb0:	4091ff32 	custom	252,r8,r8,r2
   10eb4:	1a000115 	stw	r8,4(r3)
	m_R[1] = m_V[5] - m_V[6];
   10eb8:	31cfffb2 	custom	254,r7,r6,r7
   10ebc:	51c00115 	stw	r7,4(r10)
	m_R[0] = m_V[3] * (((m_P[2] * m_s[0]) * m_P[3] + (m_P[2] * m_P[1]) * (m_R[1] - m_s[1])) + (m_step_size * m_P[1]) * m_R[1]);
   10ec0:	2a400217 	ldw	r9,8(r5)
   10ec4:	29800117 	ldw	r6,4(r5)
   10ec8:	58800017 	ldw	r2,0(r11)
   10ecc:	5a000117 	ldw	r8,4(r11)
   10ed0:	23400217 	ldw	r13,8(r4)
   10ed4:	2b800317 	ldw	r14,12(r5)
   10ed8:	4885ff32 	custom	252,r2,r9,r2
   10edc:	3a11ffb2 	custom	254,r8,r7,r8
   10ee0:	4993ff32 	custom	252,r9,r9,r6
   10ee4:	1b000317 	ldw	r12,12(r3)
   10ee8:	1385ff32 	custom	252,r2,r2,r14
   10eec:	4251ff32 	custom	252,r8,r8,r9
   10ef0:	334dff32 	custom	252,r6,r6,r13
   10ef4:	31cdff32 	custom	252,r6,r6,r7
   10ef8:	1205ff72 	custom	253,r2,r2,r8
   10efc:	1185ff72 	custom	253,r2,r2,r6
   10f00:	1305ff32 	custom	252,r2,r2,r12
   10f04:	50800015 	stw	r2,0(r10)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f08:	21000217 	ldw	r4,8(r4)
   10f0c:	29c00417 	ldw	r7,16(r5)
   10f10:	59800217 	ldw	r6,8(r11)
   10f14:	1109ff32 	custom	252,r4,r2,r4
   10f18:	21c9fff2 	custom	255,r4,r4,r7
   10f1c:	2189ff72 	custom	253,r4,r4,r6

	/* PID1\output = PID1\uI + PID1\uD; */
	m_V[2] = m_R[2] + m_R[0];
   10f20:	1105ff72 	custom	253,r2,r2,r4
	m_R[2] = m_s[2] + (m_step_size * m_R[0]) / m_P[4];
   10f24:	51000215 	stw	r4,8(r10)
	m_V[2] = m_R[2] + m_R[0];
   10f28:	18800215 	stw	r2,8(r3)

	/* PlusMinus1\output = corrGain\output + PID1\output; */
	m_V[4] = m_V[1] + m_V[2];
   10f2c:	19000117 	ldw	r4,4(r3)
   10f30:	1105ff72 	custom	253,r2,r2,r4
   10f34:	18800415 	stw	r2,16(r3)

	/* SignalLimiter2\output = (if PlusMinus1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) end); */
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10f38:	29000517 	ldw	r4,20(r5)
   10f3c:	110df9f2 	custom	231,r6,r2,r4
   10f40:	3000031e 	bne	r6,zero,10f50 <_ZN22PositionControllerTilt16CalculateDynamicEv+0xf8>
		/* SignalLimiter2\minimum */
		m_P[5]
	:
		/* (if PlusMinus1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PlusMinus1\output end) */
		((m_V[4] > m_P[6]) ? 
   10f44:	29000617 	ldw	r4,24(r5)
   10f48:	110bf972 	custom	229,r5,r2,r4
   10f4c:	28000226 	beq	r5,zero,10f58 <_ZN22PositionControllerTilt16CalculateDynamicEv+0x100>
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10f50:	19000715 	stw	r4,28(r3)
			/* PlusMinus1\output */
			m_V[4]
		)
	);

}
   10f54:	f800283a 	ret
		((m_V[4] > m_P[6]) ? 
   10f58:	1009883a 	mov	r4,r2
	m_V[7] = ((m_V[4] < m_P[5]) ? 
   10f5c:	19000715 	stw	r4,28(r3)
}
   10f60:	f800283a 	ret

00010f64 <_ZTv0_n12_N22PositionControllerTilt16CalculateDynamicEv>:
		 * CalculateDynamic()
		 * This function calculates the dynamic equations of the model.
		 * These equations are called from the integration method
		 * to calculate the new model rates (that are then integrated).
		 */
		void CalculateDynamic (void);
   10f64:	2009883a 	mov	r4,r4
   10f68:	20800017 	ldw	r2,0(r4)
   10f6c:	10bffd04 	addi	r2,r2,-12
   10f70:	10800017 	ldw	r2,0(r2)
   10f74:	2089883a 	add	r4,r4,r2
   10f78:	0010e581 	jmpi	10e58 <_ZN22PositionControllerTilt16CalculateDynamicEv>

00010f7c <_ZN22PositionControllerTilt21CopyInputsToVariablesEPf>:
	m_V[8] = u[0];		/* corr */
   10f7c:	20800017 	ldw	r2,0(r4)
   10f80:	28c00017 	ldw	r3,0(r5)
   10f84:	10bffd17 	ldw	r2,-12(r2)
   10f88:	2089883a 	add	r4,r4,r2
   10f8c:	20801117 	ldw	r2,68(r4)
   10f90:	10c00815 	stw	r3,32(r2)
	m_V[9] = u[1];		/* in */
   10f94:	28c00117 	ldw	r3,4(r5)
   10f98:	10c00915 	stw	r3,36(r2)
	m_V[10] = u[2];		/* position */
   10f9c:	28c00217 	ldw	r3,8(r5)
   10fa0:	10c00a15 	stw	r3,40(r2)
}
   10fa4:	f800283a 	ret

00010fa8 <_ZN22PositionControllerTilt22CopyVariablesToOutputsEPf>:
	y[0] = 	m_V[11];		/* out */
   10fa8:	20800017 	ldw	r2,0(r4)
   10fac:	10bffd17 	ldw	r2,-12(r2)
   10fb0:	2089883a 	add	r4,r4,r2
   10fb4:	20801117 	ldw	r2,68(r4)
   10fb8:	10800b17 	ldw	r2,44(r2)
   10fbc:	28800015 	stw	r2,0(r5)
}
   10fc0:	f800283a 	ret

00010fc4 <_ZN22PositionControllerTilt5ResetEf>:
	m_start_time = starttime;
   10fc4:	20800017 	ldw	r2,0(r4)
{
   10fc8:	defffe04 	addi	sp,sp,-8
   10fcc:	dc000015 	stw	r16,0(sp)
	m_start_time = starttime;
   10fd0:	10bffd17 	ldw	r2,-12(r2)
{
   10fd4:	2021883a 	mov	r16,r4
	m_step_size = 0.0001;
   10fd8:	010e34b4 	movhi	r4,14546
	m_start_time = starttime;
   10fdc:	8085883a 	add	r2,r16,r2
{
   10fe0:	dfc00115 	stw	ra,4(sp)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   10fe4:	10c00e17 	ldw	r3,56(r2)
	m_step_size = 0.0001;
   10fe8:	212dc5c4 	addi	r4,r4,-18665
   10fec:	11000215 	stw	r4,8(r2)
	m_major = true;
   10ff0:	01000044 	movi	r4,1
	m_start_time = starttime;
   10ff4:	11400315 	stw	r5,12(r2)
	m_time = starttime;
   10ff8:	11400515 	stw	r5,20(r2)
	m_major = true;
   10ffc:	11000145 	stb	r4,5(r2)
	m_stop_run = false;
   11000:	10000185 	stb	zero,6(r2)
	memset(m_C, 0, (0 + 1) * sizeof(XXDouble));
   11004:	18000005 	stb	zero,0(r3)
   11008:	18000045 	stb	zero,1(r3)
   1100c:	18000085 	stb	zero,2(r3)
   11010:	180000c5 	stb	zero,3(r3)
	memset(m_P, 0, (7 + 1) * sizeof(XXDouble));
   11014:	80800017 	ldw	r2,0(r16)
   11018:	01800804 	movi	r6,32
   1101c:	000b883a 	mov	r5,zero
   11020:	10bffd17 	ldw	r2,-12(r2)
   11024:	8085883a 	add	r2,r16,r2
   11028:	11000f17 	ldw	r4,60(r2)
   1102c:	00171240 	call	17124 <memset>
	memset(m_I, 0, (3 + 1) * sizeof(XXDouble));
   11030:	80800017 	ldw	r2,0(r16)
   11034:	01800404 	movi	r6,16
   11038:	000b883a 	mov	r5,zero
   1103c:	10bffd17 	ldw	r2,-12(r2)
   11040:	8085883a 	add	r2,r16,r2
   11044:	11001017 	ldw	r4,64(r2)
   11048:	00171240 	call	17124 <memset>
	memset(m_V, 0, (12 + 1) * sizeof(XXDouble));
   1104c:	80800017 	ldw	r2,0(r16)
   11050:	01800d04 	movi	r6,52
   11054:	000b883a 	mov	r5,zero
   11058:	10bffd17 	ldw	r2,-12(r2)
   1105c:	8085883a 	add	r2,r16,r2
   11060:	11001117 	ldw	r4,68(r2)
   11064:	00171240 	call	17124 <memset>
	memset(m_s, 0, (3 + 1) * sizeof(XXDouble));
   11068:	80800017 	ldw	r2,0(r16)
   1106c:	01800404 	movi	r6,16
   11070:	000b883a 	mov	r5,zero
   11074:	10bffd17 	ldw	r2,-12(r2)
   11078:	8085883a 	add	r2,r16,r2
   1107c:	11001217 	ldw	r4,72(r2)
   11080:	00171240 	call	17124 <memset>
	memset(m_R, 0, (3 + 1) * sizeof(XXDouble));
   11084:	80800017 	ldw	r2,0(r16)
   11088:	01800404 	movi	r6,16
   1108c:	000b883a 	mov	r5,zero
   11090:	10bffd17 	ldw	r2,-12(r2)
   11094:	8085883a 	add	r2,r16,r2
   11098:	11001317 	ldw	r4,76(r2)
   1109c:	00171240 	call	17124 <memset>
	memset(m_M, 0, (0 + 1) * sizeof(XXDouble));
   110a0:	80800017 	ldw	r2,0(r16)
   110a4:	10bffd17 	ldw	r2,-12(r2)
   110a8:	8085883a 	add	r2,r16,r2
   110ac:	10801417 	ldw	r2,80(r2)
   110b0:	10000005 	stb	zero,0(r2)
   110b4:	10000045 	stb	zero,1(r2)
   110b8:	10000085 	stb	zero,2(r2)
   110bc:	100000c5 	stb	zero,3(r2)
	memset(m_U, 0, (0 + 1) * sizeof(XXDouble));
   110c0:	80800017 	ldw	r2,0(r16)
   110c4:	10bffd17 	ldw	r2,-12(r2)
   110c8:	8085883a 	add	r2,r16,r2
   110cc:	10801517 	ldw	r2,84(r2)
   110d0:	10000005 	stb	zero,0(r2)
   110d4:	10000045 	stb	zero,1(r2)
   110d8:	10000085 	stb	zero,2(r2)
   110dc:	100000c5 	stb	zero,3(r2)
	memset(m_workarray, 0, (0 + 1) * sizeof(XXDouble));
   110e0:	80800017 	ldw	r2,0(r16)
   110e4:	10bffd17 	ldw	r2,-12(r2)
   110e8:	8085883a 	add	r2,r16,r2
   110ec:	10801617 	ldw	r2,88(r2)
   110f0:	10000005 	stb	zero,0(r2)
   110f4:	10000045 	stb	zero,1(r2)
   110f8:	10000085 	stb	zero,2(r2)
   110fc:	100000c5 	stb	zero,3(r2)
	state = initialrun;
   11100:	80000115 	stw	zero,4(r16)
}
   11104:	dfc00117 	ldw	ra,4(sp)
   11108:	dc000017 	ldw	r16,0(sp)
   1110c:	dec00204 	addi	sp,sp,8
   11110:	f800283a 	ret

00011114 <_ZN22PositionControllerTilt10IsFinishedEv>:
	return (state == finished);
   11114:	20800117 	ldw	r2,4(r4)
   11118:	108000a0 	cmpeqi	r2,r2,2
}
   1111c:	f800283a 	ret

00011120 <_ZN22PositionControllerTilt9TerminateEPfS0_>:
	m_V[8] = u[0];		/* corr */
   11120:	20800017 	ldw	r2,0(r4)
   11124:	28c00017 	ldw	r3,0(r5)
   11128:	10bffd17 	ldw	r2,-12(r2)
   1112c:	2089883a 	add	r4,r4,r2
   11130:	20801117 	ldw	r2,68(r4)
   11134:	10c00815 	stw	r3,32(r2)
	m_V[9] = u[1];		/* in */
   11138:	29000117 	ldw	r4,4(r5)
	y[0] = 	m_V[11];		/* out */
   1113c:	10c00b17 	ldw	r3,44(r2)
	m_V[9] = u[1];		/* in */
   11140:	11000915 	stw	r4,36(r2)
	m_V[10] = u[2];		/* position */
   11144:	29000217 	ldw	r4,8(r5)
   11148:	11000a15 	stw	r4,40(r2)
	y[0] = 	m_V[11];		/* out */
   1114c:	30c00015 	stw	r3,0(r6)
}
   11150:	f800283a 	ret

00011154 <_ZN22PositionControllerTilt16CalculateInitialEv>:
}
   11154:	f800283a 	ret

00011158 <_ZN22PositionControllerTilt15CalculateStaticEv>:
   11158:	f800283a 	ret

0001115c <_ZN22PositionControllerTilt14CalculateInputEv>:
   1115c:	f800283a 	ret

00011160 <_ZN22PositionControllerTilt15CalculateOutputEv>:
 * integration step that is taken. This makes model computation much faster.
 */
void PositionControllerTilt::CalculateOutput (void)
{
	/* out = SignalLimiter2\output; */
	m_V[11] = m_V[7];
   11160:	20800017 	ldw	r2,0(r4)
   11164:	10bffd17 	ldw	r2,-12(r2)
   11168:	2089883a 	add	r4,r4,r2
   1116c:	20801117 	ldw	r2,68(r4)
   11170:	10c00717 	ldw	r3,28(r2)
   11174:	10c00b15 	stw	r3,44(r2)

}
   11178:	f800283a 	ret

0001117c <_ZN22PositionControllerTilt14CalculateFinalEv>:
   1117c:	f800283a 	ret

00011180 <_ZN22PositionControllerTilt13SetFinishTimeEf>:



bool PositionControllerTilt::SetFinishTime(XXDouble newtime)
{
	if ((newtime <= 0.0) || ( newtime > m_time))
   11180:	20c00017 	ldw	r3,0(r4)
   11184:	0005883a 	mov	r2,zero
   11188:	2885f9b2 	custom	230,r2,r5,r2
   1118c:	18fffd17 	ldw	r3,-12(r3)
   11190:	20c9883a 	add	r4,r4,r3
   11194:	1000051e 	bne	r2,zero,111ac <_ZN22PositionControllerTilt13SetFinishTimeEf+0x2c>
   11198:	20800517 	ldw	r2,20(r4)
   1119c:	1145f9f2 	custom	231,r2,r2,r5
   111a0:	1000021e 	bne	r2,zero,111ac <_ZN22PositionControllerTilt13SetFinishTimeEf+0x2c>
	{
		m_finish_time = newtime;
		return true;
	}

	return false;
   111a4:	0005883a 	mov	r2,zero
}
   111a8:	f800283a 	ret
		m_finish_time = newtime;
   111ac:	21400415 	stw	r5,16(r4)
		return true;
   111b0:	00800044 	movi	r2,1
   111b4:	f800283a 	ret

000111b8 <_ZN22PositionControllerTiltC2Ev>:
PositionControllerTilt::PositionControllerTilt(void)
   111b8:	deffee04 	addi	sp,sp,-72
   111bc:	01800074 	movhi	r6,1
   111c0:	00c000b4 	movhi	r3,2
   111c4:	00800074 	movhi	r2,1
   111c8:	318c2104 	addi	r6,r6,12420
   111cc:	18e1c704 	addi	r3,r3,-30948
   111d0:	10850b04 	addi	r2,r2,5164
   111d4:	d9400115 	stw	r5,4(sp)
   111d8:	200b883a 	mov	r5,r4
   111dc:	d9000304 	addi	r4,sp,12
   111e0:	d9800915 	stw	r6,36(sp)
   111e4:	dfc01115 	stw	ra,68(sp)
   111e8:	d9400015 	stw	r5,0(sp)
   111ec:	d8c00a15 	stw	r3,40(sp)
   111f0:	d8800c15 	stw	r2,48(sp)
   111f4:	df001015 	stw	fp,64(sp)
   111f8:	df000b15 	stw	fp,44(sp)
   111fc:	dec00d15 	stw	sp,52(sp)
   11200:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   11204:	d8800117 	ldw	r2,4(sp)
   11208:	d9c00017 	ldw	r7,0(sp)
   1120c:	10c00017 	ldw	r3,0(r2)
   11210:	11400117 	ldw	r5,4(r2)
   11214:	39000204 	addi	r4,r7,8
   11218:	18bffd17 	ldw	r2,-12(r3)
   1121c:	38c00015 	stw	r3,0(r7)
   11220:	d9000215 	stw	r4,8(sp)
   11224:	3885883a 	add	r2,r7,r2
   11228:	11400015 	stw	r5,0(r2)
   1122c:	00bfffc4 	movi	r2,-1
   11230:	d8800415 	stw	r2,16(sp)
   11234:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   11238:	d9c00017 	ldw	r7,0(sp)
	m_number_parameters = 7;
   1123c:	018001c4 	movi	r6,7
	m_number_initialvalues = 3;
   11240:	014000c4 	movi	r5,3
	m_number_constants = 0;
   11244:	38800017 	ldw	r2,0(r7)
	m_C = new XXDouble[0 + 1];		/* constants */
   11248:	01000104 	movi	r4,4
	m_number_constants = 0;
   1124c:	10fffd17 	ldw	r3,-12(r2)
   11250:	38c7883a 	add	r3,r7,r3
   11254:	18000615 	stw	zero,24(r3)
	m_number_parameters = 7;
   11258:	10fffd17 	ldw	r3,-12(r2)
   1125c:	38c7883a 	add	r3,r7,r3
   11260:	19800715 	stw	r6,28(r3)
	m_number_initialvalues = 3;
   11264:	10fffd17 	ldw	r3,-12(r2)
	m_number_variables = 12;
   11268:	01800304 	movi	r6,12
	m_number_initialvalues = 3;
   1126c:	38c7883a 	add	r3,r7,r3
   11270:	19400815 	stw	r5,32(r3)
	m_number_variables = 12;
   11274:	10fffd17 	ldw	r3,-12(r2)
   11278:	38c7883a 	add	r3,r7,r3
   1127c:	19800915 	stw	r6,36(r3)
	m_number_states = 3;
   11280:	10fffd17 	ldw	r3,-12(r2)
   11284:	38c7883a 	add	r3,r7,r3
   11288:	19400a15 	stw	r5,40(r3)
	m_number_rates = 3;
   1128c:	10fffd17 	ldw	r3,-12(r2)
   11290:	38c7883a 	add	r3,r7,r3
   11294:	19400b15 	stw	r5,44(r3)
	m_number_matrices = 0;
   11298:	10fffd17 	ldw	r3,-12(r2)
   1129c:	38c7883a 	add	r3,r7,r3
   112a0:	18000c15 	stw	zero,48(r3)
	m_number_unnamed = 0;
   112a4:	10fffd17 	ldw	r3,-12(r2)
   112a8:	38c7883a 	add	r3,r7,r3
   112ac:	18000d15 	stw	zero,52(r3)
	m_C = new XXDouble[0 + 1];		/* constants */
   112b0:	10bffd17 	ldw	r2,-12(r2)
   112b4:	00c00044 	movi	r3,1
   112b8:	d8c00415 	stw	r3,16(sp)
   112bc:	3885883a 	add	r2,r7,r2
   112c0:	d8800115 	stw	r2,4(sp)
   112c4:	0013bf80 	call	13bf8 <_Znaj>
	m_P = new XXDouble[7 + 1];		/* parameters */
   112c8:	d9400017 	ldw	r5,0(sp)
	m_C = new XXDouble[0 + 1];		/* constants */
   112cc:	d9000117 	ldw	r4,4(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112d0:	28c00017 	ldw	r3,0(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   112d4:	20800e15 	stw	r2,56(r4)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112d8:	01000804 	movi	r4,32
   112dc:	18bffd17 	ldw	r2,-12(r3)
   112e0:	2885883a 	add	r2,r5,r2
   112e4:	d8800115 	stw	r2,4(sp)
   112e8:	0013bf80 	call	13bf8 <_Znaj>
	m_I = new XXDouble[3 + 1];		/* initial values */
   112ec:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112f0:	d9000117 	ldw	r4,4(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   112f4:	28c00017 	ldw	r3,0(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   112f8:	20800f15 	stw	r2,60(r4)
	m_I = new XXDouble[3 + 1];		/* initial values */
   112fc:	01000404 	movi	r4,16
   11300:	18bffd17 	ldw	r2,-12(r3)
   11304:	2885883a 	add	r2,r5,r2
   11308:	d8800115 	stw	r2,4(sp)
   1130c:	0013bf80 	call	13bf8 <_Znaj>
	m_V = new XXDouble[12 + 1];		/* variables */
   11310:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   11314:	d9000117 	ldw	r4,4(sp)
	m_V = new XXDouble[12 + 1];		/* variables */
   11318:	28c00017 	ldw	r3,0(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   1131c:	20801015 	stw	r2,64(r4)
	m_V = new XXDouble[12 + 1];		/* variables */
   11320:	01000d04 	movi	r4,52
   11324:	18bffd17 	ldw	r2,-12(r3)
   11328:	2885883a 	add	r2,r5,r2
   1132c:	d8800115 	stw	r2,4(sp)
   11330:	0013bf80 	call	13bf8 <_Znaj>
	m_s = new XXDouble[3 + 1];		/* states */
   11334:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[12 + 1];		/* variables */
   11338:	d9000117 	ldw	r4,4(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   1133c:	28c00017 	ldw	r3,0(r5)
	m_V = new XXDouble[12 + 1];		/* variables */
   11340:	20801115 	stw	r2,68(r4)
	m_s = new XXDouble[3 + 1];		/* states */
   11344:	01000404 	movi	r4,16
   11348:	18bffd17 	ldw	r2,-12(r3)
   1134c:	2885883a 	add	r2,r5,r2
   11350:	d8800115 	stw	r2,4(sp)
   11354:	0013bf80 	call	13bf8 <_Znaj>
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11358:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   1135c:	d9000117 	ldw	r4,4(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11360:	28c00017 	ldw	r3,0(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   11364:	20801215 	stw	r2,72(r4)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11368:	01000404 	movi	r4,16
   1136c:	18bffd17 	ldw	r2,-12(r3)
   11370:	2885883a 	add	r2,r5,r2
   11374:	d8800115 	stw	r2,4(sp)
   11378:	0013bf80 	call	13bf8 <_Znaj>
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1137c:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11380:	d9000117 	ldw	r4,4(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   11384:	28c00017 	ldw	r3,0(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11388:	20801315 	stw	r2,76(r4)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1138c:	01000304 	movi	r4,12
   11390:	18bffd17 	ldw	r2,-12(r3)
   11394:	2885883a 	add	r2,r5,r2
   11398:	d8800115 	stw	r2,4(sp)
   1139c:	0013bf80 	call	13bf8 <_Znaj>
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113a0:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   113a4:	d9000117 	ldw	r4,4(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113a8:	28c00017 	ldw	r3,0(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   113ac:	20801415 	stw	r2,80(r4)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113b0:	01000104 	movi	r4,4
   113b4:	18bffd17 	ldw	r2,-12(r3)
   113b8:	2885883a 	add	r2,r5,r2
   113bc:	d8800115 	stw	r2,4(sp)
   113c0:	0013bf80 	call	13bf8 <_Znaj>
	m_workarray = new XXDouble[0 + 1];
   113c4:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113c8:	d9000117 	ldw	r4,4(sp)
	m_workarray = new XXDouble[0 + 1];
   113cc:	28c00017 	ldw	r3,0(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   113d0:	20801515 	stw	r2,84(r4)
	m_workarray = new XXDouble[0 + 1];
   113d4:	01000104 	movi	r4,4
   113d8:	18bffd17 	ldw	r2,-12(r3)
   113dc:	2885883a 	add	r2,r5,r2
   113e0:	d8800115 	stw	r2,4(sp)
   113e4:	0013bf80 	call	13bf8 <_Znaj>
   113e8:	d8c00117 	ldw	r3,4(sp)
	Reset(0.0);
   113ec:	d9000017 	ldw	r4,0(sp)
   113f0:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   113f4:	18801615 	stw	r2,88(r3)
	Reset(0.0);
   113f8:	0010fc40 	call	10fc4 <_ZN22PositionControllerTilt5ResetEf>
	m_finish_time = 20.0;
   113fc:	d9400017 	ldw	r5,0(sp)
   11400:	00d06834 	movhi	r3,16800
   11404:	d9000304 	addi	r4,sp,12
   11408:	28800017 	ldw	r2,0(r5)
   1140c:	10bffd17 	ldw	r2,-12(r2)
   11410:	2885883a 	add	r2,r5,r2
   11414:	10c00415 	stw	r3,16(r2)
   11418:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
}
   1141c:	dfc01117 	ldw	ra,68(sp)
   11420:	df001017 	ldw	fp,64(sp)
   11424:	dec01204 	addi	sp,sp,72
   11428:	f800283a 	ret
PositionControllerTilt::PositionControllerTilt(void)
   1142c:	d8800517 	ldw	r2,20(sp)
   11430:	d9000217 	ldw	r4,8(sp)
   11434:	d8800015 	stw	r2,0(sp)
   11438:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   1143c:	d9000017 	ldw	r4,0(sp)
   11440:	00bfffc4 	movi	r2,-1
   11444:	d8800415 	stw	r2,16(sp)
   11448:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

0001144c <_ZN22PositionControllerTiltC1Ev>:
   1144c:	deffef04 	addi	sp,sp,-68
   11450:	01400074 	movhi	r5,1
   11454:	00c000b4 	movhi	r3,2
   11458:	00800074 	movhi	r2,1
   1145c:	200d883a 	mov	r6,r4
   11460:	294c2104 	addi	r5,r5,12420
   11464:	18e1c884 	addi	r3,r3,-30942
   11468:	10856f04 	addi	r2,r2,5564
   1146c:	d9000204 	addi	r4,sp,8
   11470:	dfc01015 	stw	ra,64(sp)
   11474:	d9800015 	stw	r6,0(sp)
   11478:	d9400815 	stw	r5,32(sp)
   1147c:	d8c00915 	stw	r3,36(sp)
   11480:	d8800b15 	stw	r2,44(sp)
   11484:	df000f15 	stw	fp,60(sp)
   11488:	df000a15 	stw	fp,40(sp)
   1148c:	dec00c15 	stw	sp,48(sp)
   11490:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   11494:	d9400017 	ldw	r5,0(sp)
   11498:	00c000b4 	movhi	r3,2
   1149c:	008000b4 	movhi	r2,2
   114a0:	18e22404 	addi	r3,r3,-30576
   114a4:	10a22b04 	addi	r2,r2,-30548
   114a8:	29000204 	addi	r4,r5,8
   114ac:	28c00015 	stw	r3,0(r5)
   114b0:	28800415 	stw	r2,16(r5)
   114b4:	00bfffc4 	movi	r2,-1
   114b8:	d9000115 	stw	r4,4(sp)
   114bc:	d8800315 	stw	r2,12(sp)
   114c0:	00102400 	call	10240 <_ZN8DiscreteC1Ev>
	m_number_constants = 0;
   114c4:	d9400017 	ldw	r5,0(sp)
	m_number_parameters = 7;
   114c8:	00c001c4 	movi	r3,7
	m_number_initialvalues = 3;
   114cc:	008000c4 	movi	r2,3
	m_number_parameters = 7;
   114d0:	28c00b15 	stw	r3,44(r5)
	m_number_variables = 12;
   114d4:	00c00304 	movi	r3,12
	m_number_initialvalues = 3;
   114d8:	28800c15 	stw	r2,48(r5)
	m_number_states = 3;
   114dc:	28800e15 	stw	r2,56(r5)
	m_number_rates = 3;
   114e0:	28800f15 	stw	r2,60(r5)
	m_number_constants = 0;
   114e4:	28000a15 	stw	zero,40(r5)
	m_number_variables = 12;
   114e8:	28c00d15 	stw	r3,52(r5)
	m_number_matrices = 0;
   114ec:	28001015 	stw	zero,64(r5)
	m_number_unnamed = 0;
   114f0:	28001115 	stw	zero,68(r5)
	m_C = new XXDouble[0 + 1];		/* constants */
   114f4:	00800044 	movi	r2,1
   114f8:	01000104 	movi	r4,4
   114fc:	d8800315 	stw	r2,12(sp)
   11500:	0013bf80 	call	13bf8 <_Znaj>
   11504:	d9400017 	ldw	r5,0(sp)
	m_P = new XXDouble[7 + 1];		/* parameters */
   11508:	01000804 	movi	r4,32
	m_C = new XXDouble[0 + 1];		/* constants */
   1150c:	28801215 	stw	r2,72(r5)
	m_P = new XXDouble[7 + 1];		/* parameters */
   11510:	0013bf80 	call	13bf8 <_Znaj>
   11514:	d9400017 	ldw	r5,0(sp)
	m_I = new XXDouble[3 + 1];		/* initial values */
   11518:	01000404 	movi	r4,16
	m_P = new XXDouble[7 + 1];		/* parameters */
   1151c:	28801315 	stw	r2,76(r5)
	m_I = new XXDouble[3 + 1];		/* initial values */
   11520:	0013bf80 	call	13bf8 <_Znaj>
   11524:	d9400017 	ldw	r5,0(sp)
	m_V = new XXDouble[12 + 1];		/* variables */
   11528:	01000d04 	movi	r4,52
	m_I = new XXDouble[3 + 1];		/* initial values */
   1152c:	28801415 	stw	r2,80(r5)
	m_V = new XXDouble[12 + 1];		/* variables */
   11530:	0013bf80 	call	13bf8 <_Znaj>
   11534:	d9400017 	ldw	r5,0(sp)
	m_s = new XXDouble[3 + 1];		/* states */
   11538:	01000404 	movi	r4,16
	m_V = new XXDouble[12 + 1];		/* variables */
   1153c:	28801515 	stw	r2,84(r5)
	m_s = new XXDouble[3 + 1];		/* states */
   11540:	0013bf80 	call	13bf8 <_Znaj>
   11544:	d9400017 	ldw	r5,0(sp)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11548:	01000404 	movi	r4,16
	m_s = new XXDouble[3 + 1];		/* states */
   1154c:	28801615 	stw	r2,88(r5)
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   11550:	0013bf80 	call	13bf8 <_Znaj>
   11554:	d9400017 	ldw	r5,0(sp)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   11558:	01000304 	movi	r4,12
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
   1155c:	28801715 	stw	r2,92(r5)
	m_M = new XXMatrix[0 + 1];		/* matrices */
   11560:	0013bf80 	call	13bf8 <_Znaj>
   11564:	d9400017 	ldw	r5,0(sp)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   11568:	01000104 	movi	r4,4
	m_M = new XXMatrix[0 + 1];		/* matrices */
   1156c:	28801815 	stw	r2,96(r5)
	m_U = new XXDouble[0 + 1];		/* unnamed */
   11570:	0013bf80 	call	13bf8 <_Znaj>
   11574:	d9400017 	ldw	r5,0(sp)
	m_workarray = new XXDouble[0 + 1];
   11578:	01000104 	movi	r4,4
	m_U = new XXDouble[0 + 1];		/* unnamed */
   1157c:	28801915 	stw	r2,100(r5)
	m_workarray = new XXDouble[0 + 1];
   11580:	0013bf80 	call	13bf8 <_Znaj>
   11584:	d8c00017 	ldw	r3,0(sp)
	Reset(0.0);
   11588:	000b883a 	mov	r5,zero
	m_workarray = new XXDouble[0 + 1];
   1158c:	18801a15 	stw	r2,104(r3)
	Reset(0.0);
   11590:	1809883a 	mov	r4,r3
   11594:	0010fc40 	call	10fc4 <_ZN22PositionControllerTilt5ResetEf>
	m_finish_time = 20.0;
   11598:	d9400017 	ldw	r5,0(sp)
   1159c:	00906834 	movhi	r2,16800
   115a0:	d9000204 	addi	r4,sp,8
   115a4:	28800815 	stw	r2,32(r5)
   115a8:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
}
   115ac:	dfc01017 	ldw	ra,64(sp)
   115b0:	df000f17 	ldw	fp,60(sp)
   115b4:	dec01104 	addi	sp,sp,68
   115b8:	f800283a 	ret
PositionControllerTilt::PositionControllerTilt(void)
   115bc:	d8800417 	ldw	r2,16(sp)
   115c0:	d9000117 	ldw	r4,4(sp)
   115c4:	d8800015 	stw	r2,0(sp)
   115c8:	00101bc0 	call	101bc <_ZN8DiscreteD1Ev>
   115cc:	d9000017 	ldw	r4,0(sp)
   115d0:	00bfffc4 	movi	r2,-1
   115d4:	d8800315 	stw	r2,12(sp)
   115d8:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

000115dc <_ZN22PositionControllerTiltD2Ev>:
PositionControllerTilt::~PositionControllerTilt(void)
   115dc:	28c00017 	ldw	r3,0(r5)
   115e0:	defffe04 	addi	sp,sp,-8
   115e4:	dc000015 	stw	r16,0(sp)
   115e8:	18bffd17 	ldw	r2,-12(r3)
   115ec:	dfc00115 	stw	ra,4(sp)
   115f0:	20c00015 	stw	r3,0(r4)
   115f4:	2085883a 	add	r2,r4,r2
   115f8:	28c00117 	ldw	r3,4(r5)
   115fc:	2021883a 	mov	r16,r4
	delete[] m_C;
   11600:	11000e17 	ldw	r4,56(r2)
PositionControllerTilt::~PositionControllerTilt(void)
   11604:	10c00015 	stw	r3,0(r2)
	delete[] m_C;
   11608:	20000126 	beq	r4,zero,11610 <_ZN22PositionControllerTiltD2Ev+0x34>
   1160c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_P;
   11610:	80800017 	ldw	r2,0(r16)
   11614:	10bffd17 	ldw	r2,-12(r2)
   11618:	8085883a 	add	r2,r16,r2
   1161c:	11000f17 	ldw	r4,60(r2)
   11620:	20000426 	beq	r4,zero,11634 <_ZN22PositionControllerTiltD2Ev+0x58>
   11624:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_I;
   11628:	80800017 	ldw	r2,0(r16)
   1162c:	10bffd17 	ldw	r2,-12(r2)
   11630:	8085883a 	add	r2,r16,r2
   11634:	11001017 	ldw	r4,64(r2)
   11638:	20000426 	beq	r4,zero,1164c <_ZN22PositionControllerTiltD2Ev+0x70>
   1163c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_V;
   11640:	80800017 	ldw	r2,0(r16)
   11644:	10bffd17 	ldw	r2,-12(r2)
   11648:	8085883a 	add	r2,r16,r2
   1164c:	11001117 	ldw	r4,68(r2)
   11650:	20000426 	beq	r4,zero,11664 <_ZN22PositionControllerTiltD2Ev+0x88>
   11654:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_s;
   11658:	80800017 	ldw	r2,0(r16)
   1165c:	10bffd17 	ldw	r2,-12(r2)
   11660:	8085883a 	add	r2,r16,r2
   11664:	11001217 	ldw	r4,72(r2)
   11668:	20000426 	beq	r4,zero,1167c <_ZN22PositionControllerTiltD2Ev+0xa0>
   1166c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_R;
   11670:	80800017 	ldw	r2,0(r16)
   11674:	10bffd17 	ldw	r2,-12(r2)
   11678:	8085883a 	add	r2,r16,r2
   1167c:	11001317 	ldw	r4,76(r2)
   11680:	20000426 	beq	r4,zero,11694 <_ZN22PositionControllerTiltD2Ev+0xb8>
   11684:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_M;
   11688:	80800017 	ldw	r2,0(r16)
   1168c:	10bffd17 	ldw	r2,-12(r2)
   11690:	8085883a 	add	r2,r16,r2
   11694:	11001417 	ldw	r4,80(r2)
   11698:	20000426 	beq	r4,zero,116ac <_ZN22PositionControllerTiltD2Ev+0xd0>
   1169c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_U;
   116a0:	80800017 	ldw	r2,0(r16)
   116a4:	10bffd17 	ldw	r2,-12(r2)
   116a8:	8085883a 	add	r2,r16,r2
   116ac:	11001517 	ldw	r4,84(r2)
   116b0:	20000426 	beq	r4,zero,116c4 <_ZN22PositionControllerTiltD2Ev+0xe8>
   116b4:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_workarray;
   116b8:	80800017 	ldw	r2,0(r16)
   116bc:	10bffd17 	ldw	r2,-12(r2)
   116c0:	8085883a 	add	r2,r16,r2
   116c4:	11001617 	ldw	r4,88(r2)
   116c8:	20000126 	beq	r4,zero,116d0 <_ZN22PositionControllerTiltD2Ev+0xf4>
   116cc:	0012b5c0 	call	12b5c <_ZdaPv>
PositionControllerTilt::~PositionControllerTilt(void)
   116d0:	81000204 	addi	r4,r16,8
}
   116d4:	dfc00117 	ldw	ra,4(sp)
   116d8:	dc000017 	ldw	r16,0(sp)
   116dc:	dec00204 	addi	sp,sp,8
PositionControllerTilt::~PositionControllerTilt(void)
   116e0:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

000116e4 <_ZN22PositionControllerTiltD1Ev>:
   116e4:	defffe04 	addi	sp,sp,-8
   116e8:	dc000015 	stw	r16,0(sp)
   116ec:	00c000b4 	movhi	r3,2
   116f0:	2021883a 	mov	r16,r4
   116f4:	008000b4 	movhi	r2,2
	delete[] m_C;
   116f8:	21001217 	ldw	r4,72(r4)
PositionControllerTilt::~PositionControllerTilt(void)
   116fc:	dfc00115 	stw	ra,4(sp)
   11700:	18e22404 	addi	r3,r3,-30576
   11704:	10a22b04 	addi	r2,r2,-30548
   11708:	80c00015 	stw	r3,0(r16)
   1170c:	80800415 	stw	r2,16(r16)
	delete[] m_C;
   11710:	20000126 	beq	r4,zero,11718 <_ZN22PositionControllerTiltD1Ev+0x34>
   11714:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_P;
   11718:	81001317 	ldw	r4,76(r16)
   1171c:	20000126 	beq	r4,zero,11724 <_ZN22PositionControllerTiltD1Ev+0x40>
   11720:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_I;
   11724:	81001417 	ldw	r4,80(r16)
   11728:	20000126 	beq	r4,zero,11730 <_ZN22PositionControllerTiltD1Ev+0x4c>
   1172c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_V;
   11730:	81001517 	ldw	r4,84(r16)
   11734:	20000126 	beq	r4,zero,1173c <_ZN22PositionControllerTiltD1Ev+0x58>
   11738:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_s;
   1173c:	81001617 	ldw	r4,88(r16)
   11740:	20000126 	beq	r4,zero,11748 <_ZN22PositionControllerTiltD1Ev+0x64>
   11744:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_R;
   11748:	81001717 	ldw	r4,92(r16)
   1174c:	20000126 	beq	r4,zero,11754 <_ZN22PositionControllerTiltD1Ev+0x70>
   11750:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_M;
   11754:	81001817 	ldw	r4,96(r16)
   11758:	20000126 	beq	r4,zero,11760 <_ZN22PositionControllerTiltD1Ev+0x7c>
   1175c:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_U;
   11760:	81001917 	ldw	r4,100(r16)
   11764:	20000126 	beq	r4,zero,1176c <_ZN22PositionControllerTiltD1Ev+0x88>
   11768:	0012b5c0 	call	12b5c <_ZdaPv>
	delete[] m_workarray;
   1176c:	81001a17 	ldw	r4,104(r16)
   11770:	20000126 	beq	r4,zero,11778 <_ZN22PositionControllerTiltD1Ev+0x94>
   11774:	0012b5c0 	call	12b5c <_ZdaPv>
PositionControllerTilt::~PositionControllerTilt(void)
   11778:	81000204 	addi	r4,r16,8
}
   1177c:	dfc00117 	ldw	ra,4(sp)
   11780:	dc000017 	ldw	r16,0(sp)
   11784:	dec00204 	addi	sp,sp,8
PositionControllerTilt::~PositionControllerTilt(void)
   11788:	00101bc1 	jmpi	101bc <_ZN8DiscreteD1Ev>

0001178c <_ZTv0_n16_N22PositionControllerTiltD1Ev>:
		virtual ~PositionControllerTilt(void);
   1178c:	2009883a 	mov	r4,r4
   11790:	20800017 	ldw	r2,0(r4)
   11794:	10bffc04 	addi	r2,r2,-16
   11798:	10800017 	ldw	r2,0(r2)
   1179c:	2089883a 	add	r4,r4,r2
   117a0:	00116e41 	jmpi	116e4 <_ZN22PositionControllerTiltD1Ev>

000117a4 <_ZN22PositionControllerTiltD0Ev>:
   117a4:	defffe04 	addi	sp,sp,-8
   117a8:	dc000015 	stw	r16,0(sp)
   117ac:	dfc00115 	stw	ra,4(sp)
   117b0:	2021883a 	mov	r16,r4
}
   117b4:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
   117b8:	01401b04 	movi	r5,108
   117bc:	8009883a 	mov	r4,r16
   117c0:	dfc00117 	ldw	ra,4(sp)
   117c4:	dc000017 	ldw	r16,0(sp)
   117c8:	dec00204 	addi	sp,sp,8
   117cc:	0012b581 	jmpi	12b58 <_ZdlPvj>

000117d0 <_ZTv0_n16_N22PositionControllerTiltD0Ev>:
   117d0:	20800017 	ldw	r2,0(r4)
   117d4:	defffe04 	addi	sp,sp,-8
   117d8:	dc000015 	stw	r16,0(sp)
   117dc:	143ffc17 	ldw	r16,-16(r2)
   117e0:	dfc00115 	stw	ra,4(sp)
   117e4:	2421883a 	add	r16,r4,r16
   117e8:	8009883a 	mov	r4,r16
   117ec:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
   117f0:	01401b04 	movi	r5,108
   117f4:	8009883a 	mov	r4,r16
   117f8:	dfc00117 	ldw	ra,4(sp)
   117fc:	dc000017 	ldw	r16,0(sp)
   11800:	dec00204 	addi	sp,sp,8
   11804:	0012b581 	jmpi	12b58 <_ZdlPvj>

00011808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>:
	m_initialize = true;
   11808:	20800017 	ldw	r2,0(r4)
{
   1180c:	defffb04 	addi	sp,sp,-20
   11810:	dfc00415 	stw	ra,16(sp)
	m_initialize = true;
   11814:	10bffd17 	ldw	r2,-12(r2)
{
   11818:	dcc00315 	stw	r19,12(sp)
   1181c:	dc800215 	stw	r18,8(sp)
	m_initialize = true;
   11820:	2085883a 	add	r2,r4,r2
	m_P[0] = 0.0;		/* corrGain\K */
   11824:	10c00f17 	ldw	r3,60(r2)
{
   11828:	dc400115 	stw	r17,4(sp)
   1182c:	dc000015 	stw	r16,0(sp)
	m_initialize = true;
   11830:	02000044 	movi	r8,1
	m_P[3] = 0.001;		/* PID1\beta */
   11834:	02cea0f4 	movhi	r11,14979
	m_initialize = true;
   11838:	12000105 	stb	r8,4(r2)
	m_stop_run = false;
   1183c:	10000185 	stb	zero,6(r2)
{
   11840:	2021883a 	mov	r16,r4
	m_P[3] = 0.001;		/* PID1\beta */
   11844:	5ac49bc4 	addi	r11,r11,4719
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   11848:	11001017 	ldw	r4,64(r2)
	m_P[1] = 1.6;		/* PID1\kp */
   1184c:	034ff374 	movhi	r13,16333
	m_P[2] = 0.05;		/* PID1\tauD */
   11850:	030f5374 	movhi	r12,15693
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   11854:	02afdf74 	movhi	r10,49021
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11858:	024fdf74 	movhi	r9,16253
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   1185c:	12001217 	ldw	r8,72(r2)
	m_P[1] = 1.6;		/* PID1\kp */
   11860:	6b733344 	addi	r13,r13,-13107
	m_P[3] = 0.001;		/* PID1\beta */
   11864:	1ac00315 	stw	r11,12(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   11868:	63333344 	addi	r12,r12,-13107
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   1186c:	529c2904 	addi	r10,r10,28836
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11870:	4a5c2904 	addi	r9,r9,28836
	m_P[4] = 10.5;		/* PID1\tauI */
   11874:	02d04a34 	movhi	r11,16680
	m_P[1] = 1.6;		/* PID1\kp */
   11878:	1b400115 	stw	r13,4(r3)
	m_P[2] = 0.05;		/* PID1\tauD */
   1187c:	1b000215 	stw	r12,8(r3)
	m_P[4] = 10.5;		/* PID1\tauI */
   11880:	1ac00415 	stw	r11,16(r3)
	m_P[5] = -0.99;		/* SignalLimiter2\minimum */
   11884:	1a800515 	stw	r10,20(r3)
	m_P[6] = 0.99;		/* SignalLimiter2\maximum */
   11888:	1a400615 	stw	r9,24(r3)
	m_P[0] = 0.0;		/* corrGain\K */
   1188c:	18000015 	stw	zero,0(r3)
	m_I[1] = 0.0;		/* PID1\error_previous_initial */
   11890:	20000115 	stw	zero,4(r4)
	m_I[2] = 0.0;		/* PID1\uI_previous_initial */
   11894:	20000215 	stw	zero,8(r4)
	m_I[0] = 0.0;		/* PID1\uD_previous_initial */
   11898:	20000015 	stw	zero,0(r4)
	m_s[0] = m_I[0];		/* PID1\uD_previous */
   1189c:	40000015 	stw	zero,0(r8)
	m_s[1] = m_I[1];		/* PID1\error_previous */
   118a0:	20c00117 	ldw	r3,4(r4)
{
   118a4:	2823883a 	mov	r17,r5
	myintegmethod.Initialize(this);
   118a8:	100b883a 	mov	r5,r2
	m_s[1] = m_I[1];		/* PID1\error_previous */
   118ac:	40c00115 	stw	r3,4(r8)
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   118b0:	20c00217 	ldw	r3,8(r4)
	myintegmethod.Initialize(this);
   118b4:	81000204 	addi	r4,r16,8
{
   118b8:	3827883a 	mov	r19,r7
	m_s[2] = m_I[2];		/* PID1\uI_previous */
   118bc:	40c00215 	stw	r3,8(r8)
{
   118c0:	3025883a 	mov	r18,r6
	myintegmethod.Initialize(this);
   118c4:	00101c00 	call	101c0 <_ZN8Discrete10InitializeEP13Submodel20sim>
	m_time = t;
   118c8:	80c00017 	ldw	r3,0(r16)
	CalculateDynamic ();
   118cc:	8009883a 	mov	r4,r16
	m_time = t;
   118d0:	18bffd17 	ldw	r2,-12(r3)
	CalculateDynamic ();
   118d4:	18c00217 	ldw	r3,8(r3)
	m_time = t;
   118d8:	8085883a 	add	r2,r16,r2
   118dc:	14c00515 	stw	r19,20(r2)
	m_V[8] = u[0];		/* corr */
   118e0:	89400017 	ldw	r5,0(r17)
   118e4:	10801117 	ldw	r2,68(r2)
   118e8:	11400815 	stw	r5,32(r2)
	m_V[9] = u[1];		/* in */
   118ec:	89400117 	ldw	r5,4(r17)
   118f0:	11400915 	stw	r5,36(r2)
	m_V[10] = u[2];		/* position */
   118f4:	89400217 	ldw	r5,8(r17)
   118f8:	11400a15 	stw	r5,40(r2)
	CalculateDynamic ();
   118fc:	183ee83a 	callr	r3
	m_V[11] = m_V[7];
   11900:	80800017 	ldw	r2,0(r16)
   11904:	10bffd17 	ldw	r2,-12(r2)
   11908:	8085883a 	add	r2,r16,r2
   1190c:	11001117 	ldw	r4,68(r2)
   11910:	20c00717 	ldw	r3,28(r4)
   11914:	20c00b15 	stw	r3,44(r4)
	y[0] = 	m_V[11];		/* out */
   11918:	90c00015 	stw	r3,0(r18)
	m_initialize = false;
   1191c:	10000105 	stb	zero,4(r2)
	state = mainrun;
   11920:	00800044 	movi	r2,1
   11924:	80800115 	stw	r2,4(r16)
}
   11928:	dfc00417 	ldw	ra,16(sp)
   1192c:	dcc00317 	ldw	r19,12(sp)
   11930:	dc800217 	ldw	r18,8(sp)
   11934:	dc400117 	ldw	r17,4(sp)
   11938:	dc000017 	ldw	r16,0(sp)
   1193c:	dec00504 	addi	sp,sp,20
   11940:	f800283a 	ret

00011944 <_ZN22PositionControllerTilt9CalculateEPfS0_>:
	switch (state)
   11944:	20800117 	ldw	r2,4(r4)
   11948:	10004026 	beq	r2,zero,11a4c <_ZN22PositionControllerTilt9CalculateEPfS0_+0x108>
   1194c:	10800060 	cmpeqi	r2,r2,1
   11950:	10002526 	beq	r2,zero,119e8 <_ZN22PositionControllerTilt9CalculateEPfS0_+0xa4>
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11954:	20800017 	ldw	r2,0(r4)
{
   11958:	defffd04 	addi	sp,sp,-12
   1195c:	dc000015 	stw	r16,0(sp)
   11960:	2021883a 	mov	r16,r4
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11964:	113ffd17 	ldw	r4,-12(r2)
{
   11968:	dc400115 	stw	r17,4(sp)
   1196c:	dfc00215 	stw	ra,8(sp)
			if ( ( m_time <= (m_finish_time - m_step_size  + c_delta )) || ( m_finish_time == 0.0 ) )
   11970:	8109883a 	add	r4,r16,r4
   11974:	20800217 	ldw	r2,8(r4)
   11978:	3023883a 	mov	r17,r6
   1197c:	21800417 	ldw	r6,16(r4)
   11980:	21c00517 	ldw	r7,20(r4)
   11984:	2807883a 	mov	r3,r5
   11988:	014cf5f4 	movhi	r5,13271
   1198c:	296fe544 	addi	r5,r5,-16491
   11990:	3085ffb2 	custom	254,r2,r6,r2
   11994:	1145ff72 	custom	253,r2,r2,r5
   11998:	3885f9b2 	custom	230,r2,r7,r2
   1199c:	1000131e 	bne	r2,zero,119ec <_ZN22PositionControllerTilt9CalculateEPfS0_+0xa8>
   119a0:	3085f8b2 	custom	226,r2,r6,r2
   119a4:	10001126 	beq	r2,zero,119ec <_ZN22PositionControllerTilt9CalculateEPfS0_+0xa8>
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   119a8:	20800183 	ldbu	r2,6(r4)
				state = finished;
   119ac:	00c00084 	movi	r3,2
   119b0:	80c00115 	stw	r3,4(r16)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   119b4:	1000051e 	bne	r2,zero,119cc <_ZN22PositionControllerTilt9CalculateEPfS0_+0x88>
   119b8:	008cf5f4 	movhi	r2,13271
   119bc:	10afe544 	addi	r2,r2,-16491
   119c0:	388fff72 	custom	253,r7,r7,r2
   119c4:	398df932 	custom	228,r6,r7,r6
   119c8:	30000226 	beq	r6,zero,119d4 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x90>
				state = finished;
   119cc:	00800084 	movi	r2,2
   119d0:	80800115 	stw	r2,4(r16)
}
   119d4:	dfc00217 	ldw	ra,8(sp)
   119d8:	dc400117 	ldw	r17,4(sp)
   119dc:	dc000017 	ldw	r16,0(sp)
   119e0:	dec00304 	addi	sp,sp,12
   119e4:	f800283a 	ret
   119e8:	f800283a 	ret
	m_V[8] = u[0];		/* corr */
   119ec:	20801117 	ldw	r2,68(r4)
   119f0:	19400017 	ldw	r5,0(r3)
				myintegmethod.Step();
   119f4:	81000204 	addi	r4,r16,8
	m_V[8] = u[0];		/* corr */
   119f8:	11400815 	stw	r5,32(r2)
	m_V[9] = u[1];		/* in */
   119fc:	19400117 	ldw	r5,4(r3)
   11a00:	11400915 	stw	r5,36(r2)
	m_V[10] = u[2];		/* position */
   11a04:	18c00217 	ldw	r3,8(r3)
   11a08:	10c00a15 	stw	r3,40(r2)
				myintegmethod.Step();
   11a0c:	00101dc0 	call	101dc <_ZN8Discrete4StepEv>
	m_V[11] = m_V[7];
   11a10:	80800017 	ldw	r2,0(r16)
   11a14:	10bffd17 	ldw	r2,-12(r2)
   11a18:	8085883a 	add	r2,r16,r2
   11a1c:	11001117 	ldw	r4,68(r2)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   11a20:	11400183 	ldbu	r5,6(r2)
	m_V[11] = m_V[7];
   11a24:	20c00717 	ldw	r3,28(r4)
   11a28:	20c00b15 	stw	r3,44(r4)
	y[0] = 	m_V[11];		/* out */
   11a2c:	88c00015 	stw	r3,0(r17)
			if ( ( m_stop_run == true ) || (( m_finish_time != 0.0 ) && ( m_time + c_delta >= m_finish_time)) )
   11a30:	283fe61e 	bne	r5,zero,119cc <_ZN22PositionControllerTilt9CalculateEPfS0_+0x88>
   11a34:	11800417 	ldw	r6,16(r2)
   11a38:	0007883a 	mov	r3,zero
   11a3c:	30c7f8b2 	custom	226,r3,r6,r3
   11a40:	183fe426 	beq	r3,zero,119d4 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x90>
   11a44:	11c00517 	ldw	r7,20(r2)
   11a48:	003fdb06 	br	119b8 <_ZN22PositionControllerTilt9CalculateEPfS0_+0x74>
			Initialize(u, y, 0.0);
   11a4c:	000f883a 	mov	r7,zero
   11a50:	00118081 	jmpi	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>

00011a54 <_Z16handleTimerEventv>:
volatile bool tilt_homing_done = true;
volatile bool pan_homing_done = false;

void handleTimerEvent()
{
	if(tilt_homing_done && pan_homing_done)
   11a54:	d0a00f83 	ldbu	r2,-32706(gp)
{
   11a58:	defffe04 	addi	sp,sp,-8
	{
		u_tilt[2] = tilt_motor.getAngle();
   11a5c:	010000b4 	movhi	r4,2
{
   11a60:	dfc00115 	stw	ra,4(sp)
   11a64:	dc000015 	stw	r16,0(sp)
	if(tilt_homing_done && pan_homing_done)
   11a68:	10803fcc 	andi	r2,r2,255
		u_tilt[2] = tilt_motor.getAngle();
   11a6c:	2127c004 	addi	r4,r4,-24832
	if(tilt_homing_done && pan_homing_done)
   11a70:	10000326 	beq	r2,zero,11a80 <_Z16handleTimerEventv+0x2c>
   11a74:	d0a20c03 	ldbu	r2,-30672(gp)
   11a78:	10803fcc 	andi	r2,r2,255
   11a7c:	1000161e 	bne	r2,zero,11ad8 <_Z16handleTimerEventv+0x84>
		}
	}
	else
	{
		// Motor is still homing!
		if(tilt_motor.isAtInitialPosition() == true && !tilt_homing_done)
   11a80:	00123ec0 	call	123ec <_ZN5Plant5Motor19isAtInitialPositionEv>
   11a84:	10803fcc 	andi	r2,r2,255
   11a88:	10000526 	beq	r2,zero,11aa0 <_Z16handleTimerEventv+0x4c>
   11a8c:	d0a00f83 	ldbu	r2,-32706(gp)
   11a90:	10803fcc 	andi	r2,r2,255
   11a94:	1000021e 	bne	r2,zero,11aa0 <_Z16handleTimerEventv+0x4c>
		{
			tilt_homing_done = true;
   11a98:	00800044 	movi	r2,1
   11a9c:	d0a00f85 	stb	r2,-32706(gp)
		}

		if(pan_motor.isAtInitialPosition() == true && !pan_homing_done)
   11aa0:	010000b4 	movhi	r4,2
   11aa4:	2127b604 	addi	r4,r4,-24872
   11aa8:	00123ec0 	call	123ec <_ZN5Plant5Motor19isAtInitialPositionEv>
   11aac:	10803fcc 	andi	r2,r2,255
   11ab0:	10000526 	beq	r2,zero,11ac8 <_Z16handleTimerEventv+0x74>
   11ab4:	d0a20c03 	ldbu	r2,-30672(gp)
   11ab8:	10803fcc 	andi	r2,r2,255
   11abc:	1000021e 	bne	r2,zero,11ac8 <_Z16handleTimerEventv+0x74>
		{
			pan_homing_done = true;
   11ac0:	00800044 	movi	r2,1
   11ac4:	d0a20c05 	stb	r2,-30672(gp)
		}
	}
}
   11ac8:	dfc00117 	ldw	ra,4(sp)
   11acc:	dc000017 	ldw	r16,0(sp)
   11ad0:	dec00204 	addi	sp,sp,8
   11ad4:	f800283a 	ret
		u_tilt[2] = tilt_motor.getAngle();
   11ad8:	00123c00 	call	123c0 <_ZN5Plant5Motor8getAngleEv>
   11adc:	040000b4 	movhi	r16,2
		u_pan[2] = pan_motor.getAngle();
   11ae0:	010000b4 	movhi	r4,2
   11ae4:	2127b604 	addi	r4,r4,-24872
		u_tilt[2] = tilt_motor.getAngle();
   11ae8:	8427b204 	addi	r16,r16,-24888
   11aec:	80800215 	stw	r2,8(r16)
		u_pan[2] = pan_motor.getAngle();
   11af0:	00123c00 	call	123c0 <_ZN5Plant5Motor8getAngleEv>
		if (!tilt_model.IsFinished())
   11af4:	010000b4 	movhi	r4,2
		u_pan[2] = pan_motor.getAngle();
   11af8:	00c000b4 	movhi	r3,2
		if (!tilt_model.IsFinished())
   11afc:	21279304 	addi	r4,r4,-25012
		u_pan[2] = pan_motor.getAngle();
   11b00:	18a7b015 	stw	r2,-24896(r3)
		if (!tilt_model.IsFinished())
   11b04:	00111140 	call	11114 <_ZN22PositionControllerTilt10IsFinishedEv>
   11b08:	10803fcc 	andi	r2,r2,255
   11b0c:	10002226 	beq	r2,zero,11b98 <_Z16handleTimerEventv+0x144>
		if (!pan_model.IsFinished())
   11b10:	010000b4 	movhi	r4,2
   11b14:	21277804 	addi	r4,r4,-25120
   11b18:	00111140 	call	11114 <_ZN22PositionControllerTilt10IsFinishedEv>
   11b1c:	10803fcc 	andi	r2,r2,255
			pan_model.Calculate(u_pan, y_pan);
   11b20:	014000b4 	movhi	r5,2
   11b24:	010000b4 	movhi	r4,2
		if (!pan_model.IsFinished())
   11b28:	1000111e 	bne	r2,zero,11b70 <_Z16handleTimerEventv+0x11c>
			pan_model.Calculate(u_pan, y_pan);
   11b2c:	2967ae04 	addi	r5,r5,-24904
   11b30:	21277804 	addi	r4,r4,-25120
   11b34:	d1a20d04 	addi	r6,gp,-30668
   11b38:	00119440 	call	11944 <_ZN22PositionControllerTilt9CalculateEPfS0_>
			pan_motor.setSpeedAndDirection(int8_t (y_pan[0] * 100));
   11b3c:	d1620d17 	ldw	r5,-30668(gp)
   11b40:	0090b234 	movhi	r2,17096
   11b44:	010000b4 	movhi	r4,2
   11b48:	288bff32 	custom	252,r5,r5,r2
   11b4c:	280bfe72 	custom	249,r5,r5,zero
   11b50:	29403fcc 	andi	r5,r5,255
   11b54:	2940201c 	xori	r5,r5,128
   11b58:	297fe004 	addi	r5,r5,-128
   11b5c:	2127b604 	addi	r4,r4,-24872
}
   11b60:	dfc00117 	ldw	ra,4(sp)
   11b64:	dc000017 	ldw	r16,0(sp)
   11b68:	dec00204 	addi	sp,sp,8
			pan_motor.setSpeedAndDirection(int8_t (y_pan[0] * 100));
   11b6c:	00121841 	jmpi	12184 <_ZN5Plant5Motor20setSpeedAndDirectionEa>
			pan_model.Terminate(u_pan, y_pan);
   11b70:	21277804 	addi	r4,r4,-25120
   11b74:	d1a20d04 	addi	r6,gp,-30668
   11b78:	2967ae04 	addi	r5,r5,-24904
   11b7c:	00111200 	call	11120 <_ZN22PositionControllerTilt9TerminateEPfS0_>
			pan_motor.disable();
   11b80:	010000b4 	movhi	r4,2
   11b84:	2127b604 	addi	r4,r4,-24872
}
   11b88:	dfc00117 	ldw	ra,4(sp)
   11b8c:	dc000017 	ldw	r16,0(sp)
   11b90:	dec00204 	addi	sp,sp,8
			pan_motor.disable();
   11b94:	001239c1 	jmpi	1239c <_ZN5Plant5Motor7disableEv>
			tilt_model.Calculate(u_tilt, y_tilt);
   11b98:	010000b4 	movhi	r4,2
   11b9c:	d1a20f04 	addi	r6,gp,-30660
   11ba0:	800b883a 	mov	r5,r16
   11ba4:	21279304 	addi	r4,r4,-25012
   11ba8:	00119440 	call	11944 <_ZN22PositionControllerTilt9CalculateEPfS0_>
			tilt_motor.setSpeedAndDirection(int8_t (y_tilt[0] * 100));
   11bac:	d1620f17 	ldw	r5,-30660(gp)
   11bb0:	0090b234 	movhi	r2,17096
   11bb4:	010000b4 	movhi	r4,2
   11bb8:	288bff32 	custom	252,r5,r5,r2
   11bbc:	280bfe72 	custom	249,r5,r5,zero
   11bc0:	29403fcc 	andi	r5,r5,255
   11bc4:	2940201c 	xori	r5,r5,128
   11bc8:	297fe004 	addi	r5,r5,-128
   11bcc:	2127c004 	addi	r4,r4,-24832
   11bd0:	00121840 	call	12184 <_ZN5Plant5Motor20setSpeedAndDirectionEa>
			if(tilt_model.IsFinished())
   11bd4:	010000b4 	movhi	r4,2
   11bd8:	21279304 	addi	r4,r4,-25012
   11bdc:	00111140 	call	11114 <_ZN22PositionControllerTilt10IsFinishedEv>
   11be0:	10803fcc 	andi	r2,r2,255
   11be4:	103fca26 	beq	r2,zero,11b10 <_Z16handleTimerEventv+0xbc>
				tilt_model.Terminate(u_tilt, y_tilt);
   11be8:	010000b4 	movhi	r4,2
   11bec:	21279304 	addi	r4,r4,-25012
   11bf0:	d1a20f04 	addi	r6,gp,-30660
   11bf4:	800b883a 	mov	r5,r16
   11bf8:	00111200 	call	11120 <_ZN22PositionControllerTilt9TerminateEPfS0_>
				tilt_motor.disable();
   11bfc:	010000b4 	movhi	r4,2
   11c00:	2127c004 	addi	r4,r4,-24832
   11c04:	001239c0 	call	1239c <_ZN5Plant5Motor7disableEv>
   11c08:	003fc106 	br	11b10 <_Z16handleTimerEventv+0xbc>

00011c0c <_Z15handleUartEventRN6Serial7messageE>:
			encoder_value = r >> 1;
		}

		[[nodiscard]] float getAngle() const
		{
			unsigned int x = encoder_value;
   11c0c:	20800017 	ldw	r2,0(r4)
void handleUartEvent(Serial::message &received_message)
{
	angle = received_message.getAngle();

	// Determine for which motor this message is intended.
	switch (received_message.motor)
   11c10:	1007883a 	mov	r3,r2
			x <<= 1;
   11c14:	1004907a 	slli	r2,r2,1
	angle = received_message.getAngle();
   11c18:	d0a20b15 	stw	r2,-30676(gp)
	{
		case 0:
		{
			u_tilt[1] = angle;
   11c1c:	d0a20b17 	ldw	r2,-30676(gp)
	switch (received_message.motor)
   11c20:	18000816 	blt	r3,zero,11c44 <_Z15handleUartEventRN6Serial7messageE+0x38>
			u_tilt[1] = angle;
   11c24:	014000b4 	movhi	r5,2
			tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11c28:	010000b4 	movhi	r4,2
			u_tilt[1] = angle;
   11c2c:	2967b204 	addi	r5,r5,-24888
			tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11c30:	000f883a 	mov	r7,zero
   11c34:	d1a20f04 	addi	r6,gp,-30660
   11c38:	21279304 	addi	r4,r4,-25012
			u_tilt[1] = angle;
   11c3c:	28800115 	stw	r2,4(r5)
			tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11c40:	00118081 	jmpi	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
			break;
		}

		case 1:
		{
			u_pan[1] = angle;
   11c44:	014000b4 	movhi	r5,2
			pan_model.Initialize(u_pan, y_pan, 0.0);
   11c48:	010000b4 	movhi	r4,2
			u_pan[1] = angle;
   11c4c:	2967ae04 	addi	r5,r5,-24904
			pan_model.Initialize(u_pan, y_pan, 0.0);
   11c50:	000f883a 	mov	r7,zero
   11c54:	d1a20d04 	addi	r6,gp,-30668
   11c58:	21277804 	addi	r4,r4,-25120
			u_pan[1] = angle;
   11c5c:	28800115 	stw	r2,4(r5)
			pan_model.Initialize(u_pan, y_pan, 0.0);
   11c60:	00118081 	jmpi	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>

00011c64 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E9_M_invokeERKSt9_Any_dataS2_>:
    { return static_cast<_Up&&>(__t); }

  template<typename _Res, typename _Fn, typename... _Args>
    constexpr _Res
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
   11c64:	20800017 	ldw	r2,0(r4)
	  }
	return false;
      }

      static _Res
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
   11c68:	2809883a 	mov	r4,r5
   11c6c:	1000683a 	jmp	r2

00011c70 <_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data>:
   11c70:	20800017 	ldw	r2,0(r4)
   11c74:	1000683a 	jmp	r2

00011c78 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
	switch (__op)
   11c78:	30000626 	beq	r6,zero,11c94 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x1c>
   11c7c:	30800060 	cmpeqi	r2,r6,1
   11c80:	1000091e 	bne	r2,zero,11ca8 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x30>
	  switch (__op)
   11c84:	31800098 	cmpnei	r6,r6,2
   11c88:	30000a26 	beq	r6,zero,11cb4 <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x3c>
      }
   11c8c:	0005883a 	mov	r2,zero
   11c90:	f800283a 	ret
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11c94:	008000b4 	movhi	r2,2
   11c98:	10a23e04 	addi	r2,r2,-30472
   11c9c:	20800015 	stw	r2,0(r4)
      }
   11ca0:	0005883a 	mov	r2,zero
   11ca4:	f800283a 	ret
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11ca8:	21400015 	stw	r5,0(r4)
      }
   11cac:	0005883a 	mov	r2,zero
   11cb0:	f800283a 	ret
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11cb4:	28800017 	ldw	r2,0(r5)
   11cb8:	20800015 	stw	r2,0(r4)
	      break;
   11cbc:	003ff306 	br	11c8c <_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0x14>

00011cc0 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation>:
	switch (__op)
   11cc0:	30000626 	beq	r6,zero,11cdc <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x1c>
   11cc4:	30800060 	cmpeqi	r2,r6,1
   11cc8:	1000091e 	bne	r2,zero,11cf0 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x30>
	  switch (__op)
   11ccc:	31800098 	cmpnei	r6,r6,2
   11cd0:	30000a26 	beq	r6,zero,11cfc <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x3c>
      }
   11cd4:	0005883a 	mov	r2,zero
   11cd8:	f800283a 	ret
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
   11cdc:	008000b4 	movhi	r2,2
   11ce0:	10a23a04 	addi	r2,r2,-30488
   11ce4:	20800015 	stw	r2,0(r4)
      }
   11ce8:	0005883a 	mov	r2,zero
   11cec:	f800283a 	ret
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
   11cf0:	21400015 	stw	r5,0(r4)
      }
   11cf4:	0005883a 	mov	r2,zero
   11cf8:	f800283a 	ret
	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
   11cfc:	28800017 	ldw	r2,0(r5)
   11d00:	20800015 	stw	r2,0(r4)
	      break;
   11d04:	003ff306 	br	11cd4 <_ZNSt17_Function_handlerIFvRN6Serial7messageEEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation+0x14>

00011d08 <_ZNSt14_Function_baseD1Ev>:
    ~_Function_base()
   11d08:	defff104 	addi	sp,sp,-60
   11d0c:	00c00074 	movhi	r3,1
   11d10:	008000b4 	movhi	r2,2
   11d14:	10a1ca04 	addi	r2,r2,-30936
   11d18:	dc000d15 	stw	r16,52(sp)
   11d1c:	18cc2104 	addi	r3,r3,12420
   11d20:	2021883a 	mov	r16,r4
   11d24:	d809883a 	mov	r4,sp
   11d28:	d8800715 	stw	r2,28(sp)
   11d2c:	dfc00e15 	stw	ra,56(sp)
   11d30:	d8c00615 	stw	r3,24(sp)
   11d34:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
      if (_M_manager)
   11d38:	80800217 	ldw	r2,8(r16)
   11d3c:	10000526 	beq	r2,zero,11d54 <_ZNSt14_Function_baseD1Ev+0x4c>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   11d40:	d8000115 	stw	zero,4(sp)
   11d44:	018000c4 	movi	r6,3
   11d48:	800b883a 	mov	r5,r16
   11d4c:	8009883a 	mov	r4,r16
   11d50:	103ee83a 	callr	r2
   11d54:	d809883a 	mov	r4,sp
   11d58:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
    }
   11d5c:	dfc00e17 	ldw	ra,56(sp)
   11d60:	dc000d17 	ldw	r16,52(sp)
   11d64:	dec00f04 	addi	sp,sp,60
   11d68:	f800283a 	ret

00011d6c <main>:
 * Motor 0 = tilt
 * Motor 1 = pan
 */
int main()
{
	u_tilt[0] = 0.0;	/* corr */
   11d6c:	018000b4 	movhi	r6,2
	u_tilt[1] = 0.55;	/* in */
   11d70:	00cfc374 	movhi	r3,16141
   11d74:	18f33344 	addi	r3,r3,-13107
	u_tilt[0] = 0.0;	/* corr */
   11d78:	3027b215 	stw	zero,-24888(r6)
	u_tilt[1] = 0.55;	/* in */
   11d7c:	018000b4 	movhi	r6,2
   11d80:	30e7b315 	stw	r3,-24884(r6)
	u_tilt[2] = 0.0;	/* position */
   11d84:	00c000b4 	movhi	r3,2
   11d88:	1827b415 	stw	zero,-24880(r3)

	u_pan[0] = 0.0;		/* corr */
	u_pan[1] = 2.9;		/* in */
   11d8c:	00900eb4 	movhi	r2,16442
	u_pan[0] = 0.0;		/* corr */
   11d90:	00c000b4 	movhi	r3,2
	u_pan[1] = 2.9;		/* in */
   11d94:	10a66684 	addi	r2,r2,-26214
	u_pan[0] = 0.0;		/* corr */
   11d98:	1827ae15 	stw	zero,-24904(r3)
	u_pan[2] = 0.0;		/* position */

	pan_model.SetFinishTime(1);
   11d9c:	010000b4 	movhi	r4,2
	u_pan[1] = 2.9;		/* in */
   11da0:	00c000b4 	movhi	r3,2
{
   11da4:	defffa04 	addi	sp,sp,-24
	u_pan[1] = 2.9;		/* in */
   11da8:	18a7af15 	stw	r2,-24900(r3)
	pan_model.SetFinishTime(1);
   11dac:	014fe034 	movhi	r5,16256
   11db0:	21277804 	addi	r4,r4,-25120
	u_pan[2] = 0.0;		/* position */
   11db4:	008000b4 	movhi	r2,2
{
   11db8:	dfc00515 	stw	ra,20(sp)
   11dbc:	dd000415 	stw	r20,16(sp)
   11dc0:	dcc00315 	stw	r19,12(sp)
   11dc4:	dc800215 	stw	r18,8(sp)
   11dc8:	dc400115 	stw	r17,4(sp)
   11dcc:	dc000015 	stw	r16,0(sp)
	u_pan[2] = 0.0;		/* position */
   11dd0:	1027b015 	stw	zero,-24896(r2)
	pan_model.SetFinishTime(1);
   11dd4:	00111800 	call	11180 <_ZN22PositionControllerTilt13SetFinishTimeEf>
	tilt_model.SetFinishTime(1);
   11dd8:	010000b4 	movhi	r4,2
   11ddc:	014fe034 	movhi	r5,16256
   11de0:	21279304 	addi	r4,r4,-25012
   11de4:	00111800 	call	11180 <_ZN22PositionControllerTilt13SetFinishTimeEf>

	// Let the motor run to the origin position.
	pan_motor.setSpeedAndDirection(-50);
   11de8:	010000b4 	movhi	r4,2
   11dec:	017ff384 	movi	r5,-50
   11df0:	2127b604 	addi	r4,r4,-24872
   11df4:	00121840 	call	12184 <_ZN5Plant5Motor20setSpeedAndDirectionEa>
	tilt_motor.setSpeedAndDirection(-50);
   11df8:	010000b4 	movhi	r4,2
   11dfc:	017ff384 	movi	r5,-50
   11e00:	2127c004 	addi	r4,r4,-24832
   11e04:	00121840 	call	12184 <_ZN5Plant5Motor20setSpeedAndDirectionEa>

	usleep(10000);
   11e08:	0109c404 	movi	r4,10000
   11e0c:	00179ec0 	call	179ec <usleep>

	timer.enable();
   11e10:	d1221104 	addi	r4,gp,-30652
   11e14:	00128600 	call	12860 <_ZN5Timer6enableEv>

	while(!tilt_homing_done || !pan_homing_done);
   11e18:	d0a00f83 	ldbu	r2,-32706(gp)
   11e1c:	10803fcc 	andi	r2,r2,255
   11e20:	103ffd26 	beq	r2,zero,11e18 <main+0xac>
   11e24:	d0a20c03 	ldbu	r2,-30672(gp)
   11e28:	10803fcc 	andi	r2,r2,255
   11e2c:	103ffa26 	beq	r2,zero,11e18 <main+0xac>

	pan_model.Initialize(u_pan, y_pan, 0.0);
   11e30:	014000b4 	movhi	r5,2
   11e34:	010000b4 	movhi	r4,2
   11e38:	000f883a 	mov	r7,zero
   11e3c:	d1a20d04 	addi	r6,gp,-30668
   11e40:	2967ae04 	addi	r5,r5,-24904
   11e44:	21277804 	addi	r4,r4,-25120
   11e48:	00118080 	call	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
	tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11e4c:	014000b4 	movhi	r5,2
   11e50:	010000b4 	movhi	r4,2
   11e54:	000f883a 	mov	r7,zero
   11e58:	d1a20f04 	addi	r6,gp,-30660
   11e5c:	2967b204 	addi	r5,r5,-24888
   11e60:	21279304 	addi	r4,r4,-25012
	while(1)
	{
		//u_tilt[1] += 3.14159265;
		//tilt_model.Initialize(u_tilt, y_tilt, 0.0);

		float tilt = tilt_motor.getAngle();
   11e64:	04c000b4 	movhi	r19,2
			message.motor = 0;
			message.setAngle(tilt);
			uart.sendData(message);
		}

		float pan = pan_motor.getAngle();
   11e68:	048000b4 	movhi	r18,2
	tilt_model.Initialize(u_tilt, y_tilt, 0.0);
   11e6c:	00118080 	call	11808 <_ZN22PositionControllerTilt10InitializeEPfS0_f>
	float prev_pan = 0;
   11e70:	0023883a 	mov	r17,zero
	float prev_tilt = 0;
   11e74:	0021883a 	mov	r16,zero
		float tilt = tilt_motor.getAngle();
   11e78:	9ce7c004 	addi	r19,r19,-24832
			uart.sendData(message);
   11e7c:	d5221144 	addi	r20,gp,-30651
		float pan = pan_motor.getAngle();
   11e80:	94a7b604 	addi	r18,r18,-24872
		float tilt = tilt_motor.getAngle();
   11e84:	9809883a 	mov	r4,r19
   11e88:	00123c00 	call	123c0 <_ZN5Plant5Motor8getAngleEv>
		if (tilt != prev_tilt)
   11e8c:	8087f8f2 	custom	227,r3,r16,r2
   11e90:	18000d26 	beq	r3,zero,11ec8 <main+0x15c>
		float pan = pan_motor.getAngle();
   11e94:	9009883a 	mov	r4,r18
   11e98:	00123c00 	call	123c0 <_ZN5Plant5Motor8getAngleEv>

		if (pan != prev_pan)
   11e9c:	8887f8f2 	custom	227,r3,r17,r2
   11ea0:	183ff81e 	bne	r3,zero,11e84 <main+0x118>
			encoder_value = r >> 1;
   11ea4:	100ad07a 	srli	r5,r2,1
		{
			prev_pan = pan;
			Serial::message message;
			message.motor = 1;
			message.setAngle(pan);
			uart.sendData(message);
   11ea8:	a009883a 	mov	r4,r20
			prev_pan = pan;
   11eac:	1023883a 	mov	r17,r2
			uart.sendData(message);
   11eb0:	29600034 	orhi	r5,r5,32768
   11eb4:	001267c0 	call	1267c <_ZN6Serial4UART8sendDataENS_7messageE>
		float tilt = tilt_motor.getAngle();
   11eb8:	9809883a 	mov	r4,r19
   11ebc:	00123c00 	call	123c0 <_ZN5Plant5Motor8getAngleEv>
		if (tilt != prev_tilt)
   11ec0:	8087f8f2 	custom	227,r3,r16,r2
   11ec4:	183ff31e 	bne	r3,zero,11e94 <main+0x128>
			uart.sendData(message);
   11ec8:	100ad07a 	srli	r5,r2,1
   11ecc:	a009883a 	mov	r4,r20
			prev_tilt = tilt;
   11ed0:	1021883a 	mov	r16,r2
			uart.sendData(message);
   11ed4:	001267c0 	call	1267c <_ZN6Serial4UART8sendDataENS_7messageE>
   11ed8:	003fee06 	br	11e94 <main+0x128>

00011edc <_GLOBAL__sub_I_uart>:
		}
	}

	return 0;
}
   11edc:	deffea04 	addi	sp,sp,-88
   11ee0:	01400074 	movhi	r5,1
   11ee4:	00c000b4 	movhi	r3,2
   11ee8:	00800074 	movhi	r2,1
   11eec:	294c2104 	addi	r5,r5,12420
   11ef0:	18e1cb04 	addi	r3,r3,-30932
   11ef4:	10880f04 	addi	r2,r2,8252
   11ef8:	d9000304 	addi	r4,sp,12
   11efc:	d9400915 	stw	r5,36(sp)
   11f00:	d8c00a15 	stw	r3,40(sp)
   11f04:	d8800c15 	stw	r2,48(sp)
   11f08:	dfc01515 	stw	ra,84(sp)
   11f0c:	df001415 	stw	fp,80(sp)
   11f10:	df000b15 	stw	fp,44(sp)
   11f14:	dec00d15 	stw	sp,52(sp)
   11f18:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>

	if (_My_handler::_M_not_empty_function(__f))
	  {
	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
	    _M_invoker = &_My_handler::_M_invoke;
	    _M_manager = &_My_handler::_M_manager;
   11f1c:	00800074 	movhi	r2,1
   11f20:	10873004 	addi	r2,r2,7360
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f24:	01800074 	movhi	r6,1
	    _M_invoker = &_My_handler::_M_invoke;
   11f28:	00c00074 	movhi	r3,1
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f2c:	31870304 	addi	r6,r6,7180
	    _M_invoker = &_My_handler::_M_invoke;
   11f30:	18c71904 	addi	r3,r3,7268
	    _M_manager = &_My_handler::_M_manager;
   11f34:	d8801215 	stw	r2,72(sp)
Serial::UART uart = Serial::UART(handleUartEvent);
   11f38:	d9401004 	addi	r5,sp,64
   11f3c:	00800044 	movi	r2,1
   11f40:	d1221144 	addi	r4,gp,-30651
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f44:	d9801015 	stw	r6,64(sp)
	    _M_invoker = &_My_handler::_M_invoke;
   11f48:	d8c01315 	stw	r3,76(sp)
   11f4c:	d8800415 	stw	r2,16(sp)
   11f50:	00125180 	call	12518 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE>
    class function<_Res(_ArgTypes...)>
   11f54:	d9001004 	addi	r4,sp,64
   11f58:	0011d080 	call	11d08 <_ZNSt14_Function_baseD1Ev>
	    _M_manager = &_My_handler::_M_manager;
   11f5c:	00800074 	movhi	r2,1
   11f60:	10871e04 	addi	r2,r2,7288
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f64:	01800074 	movhi	r6,1
	    _M_invoker = &_My_handler::_M_invoke;
   11f68:	00c00074 	movhi	r3,1
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f6c:	31869504 	addi	r6,r6,6740
	    _M_invoker = &_My_handler::_M_invoke;
   11f70:	18c71c04 	addi	r3,r3,7280
	    _M_manager = &_My_handler::_M_manager;
   11f74:	d8801215 	stw	r2,72(sp)
Timer timer = Timer(handleTimerEvent);
   11f78:	d9401004 	addi	r5,sp,64
   11f7c:	00800084 	movi	r2,2
   11f80:	d1221104 	addi	r4,gp,-30652
	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
   11f84:	d9801015 	stw	r6,64(sp)
	    _M_invoker = &_My_handler::_M_invoke;
   11f88:	d8c01315 	stw	r3,76(sp)
   11f8c:	d8800415 	stw	r2,16(sp)
   11f90:	00127440 	call	12744 <_ZN5TimerC1ESt8functionIFvvEE>
    class function<_Res(_ArgTypes...)>
   11f94:	d9001004 	addi	r4,sp,64
   11f98:	0011d080 	call	11d08 <_ZNSt14_Function_baseD1Ev>
Plant::Motor tilt_motor = Plant::Motor(MOTOR_PWM_0_SLAVE_1_BASE, MOTOR_PWM_0_SLAVE_2_BASE, PWM_FREQUENCY, QUADRATURE_ENCODER_0_BASE, 2161);
   11f9c:	008000b4 	movhi	r2,2
   11fa0:	00c21c44 	movi	r3,2161
   11fa4:	10890004 	addi	r2,r2,9216
   11fa8:	018000b4 	movhi	r6,2
   11fac:	014000b4 	movhi	r5,2
   11fb0:	010000b4 	movhi	r4,2
   11fb4:	d8c00115 	stw	r3,4(sp)
   11fb8:	d8800015 	stw	r2,0(sp)
   11fbc:	01c27104 	movi	r7,2500
   11fc0:	00bfffc4 	movi	r2,-1
   11fc4:	31850004 	addi	r6,r6,5120
   11fc8:	29470004 	addi	r5,r5,7168
   11fcc:	2127c004 	addi	r4,r4,-24832
   11fd0:	d8800415 	stw	r2,16(sp)
   11fd4:	00120a40 	call	120a4 <_ZN5Plant5MotorC1Emmmmm>
Plant::Motor pan_motor = Plant::Motor(MOTOR_PWM_1_SLAVE_1_BASE, MOTOR_PWM_1_SLAVE_2_BASE, PWM_FREQUENCY, QUADRATURE_ENCODER_1_BASE, 4915);
   11fd8:	008000b4 	movhi	r2,2
   11fdc:	10880004 	addi	r2,r2,8192
   11fe0:	00c4ccc4 	movi	r3,4915
   11fe4:	018000b4 	movhi	r6,2
   11fe8:	014000b4 	movhi	r5,2
   11fec:	010000b4 	movhi	r4,2
   11ff0:	01c27104 	movi	r7,2500
   11ff4:	31840004 	addi	r6,r6,4096
   11ff8:	29460004 	addi	r5,r5,6144
   11ffc:	d8c00115 	stw	r3,4(sp)
   12000:	d8800015 	stw	r2,0(sp)
   12004:	2127b604 	addi	r4,r4,-24872
   12008:	00120a40 	call	120a4 <_ZN5Plant5MotorC1Emmmmm>
PositionControllerTilt tilt_model;
   1200c:	010000b4 	movhi	r4,2
   12010:	21279304 	addi	r4,r4,-25012
   12014:	001144c0 	call	1144c <_ZN22PositionControllerTiltC1Ev>
PositionControllerTilt pan_model;
   12018:	010000b4 	movhi	r4,2
   1201c:	21277804 	addi	r4,r4,-25120
   12020:	001144c0 	call	1144c <_ZN22PositionControllerTiltC1Ev>
   12024:	d9000304 	addi	r4,sp,12
   12028:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
}
   1202c:	dfc01517 	ldw	ra,84(sp)
   12030:	df001417 	ldw	fp,80(sp)
   12034:	dec01604 	addi	sp,sp,88
   12038:	f800283a 	ret
   1203c:	d8c00517 	ldw	r3,20(sp)
   12040:	d8800417 	ldw	r2,16(sp)
   12044:	d8c00215 	stw	r3,8(sp)
   12048:	1000061e 	bne	r2,zero,12064 <_GLOBAL__sub_I_uart+0x188>
   1204c:	d9001004 	addi	r4,sp,64
   12050:	0011d080 	call	11d08 <_ZNSt14_Function_baseD1Ev>
   12054:	d9000217 	ldw	r4,8(sp)
   12058:	00bfffc4 	movi	r2,-1
   1205c:	d8800415 	stw	r2,16(sp)
   12060:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>
   12064:	10bfffc4 	addi	r2,r2,-1
   12068:	d9001004 	addi	r4,sp,64
   1206c:	10000126 	beq	r2,zero,12074 <_GLOBAL__sub_I_uart+0x198>
   12070:	003b68fa 	trap	3
   12074:	003ff606 	br	12050 <_GLOBAL__sub_I_uart+0x174>

00012078 <_GLOBAL__sub_D_uart>:
PositionControllerTilt pan_model;
   12078:	010000b4 	movhi	r4,2
}
   1207c:	deffff04 	addi	sp,sp,-4
PositionControllerTilt pan_model;
   12080:	21277804 	addi	r4,r4,-25120
}
   12084:	dfc00015 	stw	ra,0(sp)
PositionControllerTilt pan_model;
   12088:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
PositionControllerTilt tilt_model;
   1208c:	010000b4 	movhi	r4,2
   12090:	21279304 	addi	r4,r4,-25012
   12094:	00116e40 	call	116e4 <_ZN22PositionControllerTiltD1Ev>
}
   12098:	dfc00017 	ldw	ra,0(sp)
   1209c:	dec00104 	addi	sp,sp,4
   120a0:	f800283a 	ret

000120a4 <_ZN5Plant5MotorC1Emmmmm>:
#include "motor.hpp"

Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   120a4:	defffb04 	addi	sp,sp,-20
		uint32_t base_address_encoder, uint32_t steps_per_revolution) :
	base_address_first_word(base_address_first_word),
	base_address_second_word(base_address_second_word),
	frequency(frequency),
	base_address_encoder(base_address_encoder),
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   120a8:	d8c00517 	ldw	r3,20(sp)
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   120ac:	d8800617 	ldw	r2,24(sp)
   120b0:	dcc00315 	stw	r19,12(sp)
   120b4:	dc800215 	stw	r18,8(sp)
   120b8:	dc400115 	stw	r17,4(sp)
   120bc:	dc000015 	stw	r16,0(sp)
   120c0:	dfc00415 	stw	ra,16(sp)
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   120c4:	20000015 	stw	zero,0(r4)
   120c8:	21400115 	stw	r5,4(r4)
   120cc:	21800215 	stw	r6,8(r4)
   120d0:	21c00315 	stw	r7,12(r4)
   120d4:	20c00415 	stw	r3,16(r4)
Plant::Motor::Motor(uint32_t base_address_first_word, uint32_t base_address_second_word, uint32_t frequency,
   120d8:	2021883a 	mov	r16,r4
   120dc:	2823883a 	mov	r17,r5
   120e0:	3027883a 	mov	r19,r6
   120e4:	3825883a 	mov	r18,r7
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   120e8:	10002016 	blt	r2,zero,1216c <_ZN5Plant5MotorC1Emmmmm+0xc8>
   120ec:	1009feb2 	custom	250,r4,r2,zero
   120f0:	00167340 	call	16734 <__extendsfdf2>
   120f4:	01501df4 	movhi	r5,16503
   120f8:	100d883a 	mov	r6,r2
   120fc:	180f883a 	mov	r7,r3
   12100:	0009883a 	mov	r4,zero
   12104:	29600004 	addi	r5,r5,-32768
   12108:	00156580 	call	15658 <__divdf3>
   1210c:	01a894f4 	movhi	r6,41555
   12110:	01cfe4b4 	movhi	r7,16274
   12114:	31a74e44 	addi	r6,r6,-25287
   12118:	39f7d184 	addi	r7,r7,-8378
   1211c:	1009883a 	mov	r4,r2
   12120:	180b883a 	mov	r5,r3
   12124:	0015f880 	call	15f88 <__muldf3>
   12128:	1009883a 	mov	r4,r2
   1212c:	180b883a 	mov	r5,r3
   12130:	00168300 	call	16830 <__truncdfsf2>
   12134:	80800515 	stw	r2,20(r16)
   12138:	80000615 	stw	zero,24(r16)
   1213c:	80000715 	stw	zero,28(r16)
   12140:	80000815 	stw	zero,32(r16)
   12144:	80000915 	stw	zero,36(r16)
}

void Plant::Motor::disable()
{
	en = 0;
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12148:	98000035 	stwio	zero,0(r19)
	IOWR_32DIRECT(base_address_first_word, 0, frequency);
   1214c:	8c800035 	stwio	r18,0(r17)
}
   12150:	dfc00417 	ldw	ra,16(sp)
   12154:	dcc00317 	ldw	r19,12(sp)
   12158:	dc800217 	ldw	r18,8(sp)
   1215c:	dc400117 	ldw	r17,4(sp)
   12160:	dc000017 	ldw	r16,0(sp)
   12164:	dec00504 	addi	sp,sp,20
   12168:	f800283a 	ret
	radians_per_step((360.0 / float(steps_per_revolution)) * (3.14159265358979323846 / 180.0))
   1216c:	1006d07a 	srli	r3,r2,1
   12170:	1080004c 	andi	r2,r2,1
   12174:	10c4b03a 	or	r2,r2,r3
   12178:	1009feb2 	custom	250,r4,r2,zero
   1217c:	2109ff72 	custom	253,r4,r4,r4
   12180:	003fdb06 	br	120f0 <_ZN5Plant5MotorC1Emmmmm+0x4c>

00012184 <_ZN5Plant5Motor20setSpeedAndDirectionEa>:
	if (percentage == 0)
   12184:	29803fcc 	andi	r6,r5,255
   12188:	3180201c 	xori	r6,r6,128
   1218c:	31bfe004 	addi	r6,r6,-128
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12190:	22000217 	ldw	r8,8(r4)
	if (percentage == 0)
   12194:	30003b26 	beq	r6,zero,12284 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x100>
			const uint32_t base_address_encoder;
			const float radians_per_step;

			uint32_t getSecondWord()
			{
				return (duty_cycle << 16) | (direction << 14) | en << 13;
   12198:	20800817 	ldw	r2,32(r4)
		percentage = percentage * -1;
   1219c:	2807883a 	mov	r3,r5
   121a0:	100e937a 	slli	r7,r2,13
   121a4:	20800617 	ldw	r2,24(r4)
	if (percentage > 0)
   121a8:	0180270e 	bge	zero,r6,12248 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0xc4>
   121ac:	1004943a 	slli	r2,r2,16
	direction = static_cast<uint32_t>(dir);
   121b0:	01400044 	movi	r5,1
   121b4:	21400715 	stw	r5,28(r4)
   121b8:	11c4b03a 	or	r2,r2,r7
   121bc:	10900014 	ori	r2,r2,16384
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   121c0:	40800035 	stwio	r2,0(r8)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   121c4:	20800317 	ldw	r2,12(r4)
   121c8:	10002816 	blt	r2,zero,1226c <_ZN5Plant5Motor20setSpeedAndDirectionEa+0xe8>
   121cc:	1005feb2 	custom	250,r2,r2,zero
   121d0:	18c03fcc 	andi	r3,r3,255
   121d4:	1807feb2 	custom	250,r3,r3,zero
   121d8:	0150b234 	movhi	r5,17096
   121dc:	1947fff2 	custom	255,r3,r3,r5
   121e0:	10c5ff32 	custom	252,r2,r2,r3
   121e4:	00d3c034 	movhi	r3,20224
   121e8:	10c7f932 	custom	228,r3,r2,r3
   121ec:	18002d1e 	bne	r3,zero,122a4 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x120>
   121f0:	1005fe72 	custom	249,r2,r2,zero
   121f4:	20c00717 	ldw	r3,28(r4)
   121f8:	21400817 	ldw	r5,32(r4)
   121fc:	100e943a 	slli	r7,r2,16
   12200:	180693ba 	slli	r3,r3,14
   12204:	280a937a 	slli	r5,r5,13
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12208:	21800217 	ldw	r6,8(r4)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   1220c:	20800615 	stw	r2,24(r4)
   12210:	1944b03a 	or	r2,r3,r5
   12214:	11c4b03a 	or	r2,r2,r7
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12218:	30800035 	stwio	r2,0(r6)
   1221c:	20800617 	ldw	r2,24(r4)
   12220:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12224:	21400217 	ldw	r5,8(r4)
   12228:	1004943a 	slli	r2,r2,16
   1222c:	180693ba 	slli	r3,r3,14
	en = 1;
   12230:	01800044 	movi	r6,1
   12234:	21800815 	stw	r6,32(r4)
   12238:	10c4b03a 	or	r2,r2,r3
   1223c:	10880014 	ori	r2,r2,8192
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12240:	28800035 	stwio	r2,0(r5)
}
   12244:	f800283a 	ret
   12248:	1004943a 	slli	r2,r2,16
	direction = static_cast<uint32_t>(dir);
   1224c:	00c00084 	movi	r3,2
   12250:	20c00715 	stw	r3,28(r4)
   12254:	11c4b03a 	or	r2,r2,r7
   12258:	10a00014 	ori	r2,r2,32768
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   1225c:	40800035 	stwio	r2,0(r8)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12260:	20800317 	ldw	r2,12(r4)
		percentage = percentage * -1;
   12264:	0147c83a 	sub	r3,zero,r5
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12268:	103fd80e 	bge	r2,zero,121cc <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x48>
   1226c:	100ad07a 	srli	r5,r2,1
   12270:	1080004c 	andi	r2,r2,1
   12274:	1144b03a 	or	r2,r2,r5
   12278:	1005feb2 	custom	250,r2,r2,zero
   1227c:	1085ff72 	custom	253,r2,r2,r2
   12280:	003fd306 	br	121d0 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x4c>
   12284:	20800617 	ldw	r2,24(r4)
   12288:	20c00717 	ldw	r3,28(r4)
	en = 0;
   1228c:	20000815 	stw	zero,32(r4)
   12290:	1004943a 	slli	r2,r2,16
   12294:	180693ba 	slli	r3,r3,14
   12298:	10c4b03a 	or	r2,r2,r3
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   1229c:	40800035 	stwio	r2,0(r8)
		return;
   122a0:	f800283a 	ret
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   122a4:	00d3c034 	movhi	r3,20224
   122a8:	10c5ffb2 	custom	254,r2,r2,r3
   122ac:	1005fe72 	custom	249,r2,r2,zero
   122b0:	10a0003c 	xorhi	r2,r2,32768
   122b4:	003fcf06 	br	121f4 <_ZN5Plant5Motor20setSpeedAndDirectionEa+0x70>

000122b8 <_ZN5Plant5Motor12setDutyCycleEh>:
   122b8:	20800317 	ldw	r2,12(r4)
   122bc:	10001a16 	blt	r2,zero,12328 <_ZN5Plant5Motor12setDutyCycleEh+0x70>
   122c0:	1005feb2 	custom	250,r2,r2,zero
   122c4:	28c03fcc 	andi	r3,r5,255
   122c8:	1807feb2 	custom	250,r3,r3,zero
   122cc:	0150b234 	movhi	r5,17096
   122d0:	1947fff2 	custom	255,r3,r3,r5
   122d4:	10c5ff32 	custom	252,r2,r2,r3
   122d8:	00d3c034 	movhi	r3,20224
   122dc:	10c7f932 	custom	228,r3,r2,r3
   122e0:	18000c1e 	bne	r3,zero,12314 <_ZN5Plant5Motor12setDutyCycleEh+0x5c>
   122e4:	1005fe72 	custom	249,r2,r2,zero
   122e8:	20c00717 	ldw	r3,28(r4)
   122ec:	21400817 	ldw	r5,32(r4)
   122f0:	100e943a 	slli	r7,r2,16
   122f4:	180693ba 	slli	r3,r3,14
   122f8:	280a937a 	slli	r5,r5,13
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   122fc:	21800217 	ldw	r6,8(r4)
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12300:	20800615 	stw	r2,24(r4)
   12304:	1944b03a 	or	r2,r3,r5
   12308:	11c4b03a 	or	r2,r2,r7
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   1230c:	30800035 	stwio	r2,0(r6)
}
   12310:	f800283a 	ret
	duty_cycle = uint32_t ((float)frequency * ((float)duty / 100));
   12314:	00d3c034 	movhi	r3,20224
   12318:	10c5ffb2 	custom	254,r2,r2,r3
   1231c:	1005fe72 	custom	249,r2,r2,zero
   12320:	10a0003c 	xorhi	r2,r2,32768
   12324:	003ff006 	br	122e8 <_ZN5Plant5Motor12setDutyCycleEh+0x30>
   12328:	1006d07a 	srli	r3,r2,1
   1232c:	1080004c 	andi	r2,r2,1
   12330:	10c4b03a 	or	r2,r2,r3
   12334:	1005feb2 	custom	250,r2,r2,zero
   12338:	1085ff72 	custom	253,r2,r2,r2
   1233c:	003fe106 	br	122c4 <_ZN5Plant5Motor12setDutyCycleEh+0xc>

00012340 <_ZN5Plant5Motor12setDirectionENS0_9DirectionE>:
   12340:	20800617 	ldw	r2,24(r4)
   12344:	20c00817 	ldw	r3,32(r4)
	direction = static_cast<uint32_t>(dir);
   12348:	29403fcc 	andi	r5,r5,255
   1234c:	1004943a 	slli	r2,r2,16
   12350:	1806937a 	slli	r3,r3,13
   12354:	280e93ba 	slli	r7,r5,14
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12358:	21800217 	ldw	r6,8(r4)
   1235c:	10c4b03a 	or	r2,r2,r3
	direction = static_cast<uint32_t>(dir);
   12360:	21400715 	stw	r5,28(r4)
   12364:	11c4b03a 	or	r2,r2,r7
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12368:	30800035 	stwio	r2,0(r6)
}
   1236c:	f800283a 	ret

00012370 <_ZN5Plant5Motor6enableEv>:
   12370:	20800617 	ldw	r2,24(r4)
   12374:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12378:	21400217 	ldw	r5,8(r4)
   1237c:	1004943a 	slli	r2,r2,16
   12380:	180693ba 	slli	r3,r3,14
	en = 1;
   12384:	01800044 	movi	r6,1
   12388:	21800815 	stw	r6,32(r4)
   1238c:	10c4b03a 	or	r2,r2,r3
   12390:	10880014 	ori	r2,r2,8192
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12394:	28800035 	stwio	r2,0(r5)
}
   12398:	f800283a 	ret

0001239c <_ZN5Plant5Motor7disableEv>:
   1239c:	20800617 	ldw	r2,24(r4)
   123a0:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123a4:	21400217 	ldw	r5,8(r4)
   123a8:	1004943a 	slli	r2,r2,16
   123ac:	180693ba 	slli	r3,r3,14
	en = 0;
   123b0:	20000815 	stw	zero,32(r4)
   123b4:	10c4b03a 	or	r2,r2,r3
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   123b8:	28800035 	stwio	r2,0(r5)
}
   123bc:	f800283a 	ret

000123c0 <_ZN5Plant5Motor8getAngleEv>:
    return (readData() - encoder_start_position) * radians_per_step;
}

int32_t Plant::Motor::readData()
{
	return IORD_32DIRECT(base_address_encoder, 0);
   123c0:	20800417 	ldw	r2,16(r4)
   123c4:	10800037 	ldwio	r2,0(r2)
    return (readData() - encoder_start_position) * radians_per_step;
   123c8:	21400017 	ldw	r5,0(r4)
   123cc:	20c00517 	ldw	r3,20(r4)
   123d0:	1145c83a 	sub	r2,r2,r5
   123d4:	1005feb2 	custom	250,r2,r2,zero
}
   123d8:	10c5ff32 	custom	252,r2,r2,r3
   123dc:	f800283a 	ret

000123e0 <_ZN5Plant5Motor8readDataEv>:
	return IORD_32DIRECT(base_address_encoder, 0);
   123e0:	20800417 	ldw	r2,16(r4)
}
   123e4:	10800037 	ldwio	r2,0(r2)
   123e8:	f800283a 	ret

000123ec <_ZN5Plant5Motor19isAtInitialPositionEv>:
	return IORD_32DIRECT(base_address_encoder, 0);
   123ec:	20800417 	ldw	r2,16(r4)

bool Plant::Motor::isAtInitialPosition()
{
   123f0:	deffff04 	addi	sp,sp,-4
	return IORD_32DIRECT(base_address_encoder, 0);
   123f4:	10800037 	ldwio	r2,0(r2)
	volatile int32_t value = readData();
   123f8:	d8800015 	stw	r2,0(sp)

	if (value != encoder_start_position)
   123fc:	d8800017 	ldw	r2,0(sp)
   12400:	20c00017 	ldw	r3,0(r4)
   12404:	18800626 	beq	r3,r2,12420 <_ZN5Plant5Motor19isAtInitialPositionEv+0x34>
	{
		encoder_start_position = value;
   12408:	d8c00017 	ldw	r3,0(sp)
		occurences = 0;
   1240c:	20000915 	stw	zero,36(r4)
	{
		disable();
		return true;
	}

	return false;
   12410:	0005883a 	mov	r2,zero
		encoder_start_position = value;
   12414:	20c00015 	stw	r3,0(r4)
}
   12418:	dec00104 	addi	sp,sp,4
   1241c:	f800283a 	ret
		occurences++;
   12420:	20800917 	ldw	r2,36(r4)
		encoder_start_position = value;
   12424:	d8c00017 	ldw	r3,0(sp)
		occurences++;
   12428:	10800044 	addi	r2,r2,1
   1242c:	20800915 	stw	r2,36(r4)
		encoder_start_position = value;
   12430:	20c00015 	stw	r3,0(r4)
	if (occurences > 500)
   12434:	10807d70 	cmpltui	r2,r2,501
   12438:	10000b1e 	bne	r2,zero,12468 <_ZN5Plant5Motor19isAtInitialPositionEv+0x7c>
   1243c:	20800617 	ldw	r2,24(r4)
   12440:	20c00717 	ldw	r3,28(r4)
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12444:	21400217 	ldw	r5,8(r4)
   12448:	1004943a 	slli	r2,r2,16
   1244c:	180693ba 	slli	r3,r3,14
	en = 0;
   12450:	20000815 	stw	zero,32(r4)
   12454:	10c4b03a 	or	r2,r2,r3
	IOWR_32DIRECT(base_address_second_word, 0, getSecondWord());
   12458:	28800035 	stwio	r2,0(r5)
		return true;
   1245c:	00800044 	movi	r2,1
}
   12460:	dec00104 	addi	sp,sp,4
   12464:	f800283a 	ret
	return false;
   12468:	0005883a 	mov	r2,zero
   1246c:	003fea06 	br	12418 <_ZN5Plant5Motor19isAtInitialPositionEv+0x2c>

00012470 <_ZN6Serial4UART10uart_0_isrEPv>:
std::function<void(Serial::message &received_message)> Serial::UART::callback;

void Serial::UART::uart_0_isr(void *)
{
	// Check if the UART buffer is empty or if there are more messages waiting.
	alt_u16 status = IORD_ALTERA_AVALON_UART_STATUS(UART_0_BASE);
   12470:	008000b4 	movhi	r2,2
   12474:	108a0a37 	ldwio	r2,10280(r2)

	if(status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
   12478:	1080200c 	andi	r2,r2,128
   1247c:	10002226 	beq	r2,zero,12508 <_ZN6Serial4UART10uart_0_isrEPv+0x98>
	{
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   12480:	008000b4 	movhi	r2,2
   12484:	114a0837 	ldwio	r5,10272(r2)
   12488:	d0a21183 	ldbu	r2,-30650(gp)
   1248c:	d0e211c4 	addi	r3,gp,-30649
		rx_len ++ ;
   12490:	11000044 	addi	r4,r2,1
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   12494:	10803fcc 	andi	r2,r2,255
   12498:	1887883a 	add	r3,r3,r2

		if (rx_len >= MESSAGE_SIZE)
   1249c:	20803fcc 	andi	r2,r4,255
		rx_data[rx_len] = IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   124a0:	19400005 	stb	r5,0(r3)
		rx_len ++ ;
   124a4:	d1221185 	stb	r4,-30650(gp)
		if (rx_len >= MESSAGE_SIZE)
   124a8:	10800130 	cmpltui	r2,r2,4
   124ac:	1000161e 	bne	r2,zero,12508 <_ZN6Serial4UART10uart_0_isrEPv+0x98>
		{
			uart_ready = true;
			rx_len = 0;
   124b0:	d0221185 	stb	zero,-30650(gp)
	if (uart_ready)
	{
		uart_ready = 0;

		message received_message;
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   124b4:	d0e211c3 	ldbu	r3,-30649(gp)
{
   124b8:	defffe04 	addi	sp,sp,-8
    bool _M_empty() const { return !_M_manager; }
   124bc:	010000b4 	movhi	r4,2
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   124c0:	d8c00005 	stb	r3,0(sp)
   124c4:	d0e21203 	ldbu	r3,-30648(gp)
   124c8:	2127ca04 	addi	r4,r4,-24792
  template<typename _Res, typename... _ArgTypes>
    _Res
    function<_Res(_ArgTypes...)>::
    operator()(_ArgTypes... __args) const
    {
      if (_M_empty())
   124cc:	20800217 	ldw	r2,8(r4)
   124d0:	d8c00045 	stb	r3,1(sp)
   124d4:	d0e21243 	ldbu	r3,-30647(gp)
{
   124d8:	dfc00115 	stw	ra,4(sp)
		uart_ready = 0;
   124dc:	d02212c5 	stb	zero,-30645(gp)
		std::memcpy(&received_message, &rx_data, MESSAGE_SIZE);
   124e0:	d8c00085 	stb	r3,2(sp)
   124e4:	d0e21283 	ldbu	r3,-30646(gp)
   124e8:	d8c000c5 	stb	r3,3(sp)
   124ec:	10000926 	beq	r2,zero,12514 <_ZN6Serial4UART10uart_0_isrEPv+0xa4>
	__throw_bad_function_call();
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   124f0:	20800317 	ldw	r2,12(r4)
   124f4:	d80b883a 	mov	r5,sp
   124f8:	103ee83a 	callr	r2

		callback(received_message);
	}
}
   124fc:	dfc00117 	ldw	ra,4(sp)
   12500:	dec00204 	addi	sp,sp,8
   12504:	f800283a 	ret
	if (uart_ready)
   12508:	d0a212c3 	ldbu	r2,-30645(gp)
   1250c:	103fe91e 	bne	r2,zero,124b4 <_ZN6Serial4UART10uart_0_isrEPv+0x44>
   12510:	f800283a 	ret
	__throw_bad_function_call();
   12514:	0014a580 	call	14a58 <_ZSt25__throw_bad_function_callv>

00012518 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE>:

Serial::UART::UART(std::function<void(Serial::message &received_message)> func)
   12518:	deffeb04 	addi	sp,sp,-84
   1251c:	01800074 	movhi	r6,1
   12520:	00c000b4 	movhi	r3,2
   12524:	00800074 	movhi	r2,1
   12528:	18e1cd04 	addi	r3,r3,-30924
   1252c:	10899604 	addi	r2,r2,9816
   12530:	318c2104 	addi	r6,r6,12420
   12534:	d9000204 	addi	r4,sp,8
   12538:	d8c00915 	stw	r3,36(sp)
   1253c:	d8800b15 	stw	r2,44(sp)
   12540:	dfc01415 	stw	ra,80(sp)
   12544:	df001315 	stw	fp,76(sp)
   12548:	d9400115 	stw	r5,4(sp)
   1254c:	d9800815 	stw	r6,32(sp)
   12550:	df000a15 	stw	fp,40(sp)
   12554:	dec00c15 	stw	sp,48(sp)
   12558:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   1255c:	d8800117 	ldw	r2,4(sp)
    _Function_base() : _M_manager(nullptr) { }
   12560:	d8001115 	stw	zero,68(sp)
    bool _M_empty() const { return !_M_manager; }
   12564:	10c00217 	ldw	r3,8(r2)
      if (static_cast<bool>(__x))
   12568:	18003926 	beq	r3,zero,12650 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0x138>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   1256c:	d9400117 	ldw	r5,4(sp)
   12570:	00800044 	movi	r2,1
   12574:	d8800315 	stw	r2,12(sp)
   12578:	01800084 	movi	r6,2
   1257c:	d9000f04 	addi	r4,sp,60
   12580:	183ee83a 	callr	r3
	  _M_invoker = __x._M_invoker;
   12584:	d8800117 	ldw	r2,4(sp)
   12588:	11000317 	ldw	r4,12(r2)
	  _M_manager = __x._M_manager;
   1258c:	10c00217 	ldw	r3,8(r2)
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
      __a = _GLIBCXX_MOVE(__b);
   12590:	008000b4 	movhi	r2,2
   12594:	10a7ca04 	addi	r2,r2,-24792
      __b = _GLIBCXX_MOVE(__tmp);
   12598:	dac00f17 	ldw	r11,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   1259c:	014000b4 	movhi	r5,2
   125a0:	2a67ca17 	ldw	r9,-24792(r5)
   125a4:	12000117 	ldw	r8,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   125a8:	d9801017 	ldw	r6,64(sp)
      __a = _GLIBCXX_MOVE(__b);
   125ac:	11c00217 	ldw	r7,8(r2)
   125b0:	11400317 	ldw	r5,12(r2)
      __b = _GLIBCXX_MOVE(__tmp);
   125b4:	028000b4 	movhi	r10,2
   125b8:	52e7ca15 	stw	r11,-24792(r10)
      __a = _GLIBCXX_MOVE(__b);
   125bc:	da400f15 	stw	r9,60(sp)
   125c0:	da001015 	stw	r8,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   125c4:	11800115 	stw	r6,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   125c8:	d9c01115 	stw	r7,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   125cc:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   125d0:	d9401215 	stw	r5,72(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   125d4:	11000315 	stw	r4,12(r2)
      if (_M_manager)
   125d8:	38000526 	beq	r7,zero,125f0 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0xd8>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   125dc:	d9400f04 	addi	r5,sp,60
   125e0:	d8000315 	stw	zero,12(sp)
   125e4:	018000c4 	movi	r6,3
   125e8:	2809883a 	mov	r4,r5
   125ec:	383ee83a 	callr	r7
{
	callback = func;

	// Clear status flag.
	IOWR_ALTERA_AVALON_UART_STATUS(UART_0_BASE, 0x00);
   125f0:	008000b4 	movhi	r2,2
   125f4:	100a0a35 	stwio	zero,10280(r2)

	// Read the useless value in the empty receive register.
	IORD_ALTERA_AVALON_UART_RXDATA(UART_0_BASE);
   125f8:	108a0837 	ldwio	r2,10272(r2)

	// Setup RX IRQ routine.
	alt_u16 control = ALTERA_AVALON_UART_CONTROL_RRDY_MSK | ALTERA_AVALON_UART_CONTROL_E_MSK;
	IOWR_ALTERA_AVALON_UART_CONTROL (UART_0_BASE, control);
   125fc:	00c06004 	movi	r3,384
   12600:	008000b4 	movhi	r2,2
   12604:	10ca0b35 	stwio	r3,10284(r2)

	// Install IRQ service routine.
    alt_ic_isr_register(UART_0_IRQ_INTERRUPT_CONTROLLER_ID, UART_0_IRQ, uart_0_isr, NULL, NULL);
   12608:	01800074 	movhi	r6,1
   1260c:	d8000015 	stw	zero,0(sp)
   12610:	000f883a 	mov	r7,zero
   12614:	31891c04 	addi	r6,r6,9328
   12618:	01400104 	movi	r5,4
   1261c:	0009883a 	mov	r4,zero
   12620:	00bfffc4 	movi	r2,-1
   12624:	d8800315 	stw	r2,12(sp)
   12628:	00176cc0 	call	176cc <alt_ic_isr_register>

    // Enable interrupt.
	IOWR_ALTERA_AVALON_UART_CONTROL(UART_0_BASE, ALTERA_AVALON_UART_CONTROL_RRDY_MSK);
   1262c:	00c02004 	movi	r3,128
   12630:	008000b4 	movhi	r2,2
   12634:	10ca0b35 	stwio	r3,10284(r2)
   12638:	d9000204 	addi	r4,sp,8
   1263c:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
}
   12640:	dfc01417 	ldw	ra,80(sp)
   12644:	df001317 	ldw	fp,76(sp)
   12648:	dec01504 	addi	sp,sp,84
   1264c:	f800283a 	ret
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12650:	d9001217 	ldw	r4,72(sp)
   12654:	003fce06 	br	12590 <_ZN6Serial4UARTC1ESt8functionIFvRNS_7messageEEE+0x78>
    : _Function_base()
   12658:	d8800417 	ldw	r2,16(sp)
   1265c:	d8c00f04 	addi	r3,sp,60
   12660:	1809883a 	mov	r4,r3
   12664:	d8800115 	stw	r2,4(sp)
   12668:	0011d080 	call	11d08 <_ZNSt14_Function_baseD1Ev>
   1266c:	d9000117 	ldw	r4,4(sp)
   12670:	00bfffc4 	movi	r2,-1
   12674:	d8800315 	stw	r2,12(sp)
   12678:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

0001267c <_ZN6Serial4UART8sendDataENS_7messageE>:


void Serial::UART::sendData(message msg)
{
   1267c:	defffd04 	addi	sp,sp,-12
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   12680:	d9400115 	stw	r5,4(sp)
    std::copy(
            reinterpret_cast<uint8_t *>(&msg),
            reinterpret_cast<uint8_t *>(&msg) + 4,
            &temp[0]
    );
    return temp;
   12684:	d9400215 	stw	r5,8(sp)
	std::array<uint8_t, 4> data	= convertToArray(msg);
   12688:	d9400015 	stw	r5,0(sp)
	for (uint8_t data_byte : data)
   1268c:	d807883a 	mov	r3,sp
   12690:	d9400104 	addi	r5,sp,4
   12694:	19000003 	ldbu	r4,0(r3)
		alt_u8 status = IORD_ALTERA_AVALON_UART_STATUS (UART_0_BASE);
   12698:	008000b4 	movhi	r2,2
   1269c:	108a0a37 	ldwio	r2,10280(r2)
		while (! (status & ALTERA_AVALON_UART_STATUS_TRDY_MSK))
   126a0:	1080100c 	andi	r2,r2,64
   126a4:	103ffc26 	beq	r2,zero,12698 <_ZN6Serial4UART8sendDataENS_7messageE+0x1c>
		IOWR_ALTERA_AVALON_UART_TXDATA(UART_0_BASE, data_byte);
   126a8:	20803fcc 	andi	r2,r4,255
   126ac:	010000b4 	movhi	r4,2
   126b0:	208a0935 	stwio	r2,10276(r4)
	for (uint8_t data_byte : data)
   126b4:	18c00044 	addi	r3,r3,1
   126b8:	197ff61e 	bne	r3,r5,12694 <_ZN6Serial4UART8sendDataENS_7messageE+0x18>
}
   126bc:	dec00304 	addi	sp,sp,12
   126c0:	f800283a 	ret

000126c4 <_ZN6Serial4UART14convertToArrayENS_7messageE>:
{
   126c4:	defffd04 	addi	sp,sp,-12
    return temp;
   126c8:	d9400215 	stw	r5,8(sp)
   126cc:	d9000243 	ldbu	r4,9(sp)
   126d0:	d8c00283 	ldbu	r3,10(sp)
   126d4:	d88002c3 	ldbu	r2,11(sp)
   126d8:	2008923a 	slli	r4,r4,8
   126dc:	1806943a 	slli	r3,r3,16
   126e0:	1004963a 	slli	r2,r2,24
   126e4:	29403fcc 	andi	r5,r5,255
   126e8:	290ab03a 	or	r5,r5,r4
   126ec:	28cab03a 	or	r5,r5,r3
}
   126f0:	2884b03a 	or	r2,r5,r2
   126f4:	dec00304 	addi	sp,sp,12
   126f8:	f800283a 	ret

000126fc <_GLOBAL__sub_I__ZN6Serial4UART10uart_readyE>:
    _Function_base() : _M_manager(nullptr) { }
   126fc:	008000b4 	movhi	r2,2
   12700:	1027cc15 	stw	zero,-24784(r2)
   12704:	f800283a 	ret

00012708 <_GLOBAL__sub_D__ZN6Serial4UART10uart_readyE>:
    class function<_Res(_ArgTypes...)>
   12708:	010000b4 	movhi	r4,2
   1270c:	2127ca04 	addi	r4,r4,-24792
   12710:	0011d081 	jmpi	11d08 <_ZNSt14_Function_baseD1Ev>

00012714 <_ZN5Timer11timer_0_isrEPv>:
std::function<void()> Timer::callback;

void Timer::timer_0_isr(void* timer_isr_context)
{
    // Answer interrupt, clear STATUS register.
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE,
   12714:	00ffff84 	movi	r3,-2
   12718:	008000b4 	movhi	r2,2
   1271c:	10ca0035 	stwio	r3,10240(r2)
    bool _M_empty() const { return !_M_manager; }
   12720:	010000b4 	movhi	r4,2
   12724:	2127ce04 	addi	r4,r4,-24776
      if (_M_empty())
   12728:	20800217 	ldw	r2,8(r4)
   1272c:	10000226 	beq	r2,zero,12738 <_ZN5Timer11timer_0_isrEPv+0x24>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
   12730:	20800317 	ldw	r2,12(r4)
   12734:	1000683a 	jmp	r2
{
   12738:	deffff04 	addi	sp,sp,-4
   1273c:	dfc00015 	stw	ra,0(sp)
	__throw_bad_function_call();
   12740:	0014a580 	call	14a58 <_ZSt25__throw_bad_function_callv>

00012744 <_ZN5TimerC1ESt8functionIFvvEE>:

	// Call callback.
	callback();
}

Timer::Timer(std::function<void ()> func)
   12744:	deffec04 	addi	sp,sp,-80
   12748:	01800074 	movhi	r6,1
   1274c:	00c000b4 	movhi	r3,2
   12750:	00800074 	movhi	r2,1
   12754:	18e1ce84 	addi	r3,r3,-30918
   12758:	108a0f04 	addi	r2,r2,10300
   1275c:	318c2104 	addi	r6,r6,12420
   12760:	d9000104 	addi	r4,sp,4
   12764:	d8c00815 	stw	r3,32(sp)
   12768:	d8800a15 	stw	r2,40(sp)
   1276c:	dfc01315 	stw	ra,76(sp)
   12770:	df001215 	stw	fp,72(sp)
   12774:	d9400015 	stw	r5,0(sp)
   12778:	d9800715 	stw	r6,28(sp)
   1277c:	df000915 	stw	fp,36(sp)
   12780:	dec00b15 	stw	sp,44(sp)
   12784:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
    bool _M_empty() const { return !_M_manager; }
   12788:	d8800017 	ldw	r2,0(sp)
    _Function_base() : _M_manager(nullptr) { }
   1278c:	d8001015 	stw	zero,64(sp)
    bool _M_empty() const { return !_M_manager; }
   12790:	10c00217 	ldw	r3,8(r2)
      if (static_cast<bool>(__x))
   12794:	18002726 	beq	r3,zero,12834 <_ZN5TimerC1ESt8functionIFvvEE+0xf0>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
   12798:	d9400017 	ldw	r5,0(sp)
   1279c:	00800044 	movi	r2,1
   127a0:	d8800215 	stw	r2,8(sp)
   127a4:	01800084 	movi	r6,2
   127a8:	d9000e04 	addi	r4,sp,56
   127ac:	183ee83a 	callr	r3
	  _M_invoker = __x._M_invoker;
   127b0:	d8800017 	ldw	r2,0(sp)
   127b4:	11000317 	ldw	r4,12(r2)
	  _M_manager = __x._M_manager;
   127b8:	10c00217 	ldw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   127bc:	008000b4 	movhi	r2,2
   127c0:	10a7ce04 	addi	r2,r2,-24776
      __b = _GLIBCXX_MOVE(__tmp);
   127c4:	dac00e17 	ldw	r11,56(sp)
      __a = _GLIBCXX_MOVE(__b);
   127c8:	014000b4 	movhi	r5,2
   127cc:	2a67ce17 	ldw	r9,-24776(r5)
   127d0:	12000117 	ldw	r8,4(r2)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   127d4:	d9800f17 	ldw	r6,60(sp)
      __a = _GLIBCXX_MOVE(__b);
   127d8:	11c00217 	ldw	r7,8(r2)
   127dc:	11400317 	ldw	r5,12(r2)
      __b = _GLIBCXX_MOVE(__tmp);
   127e0:	028000b4 	movhi	r10,2
   127e4:	52e7ce15 	stw	r11,-24776(r10)
      __a = _GLIBCXX_MOVE(__b);
   127e8:	da400e15 	stw	r9,56(sp)
   127ec:	da000f15 	stw	r8,60(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   127f0:	11800115 	stw	r6,4(r2)
      __a = _GLIBCXX_MOVE(__b);
   127f4:	d9c01015 	stw	r7,64(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   127f8:	10c00215 	stw	r3,8(r2)
      __a = _GLIBCXX_MOVE(__b);
   127fc:	d9401115 	stw	r5,68(sp)
      __b = _GLIBCXX_MOVE(__tmp);
   12800:	11000315 	stw	r4,12(r2)
      if (_M_manager)
   12804:	38000526 	beq	r7,zero,1281c <_ZN5TimerC1ESt8functionIFvvEE+0xd8>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   12808:	d9400e04 	addi	r5,sp,56
   1280c:	d8000215 	stw	zero,8(sp)
   12810:	018000c4 	movi	r6,3
   12814:	2809883a 	mov	r4,r5
   12818:	383ee83a 	callr	r7
   1281c:	d9000104 	addi	r4,sp,4
   12820:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
{
	callback = func;
}
   12824:	dfc01317 	ldw	ra,76(sp)
   12828:	df001217 	ldw	fp,72(sp)
   1282c:	dec01404 	addi	sp,sp,80
   12830:	f800283a 	ret
      _Tp __tmp = _GLIBCXX_MOVE(__a);
   12834:	d9001117 	ldw	r4,68(sp)
   12838:	003fe006 	br	127bc <_ZN5TimerC1ESt8functionIFvvEE+0x78>
    : _Function_base()
   1283c:	d8800317 	ldw	r2,12(sp)
   12840:	d8c00e04 	addi	r3,sp,56
   12844:	1809883a 	mov	r4,r3
   12848:	d8800015 	stw	r2,0(sp)
   1284c:	0011d080 	call	11d08 <_ZNSt14_Function_baseD1Ev>
   12850:	d9000017 	ldw	r4,0(sp)
   12854:	00bfffc4 	movi	r2,-1
   12858:	d8800215 	stw	r2,8(sp)
   1285c:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

00012860 <_ZN5Timer6enableEv>:

void Timer::enable()
{
   12860:	defffe04 	addi	sp,sp,-8
   12864:	dfc00115 	stw	ra,4(sp)
	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE,
   12868:	00c001c4 	movi	r3,7
   1286c:	008000b4 	movhi	r2,2
   12870:	10ca0135 	stwio	r3,10244(r2)
		ALTERA_AVALON_TIMER_CONTROL_CONT_MSK  | // CONT  = 1
		ALTERA_AVALON_TIMER_CONTROL_ITO_MSK);   // ITO   = 1

	void* isr_context_ptr = (void*) &timer_isr_context;

	alt_ic_isr_register(
   12874:	01800074 	movhi	r6,1
   12878:	d8000015 	stw	zero,0(sp)
   1287c:	d1e21304 	addi	r7,gp,-30644
   12880:	3189c504 	addi	r6,r6,10004
   12884:	014000c4 	movi	r5,3
   12888:	0009883a 	mov	r4,zero
   1288c:	00176cc0 	call	176cc <alt_ic_isr_register>
		TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, // interrupt controller label, copied from system.h
		TIMER_0_IRQ, // hardware interrupt number, copied from system.h
		timer_0_isr, // interrupt service subfunction
		isr_context_ptr, // points to the data structure related to the device driver instance
		0x0); // flags, reserved unused
}
   12890:	dfc00117 	ldw	ra,4(sp)
   12894:	dec00204 	addi	sp,sp,8
   12898:	f800283a 	ret

0001289c <_GLOBAL__sub_I__ZN5Timer17timer_isr_contextE>:
    _Function_base() : _M_manager(nullptr) { }
   1289c:	008000b4 	movhi	r2,2
   128a0:	1027d015 	stw	zero,-24768(r2)
   128a4:	f800283a 	ret

000128a8 <_GLOBAL__sub_D__ZN5Timer17timer_isr_contextE>:
    class function<_Res(_ArgTypes...)>
   128a8:	010000b4 	movhi	r4,2
   128ac:	2127ce04 	addi	r4,r4,-24776
   128b0:	0011d081 	jmpi	11d08 <_ZNSt14_Function_baseD1Ev>

000128b4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   128b4:	20800017 	ldw	r2,0(r4)
   128b8:	defffa04 	addi	sp,sp,-24
   128bc:	dc000415 	stw	r16,16(sp)
   128c0:	10800617 	ldw	r2,24(r2)
   128c4:	3021883a 	mov	r16,r6
   128c8:	31800017 	ldw	r6,0(r6)
   128cc:	00c00404 	movi	r3,16
   128d0:	dfc00515 	stw	ra,20(sp)
   128d4:	d8000015 	stw	zero,0(sp)
   128d8:	d8000115 	stw	zero,4(sp)
   128dc:	d8c00215 	stw	r3,8(sp)
   128e0:	d8000315 	stw	zero,12(sp)
   128e4:	d80f883a 	mov	r7,sp
   128e8:	103ee83a 	callr	r2
   128ec:	d8800117 	ldw	r2,4(sp)
   128f0:	1080018c 	andi	r2,r2,6
   128f4:	10800198 	cmpnei	r2,r2,6
   128f8:	1000071e 	bne	r2,zero,12918 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x64>
   128fc:	d8c00017 	ldw	r3,0(sp)
   12900:	00800044 	movi	r2,1
   12904:	80c00015 	stw	r3,0(r16)
   12908:	dfc00517 	ldw	ra,20(sp)
   1290c:	dc000417 	ldw	r16,16(sp)
   12910:	dec00604 	addi	sp,sp,24
   12914:	f800283a 	ret
   12918:	0005883a 	mov	r2,zero
   1291c:	dfc00517 	ldw	ra,20(sp)
   12920:	dc000417 	ldw	r16,16(sp)
   12924:	dec00604 	addi	sp,sp,24
   12928:	f800283a 	ret

0001292c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
   1292c:	d8c00017 	ldw	r3,0(sp)
   12930:	00800044 	movi	r2,1
   12934:	19800126 	beq	r3,r6,1293c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
   12938:	f800283a 	ret
   1293c:	00800184 	movi	r2,6
   12940:	f800283a 	ret

00012944 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   12944:	008000b4 	movhi	r2,2
   12948:	10a25004 	addi	r2,r2,-30400
   1294c:	20800015 	stw	r2,0(r4)
   12950:	0013fb81 	jmpi	13fb8 <_ZNSt9type_infoD1Ev>

00012954 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   12954:	defffe04 	addi	sp,sp,-8
   12958:	008000b4 	movhi	r2,2
   1295c:	dc000015 	stw	r16,0(sp)
   12960:	dfc00115 	stw	ra,4(sp)
   12964:	10a25004 	addi	r2,r2,-30400
   12968:	20800015 	stw	r2,0(r4)
   1296c:	2021883a 	mov	r16,r4
   12970:	0013fb80 	call	13fb8 <_ZNSt9type_infoD1Ev>
   12974:	01400204 	movi	r5,8
   12978:	8009883a 	mov	r4,r16
   1297c:	dfc00117 	ldw	ra,4(sp)
   12980:	dc000017 	ldw	r16,0(sp)
   12984:	dec00204 	addi	sp,sp,8
   12988:	0012b581 	jmpi	12b58 <_ZdlPvj>

0001298c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
   1298c:	21000117 	ldw	r4,4(r4)
   12990:	29400117 	ldw	r5,4(r5)
   12994:	defffd04 	addi	sp,sp,-12
   12998:	dc400115 	stw	r17,4(sp)
   1299c:	dc000015 	stw	r16,0(sp)
   129a0:	dfc00215 	stw	ra,8(sp)
   129a4:	3023883a 	mov	r17,r6
   129a8:	3821883a 	mov	r16,r7
   129ac:	21400526 	beq	r4,r5,129c4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
   129b0:	20800007 	ldb	r2,0(r4)
   129b4:	10800aa0 	cmpeqi	r2,r2,42
   129b8:	10000d1e 	bne	r2,zero,129f0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   129bc:	001766c0 	call	1766c <strcmp>
   129c0:	10000b1e 	bne	r2,zero,129f0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
   129c4:	00800204 	movi	r2,8
   129c8:	80800315 	stw	r2,12(r16)
   129cc:	00800184 	movi	r2,6
   129d0:	80800115 	stw	r2,4(r16)
   129d4:	84400015 	stw	r17,0(r16)
   129d8:	00800044 	movi	r2,1
   129dc:	dfc00217 	ldw	ra,8(sp)
   129e0:	dc400117 	ldw	r17,4(sp)
   129e4:	dc000017 	ldw	r16,0(sp)
   129e8:	dec00304 	addi	sp,sp,12
   129ec:	f800283a 	ret
   129f0:	0005883a 	mov	r2,zero
   129f4:	003ff906 	br	129dc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>

000129f8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
   129f8:	defffb04 	addi	sp,sp,-20
   129fc:	dc800315 	stw	r18,12(sp)
   12a00:	dc400215 	stw	r17,8(sp)
   12a04:	2025883a 	mov	r18,r4
   12a08:	2823883a 	mov	r17,r5
   12a0c:	21000117 	ldw	r4,4(r4)
   12a10:	29400117 	ldw	r5,4(r5)
   12a14:	dfc00415 	stw	ra,16(sp)
   12a18:	dc000115 	stw	r16,4(sp)
   12a1c:	21400826 	beq	r4,r5,12a40 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x48>
   12a20:	20800007 	ldb	r2,0(r4)
   12a24:	3821883a 	mov	r16,r7
   12a28:	10800aa0 	cmpeqi	r2,r2,42
   12a2c:	10000b1e 	bne	r2,zero,12a5c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12a30:	d9800015 	stw	r6,0(sp)
   12a34:	001766c0 	call	1766c <strcmp>
   12a38:	d9800017 	ldw	r6,0(sp)
   12a3c:	1000071e 	bne	r2,zero,12a5c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
   12a40:	00800044 	movi	r2,1
   12a44:	dfc00417 	ldw	ra,16(sp)
   12a48:	dc800317 	ldw	r18,12(sp)
   12a4c:	dc400217 	ldw	r17,8(sp)
   12a50:	dc000117 	ldw	r16,4(sp)
   12a54:	dec00504 	addi	sp,sp,20
   12a58:	f800283a 	ret
   12a5c:	81c00128 	cmpgeui	r7,r16,4
   12a60:	38000a1e 	bne	r7,zero,12a8c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x94>
   12a64:	88800017 	ldw	r2,0(r17)
   12a68:	900b883a 	mov	r5,r18
   12a6c:	8809883a 	mov	r4,r17
   12a70:	10800517 	ldw	r2,20(r2)
   12a74:	dfc00417 	ldw	ra,16(sp)
   12a78:	dc800317 	ldw	r18,12(sp)
   12a7c:	dc400217 	ldw	r17,8(sp)
   12a80:	dc000117 	ldw	r16,4(sp)
   12a84:	dec00504 	addi	sp,sp,20
   12a88:	1000683a 	jmp	r2
   12a8c:	0005883a 	mov	r2,zero
   12a90:	003fec06 	br	12a44 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x4c>

00012a94 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
   12a94:	defffa04 	addi	sp,sp,-24
   12a98:	dc400315 	stw	r17,12(sp)
   12a9c:	d8800817 	ldw	r2,32(sp)
   12aa0:	dc400617 	ldw	r17,24(sp)
   12aa4:	dc800415 	stw	r18,16(sp)
   12aa8:	dc000215 	stw	r16,8(sp)
   12aac:	dfc00515 	stw	ra,20(sp)
   12ab0:	dc800917 	ldw	r18,36(sp)
   12ab4:	21000117 	ldw	r4,4(r4)
   12ab8:	3021883a 	mov	r16,r6
   12abc:	88801226 	beq	r17,r2,12b08 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x74>
   12ac0:	39400117 	ldw	r5,4(r7)
   12ac4:	21400526 	beq	r4,r5,12adc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12ac8:	20800007 	ldb	r2,0(r4)
   12acc:	10800aa0 	cmpeqi	r2,r2,42
   12ad0:	1000061e 	bne	r2,zero,12aec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12ad4:	001766c0 	call	1766c <strcmp>
   12ad8:	1000041e 	bne	r2,zero,12aec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12adc:	00800044 	movi	r2,1
   12ae0:	94400015 	stw	r17,0(r18)
   12ae4:	94000115 	stw	r16,4(r18)
   12ae8:	90800315 	stw	r2,12(r18)
   12aec:	0005883a 	mov	r2,zero
   12af0:	dfc00517 	ldw	ra,20(sp)
   12af4:	dc800417 	ldw	r18,16(sp)
   12af8:	dc400317 	ldw	r17,12(sp)
   12afc:	dc000217 	ldw	r16,8(sp)
   12b00:	dec00604 	addi	sp,sp,24
   12b04:	f800283a 	ret
   12b08:	d8800717 	ldw	r2,28(sp)
   12b0c:	11400117 	ldw	r5,4(r2)
   12b10:	21400f26 	beq	r4,r5,12b50 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12b14:	20800007 	ldb	r2,0(r4)
   12b18:	10800aa0 	cmpeqi	r2,r2,42
   12b1c:	1000091e 	bne	r2,zero,12b44 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
   12b20:	d9c00115 	stw	r7,4(sp)
   12b24:	d9000015 	stw	r4,0(sp)
   12b28:	001766c0 	call	1766c <strcmp>
   12b2c:	d9000017 	ldw	r4,0(sp)
   12b30:	d9c00117 	ldw	r7,4(sp)
   12b34:	10000626 	beq	r2,zero,12b50 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xbc>
   12b38:	39400117 	ldw	r5,4(r7)
   12b3c:	217fe51e 	bne	r4,r5,12ad4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x40>
   12b40:	003fe606 	br	12adc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12b44:	38800117 	ldw	r2,4(r7)
   12b48:	20bfe81e 	bne	r4,r2,12aec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>
   12b4c:	003fe306 	br	12adc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
   12b50:	94000215 	stw	r16,8(r18)
   12b54:	003fe506 	br	12aec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x58>

00012b58 <_ZdlPvj>:
   12b58:	0014a8c1 	jmpi	14a8c <_ZdlPv>

00012b5c <_ZdaPv>:
   12b5c:	0014a8c1 	jmpi	14a8c <_ZdlPv>

00012b60 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
   12b60:	28800017 	ldw	r2,0(r5)
   12b64:	30c00017 	ldw	r3,0(r6)
   12b68:	defffb04 	addi	sp,sp,-20
   12b6c:	10800217 	ldw	r2,8(r2)
   12b70:	dc800315 	stw	r18,12(sp)
   12b74:	dc400215 	stw	r17,8(sp)
   12b78:	dc000115 	stw	r16,4(sp)
   12b7c:	dfc00415 	stw	ra,16(sp)
   12b80:	2023883a 	mov	r17,r4
   12b84:	d8c00015 	stw	r3,0(sp)
   12b88:	2809883a 	mov	r4,r5
   12b8c:	2821883a 	mov	r16,r5
   12b90:	3025883a 	mov	r18,r6
   12b94:	103ee83a 	callr	r2
   12b98:	10803fcc 	andi	r2,r2,255
   12b9c:	10000326 	beq	r2,zero,12bac <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
   12ba0:	d8800017 	ldw	r2,0(sp)
   12ba4:	10800017 	ldw	r2,0(r2)
   12ba8:	d8800015 	stw	r2,0(sp)
   12bac:	88800017 	ldw	r2,0(r17)
   12bb0:	01c00044 	movi	r7,1
   12bb4:	d80d883a 	mov	r6,sp
   12bb8:	10800417 	ldw	r2,16(r2)
   12bbc:	800b883a 	mov	r5,r16
   12bc0:	8809883a 	mov	r4,r17
   12bc4:	103ee83a 	callr	r2
   12bc8:	10c03fcc 	andi	r3,r2,255
   12bcc:	18000226 	beq	r3,zero,12bd8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x78>
   12bd0:	d8c00017 	ldw	r3,0(sp)
   12bd4:	90c00015 	stw	r3,0(r18)
   12bd8:	dfc00417 	ldw	ra,16(sp)
   12bdc:	dc800317 	ldw	r18,12(sp)
   12be0:	dc400217 	ldw	r17,8(sp)
   12be4:	dc000117 	ldw	r16,4(sp)
   12be8:	dec00504 	addi	sp,sp,20
   12bec:	f800283a 	ret

00012bf0 <_ZL28read_encoded_value_with_basehjPKhPj>:
   12bf0:	20803fcc 	andi	r2,r4,255
   12bf4:	10801418 	cmpnei	r2,r2,80
   12bf8:	10002c26 	beq	r2,zero,12cac <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
   12bfc:	208003cc 	andi	r2,r4,15
   12c00:	10c00368 	cmpgeui	r3,r2,13
   12c04:	1800711e 	bne	r3,zero,12dcc <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
   12c08:	100490ba 	slli	r2,r2,2
   12c0c:	00c00074 	movhi	r3,1
   12c10:	10c7883a 	add	r3,r2,r3
   12c14:	188b0717 	ldw	r2,11292(r3)
   12c18:	1000683a 	jmp	r2
   12c1c:	00012c50 	cmplti	zero,zero,1201
   12c20:	00012d40 	call	12d4 <__alt_mem_onchip_mem-0xed2c>
   12c24:	00012d04 	movi	zero,1204
   12c28:	00012c50 	cmplti	zero,zero,1201
   12c2c:	00012cd4 	movui	zero,1203
   12c30:	00012dcc 	andi	zero,zero,1207
   12c34:	00012dcc 	andi	zero,zero,1207
   12c38:	00012dcc 	andi	zero,zero,1207
   12c3c:	00012dcc 	andi	zero,zero,1207
   12c40:	00012d78 	rdprs	zero,zero,1205
   12c44:	00012d1c 	xori	zero,zero,1204
   12c48:	00012c50 	cmplti	zero,zero,1201
   12c4c:	00012cd4 	movui	zero,1203
   12c50:	32000043 	ldbu	r8,1(r6)
   12c54:	30800083 	ldbu	r2,2(r6)
   12c58:	30c000c3 	ldbu	r3,3(r6)
   12c5c:	32400003 	ldbu	r9,0(r6)
   12c60:	4010923a 	slli	r8,r8,8
   12c64:	1004943a 	slli	r2,r2,16
   12c68:	1806963a 	slli	r3,r3,24
   12c6c:	4250b03a 	or	r8,r8,r9
   12c70:	1204b03a 	or	r2,r2,r8
   12c74:	1886b03a 	or	r3,r3,r2
   12c78:	30800104 	addi	r2,r6,4
   12c7c:	18000926 	beq	r3,zero,12ca4 <_ZL28read_encoded_value_with_basehjPKhPj+0xb4>
   12c80:	22001c0c 	andi	r8,r4,112
   12c84:	42000418 	cmpnei	r8,r8,16
   12c88:	4000011e 	bne	r8,zero,12c90 <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
   12c8c:	300b883a 	mov	r5,r6
   12c90:	21003fcc 	andi	r4,r4,255
   12c94:	2100201c 	xori	r4,r4,128
   12c98:	213fe004 	addi	r4,r4,-128
   12c9c:	1947883a 	add	r3,r3,r5
   12ca0:	20000916 	blt	r4,zero,12cc8 <_ZL28read_encoded_value_with_basehjPKhPj+0xd8>
   12ca4:	38c00015 	stw	r3,0(r7)
   12ca8:	f800283a 	ret
   12cac:	308000c4 	addi	r2,r6,3
   12cb0:	01bfff04 	movi	r6,-4
   12cb4:	1184703a 	and	r2,r2,r6
   12cb8:	10c00017 	ldw	r3,0(r2)
   12cbc:	10800104 	addi	r2,r2,4
   12cc0:	38c00015 	stw	r3,0(r7)
   12cc4:	f800283a 	ret
   12cc8:	18c00017 	ldw	r3,0(r3)
   12ccc:	38c00015 	stw	r3,0(r7)
   12cd0:	f800283a 	ret
   12cd4:	32000043 	ldbu	r8,1(r6)
   12cd8:	30800083 	ldbu	r2,2(r6)
   12cdc:	30c000c3 	ldbu	r3,3(r6)
   12ce0:	32400003 	ldbu	r9,0(r6)
   12ce4:	4010923a 	slli	r8,r8,8
   12ce8:	1004943a 	slli	r2,r2,16
   12cec:	1806963a 	slli	r3,r3,24
   12cf0:	4250b03a 	or	r8,r8,r9
   12cf4:	1204b03a 	or	r2,r2,r8
   12cf8:	1886b03a 	or	r3,r3,r2
   12cfc:	30800204 	addi	r2,r6,8
   12d00:	003fde06 	br	12c7c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d04:	30c00043 	ldbu	r3,1(r6)
   12d08:	32000003 	ldbu	r8,0(r6)
   12d0c:	30800084 	addi	r2,r6,2
   12d10:	1806923a 	slli	r3,r3,8
   12d14:	1a06b03a 	or	r3,r3,r8
   12d18:	003fd806 	br	12c7c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d1c:	30c00043 	ldbu	r3,1(r6)
   12d20:	32000003 	ldbu	r8,0(r6)
   12d24:	30800084 	addi	r2,r6,2
   12d28:	1806923a 	slli	r3,r3,8
   12d2c:	1a06b03a 	or	r3,r3,r8
   12d30:	18ffffcc 	andi	r3,r3,65535
   12d34:	18e0001c 	xori	r3,r3,32768
   12d38:	18e00004 	addi	r3,r3,-32768
   12d3c:	003fcf06 	br	12c7c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d40:	3005883a 	mov	r2,r6
   12d44:	0007883a 	mov	r3,zero
   12d48:	0015883a 	mov	r10,zero
   12d4c:	12000003 	ldbu	r8,0(r2)
   12d50:	10800044 	addi	r2,r2,1
   12d54:	42401fcc 	andi	r9,r8,127
   12d58:	4a92983a 	sll	r9,r9,r10
   12d5c:	42003fcc 	andi	r8,r8,255
   12d60:	4200201c 	xori	r8,r8,128
   12d64:	423fe004 	addi	r8,r8,-128
   12d68:	1a46b03a 	or	r3,r3,r9
   12d6c:	528001c4 	addi	r10,r10,7
   12d70:	403ff616 	blt	r8,zero,12d4c <_ZL28read_encoded_value_with_basehjPKhPj+0x15c>
   12d74:	003fc106 	br	12c7c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12d78:	3005883a 	mov	r2,r6
   12d7c:	0007883a 	mov	r3,zero
   12d80:	0013883a 	mov	r9,zero
   12d84:	12800003 	ldbu	r10,0(r2)
   12d88:	10800044 	addi	r2,r2,1
   12d8c:	52001fcc 	andi	r8,r10,127
   12d90:	4250983a 	sll	r8,r8,r9
   12d94:	52c03fcc 	andi	r11,r10,255
   12d98:	5ac0201c 	xori	r11,r11,128
   12d9c:	5affe004 	addi	r11,r11,-128
   12da0:	1a06b03a 	or	r3,r3,r8
   12da4:	4a4001c4 	addi	r9,r9,7
   12da8:	583ff616 	blt	r11,zero,12d84 <_ZL28read_encoded_value_with_basehjPKhPj+0x194>
   12dac:	4a000828 	cmpgeui	r8,r9,32
   12db0:	403fb21e 	bne	r8,zero,12c7c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12db4:	5280100c 	andi	r10,r10,64
   12db8:	503fb026 	beq	r10,zero,12c7c <_ZL28read_encoded_value_with_basehjPKhPj+0x8c>
   12dbc:	023fffc4 	movi	r8,-1
   12dc0:	4252983a 	sll	r9,r8,r9
   12dc4:	1a46b03a 	or	r3,r3,r9
   12dc8:	003fad06 	br	12c80 <_ZL28read_encoded_value_with_basehjPKhPj+0x90>
   12dcc:	deffff04 	addi	sp,sp,-4
   12dd0:	dfc00015 	stw	ra,0(sp)
   12dd4:	00170f40 	call	170f4 <abort>

00012dd8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
   12dd8:	20803fcc 	andi	r2,r4,255
   12ddc:	10803fe0 	cmpeqi	r2,r2,255
   12de0:	1000161e 	bne	r2,zero,12e3c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12de4:	2007883a 	mov	r3,r4
   12de8:	18801c0c 	andi	r2,r3,112
   12dec:	2809883a 	mov	r4,r5
   12df0:	11400c20 	cmpeqi	r5,r2,48
   12df4:	2800131e 	bne	r5,zero,12e44 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
   12df8:	11400c68 	cmpgeui	r5,r2,49
   12dfc:	2800031e 	bne	r5,zero,12e0c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
   12e00:	11400820 	cmpeqi	r5,r2,32
   12e04:	28000426 	beq	r5,zero,12e18 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
   12e08:	0016c8c1 	jmpi	16c8c <_Unwind_GetTextRelBase>
   12e0c:	10c01020 	cmpeqi	r3,r2,64
   12e10:	18000826 	beq	r3,zero,12e34 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
   12e14:	0016c741 	jmpi	16c74 <_Unwind_GetRegionStart>
   12e18:	10800868 	cmpgeui	r2,r2,33
   12e1c:	1000021e 	bne	r2,zero,12e28 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12e20:	18c0180c 	andi	r3,r3,96
   12e24:	18000526 	beq	r3,zero,12e3c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
   12e28:	deffff04 	addi	sp,sp,-4
   12e2c:	dfc00015 	stw	ra,0(sp)
   12e30:	00170f40 	call	170f4 <abort>
   12e34:	10801420 	cmpeqi	r2,r2,80
   12e38:	103ffb26 	beq	r2,zero,12e28 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x50>
   12e3c:	0005883a 	mov	r2,zero
   12e40:	f800283a 	ret
   12e44:	0016c841 	jmpi	16c84 <_Unwind_GetDataRelBase>

00012e48 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
   12e48:	defffb04 	addi	sp,sp,-20
   12e4c:	dc800215 	stw	r18,8(sp)
   12e50:	dc400115 	stw	r17,4(sp)
   12e54:	dc000015 	stw	r16,0(sp)
   12e58:	dfc00415 	stw	ra,16(sp)
   12e5c:	dcc00315 	stw	r19,12(sp)
   12e60:	2025883a 	mov	r18,r4
   12e64:	2821883a 	mov	r16,r5
   12e68:	3023883a 	mov	r17,r6
   12e6c:	20003d26 	beq	r4,zero,12f64 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
   12e70:	0016c740 	call	16c74 <_Unwind_GetRegionStart>
   12e74:	88800015 	stw	r2,0(r17)
   12e78:	84c00003 	ldbu	r19,0(r16)
   12e7c:	84000044 	addi	r16,r16,1
   12e80:	98c03fe0 	cmpeqi	r3,r19,255
   12e84:	18002d26 	beq	r3,zero,12f3c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xf4>
   12e88:	88800115 	stw	r2,4(r17)
   12e8c:	81000003 	ldbu	r4,0(r16)
   12e90:	80800044 	addi	r2,r16,1
   12e94:	20c03fcc 	andi	r3,r4,255
   12e98:	89000505 	stb	r4,20(r17)
   12e9c:	18c03fe0 	cmpeqi	r3,r3,255
   12ea0:	1800321e 	bne	r3,zero,12f6c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
   12ea4:	000d883a 	mov	r6,zero
   12ea8:	000b883a 	mov	r5,zero
   12eac:	10c00003 	ldbu	r3,0(r2)
   12eb0:	10800044 	addi	r2,r2,1
   12eb4:	19001fcc 	andi	r4,r3,127
   12eb8:	2148983a 	sll	r4,r4,r5
   12ebc:	18c03fcc 	andi	r3,r3,255
   12ec0:	18c0201c 	xori	r3,r3,128
   12ec4:	18ffe004 	addi	r3,r3,-128
   12ec8:	310cb03a 	or	r6,r6,r4
   12ecc:	294001c4 	addi	r5,r5,7
   12ed0:	183ff616 	blt	r3,zero,12eac <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
   12ed4:	118d883a 	add	r6,r2,r6
   12ed8:	89800315 	stw	r6,12(r17)
   12edc:	10c00003 	ldbu	r3,0(r2)
   12ee0:	000f883a 	mov	r7,zero
   12ee4:	10800044 	addi	r2,r2,1
   12ee8:	88c00545 	stb	r3,21(r17)
   12eec:	000b883a 	mov	r5,zero
   12ef0:	10c00003 	ldbu	r3,0(r2)
   12ef4:	10800044 	addi	r2,r2,1
   12ef8:	19001fcc 	andi	r4,r3,127
   12efc:	2148983a 	sll	r4,r4,r5
   12f00:	18c03fcc 	andi	r3,r3,255
   12f04:	18c0201c 	xori	r3,r3,128
   12f08:	18ffe004 	addi	r3,r3,-128
   12f0c:	390eb03a 	or	r7,r7,r4
   12f10:	294001c4 	addi	r5,r5,7
   12f14:	183ff616 	blt	r3,zero,12ef0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
   12f18:	11cf883a 	add	r7,r2,r7
   12f1c:	89c00415 	stw	r7,16(r17)
   12f20:	dfc00417 	ldw	ra,16(sp)
   12f24:	dcc00317 	ldw	r19,12(sp)
   12f28:	dc800217 	ldw	r18,8(sp)
   12f2c:	dc400117 	ldw	r17,4(sp)
   12f30:	dc000017 	ldw	r16,0(sp)
   12f34:	dec00504 	addi	sp,sp,20
   12f38:	f800283a 	ret
   12f3c:	900b883a 	mov	r5,r18
   12f40:	9809883a 	mov	r4,r19
   12f44:	0012dd80 	call	12dd8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   12f48:	800d883a 	mov	r6,r16
   12f4c:	89c00104 	addi	r7,r17,4
   12f50:	100b883a 	mov	r5,r2
   12f54:	9809883a 	mov	r4,r19
   12f58:	0012bf00 	call	12bf0 <_ZL28read_encoded_value_with_basehjPKhPj>
   12f5c:	1021883a 	mov	r16,r2
   12f60:	003fca06 	br	12e8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
   12f64:	0005883a 	mov	r2,zero
   12f68:	003fc206 	br	12e74 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
   12f6c:	88000315 	stw	zero,12(r17)
   12f70:	003fda06 	br	12edc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x94>

00012f74 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
   12f74:	defffa04 	addi	sp,sp,-24
   12f78:	dc000215 	stw	r16,8(sp)
   12f7c:	24000317 	ldw	r16,12(r4)
   12f80:	01ce303a 	nor	r7,zero,r7
   12f84:	dc800415 	stw	r18,16(sp)
   12f88:	dc400315 	stw	r17,12(sp)
   12f8c:	dfc00515 	stw	ra,20(sp)
   12f90:	2025883a 	mov	r18,r4
   12f94:	2823883a 	mov	r17,r5
   12f98:	d9800015 	stw	r6,0(sp)
   12f9c:	81e1883a 	add	r16,r16,r7
   12fa0:	000f883a 	mov	r7,zero
   12fa4:	000d883a 	mov	r6,zero
   12fa8:	80800003 	ldbu	r2,0(r16)
   12fac:	84000044 	addi	r16,r16,1
   12fb0:	10c01fcc 	andi	r3,r2,127
   12fb4:	1986983a 	sll	r3,r3,r6
   12fb8:	10803fcc 	andi	r2,r2,255
   12fbc:	1080201c 	xori	r2,r2,128
   12fc0:	10bfe004 	addi	r2,r2,-128
   12fc4:	38ceb03a 	or	r7,r7,r3
   12fc8:	318001c4 	addi	r6,r6,7
   12fcc:	103ff616 	blt	r2,zero,12fa8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x34>
   12fd0:	38002926 	beq	r7,zero,13078 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x104>
   12fd4:	90800503 	ldbu	r2,20(r18)
   12fd8:	11003fcc 	andi	r4,r2,255
   12fdc:	20c03fe0 	cmpeqi	r3,r4,255
   12fe0:	1800231e 	bne	r3,zero,13070 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xfc>
   12fe4:	108001cc 	andi	r2,r2,7
   12fe8:	10c000a0 	cmpeqi	r3,r2,2
   12fec:	18001d1e 	bne	r3,zero,13064 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xf0>
   12ff0:	10c000e8 	cmpgeui	r3,r2,3
   12ff4:	18001726 	beq	r3,zero,13054 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe0>
   12ff8:	10c000e0 	cmpeqi	r3,r2,3
   12ffc:	1800161e 	bne	r3,zero,13058 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xe4>
   13000:	10800120 	cmpeqi	r2,r2,4
   13004:	10001e26 	beq	r2,zero,13080 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   13008:	380e90fa 	slli	r7,r7,3
   1300c:	01c5c83a 	sub	r2,zero,r7
   13010:	91800317 	ldw	r6,12(r18)
   13014:	91400217 	ldw	r5,8(r18)
   13018:	d9c00104 	addi	r7,sp,4
   1301c:	308d883a 	add	r6,r6,r2
   13020:	0012bf00 	call	12bf0 <_ZL28read_encoded_value_with_basehjPKhPj>
   13024:	d9000117 	ldw	r4,4(sp)
   13028:	d80d883a 	mov	r6,sp
   1302c:	880b883a 	mov	r5,r17
   13030:	0012b600 	call	12b60 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   13034:	10c03fcc 	andi	r3,r2,255
   13038:	183fd926 	beq	r3,zero,12fa0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
   1303c:	dfc00517 	ldw	ra,20(sp)
   13040:	dc800417 	ldw	r18,16(sp)
   13044:	dc400317 	ldw	r17,12(sp)
   13048:	dc000217 	ldw	r16,8(sp)
   1304c:	dec00604 	addi	sp,sp,24
   13050:	f800283a 	ret
   13054:	10000a1e 	bne	r2,zero,13080 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x10c>
   13058:	380e90ba 	slli	r7,r7,2
   1305c:	01c5c83a 	sub	r2,zero,r7
   13060:	003feb06 	br	13010 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   13064:	39cf883a 	add	r7,r7,r7
   13068:	01c5c83a 	sub	r2,zero,r7
   1306c:	003fe806 	br	13010 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   13070:	0005883a 	mov	r2,zero
   13074:	003fe606 	br	13010 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x9c>
   13078:	0005883a 	mov	r2,zero
   1307c:	003fef06 	br	1303c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xc8>
   13080:	00170f40 	call	170f4 <abort>

00013084 <__gxx_personality_sj0>:
   13084:	deffdb04 	addi	sp,sp,-148
   13088:	02000074 	movhi	r8,1
   1308c:	00c000b4 	movhi	r3,2
   13090:	00800074 	movhi	r2,1
   13094:	108dbe04 	addi	r2,r2,14072
   13098:	d9000015 	stw	r4,0(sp)
   1309c:	420c2104 	addi	r8,r8,12420
   130a0:	18e1d004 	addi	r3,r3,-30912
   130a4:	d9000d04 	addi	r4,sp,52
   130a8:	d8801615 	stw	r2,88(sp)
   130ac:	dfc02415 	stw	ra,144(sp)
   130b0:	df002315 	stw	fp,140(sp)
   130b4:	d9400315 	stw	r5,12(sp)
   130b8:	d9800115 	stw	r6,4(sp)
   130bc:	d9c00215 	stw	r7,8(sp)
   130c0:	da001315 	stw	r8,76(sp)
   130c4:	d8c01415 	stw	r3,80(sp)
   130c8:	df001515 	stw	fp,84(sp)
   130cc:	dec01715 	stw	sp,92(sp)
   130d0:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   130d4:	d8800017 	ldw	r2,0(sp)
   130d8:	d8001a15 	stw	zero,104(sp)
   130dc:	d8001b15 	stw	zero,108(sp)
   130e0:	10800058 	cmpnei	r2,r2,1
   130e4:	1000471e 	bne	r2,zero,13204 <__gxx_personality_sj0+0x180>
   130e8:	d9800117 	ldw	r6,4(sp)
   130ec:	00af3574 	movhi	r2,48341
   130f0:	10b54004 	addi	r2,r2,-11008
   130f4:	3085883a 	add	r2,r6,r2
   130f8:	d8800715 	stw	r2,28(sp)
   130fc:	1185803a 	cmpltu	r2,r2,r6
   13100:	d9800217 	ldw	r6,8(sp)
   13104:	00ee2cb4 	movhi	r3,47282
   13108:	d9000317 	ldw	r4,12(sp)
   1310c:	18eaaf04 	addi	r3,r3,-21828
   13110:	30c7883a 	add	r3,r6,r3
   13114:	10c7883a 	add	r3,r2,r3
   13118:	21000198 	cmpnei	r4,r4,6
   1311c:	d8c00615 	stw	r3,24(sp)
   13120:	2000011e 	bne	r4,zero,13128 <__gxx_personality_sj0+0xa4>
   13124:	1800d026 	beq	r3,zero,13468 <__gxx_personality_sj0+0x3e4>
   13128:	d9002617 	ldw	r4,152(sp)
   1312c:	00bfffc4 	movi	r2,-1
   13130:	d8800e15 	stw	r2,56(sp)
   13134:	0016c680 	call	16c68 <_Unwind_GetLanguageSpecificData>
   13138:	d8800515 	stw	r2,20(sp)
   1313c:	10005d26 	beq	r2,zero,132b4 <__gxx_personality_sj0+0x230>
   13140:	d9400517 	ldw	r5,20(sp)
   13144:	d9002617 	ldw	r4,152(sp)
   13148:	d9801d04 	addi	r6,sp,116
   1314c:	00bfffc4 	movi	r2,-1
   13150:	d8800e15 	stw	r2,56(sp)
   13154:	0012e480 	call	12e48 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   13158:	d9002203 	ldbu	r4,136(sp)
   1315c:	d9402617 	ldw	r5,152(sp)
   13160:	d8800015 	stw	r2,0(sp)
   13164:	0012dd80 	call	12dd8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   13168:	d9002617 	ldw	r4,152(sp)
   1316c:	d9401b04 	addi	r5,sp,108
   13170:	d8801f15 	stw	r2,124(sp)
   13174:	0016c380 	call	16c38 <_Unwind_GetIPInfo>
   13178:	d8c01b17 	ldw	r3,108(sp)
   1317c:	d8800115 	stw	r2,4(sp)
   13180:	18004f26 	beq	r3,zero,132c0 <__gxx_personality_sj0+0x23c>
   13184:	d8800117 	ldw	r2,4(sp)
   13188:	10004a16 	blt	r2,zero,132b4 <__gxx_personality_sj0+0x230>
   1318c:	1000381e 	bne	r2,zero,13270 <__gxx_personality_sj0+0x1ec>
   13190:	d8000415 	stw	zero,16(sp)
   13194:	d8000215 	stw	zero,8(sp)
   13198:	00800044 	movi	r2,1
   1319c:	d8c00317 	ldw	r3,12(sp)
   131a0:	18c0004c 	andi	r3,r3,1
   131a4:	1801061e 	bne	r3,zero,135c0 <__gxx_personality_sj0+0x53c>
   131a8:	d8c00317 	ldw	r3,12(sp)
   131ac:	18c0020c 	andi	r3,r3,8
   131b0:	18010a26 	beq	r3,zero,135dc <__gxx_personality_sj0+0x558>
   131b4:	10800058 	cmpnei	r2,r2,1
   131b8:	10015126 	beq	r2,zero,13700 <__gxx_personality_sj0+0x67c>
   131bc:	d8800417 	ldw	r2,16(sp)
   131c0:	10014a16 	blt	r2,zero,136ec <__gxx_personality_sj0+0x668>
   131c4:	d9002617 	ldw	r4,152(sp)
   131c8:	d9802517 	ldw	r6,148(sp)
   131cc:	00bfffc4 	movi	r2,-1
   131d0:	000b883a 	mov	r5,zero
   131d4:	d8800e15 	stw	r2,56(sp)
   131d8:	0016c100 	call	16c10 <_Unwind_SetGR>
   131dc:	d9800417 	ldw	r6,16(sp)
   131e0:	d9002617 	ldw	r4,152(sp)
   131e4:	01400044 	movi	r5,1
   131e8:	0016c100 	call	16c10 <_Unwind_SetGR>
   131ec:	d9400117 	ldw	r5,4(sp)
   131f0:	d9002617 	ldw	r4,152(sp)
   131f4:	0016c580 	call	16c58 <_Unwind_SetIP>
   131f8:	008001c4 	movi	r2,7
   131fc:	d8800015 	stw	r2,0(sp)
   13200:	00000206 	br	1320c <__gxx_personality_sj0+0x188>
   13204:	008000c4 	movi	r2,3
   13208:	d8800015 	stw	r2,0(sp)
   1320c:	d9000d04 	addi	r4,sp,52
   13210:	0016bd00 	call	16bd0 <_Unwind_SjLj_Unregister>
   13214:	d8800017 	ldw	r2,0(sp)
   13218:	dfc02417 	ldw	ra,144(sp)
   1321c:	df002317 	ldw	fp,140(sp)
   13220:	dec02504 	addi	sp,sp,148
   13224:	f800283a 	ret
   13228:	000b883a 	mov	r5,zero
   1322c:	0009883a 	mov	r4,zero
   13230:	d8c00017 	ldw	r3,0(sp)
   13234:	18800003 	ldbu	r2,0(r3)
   13238:	18c00044 	addi	r3,r3,1
   1323c:	d8c00015 	stw	r3,0(sp)
   13240:	10c01fcc 	andi	r3,r2,127
   13244:	1906983a 	sll	r3,r3,r4
   13248:	10803fcc 	andi	r2,r2,255
   1324c:	1080201c 	xori	r2,r2,128
   13250:	10bfe004 	addi	r2,r2,-128
   13254:	28cab03a 	or	r5,r5,r3
   13258:	210001c4 	addi	r4,r4,7
   1325c:	103ff416 	blt	r2,zero,13230 <__gxx_personality_sj0+0x1ac>
   13260:	d8800117 	ldw	r2,4(sp)
   13264:	10bfffc4 	addi	r2,r2,-1
   13268:	d8800115 	stw	r2,4(sp)
   1326c:	10001726 	beq	r2,zero,132cc <__gxx_personality_sj0+0x248>
   13270:	000d883a 	mov	r6,zero
   13274:	0009883a 	mov	r4,zero
   13278:	d8c00017 	ldw	r3,0(sp)
   1327c:	18800003 	ldbu	r2,0(r3)
   13280:	18c00044 	addi	r3,r3,1
   13284:	d8c00015 	stw	r3,0(sp)
   13288:	10c01fcc 	andi	r3,r2,127
   1328c:	1906983a 	sll	r3,r3,r4
   13290:	10803fcc 	andi	r2,r2,255
   13294:	1080201c 	xori	r2,r2,128
   13298:	10bfe004 	addi	r2,r2,-128
   1329c:	30ccb03a 	or	r6,r6,r3
   132a0:	210001c4 	addi	r4,r4,7
   132a4:	103ff416 	blt	r2,zero,13278 <__gxx_personality_sj0+0x1f4>
   132a8:	003fdf06 	br	13228 <__gxx_personality_sj0+0x1a4>
   132ac:	d88008c3 	ldbu	r2,35(sp)
   132b0:	10008c1e 	bne	r2,zero,134e4 <__gxx_personality_sj0+0x460>
   132b4:	00800204 	movi	r2,8
   132b8:	d8800015 	stw	r2,0(sp)
   132bc:	003fd306 	br	1320c <__gxx_personality_sj0+0x188>
   132c0:	10bfffc4 	addi	r2,r2,-1
   132c4:	d8800115 	stw	r2,4(sp)
   132c8:	003fae06 	br	13184 <__gxx_personality_sj0+0x100>
   132cc:	30800044 	addi	r2,r6,1
   132d0:	d8800a15 	stw	r2,40(sp)
   132d4:	283ff626 	beq	r5,zero,132b0 <__gxx_personality_sj0+0x22c>
   132d8:	d8800a17 	ldw	r2,40(sp)
   132dc:	103ff526 	beq	r2,zero,132b4 <__gxx_personality_sj0+0x230>
   132e0:	d8802117 	ldw	r2,132(sp)
   132e4:	297fffc4 	addi	r5,r5,-1
   132e8:	1145883a 	add	r2,r2,r5
   132ec:	d8800215 	stw	r2,8(sp)
   132f0:	10007c26 	beq	r2,zero,134e4 <__gxx_personality_sj0+0x460>
   132f4:	d8800317 	ldw	r2,12(sp)
   132f8:	1080020c 	andi	r2,r2,8
   132fc:	d8800b15 	stw	r2,44(sp)
   13300:	1000bf1e 	bne	r2,zero,13600 <__gxx_personality_sj0+0x57c>
   13304:	d8800617 	ldw	r2,24(sp)
   13308:	1000e526 	beq	r2,zero,136a0 <__gxx_personality_sj0+0x61c>
   1330c:	008000b4 	movhi	r2,2
   13310:	10a56d04 	addi	r2,r2,-27212
   13314:	d8800915 	stw	r2,36(sp)
   13318:	d8800717 	ldw	r2,28(sp)
   1331c:	d80008c5 	stb	zero,35(sp)
   13320:	108000a8 	cmpgeui	r2,r2,2
   13324:	d8800c15 	stw	r2,48(sp)
   13328:	d8800217 	ldw	r2,8(sp)
   1332c:	000f883a 	mov	r7,zero
   13330:	0007883a 	mov	r3,zero
   13334:	d8800015 	stw	r2,0(sp)
   13338:	d8800017 	ldw	r2,0(sp)
   1333c:	11000003 	ldbu	r4,0(r2)
   13340:	10800044 	addi	r2,r2,1
   13344:	d8800015 	stw	r2,0(sp)
   13348:	20801fcc 	andi	r2,r4,127
   1334c:	10c4983a 	sll	r2,r2,r3
   13350:	21403fcc 	andi	r5,r4,255
   13354:	2940201c 	xori	r5,r5,128
   13358:	297fe004 	addi	r5,r5,-128
   1335c:	388eb03a 	or	r7,r7,r2
   13360:	18c001c4 	addi	r3,r3,7
   13364:	283ff416 	blt	r5,zero,13338 <__gxx_personality_sj0+0x2b4>
   13368:	18800828 	cmpgeui	r2,r3,32
   1336c:	1000061e 	bne	r2,zero,13388 <__gxx_personality_sj0+0x304>
   13370:	2100100c 	andi	r4,r4,64
   13374:	20000426 	beq	r4,zero,13388 <__gxx_personality_sj0+0x304>
   13378:	00800044 	movi	r2,1
   1337c:	10c6983a 	sll	r3,r2,r3
   13380:	00c7c83a 	sub	r3,zero,r3
   13384:	38ceb03a 	or	r7,r7,r3
   13388:	d9400017 	ldw	r5,0(sp)
   1338c:	d9c00415 	stw	r7,16(sp)
   13390:	d8000115 	stw	zero,4(sp)
   13394:	0007883a 	mov	r3,zero
   13398:	29000003 	ldbu	r4,0(r5)
   1339c:	da000117 	ldw	r8,4(sp)
   133a0:	29400044 	addi	r5,r5,1
   133a4:	20801fcc 	andi	r2,r4,127
   133a8:	10c4983a 	sll	r2,r2,r3
   133ac:	21803fcc 	andi	r6,r4,255
   133b0:	3180201c 	xori	r6,r6,128
   133b4:	4084b03a 	or	r2,r8,r2
   133b8:	31bfe004 	addi	r6,r6,-128
   133bc:	d8800115 	stw	r2,4(sp)
   133c0:	18c001c4 	addi	r3,r3,7
   133c4:	303ff416 	blt	r6,zero,13398 <__gxx_personality_sj0+0x314>
   133c8:	18800828 	cmpgeui	r2,r3,32
   133cc:	1000081e 	bne	r2,zero,133f0 <__gxx_personality_sj0+0x36c>
   133d0:	2100100c 	andi	r4,r4,64
   133d4:	20000626 	beq	r4,zero,133f0 <__gxx_personality_sj0+0x36c>
   133d8:	00800044 	movi	r2,1
   133dc:	10c6983a 	sll	r3,r2,r3
   133e0:	d8800117 	ldw	r2,4(sp)
   133e4:	00c7c83a 	sub	r3,zero,r3
   133e8:	10c4b03a 	or	r2,r2,r3
   133ec:	d8800115 	stw	r2,4(sp)
   133f0:	38004726 	beq	r7,zero,13510 <__gxx_personality_sj0+0x48c>
   133f4:	01c04916 	blt	zero,r7,1351c <__gxx_personality_sj0+0x498>
   133f8:	d8800917 	ldw	r2,36(sp)
   133fc:	10000426 	beq	r2,zero,13410 <__gxx_personality_sj0+0x38c>
   13400:	d8800b17 	ldw	r2,44(sp)
   13404:	1000021e 	bne	r2,zero,13410 <__gxx_personality_sj0+0x38c>
   13408:	d8800617 	ldw	r2,24(sp)
   1340c:	10008026 	beq	r2,zero,13610 <__gxx_personality_sj0+0x58c>
   13410:	d8802017 	ldw	r2,128(sp)
   13414:	01ce303a 	nor	r7,zero,r7
   13418:	000b883a 	mov	r5,zero
   1341c:	11cf883a 	add	r7,r2,r7
   13420:	0009883a 	mov	r4,zero
   13424:	38800003 	ldbu	r2,0(r7)
   13428:	39c00044 	addi	r7,r7,1
   1342c:	10c01fcc 	andi	r3,r2,127
   13430:	1906983a 	sll	r3,r3,r4
   13434:	10803fcc 	andi	r2,r2,255
   13438:	1080201c 	xori	r2,r2,128
   1343c:	10bfe004 	addi	r2,r2,-128
   13440:	28cab03a 	or	r5,r5,r3
   13444:	210001c4 	addi	r4,r4,7
   13448:	103ff616 	blt	r2,zero,13424 <__gxx_personality_sj0+0x3a0>
   1344c:	28005126 	beq	r5,zero,13594 <__gxx_personality_sj0+0x510>
   13450:	d8800117 	ldw	r2,4(sp)
   13454:	103f9526 	beq	r2,zero,132ac <__gxx_personality_sj0+0x228>
   13458:	d8c00017 	ldw	r3,0(sp)
   1345c:	1885883a 	add	r2,r3,r2
   13460:	d8800215 	stw	r2,8(sp)
   13464:	003fb006 	br	13328 <__gxx_personality_sj0+0x2a4>
   13468:	d8800717 	ldw	r2,28(sp)
   1346c:	108000a8 	cmpgeui	r2,r2,2
   13470:	103f2d1e 	bne	r2,zero,13128 <__gxx_personality_sj0+0xa4>
   13474:	d8802517 	ldw	r2,148(sp)
   13478:	10bffe17 	ldw	r2,-8(r2)
   1347c:	d8800115 	stw	r2,4(sp)
   13480:	10005d26 	beq	r2,zero,135f8 <__gxx_personality_sj0+0x574>
   13484:	d8802517 	ldw	r2,148(sp)
   13488:	10bffb17 	ldw	r2,-20(r2)
   1348c:	d8800415 	stw	r2,16(sp)
   13490:	d8802517 	ldw	r2,148(sp)
   13494:	10bffd17 	ldw	r2,-12(r2)
   13498:	d8800515 	stw	r2,20(sp)
   1349c:	d8800417 	ldw	r2,16(sp)
   134a0:	103f480e 	bge	r2,zero,131c4 <__gxx_personality_sj0+0x140>
   134a4:	d9002617 	ldw	r4,152(sp)
   134a8:	d9400517 	ldw	r5,20(sp)
   134ac:	d9801d04 	addi	r6,sp,116
   134b0:	00bfffc4 	movi	r2,-1
   134b4:	d8800e15 	stw	r2,56(sp)
   134b8:	0012e480 	call	12e48 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   134bc:	d9402617 	ldw	r5,152(sp)
   134c0:	d9002203 	ldbu	r4,136(sp)
   134c4:	0012dd80 	call	12dd8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   134c8:	d9002203 	ldbu	r4,136(sp)
   134cc:	d9402617 	ldw	r5,152(sp)
   134d0:	d8801f15 	stw	r2,124(sp)
   134d4:	0012dd80 	call	12dd8 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
   134d8:	d8c02517 	ldw	r3,148(sp)
   134dc:	18bffe15 	stw	r2,-8(r3)
   134e0:	003f3806 	br	131c4 <__gxx_personality_sj0+0x140>
   134e4:	d8800317 	ldw	r2,12(sp)
   134e8:	1080004c 	andi	r2,r2,1
   134ec:	103f711e 	bne	r2,zero,132b4 <__gxx_personality_sj0+0x230>
   134f0:	d8800317 	ldw	r2,12(sp)
   134f4:	1080020c 	andi	r2,r2,8
   134f8:	d8800415 	stw	r2,16(sp)
   134fc:	10008126 	beq	r2,zero,13704 <__gxx_personality_sj0+0x680>
   13500:	d8800a17 	ldw	r2,40(sp)
   13504:	d8000415 	stw	zero,16(sp)
   13508:	d8800115 	stw	r2,4(sp)
   1350c:	003f2d06 	br	131c4 <__gxx_personality_sj0+0x140>
   13510:	00800044 	movi	r2,1
   13514:	d88008c5 	stb	r2,35(sp)
   13518:	003fcd06 	br	13450 <__gxx_personality_sj0+0x3cc>
   1351c:	d8802203 	ldbu	r2,136(sp)
   13520:	11003fcc 	andi	r4,r2,255
   13524:	20c03fe0 	cmpeqi	r3,r4,255
   13528:	18002a1e 	bne	r3,zero,135d4 <__gxx_personality_sj0+0x550>
   1352c:	108001cc 	andi	r2,r2,7
   13530:	10c000a0 	cmpeqi	r3,r2,2
   13534:	18001f1e 	bne	r3,zero,135b4 <__gxx_personality_sj0+0x530>
   13538:	10c000e8 	cmpgeui	r3,r2,3
   1353c:	18001926 	beq	r3,zero,135a4 <__gxx_personality_sj0+0x520>
   13540:	10c000e0 	cmpeqi	r3,r2,3
   13544:	1800181e 	bne	r3,zero,135a8 <__gxx_personality_sj0+0x524>
   13548:	10800120 	cmpeqi	r2,r2,4
   1354c:	10007026 	beq	r2,zero,13710 <__gxx_personality_sj0+0x68c>
   13550:	380490fa 	slli	r2,r7,3
   13554:	0085c83a 	sub	r2,zero,r2
   13558:	d9802017 	ldw	r6,128(sp)
   1355c:	d9401f17 	ldw	r5,124(sp)
   13560:	d9c01c04 	addi	r7,sp,112
   13564:	308d883a 	add	r6,r6,r2
   13568:	00bfffc4 	movi	r2,-1
   1356c:	d8800e15 	stw	r2,56(sp)
   13570:	0012bf00 	call	12bf0 <_ZL28read_encoded_value_with_basehjPKhPj>
   13574:	d9001c17 	ldw	r4,112(sp)
   13578:	20000626 	beq	r4,zero,13594 <__gxx_personality_sj0+0x510>
   1357c:	d9400917 	ldw	r5,36(sp)
   13580:	283fb326 	beq	r5,zero,13450 <__gxx_personality_sj0+0x3cc>
   13584:	d9801a04 	addi	r6,sp,104
   13588:	0012b600 	call	12b60 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
   1358c:	10803fcc 	andi	r2,r2,255
   13590:	103faf26 	beq	r2,zero,13450 <__gxx_personality_sj0+0x3cc>
   13594:	d8800a17 	ldw	r2,40(sp)
   13598:	d8800115 	stw	r2,4(sp)
   1359c:	008000c4 	movi	r2,3
   135a0:	003efe06 	br	1319c <__gxx_personality_sj0+0x118>
   135a4:	10005a1e 	bne	r2,zero,13710 <__gxx_personality_sj0+0x68c>
   135a8:	380490ba 	slli	r2,r7,2
   135ac:	0085c83a 	sub	r2,zero,r2
   135b0:	003fe906 	br	13558 <__gxx_personality_sj0+0x4d4>
   135b4:	39cf883a 	add	r7,r7,r7
   135b8:	01c5c83a 	sub	r2,zero,r7
   135bc:	003fe606 	br	13558 <__gxx_personality_sj0+0x4d4>
   135c0:	d8800617 	ldw	r2,24(sp)
   135c4:	10002326 	beq	r2,zero,13654 <__gxx_personality_sj0+0x5d0>
   135c8:	00800184 	movi	r2,6
   135cc:	d8800015 	stw	r2,0(sp)
   135d0:	003f0e06 	br	1320c <__gxx_personality_sj0+0x188>
   135d4:	0005883a 	mov	r2,zero
   135d8:	003fdf06 	br	13558 <__gxx_personality_sj0+0x4d4>
   135dc:	d8c00617 	ldw	r3,24(sp)
   135e0:	183ef41e 	bne	r3,zero,131b4 <__gxx_personality_sj0+0x130>
   135e4:	d8c00717 	ldw	r3,28(sp)
   135e8:	18c000a8 	cmpgeui	r3,r3,2
   135ec:	183ef11e 	bne	r3,zero,131b4 <__gxx_personality_sj0+0x130>
   135f0:	10800060 	cmpeqi	r2,r2,1
   135f4:	103fa926 	beq	r2,zero,1349c <__gxx_personality_sj0+0x418>
   135f8:	d9002517 	ldw	r4,148(sp)
   135fc:	0014d700 	call	14d70 <__cxa_call_terminate>
   13600:	008000b4 	movhi	r2,2
   13604:	10a56b04 	addi	r2,r2,-27220
   13608:	d8800915 	stw	r2,36(sp)
   1360c:	003f4206 	br	13318 <__gxx_personality_sj0+0x294>
   13610:	d8800c17 	ldw	r2,48(sp)
   13614:	103f7e1e 	bne	r2,zero,13410 <__gxx_personality_sj0+0x38c>
   13618:	d9801a17 	ldw	r6,104(sp)
   1361c:	d9400917 	ldw	r5,36(sp)
   13620:	00bfffc4 	movi	r2,-1
   13624:	d9001d04 	addi	r4,sp,116
   13628:	d8800e15 	stw	r2,56(sp)
   1362c:	0012f740 	call	12f74 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13630:	10803fcc 	andi	r2,r2,255
   13634:	103f861e 	bne	r2,zero,13450 <__gxx_personality_sj0+0x3cc>
   13638:	d8800317 	ldw	r2,12(sp)
   1363c:	1080004c 	andi	r2,r2,1
   13640:	1000271e 	bne	r2,zero,136e0 <__gxx_personality_sj0+0x65c>
   13644:	d8800a17 	ldw	r2,40(sp)
   13648:	d8800115 	stw	r2,4(sp)
   1364c:	008000c4 	movi	r2,3
   13650:	003fe406 	br	135e4 <__gxx_personality_sj0+0x560>
   13654:	d8800717 	ldw	r2,28(sp)
   13658:	108000a8 	cmpgeui	r2,r2,2
   1365c:	103fda1e 	bne	r2,zero,135c8 <__gxx_personality_sj0+0x544>
   13660:	d8802517 	ldw	r2,148(sp)
   13664:	d8c00417 	ldw	r3,16(sp)
   13668:	10fffb15 	stw	r3,-20(r2)
   1366c:	d8c00217 	ldw	r3,8(sp)
   13670:	10fffc15 	stw	r3,-16(r2)
   13674:	d8c00517 	ldw	r3,20(sp)
   13678:	10fffd15 	stw	r3,-12(r2)
   1367c:	d8c02517 	ldw	r3,148(sp)
   13680:	d8801a17 	ldw	r2,104(sp)
   13684:	18bfff15 	stw	r2,-4(r3)
   13688:	1805883a 	mov	r2,r3
   1368c:	d8c00117 	ldw	r3,4(sp)
   13690:	10fffe15 	stw	r3,-8(r2)
   13694:	00800184 	movi	r2,6
   13698:	d8800015 	stw	r2,0(sp)
   1369c:	003edb06 	br	1320c <__gxx_personality_sj0+0x188>
   136a0:	d8800717 	ldw	r2,28(sp)
   136a4:	108000a8 	cmpgeui	r2,r2,2
   136a8:	103f181e 	bne	r2,zero,1330c <__gxx_personality_sj0+0x288>
   136ac:	d8802517 	ldw	r2,148(sp)
   136b0:	10800003 	ldbu	r2,0(r2)
   136b4:	1080004c 	andi	r2,r2,1
   136b8:	10000626 	beq	r2,zero,136d4 <__gxx_personality_sj0+0x650>
   136bc:	d8802517 	ldw	r2,148(sp)
   136c0:	10bff517 	ldw	r2,-44(r2)
   136c4:	10fff017 	ldw	r3,-64(r2)
   136c8:	d8801a15 	stw	r2,104(sp)
   136cc:	d8c00915 	stw	r3,36(sp)
   136d0:	003f1106 	br	13318 <__gxx_personality_sj0+0x294>
   136d4:	d8802517 	ldw	r2,148(sp)
   136d8:	10800504 	addi	r2,r2,20
   136dc:	003ff906 	br	136c4 <__gxx_personality_sj0+0x640>
   136e0:	d8800a17 	ldw	r2,40(sp)
   136e4:	d8800115 	stw	r2,4(sp)
   136e8:	003fdd06 	br	13660 <__gxx_personality_sj0+0x5dc>
   136ec:	00800044 	movi	r2,1
   136f0:	d8800e15 	stw	r2,56(sp)
   136f4:	00139840 	call	13984 <_ZSt10unexpectedv>
   136f8:	d9000f17 	ldw	r4,60(sp)
   136fc:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   13700:	00139600 	call	13960 <_ZSt9terminatev>
   13704:	d8800a17 	ldw	r2,40(sp)
   13708:	d8800115 	stw	r2,4(sp)
   1370c:	003ead06 	br	131c4 <__gxx_personality_sj0+0x140>
   13710:	00bfffc4 	movi	r2,-1
   13714:	d8800e15 	stw	r2,56(sp)
   13718:	00170f40 	call	170f4 <abort>

0001371c <__cxa_call_unexpected>:
   1371c:	deffe704 	addi	sp,sp,-100
   13720:	01400074 	movhi	r5,1
   13724:	00c000b4 	movhi	r3,2
   13728:	00800074 	movhi	r2,1
   1372c:	294c2104 	addi	r5,r5,12420
   13730:	18e1d404 	addi	r3,r3,-30896
   13734:	108de704 	addi	r2,r2,14236
   13738:	d9000015 	stw	r4,0(sp)
   1373c:	d9000404 	addi	r4,sp,16
   13740:	d9400a15 	stw	r5,40(sp)
   13744:	d8c00b15 	stw	r3,44(sp)
   13748:	dfc01815 	stw	ra,96(sp)
   1374c:	d8800d15 	stw	r2,52(sp)
   13750:	df001715 	stw	fp,92(sp)
   13754:	df000c15 	stw	fp,48(sp)
   13758:	dec00e15 	stw	sp,56(sp)
   1375c:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   13760:	d9000017 	ldw	r4,0(sp)
   13764:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   13768:	d8c00017 	ldw	r3,0(sp)
   1376c:	197ffd17 	ldw	r5,-12(r3)
   13770:	18bffe17 	ldw	r2,-8(r3)
   13774:	193ff717 	ldw	r4,-36(r3)
   13778:	d9400115 	stw	r5,4(sp)
   1377c:	197ffb17 	ldw	r5,-20(r3)
   13780:	18fff817 	ldw	r3,-32(r3)
   13784:	d8801315 	stw	r2,76(sp)
   13788:	00800044 	movi	r2,1
   1378c:	d9400015 	stw	r5,0(sp)
   13790:	d8c00215 	stw	r3,8(sp)
   13794:	d8800515 	stw	r2,20(sp)
   13798:	00139740 	call	13974 <_ZN10__cxxabiv112__unexpectedEPFvvE>
   1379c:	d8c00617 	ldw	r3,24(sp)
   137a0:	d8800517 	ldw	r2,20(sp)
   137a4:	d8c00315 	stw	r3,12(sp)
   137a8:	10002b1e 	bne	r2,zero,13858 <__cxa_call_unexpected+0x13c>
   137ac:	d9000317 	ldw	r4,12(sp)
   137b0:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   137b4:	0014fc80 	call	14fc8 <__cxa_get_globals_fast>
   137b8:	10800017 	ldw	r2,0(r2)
   137bc:	10c00b03 	ldbu	r3,44(r2)
   137c0:	18c0004c 	andi	r3,r3,1
   137c4:	18002e26 	beq	r3,zero,13880 <__cxa_call_unexpected+0x164>
   137c8:	10800017 	ldw	r2,0(r2)
   137cc:	d8800315 	stw	r2,12(sp)
   137d0:	d9400117 	ldw	r5,4(sp)
   137d4:	00800084 	movi	r2,2
   137d8:	d9801104 	addi	r6,sp,68
   137dc:	0009883a 	mov	r4,zero
   137e0:	d8800515 	stw	r2,20(sp)
   137e4:	0012e480 	call	12e48 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
   137e8:	d9800317 	ldw	r6,12(sp)
   137ec:	d9c00017 	ldw	r7,0(sp)
   137f0:	d9001104 	addi	r4,sp,68
   137f4:	317ff017 	ldw	r5,-64(r6)
   137f8:	0012f740 	call	12f74 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   137fc:	10803fcc 	andi	r2,r2,255
   13800:	1000221e 	bne	r2,zero,1388c <__cxa_call_unexpected+0x170>
   13804:	d9c00017 	ldw	r7,0(sp)
   13808:	014000b4 	movhi	r5,2
   1380c:	00800084 	movi	r2,2
   13810:	000d883a 	mov	r6,zero
   13814:	2962e404 	addi	r5,r5,-29808
   13818:	d9001104 	addi	r4,sp,68
   1381c:	d8800515 	stw	r2,20(sp)
   13820:	0012f740 	call	12f74 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
   13824:	10803fcc 	andi	r2,r2,255
   13828:	10001926 	beq	r2,zero,13890 <__cxa_call_unexpected+0x174>
   1382c:	01000104 	movi	r4,4
   13830:	0014c1c0 	call	14c1c <__cxa_allocate_exception>
   13834:	1009883a 	mov	r4,r2
   13838:	008000b4 	movhi	r2,2
   1383c:	01800074 	movhi	r6,1
   13840:	014000b4 	movhi	r5,2
   13844:	10a2ff04 	addi	r2,r2,-29700
   13848:	3193df04 	addi	r6,r6,20348
   1384c:	2962e404 	addi	r5,r5,-29808
   13850:	20800015 	stw	r2,0(r4)
   13854:	0013ac40 	call	13ac4 <__cxa_throw>
   13858:	10bfffc4 	addi	r2,r2,-1
   1385c:	10000126 	beq	r2,zero,13864 <__cxa_call_unexpected+0x148>
   13860:	003b68fa 	trap	3
   13864:	d8000515 	stw	zero,20(sp)
   13868:	0014e880 	call	14e88 <__cxa_end_catch>
   1386c:	0014e880 	call	14e88 <__cxa_end_catch>
   13870:	d9000317 	ldw	r4,12(sp)
   13874:	00bfffc4 	movi	r2,-1
   13878:	d8800515 	stw	r2,20(sp)
   1387c:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>
   13880:	10801004 	addi	r2,r2,64
   13884:	d8800315 	stw	r2,12(sp)
   13888:	003fd106 	br	137d0 <__cxa_call_unexpected+0xb4>
   1388c:	0013b240 	call	13b24 <__cxa_rethrow>
   13890:	d9000217 	ldw	r4,8(sp)
   13894:	00138980 	call	13898 <_ZN10__cxxabiv111__terminateEPFvvE>

00013898 <_ZN10__cxxabiv111__terminateEPFvvE>:
   13898:	deffef04 	addi	sp,sp,-68
   1389c:	01400074 	movhi	r5,1
   138a0:	00c000b4 	movhi	r3,2
   138a4:	00800074 	movhi	r2,1
   138a8:	200d883a 	mov	r6,r4
   138ac:	108e3d04 	addi	r2,r2,14580
   138b0:	294c2104 	addi	r5,r5,12420
   138b4:	18e1d804 	addi	r3,r3,-30880
   138b8:	d9000204 	addi	r4,sp,8
   138bc:	d8800b15 	stw	r2,44(sp)
   138c0:	dfc01015 	stw	ra,64(sp)
   138c4:	df000f15 	stw	fp,60(sp)
   138c8:	d9800015 	stw	r6,0(sp)
   138cc:	d9400815 	stw	r5,32(sp)
   138d0:	d8c00915 	stw	r3,36(sp)
   138d4:	df000a15 	stw	fp,40(sp)
   138d8:	dec00c15 	stw	sp,48(sp)
   138dc:	0016bb80 	call	16bb8 <_Unwind_SjLj_Register>
   138e0:	00800044 	movi	r2,1
   138e4:	d8800315 	stw	r2,12(sp)
   138e8:	d8800017 	ldw	r2,0(sp)
   138ec:	103ee83a 	callr	r2
   138f0:	00170f40 	call	170f4 <abort>
   138f4:	d8c00417 	ldw	r3,16(sp)
   138f8:	d8800317 	ldw	r2,12(sp)
   138fc:	d8c00015 	stw	r3,0(sp)
   13900:	d8c00517 	ldw	r3,20(sp)
   13904:	d8c00115 	stw	r3,4(sp)
   13908:	1000051e 	bne	r2,zero,13920 <_ZN10__cxxabiv111__terminateEPFvvE+0x88>
   1390c:	d9000017 	ldw	r4,0(sp)
   13910:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   13914:	00800084 	movi	r2,2
   13918:	d8800315 	stw	r2,12(sp)
   1391c:	00170f40 	call	170f4 <abort>
   13920:	10bfffc4 	addi	r2,r2,-1
   13924:	10000126 	beq	r2,zero,1392c <_ZN10__cxxabiv111__terminateEPFvvE+0x94>
   13928:	003b68fa 	trap	3
   1392c:	d8000315 	stw	zero,12(sp)
   13930:	0014e880 	call	14e88 <__cxa_end_catch>
   13934:	d8c00117 	ldw	r3,4(sp)
   13938:	18bfffe0 	cmpeqi	r2,r3,-1
   1393c:	10000426 	beq	r2,zero,13950 <_ZN10__cxxabiv111__terminateEPFvvE+0xb8>
   13940:	d8800117 	ldw	r2,4(sp)
   13944:	d9000017 	ldw	r4,0(sp)
   13948:	d8800315 	stw	r2,12(sp)
   1394c:	001371c0 	call	1371c <__cxa_call_unexpected>
   13950:	d9000017 	ldw	r4,0(sp)
   13954:	00bfffc4 	movi	r2,-1
   13958:	d8800315 	stw	r2,12(sp)
   1395c:	0016da00 	call	16da0 <_Unwind_SjLj_Resume>

00013960 <_ZSt9terminatev>:
   13960:	008000b4 	movhi	r2,2
   13964:	11256f17 	ldw	r4,-27204(r2)
   13968:	deffff04 	addi	sp,sp,-4
   1396c:	dfc00015 	stw	ra,0(sp)
   13970:	00138980 	call	13898 <_ZN10__cxxabiv111__terminateEPFvvE>

00013974 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
   13974:	deffff04 	addi	sp,sp,-4
   13978:	dfc00015 	stw	ra,0(sp)
   1397c:	203ee83a 	callr	r4
   13980:	00139600 	call	13960 <_ZSt9terminatev>

00013984 <_ZSt10unexpectedv>:
   13984:	008000b4 	movhi	r2,2
   13988:	11256617 	ldw	r4,-27240(r2)
   1398c:	deffff04 	addi	sp,sp,-4
   13990:	dfc00015 	stw	ra,0(sp)
   13994:	00139740 	call	13974 <_ZN10__cxxabiv112__unexpectedEPFvvE>

00013998 <_ZSt13set_terminatePFvvE>:
   13998:	20000526 	beq	r4,zero,139b0 <_ZSt13set_terminatePFvvE+0x18>
   1399c:	00c000b4 	movhi	r3,2
   139a0:	008000b4 	movhi	r2,2
   139a4:	10a56f17 	ldw	r2,-27204(r2)
   139a8:	19256f15 	stw	r4,-27204(r3)
   139ac:	f800283a 	ret
   139b0:	01000074 	movhi	r4,1
   139b4:	211c3d04 	addi	r4,r4,28916
   139b8:	003ff806 	br	1399c <_ZSt13set_terminatePFvvE+0x4>

000139bc <_ZSt13get_terminatev>:
   139bc:	008000b4 	movhi	r2,2
   139c0:	10a56f17 	ldw	r2,-27204(r2)
   139c4:	f800283a 	ret

000139c8 <_ZSt14set_unexpectedPFvvE>:
   139c8:	20000526 	beq	r4,zero,139e0 <_ZSt14set_unexpectedPFvvE+0x18>
   139cc:	00c000b4 	movhi	r3,2
   139d0:	008000b4 	movhi	r2,2
   139d4:	10a56617 	ldw	r2,-27240(r2)
   139d8:	19256615 	stw	r4,-27240(r3)
   139dc:	f800283a 	ret
   139e0:	01000074 	movhi	r4,1
   139e4:	210e5804 	addi	r4,r4,14688
   139e8:	003ff806 	br	139cc <_ZSt14set_unexpectedPFvvE+0x4>

000139ec <_ZSt14get_unexpectedv>:
   139ec:	008000b4 	movhi	r2,2
   139f0:	10a56617 	ldw	r2,-27240(r2)
   139f4:	f800283a 	ret

000139f8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   139f8:	defffe04 	addi	sp,sp,-8
   139fc:	dfc00115 	stw	ra,4(sp)
   13a00:	dc000015 	stw	r16,0(sp)
   13a04:	210000b0 	cmpltui	r4,r4,2
   13a08:	20001326 	beq	r4,zero,13a58 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x60>
   13a0c:	28bff417 	ldw	r2,-48(r5)
   13a10:	10ffffc4 	addi	r3,r2,-1
   13a14:	28fff415 	stw	r3,-48(r5)
   13a18:	10800058 	cmpnei	r2,r2,1
   13a1c:	10000426 	beq	r2,zero,13a30 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x38>
   13a20:	dfc00117 	ldw	ra,4(sp)
   13a24:	dc000017 	ldw	r16,0(sp)
   13a28:	dec00204 	addi	sp,sp,8
   13a2c:	f800283a 	ret
   13a30:	28bff617 	ldw	r2,-40(r5)
   13a34:	2c000504 	addi	r16,r5,20
   13a38:	10000226 	beq	r2,zero,13a44 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x4c>
   13a3c:	8009883a 	mov	r4,r16
   13a40:	103ee83a 	callr	r2
   13a44:	8009883a 	mov	r4,r16
   13a48:	dfc00117 	ldw	ra,4(sp)
   13a4c:	dc000017 	ldw	r16,0(sp)
   13a50:	dec00204 	addi	sp,sp,8
   13a54:	0014c741 	jmpi	14c74 <__cxa_free_exception>
   13a58:	293ff817 	ldw	r4,-32(r5)
   13a5c:	00138980 	call	13898 <_ZN10__cxxabiv111__terminateEPFvvE>

00013a60 <__cxa_init_primary_exception>:
   13a60:	defffe04 	addi	sp,sp,-8
   13a64:	dfc00115 	stw	ra,4(sp)
   13a68:	dc000015 	stw	r16,0(sp)
   13a6c:	217ff015 	stw	r5,-64(r4)
   13a70:	21bff115 	stw	r6,-60(r4)
   13a74:	203fef15 	stw	zero,-68(r4)
   13a78:	2021883a 	mov	r16,r4
   13a7c:	00139ec0 	call	139ec <_ZSt14get_unexpectedv>
   13a80:	80bff215 	stw	r2,-56(r16)
   13a84:	00139bc0 	call	139bc <_ZSt13get_terminatev>
   13a88:	0150caf4 	movhi	r5,17195
   13a8c:	0111d3b4 	movhi	r4,18254
   13a90:	00c00074 	movhi	r3,1
   13a94:	294ac004 	addi	r5,r5,11008
   13a98:	211550c4 	addi	r4,r4,21827
   13a9c:	18ce7e04 	addi	r3,r3,14840
   13aa0:	80bff315 	stw	r2,-52(r16)
   13aa4:	80bfef04 	addi	r2,r16,-68
   13aa8:	817ffb15 	stw	r5,-20(r16)
   13aac:	813ffc15 	stw	r4,-16(r16)
   13ab0:	80fffd15 	stw	r3,-12(r16)
   13ab4:	dfc00117 	ldw	ra,4(sp)
   13ab8:	dc000017 	ldw	r16,0(sp)
   13abc:	dec00204 	addi	sp,sp,8
   13ac0:	f800283a 	ret

00013ac4 <__cxa_throw>:
   13ac4:	defffc04 	addi	sp,sp,-16
   13ac8:	dfc00315 	stw	ra,12(sp)
   13acc:	dc800215 	stw	r18,8(sp)
   13ad0:	dc400115 	stw	r17,4(sp)
   13ad4:	dc000015 	stw	r16,0(sp)
   13ad8:	2823883a 	mov	r17,r5
   13adc:	2021883a 	mov	r16,r4
   13ae0:	3025883a 	mov	r18,r6
   13ae4:	0014fd40 	call	14fd4 <__cxa_get_globals>
   13ae8:	10c00117 	ldw	r3,4(r2)
   13aec:	900d883a 	mov	r6,r18
   13af0:	880b883a 	mov	r5,r17
   13af4:	18c00044 	addi	r3,r3,1
   13af8:	8009883a 	mov	r4,r16
   13afc:	10c00115 	stw	r3,4(r2)
   13b00:	0013a600 	call	13a60 <__cxa_init_primary_exception>
   13b04:	14000c04 	addi	r16,r2,48
   13b08:	00c00044 	movi	r3,1
   13b0c:	10c00015 	stw	r3,0(r2)
   13b10:	8009883a 	mov	r4,r16
   13b14:	0016c940 	call	16c94 <_Unwind_SjLj_RaiseException>
   13b18:	8009883a 	mov	r4,r16
   13b1c:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   13b20:	00139600 	call	13960 <_ZSt9terminatev>

00013b24 <__cxa_rethrow>:
   13b24:	defffe04 	addi	sp,sp,-8
   13b28:	dfc00115 	stw	ra,4(sp)
   13b2c:	dc000015 	stw	r16,0(sp)
   13b30:	0014fd40 	call	14fd4 <__cxa_get_globals>
   13b34:	10c00117 	ldw	r3,4(r2)
   13b38:	11000017 	ldw	r4,0(r2)
   13b3c:	18c00044 	addi	r3,r3,1
   13b40:	10c00115 	stw	r3,4(r2)
   13b44:	20001126 	beq	r4,zero,13b8c <__cxa_rethrow+0x68>
   13b48:	20c00b17 	ldw	r3,44(r4)
   13b4c:	21800c17 	ldw	r6,48(r4)
   13b50:	016f3574 	movhi	r5,48341
   13b54:	29754004 	addi	r5,r5,-11008
   13b58:	01ee2cb4 	movhi	r7,47282
   13b5c:	39eaaf04 	addi	r7,r7,-21828
   13b60:	194b883a 	add	r5,r3,r5
   13b64:	28c7803a 	cmpltu	r3,r5,r3
   13b68:	31cd883a 	add	r6,r6,r7
   13b6c:	1987883a 	add	r3,r3,r6
   13b70:	18000726 	beq	r3,zero,13b90 <__cxa_rethrow+0x6c>
   13b74:	10000015 	stw	zero,0(r2)
   13b78:	24000b04 	addi	r16,r4,44
   13b7c:	8009883a 	mov	r4,r16
   13b80:	0016de40 	call	16de4 <_Unwind_SjLj_Resume_or_Rethrow>
   13b84:	8009883a 	mov	r4,r16
   13b88:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   13b8c:	00139600 	call	13960 <_ZSt9terminatev>
   13b90:	294000a8 	cmpgeui	r5,r5,2
   13b94:	283ff71e 	bne	r5,zero,13b74 <__cxa_rethrow+0x50>
   13b98:	20800517 	ldw	r2,20(r4)
   13b9c:	0085c83a 	sub	r2,zero,r2
   13ba0:	20800515 	stw	r2,20(r4)
   13ba4:	003ff406 	br	13b78 <__cxa_rethrow+0x54>

00013ba8 <_ZNK10__cxxabiv120__function_type_info15__is_function_pEv>:
   13ba8:	00800044 	movi	r2,1
   13bac:	f800283a 	ret

00013bb0 <_ZN10__cxxabiv120__function_type_infoD1Ev>:
   13bb0:	008000b4 	movhi	r2,2
   13bb4:	10a26804 	addi	r2,r2,-30304
   13bb8:	20800015 	stw	r2,0(r4)
   13bbc:	0013fb81 	jmpi	13fb8 <_ZNSt9type_infoD1Ev>

00013bc0 <_ZN10__cxxabiv120__function_type_infoD0Ev>:
   13bc0:	defffe04 	addi	sp,sp,-8
   13bc4:	008000b4 	movhi	r2,2
   13bc8:	dc000015 	stw	r16,0(sp)
   13bcc:	dfc00115 	stw	ra,4(sp)
   13bd0:	10a26804 	addi	r2,r2,-30304
   13bd4:	20800015 	stw	r2,0(r4)
   13bd8:	2021883a 	mov	r16,r4
   13bdc:	0013fb80 	call	13fb8 <_ZNSt9type_infoD1Ev>
   13be0:	01400204 	movi	r5,8
   13be4:	8009883a 	mov	r4,r16
   13be8:	dfc00117 	ldw	ra,4(sp)
   13bec:	dc000017 	ldw	r16,0(sp)
   13bf0:	dec00204 	addi	sp,sp,8
   13bf4:	0012b581 	jmpi	12b58 <_ZdlPvj>

00013bf8 <_Znaj>:
   13bf8:	00150281 	jmpi	15028 <_Znwj>

00013bfc <_ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv>:
   13bfc:	00800044 	movi	r2,1
   13c00:	f800283a 	ret

00013c04 <_ZN10__cxxabiv119__pointer_type_infoD1Ev>:
   13c04:	008000b4 	movhi	r2,2
   13c08:	10a27c04 	addi	r2,r2,-30224
   13c0c:	20800015 	stw	r2,0(r4)
   13c10:	00150b01 	jmpi	150b0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

00013c14 <_ZN10__cxxabiv119__pointer_type_infoD0Ev>:
   13c14:	defffe04 	addi	sp,sp,-8
   13c18:	008000b4 	movhi	r2,2
   13c1c:	dc000015 	stw	r16,0(sp)
   13c20:	dfc00115 	stw	ra,4(sp)
   13c24:	10a27c04 	addi	r2,r2,-30224
   13c28:	20800015 	stw	r2,0(r4)
   13c2c:	2021883a 	mov	r16,r4
   13c30:	00150b00 	call	150b0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   13c34:	01400404 	movi	r5,16
   13c38:	8009883a 	mov	r4,r16
   13c3c:	dfc00117 	ldw	ra,4(sp)
   13c40:	dc000017 	ldw	r16,0(sp)
   13c44:	dec00204 	addi	sp,sp,8
   13c48:	0012b581 	jmpi	12b58 <_ZdlPvj>

00013c4c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   13c4c:	defffb04 	addi	sp,sp,-20
   13c50:	dc800315 	stw	r18,12(sp)
   13c54:	dc400215 	stw	r17,8(sp)
   13c58:	dfc00415 	stw	ra,16(sp)
   13c5c:	388000a8 	cmpgeui	r2,r7,2
   13c60:	24800317 	ldw	r18,12(r4)
   13c64:	2823883a 	mov	r17,r5
   13c68:	10000a26 	beq	r2,zero,13c94 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x48>
   13c6c:	90800017 	ldw	r2,0(r18)
   13c70:	89400317 	ldw	r5,12(r17)
   13c74:	39c00084 	addi	r7,r7,2
   13c78:	10800417 	ldw	r2,16(r2)
   13c7c:	9009883a 	mov	r4,r18
   13c80:	dfc00417 	ldw	ra,16(sp)
   13c84:	dc800317 	ldw	r18,12(sp)
   13c88:	dc400217 	ldw	r17,8(sp)
   13c8c:	dec00504 	addi	sp,sp,20
   13c90:	1000683a 	jmp	r2
   13c94:	008000b4 	movhi	r2,2
   13c98:	91000117 	ldw	r4,4(r18)
   13c9c:	1165ee17 	ldw	r5,-26696(r2)
   13ca0:	21400926 	beq	r4,r5,13cc8 <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x7c>
   13ca4:	20800007 	ldb	r2,0(r4)
   13ca8:	10800aa0 	cmpeqi	r2,r2,42
   13cac:	103fef1e 	bne	r2,zero,13c6c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   13cb0:	d9c00115 	stw	r7,4(sp)
   13cb4:	d9800015 	stw	r6,0(sp)
   13cb8:	001766c0 	call	1766c <strcmp>
   13cbc:	d9800017 	ldw	r6,0(sp)
   13cc0:	d9c00117 	ldw	r7,4(sp)
   13cc4:	103fe91e 	bne	r2,zero,13c6c <_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x20>
   13cc8:	89000317 	ldw	r4,12(r17)
   13ccc:	20800017 	ldw	r2,0(r4)
   13cd0:	10800317 	ldw	r2,12(r2)
   13cd4:	103ee83a 	callr	r2
   13cd8:	1080005c 	xori	r2,r2,1
   13cdc:	dfc00417 	ldw	ra,16(sp)
   13ce0:	dc800317 	ldw	r18,12(sp)
   13ce4:	dc400217 	ldw	r17,8(sp)
   13ce8:	dec00504 	addi	sp,sp,20
   13cec:	f800283a 	ret

00013cf0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   13cf0:	008000b4 	movhi	r2,2
   13cf4:	10a29204 	addi	r2,r2,-30136
   13cf8:	20800015 	stw	r2,0(r4)
   13cfc:	00129441 	jmpi	12944 <_ZN10__cxxabiv117__class_type_infoD1Ev>

00013d00 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   13d00:	defffe04 	addi	sp,sp,-8
   13d04:	008000b4 	movhi	r2,2
   13d08:	dc000015 	stw	r16,0(sp)
   13d0c:	dfc00115 	stw	ra,4(sp)
   13d10:	10a29204 	addi	r2,r2,-30136
   13d14:	20800015 	stw	r2,0(r4)
   13d18:	2021883a 	mov	r16,r4
   13d1c:	00129440 	call	12944 <_ZN10__cxxabiv117__class_type_infoD1Ev>
   13d20:	01400304 	movi	r5,12
   13d24:	8009883a 	mov	r4,r16
   13d28:	dfc00117 	ldw	ra,4(sp)
   13d2c:	dc000017 	ldw	r16,0(sp)
   13d30:	dec00204 	addi	sp,sp,8
   13d34:	0012b581 	jmpi	12b58 <_ZdlPvj>

00013d38 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   13d38:	defff504 	addi	sp,sp,-44
   13d3c:	dcc00415 	stw	r19,16(sp)
   13d40:	38800117 	ldw	r2,4(r7)
   13d44:	24c00117 	ldw	r19,4(r4)
   13d48:	df000915 	stw	fp,36(sp)
   13d4c:	dd800715 	stw	r22,28(sp)
   13d50:	dd400615 	stw	r21,24(sp)
   13d54:	dd000515 	stw	r20,20(sp)
   13d58:	dc000115 	stw	r16,4(sp)
   13d5c:	dfc00a15 	stw	ra,40(sp)
   13d60:	ddc00815 	stw	r23,32(sp)
   13d64:	dc800315 	stw	r18,12(sp)
   13d68:	dc400215 	stw	r17,8(sp)
   13d6c:	dd000b17 	ldw	r20,44(sp)
   13d70:	df000c17 	ldw	fp,48(sp)
   13d74:	dd800d17 	ldw	r22,52(sp)
   13d78:	dd400e17 	ldw	r21,56(sp)
   13d7c:	2821883a 	mov	r16,r5
   13d80:	98800b26 	beq	r19,r2,13db0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
   13d84:	9dc00007 	ldb	r23,0(r19)
   13d88:	2025883a 	mov	r18,r4
   13d8c:	3823883a 	mov	r17,r7
   13d90:	b8c00aa0 	cmpeqi	r3,r23,42
   13d94:	18001a1e 	bne	r3,zero,13e00 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13d98:	100b883a 	mov	r5,r2
   13d9c:	9809883a 	mov	r4,r19
   13da0:	d9800015 	stw	r6,0(sp)
   13da4:	001766c0 	call	1766c <strcmp>
   13da8:	d9800017 	ldw	r6,0(sp)
   13dac:	1000141e 	bne	r2,zero,13e00 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xc8>
   13db0:	ad000015 	stw	r20,0(r21)
   13db4:	a9800115 	stw	r6,4(r21)
   13db8:	80003416 	blt	r16,zero,13e8c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
   13dbc:	a421883a 	add	r16,r20,r16
   13dc0:	b4003026 	beq	r22,r16,13e84 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x14c>
   13dc4:	00800044 	movi	r2,1
   13dc8:	a8800315 	stw	r2,12(r21)
   13dcc:	0005883a 	mov	r2,zero
   13dd0:	dfc00a17 	ldw	ra,40(sp)
   13dd4:	df000917 	ldw	fp,36(sp)
   13dd8:	ddc00817 	ldw	r23,32(sp)
   13ddc:	dd800717 	ldw	r22,28(sp)
   13de0:	dd400617 	ldw	r21,24(sp)
   13de4:	dd000517 	ldw	r20,20(sp)
   13de8:	dcc00417 	ldw	r19,16(sp)
   13dec:	dc800317 	ldw	r18,12(sp)
   13df0:	dc400217 	ldw	r17,8(sp)
   13df4:	dc000117 	ldw	r16,4(sp)
   13df8:	dec00b04 	addi	sp,sp,44
   13dfc:	f800283a 	ret
   13e00:	a5801526 	beq	r20,r22,13e58 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
   13e04:	91000217 	ldw	r4,8(r18)
   13e08:	880f883a 	mov	r7,r17
   13e0c:	800b883a 	mov	r5,r16
   13e10:	20800017 	ldw	r2,0(r4)
   13e14:	dd400e15 	stw	r21,56(sp)
   13e18:	dd800d15 	stw	r22,52(sp)
   13e1c:	df000c15 	stw	fp,48(sp)
   13e20:	dd000b15 	stw	r20,44(sp)
   13e24:	10800717 	ldw	r2,28(r2)
   13e28:	dfc00a17 	ldw	ra,40(sp)
   13e2c:	df000917 	ldw	fp,36(sp)
   13e30:	ddc00817 	ldw	r23,32(sp)
   13e34:	dd800717 	ldw	r22,28(sp)
   13e38:	dd400617 	ldw	r21,24(sp)
   13e3c:	dd000517 	ldw	r20,20(sp)
   13e40:	dcc00417 	ldw	r19,16(sp)
   13e44:	dc800317 	ldw	r18,12(sp)
   13e48:	dc400217 	ldw	r17,8(sp)
   13e4c:	dc000117 	ldw	r16,4(sp)
   13e50:	dec00b04 	addi	sp,sp,44
   13e54:	1000683a 	jmp	r2
   13e58:	e1400117 	ldw	r5,4(fp)
   13e5c:	99400726 	beq	r19,r5,13e7c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x144>
   13e60:	bdc00aa0 	cmpeqi	r23,r23,42
   13e64:	b83fe71e 	bne	r23,zero,13e04 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13e68:	9809883a 	mov	r4,r19
   13e6c:	d9800015 	stw	r6,0(sp)
   13e70:	001766c0 	call	1766c <strcmp>
   13e74:	d9800017 	ldw	r6,0(sp)
   13e78:	103fe21e 	bne	r2,zero,13e04 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
   13e7c:	a9800215 	stw	r6,8(r21)
   13e80:	003fd206 	br	13dcc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13e84:	00800184 	movi	r2,6
   13e88:	003fcf06 	br	13dc8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x90>
   13e8c:	843fff98 	cmpnei	r16,r16,-2
   13e90:	803fce1e 	bne	r16,zero,13dcc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>
   13e94:	003fcb06 	br	13dc4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x8c>

00013e98 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   13e98:	defffa04 	addi	sp,sp,-24
   13e9c:	dc800415 	stw	r18,16(sp)
   13ea0:	dc800617 	ldw	r18,24(sp)
   13ea4:	dc400315 	stw	r17,12(sp)
   13ea8:	dc000215 	stw	r16,8(sp)
   13eac:	dfc00515 	stw	ra,20(sp)
   13eb0:	2021883a 	mov	r16,r4
   13eb4:	2823883a 	mov	r17,r5
   13eb8:	91800b26 	beq	r18,r6,13ee8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
   13ebc:	81000217 	ldw	r4,8(r16)
   13ec0:	880b883a 	mov	r5,r17
   13ec4:	20800017 	ldw	r2,0(r4)
   13ec8:	dc800615 	stw	r18,24(sp)
   13ecc:	10800817 	ldw	r2,32(r2)
   13ed0:	dfc00517 	ldw	ra,20(sp)
   13ed4:	dc800417 	ldw	r18,16(sp)
   13ed8:	dc400317 	ldw	r17,12(sp)
   13edc:	dc000217 	ldw	r16,8(sp)
   13ee0:	dec00604 	addi	sp,sp,24
   13ee4:	1000683a 	jmp	r2
   13ee8:	21000117 	ldw	r4,4(r4)
   13eec:	39400117 	ldw	r5,4(r7)
   13ef0:	21400926 	beq	r4,r5,13f18 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
   13ef4:	20800007 	ldb	r2,0(r4)
   13ef8:	10800aa0 	cmpeqi	r2,r2,42
   13efc:	103fef1e 	bne	r2,zero,13ebc <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13f00:	d9c00115 	stw	r7,4(sp)
   13f04:	d9800015 	stw	r6,0(sp)
   13f08:	001766c0 	call	1766c <strcmp>
   13f0c:	d9800017 	ldw	r6,0(sp)
   13f10:	d9c00117 	ldw	r7,4(sp)
   13f14:	103fe91e 	bne	r2,zero,13ebc <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
   13f18:	00800184 	movi	r2,6
   13f1c:	dfc00517 	ldw	ra,20(sp)
   13f20:	dc800417 	ldw	r18,16(sp)
   13f24:	dc400317 	ldw	r17,12(sp)
   13f28:	dc000217 	ldw	r16,8(sp)
   13f2c:	dec00604 	addi	sp,sp,24
   13f30:	f800283a 	ret

00013f34 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   13f34:	defffb04 	addi	sp,sp,-20
   13f38:	dcc00315 	stw	r19,12(sp)
   13f3c:	dc800215 	stw	r18,8(sp)
   13f40:	dc400115 	stw	r17,4(sp)
   13f44:	dc000015 	stw	r16,0(sp)
   13f48:	dfc00415 	stw	ra,16(sp)
   13f4c:	2025883a 	mov	r18,r4
   13f50:	2827883a 	mov	r19,r5
   13f54:	3021883a 	mov	r16,r6
   13f58:	3823883a 	mov	r17,r7
   13f5c:	001298c0 	call	1298c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   13f60:	10c03fcc 	andi	r3,r2,255
   13f64:	18000d1e 	bne	r3,zero,13f9c <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
   13f68:	91000217 	ldw	r4,8(r18)
   13f6c:	880f883a 	mov	r7,r17
   13f70:	800d883a 	mov	r6,r16
   13f74:	20800017 	ldw	r2,0(r4)
   13f78:	980b883a 	mov	r5,r19
   13f7c:	10800617 	ldw	r2,24(r2)
   13f80:	dfc00417 	ldw	ra,16(sp)
   13f84:	dcc00317 	ldw	r19,12(sp)
   13f88:	dc800217 	ldw	r18,8(sp)
   13f8c:	dc400117 	ldw	r17,4(sp)
   13f90:	dc000017 	ldw	r16,0(sp)
   13f94:	dec00504 	addi	sp,sp,20
   13f98:	1000683a 	jmp	r2
   13f9c:	dfc00417 	ldw	ra,16(sp)
   13fa0:	dcc00317 	ldw	r19,12(sp)
   13fa4:	dc800217 	ldw	r18,8(sp)
   13fa8:	dc400117 	ldw	r17,4(sp)
   13fac:	dc000017 	ldw	r16,0(sp)
   13fb0:	dec00504 	addi	sp,sp,20
   13fb4:	f800283a 	ret

00013fb8 <_ZNSt9type_infoD1Ev>:
   13fb8:	f800283a 	ret

00013fbc <_ZNKSt9type_info14__is_pointer_pEv>:
   13fbc:	0005883a 	mov	r2,zero
   13fc0:	f800283a 	ret

00013fc4 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
   13fc4:	0005883a 	mov	r2,zero
   13fc8:	f800283a 	ret

00013fcc <_ZNSt9type_infoD0Ev>:
   13fcc:	01400204 	movi	r5,8
   13fd0:	0012b581 	jmpi	12b58 <_ZdlPvj>

00013fd4 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   13fd4:	21000117 	ldw	r4,4(r4)
   13fd8:	29400117 	ldw	r5,4(r5)
   13fdc:	21400c26 	beq	r4,r5,14010 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
   13fe0:	20800007 	ldb	r2,0(r4)
   13fe4:	10800aa0 	cmpeqi	r2,r2,42
   13fe8:	1000071e 	bne	r2,zero,14008 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
   13fec:	deffff04 	addi	sp,sp,-4
   13ff0:	dfc00015 	stw	ra,0(sp)
   13ff4:	001766c0 	call	1766c <strcmp>
   13ff8:	1005003a 	cmpeq	r2,r2,zero
   13ffc:	dfc00017 	ldw	ra,0(sp)
   14000:	dec00104 	addi	sp,sp,4
   14004:	f800283a 	ret
   14008:	0005883a 	mov	r2,zero
   1400c:	f800283a 	ret
   14010:	00800044 	movi	r2,1
   14014:	f800283a 	ret

00014018 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
   14018:	008000b4 	movhi	r2,2
   1401c:	10a2b604 	addi	r2,r2,-29992
   14020:	20800015 	stw	r2,0(r4)
   14024:	00129441 	jmpi	12944 <_ZN10__cxxabiv117__class_type_infoD1Ev>

00014028 <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
   14028:	defffe04 	addi	sp,sp,-8
   1402c:	008000b4 	movhi	r2,2
   14030:	dc000015 	stw	r16,0(sp)
   14034:	dfc00115 	stw	ra,4(sp)
   14038:	10a2b604 	addi	r2,r2,-29992
   1403c:	20800015 	stw	r2,0(r4)
   14040:	2021883a 	mov	r16,r4
   14044:	00129440 	call	12944 <_ZN10__cxxabiv117__class_type_infoD1Ev>
   14048:	01400604 	movi	r5,24
   1404c:	8009883a 	mov	r4,r16
   14050:	dfc00117 	ldw	ra,4(sp)
   14054:	dc000017 	ldw	r16,0(sp)
   14058:	dec00204 	addi	sp,sp,8
   1405c:	0012b581 	jmpi	12b58 <_ZdlPvj>

00014060 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
   14060:	defff604 	addi	sp,sp,-40
   14064:	dc800315 	stw	r18,12(sp)
   14068:	dc800a17 	ldw	r18,40(sp)
   1406c:	ddc00815 	stw	r23,32(sp)
   14070:	dd800715 	stw	r22,28(sp)
   14074:	dd400615 	stw	r21,24(sp)
   14078:	dc000115 	stw	r16,4(sp)
   1407c:	dfc00915 	stw	ra,36(sp)
   14080:	dd000515 	stw	r20,20(sp)
   14084:	dcc00415 	stw	r19,16(sp)
   14088:	dc400215 	stw	r17,8(sp)
   1408c:	302f883a 	mov	r23,r6
   14090:	2021883a 	mov	r16,r4
   14094:	282b883a 	mov	r21,r5
   14098:	382d883a 	mov	r22,r7
   1409c:	34803026 	beq	r6,r18,14160 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x100>
   140a0:	80800317 	ldw	r2,12(r16)
   140a4:	147fffc4 	addi	r17,r2,-1
   140a8:	10001d26 	beq	r2,zero,14120 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc0>
   140ac:	10800044 	addi	r2,r2,1
   140b0:	100490fa 	slli	r2,r2,3
   140b4:	acffff60 	cmpeqi	r19,r21,-3
   140b8:	80a1883a 	add	r16,r16,r2
   140bc:	80800117 	ldw	r2,4(r16)
   140c0:	b00f883a 	mov	r7,r22
   140c4:	a80b883a 	mov	r5,r21
   140c8:	1100008c 	andi	r4,r2,2
   140cc:	8c7fffc4 	addi	r17,r17,-1
   140d0:	10c0004c 	andi	r3,r2,1
   140d4:	20000f26 	beq	r4,zero,14114 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   140d8:	1005d23a 	srai	r2,r2,8
   140dc:	1829883a 	mov	r20,r3
   140e0:	18000426 	beq	r3,zero,140f4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x94>
   140e4:	98000b1e 	bne	r19,zero,14114 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xb4>
   140e8:	b9800017 	ldw	r6,0(r23)
   140ec:	3085883a 	add	r2,r6,r2
   140f0:	10800017 	ldw	r2,0(r2)
   140f4:	81000017 	ldw	r4,0(r16)
   140f8:	b88d883a 	add	r6,r23,r2
   140fc:	20800017 	ldw	r2,0(r4)
   14100:	dc800015 	stw	r18,0(sp)
   14104:	10800817 	ldw	r2,32(r2)
   14108:	103ee83a 	callr	r2
   1410c:	10c00110 	cmplti	r3,r2,4
   14110:	18000f26 	beq	r3,zero,14150 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xf0>
   14114:	88bfffe0 	cmpeqi	r2,r17,-1
   14118:	843ffe04 	addi	r16,r16,-8
   1411c:	103fe726 	beq	r2,zero,140bc <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5c>
   14120:	00800044 	movi	r2,1
   14124:	dfc00917 	ldw	ra,36(sp)
   14128:	ddc00817 	ldw	r23,32(sp)
   1412c:	dd800717 	ldw	r22,28(sp)
   14130:	dd400617 	ldw	r21,24(sp)
   14134:	dd000517 	ldw	r20,20(sp)
   14138:	dcc00417 	ldw	r19,16(sp)
   1413c:	dc800317 	ldw	r18,12(sp)
   14140:	dc400217 	ldw	r17,8(sp)
   14144:	dc000117 	ldw	r16,4(sp)
   14148:	dec00a04 	addi	sp,sp,40
   1414c:	f800283a 	ret
   14150:	a5003fcc 	andi	r20,r20,255
   14154:	a03ff326 	beq	r20,zero,14124 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   14158:	10800054 	ori	r2,r2,1
   1415c:	003ff106 	br	14124 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>
   14160:	21000117 	ldw	r4,4(r4)
   14164:	39400117 	ldw	r5,4(r7)
   14168:	21400526 	beq	r4,r5,14180 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x120>
   1416c:	20800007 	ldb	r2,0(r4)
   14170:	10800aa0 	cmpeqi	r2,r2,42
   14174:	103fca1e 	bne	r2,zero,140a0 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   14178:	001766c0 	call	1766c <strcmp>
   1417c:	103fc81e 	bne	r2,zero,140a0 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x40>
   14180:	00800184 	movi	r2,6
   14184:	003fe706 	br	14124 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xc4>

00014188 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
   14188:	deffe504 	addi	sp,sp,-108
   1418c:	dc001115 	stw	r16,68(sp)
   14190:	dc001e17 	ldw	r16,120(sp)
   14194:	df001915 	stw	fp,100(sp)
   14198:	dd401615 	stw	r21,88(sp)
   1419c:	80800417 	ldw	r2,16(r16)
   141a0:	dcc01415 	stw	r19,80(sp)
   141a4:	dc801315 	stw	r18,76(sp)
   141a8:	dfc01a15 	stw	ra,104(sp)
   141ac:	ddc01815 	stw	r23,96(sp)
   141b0:	dd801715 	stw	r22,92(sp)
   141b4:	dd001515 	stw	r20,84(sp)
   141b8:	dc401215 	stw	r17,72(sp)
   141bc:	1080040c 	andi	r2,r2,16
   141c0:	d9000615 	stw	r4,24(sp)
   141c4:	dd401b17 	ldw	r21,108(sp)
   141c8:	2839883a 	mov	fp,r5
   141cc:	3025883a 	mov	r18,r6
   141d0:	3827883a 	mov	r19,r7
   141d4:	10000226 	beq	r2,zero,141e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58>
   141d8:	20800217 	ldw	r2,8(r4)
   141dc:	80800415 	stw	r2,16(r16)
   141e0:	d8800617 	ldw	r2,24(sp)
   141e4:	11000117 	ldw	r4,4(r2)
   141e8:	d8801d17 	ldw	r2,116(sp)
   141ec:	a8801d26 	beq	r21,r2,14264 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xdc>
   141f0:	99400117 	ldw	r5,4(r19)
   141f4:	29000526 	beq	r5,r4,1420c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   141f8:	20800007 	ldb	r2,0(r4)
   141fc:	10800aa0 	cmpeqi	r2,r2,42
   14200:	1000201e 	bne	r2,zero,14284 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   14204:	001766c0 	call	1766c <strcmp>
   14208:	10001e1e 	bne	r2,zero,14284 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
   1420c:	85400015 	stw	r21,0(r16)
   14210:	84800115 	stw	r18,4(r16)
   14214:	e0011d16 	blt	fp,zero,1468c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x504>
   14218:	d8801d17 	ldw	r2,116(sp)
   1421c:	af15883a 	add	r10,r21,fp
   14220:	12814026 	beq	r2,r10,14724 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x59c>
   14224:	00800044 	movi	r2,1
   14228:	80800315 	stw	r2,12(r16)
   1422c:	0023883a 	mov	r17,zero
   14230:	8805883a 	mov	r2,r17
   14234:	dfc01a17 	ldw	ra,104(sp)
   14238:	df001917 	ldw	fp,100(sp)
   1423c:	ddc01817 	ldw	r23,96(sp)
   14240:	dd801717 	ldw	r22,92(sp)
   14244:	dd401617 	ldw	r21,88(sp)
   14248:	dd001517 	ldw	r20,84(sp)
   1424c:	dcc01417 	ldw	r19,80(sp)
   14250:	dc801317 	ldw	r18,76(sp)
   14254:	dc401217 	ldw	r17,72(sp)
   14258:	dc001117 	ldw	r16,68(sp)
   1425c:	dec01b04 	addi	sp,sp,108
   14260:	f800283a 	ret
   14264:	d8801c17 	ldw	r2,112(sp)
   14268:	11400117 	ldw	r5,4(r2)
   1426c:	29012626 	beq	r5,r4,14708 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   14270:	20800007 	ldb	r2,0(r4)
   14274:	10800aa0 	cmpeqi	r2,r2,42
   14278:	1000ea26 	beq	r2,zero,14624 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x49c>
   1427c:	98800117 	ldw	r2,4(r19)
   14280:	113fe226 	beq	r2,r4,1420c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   14284:	e000b516 	blt	fp,zero,1455c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3d4>
   14288:	d8801d17 	ldw	r2,116(sp)
   1428c:	172fc83a 	sub	r23,r2,fp
   14290:	dc001e15 	stw	r16,120(sp)
   14294:	00800084 	movi	r2,2
   14298:	b821883a 	mov	r16,r23
   1429c:	a82f883a 	mov	r23,r21
   142a0:	dd401e17 	ldw	r21,120(sp)
   142a4:	d8800915 	stw	r2,36(sp)
   142a8:	e0bfff98 	cmpnei	r2,fp,-2
   142ac:	0023883a 	mov	r17,zero
   142b0:	d80007c5 	stb	zero,31(sp)
   142b4:	05800044 	movi	r22,1
   142b8:	d8800515 	stw	r2,20(sp)
   142bc:	d8800617 	ldw	r2,24(sp)
   142c0:	12400317 	ldw	r9,12(r2)
   142c4:	4d3fffc4 	addi	r20,r9,-1
   142c8:	48007226 	beq	r9,zero,14494 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30c>
   142cc:	4a400044 	addi	r9,r9,1
   142d0:	481290fa 	slli	r9,r9,3
   142d4:	ddc01b15 	stw	r23,108(sp)
   142d8:	e0ffffa0 	cmpeqi	r3,fp,-2
   142dc:	a02f883a 	mov	r23,r20
   142e0:	dd001b17 	ldw	r20,108(sp)
   142e4:	d8c00815 	stw	r3,32(sp)
   142e8:	b0c03fcc 	andi	r3,r22,255
   142ec:	126d883a 	add	r22,r2,r9
   142f0:	e005883a 	mov	r2,fp
   142f4:	d8c00415 	stw	r3,16(sp)
   142f8:	8039883a 	mov	fp,r16
   142fc:	b021883a 	mov	r16,r22
   14300:	102d883a 	mov	r22,r2
   14304:	80800117 	ldw	r2,4(r16)
   14308:	a9000417 	ldw	r4,16(r21)
   1430c:	d8000c15 	stw	zero,48(sp)
   14310:	d8000d15 	stw	zero,52(sp)
   14314:	d8000e15 	stw	zero,56(sp)
   14318:	d8000f15 	stw	zero,60(sp)
   1431c:	d9001015 	stw	r4,64(sp)
   14320:	1180004c 	andi	r6,r2,1
   14324:	1007d23a 	srai	r3,r2,8
   14328:	30009626 	beq	r6,zero,14584 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3fc>
   1432c:	a1c00017 	ldw	r7,0(r20)
   14330:	91800054 	ori	r6,r18,1
   14334:	38c7883a 	add	r3,r7,r3
   14338:	18c00017 	ldw	r3,0(r3)
   1433c:	a0c7883a 	add	r3,r20,r3
   14340:	e0000326 	beq	fp,zero,14350 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c8>
   14344:	d9400417 	ldw	r5,16(sp)
   14348:	e0cf803a 	cmpltu	r7,fp,r3
   1434c:	29c09526 	beq	r5,r7,145a4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x41c>
   14350:	1080008c 	andi	r2,r2,2
   14354:	1000041e 	bne	r2,zero,14368 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e0>
   14358:	d8800517 	ldw	r2,20(sp)
   1435c:	10008e26 	beq	r2,zero,14598 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x410>
   14360:	00bfff44 	movi	r2,-3
   14364:	308c703a 	and	r6,r6,r2
   14368:	81000017 	ldw	r4,0(r16)
   1436c:	d9400c04 	addi	r5,sp,48
   14370:	980f883a 	mov	r7,r19
   14374:	20800017 	ldw	r2,0(r4)
   14378:	d9400315 	stw	r5,12(sp)
   1437c:	d9401d17 	ldw	r5,116(sp)
   14380:	d8c00015 	stw	r3,0(sp)
   14384:	d9400215 	stw	r5,8(sp)
   14388:	d9401c17 	ldw	r5,112(sp)
   1438c:	d9400115 	stw	r5,4(sp)
   14390:	10800717 	ldw	r2,28(r2)
   14394:	b00b883a 	mov	r5,r22
   14398:	103ee83a 	callr	r2
   1439c:	a9800217 	ldw	r6,8(r21)
   143a0:	d9000e17 	ldw	r4,56(sp)
   143a4:	d8c00f17 	ldw	r3,60(sp)
   143a8:	3108b03a 	or	r4,r6,r4
   143ac:	a9000215 	stw	r4,8(r21)
   143b0:	19800198 	cmpnei	r6,r3,6
   143b4:	3000ca26 	beq	r6,zero,146e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x558>
   143b8:	d9800c17 	ldw	r6,48(sp)
   143bc:	1a800098 	cmpnei	r10,r3,2
   143c0:	300f883a 	mov	r7,r6
   143c4:	5000ce26 	beq	r10,zero,14700 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x578>
   143c8:	89c03fcc 	andi	r7,r17,255
   143cc:	abc00017 	ldw	r15,0(r21)
   143d0:	38006e1e 	bne	r7,zero,1458c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x404>
   143d4:	78001c26 	beq	r15,zero,14448 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c0>
   143d8:	79807526 	beq	r15,r6,145b0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x428>
   143dc:	30007926 	beq	r6,zero,145c4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x43c>
   143e0:	20800110 	cmplti	r2,r4,4
   143e4:	ab000317 	ldw	r12,12(r21)
   143e8:	1000331e 	bne	r2,zero,144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   143ec:	2080004c 	andi	r2,r4,1
   143f0:	10000326 	beq	r2,zero,14400 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x278>
   143f4:	a8800417 	ldw	r2,16(r21)
   143f8:	1080008c 	andi	r2,r2,2
   143fc:	10002e1e 	bne	r2,zero,144b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x330>
   14400:	6000011e 	bne	r12,zero,14408 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x280>
   14404:	03000044 	movi	r12,1
   14408:	1800011e 	bne	r3,zero,14410 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x288>
   1440c:	00c00044 	movi	r3,1
   14410:	6015883a 	mov	r10,r12
   14414:	50c4f03a 	xor	r2,r10,r3
   14418:	10800110 	cmplti	r2,r2,4
   1441c:	181d883a 	mov	r14,r3
   14420:	10002c26 	beq	r2,zero,144d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>
   14424:	7294703a 	and	r10,r14,r10
   14428:	52800110 	cmplti	r10,r10,4
   1442c:	5000cb26 	beq	r10,zero,1475c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5d4>
   14430:	a9000217 	ldw	r4,8(r21)
   14434:	00800044 	movi	r2,1
   14438:	a8000015 	stw	zero,0(r21)
   1443c:	a8800315 	stw	r2,12(r21)
   14440:	04400044 	movi	r17,1
   14444:	00000a06 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14448:	d8c00d17 	ldw	r3,52(sp)
   1444c:	a9800015 	stw	r6,0(r21)
   14450:	a8c00115 	stw	r3,4(r21)
   14454:	30007126 	beq	r6,zero,1461c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x494>
   14458:	20006e26 	beq	r4,zero,14614 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x48c>
   1445c:	d8c00617 	ldw	r3,24(sp)
   14460:	1023883a 	mov	r17,r2
   14464:	18c00217 	ldw	r3,8(r3)
   14468:	18c0004c 	andi	r3,r3,1
   1446c:	183f7026 	beq	r3,zero,14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14470:	21000120 	cmpeqi	r4,r4,4
   14474:	203f6e1e 	bne	r4,zero,14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14478:	bdffffc4 	addi	r23,r23,-1
   1447c:	b8bfffe0 	cmpeqi	r2,r23,-1
   14480:	843ffe04 	addi	r16,r16,-8
   14484:	103f9f26 	beq	r2,zero,14304 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17c>
   14488:	e021883a 	mov	r16,fp
   1448c:	a02f883a 	mov	r23,r20
   14490:	b039883a 	mov	fp,r22
   14494:	d88007c3 	ldbu	r2,31(sp)
   14498:	103f6526 	beq	r2,zero,14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   1449c:	d8800917 	ldw	r2,36(sp)
   144a0:	002d883a 	mov	r22,zero
   144a4:	10800058 	cmpnei	r2,r2,1
   144a8:	103f6126 	beq	r2,zero,14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   144ac:	00800044 	movi	r2,1
   144b0:	d8800915 	stw	r2,36(sp)
   144b4:	003f8106 	br	142bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
   144b8:	6015883a 	mov	r10,r12
   144bc:	181d883a 	mov	r14,r3
   144c0:	0300120e 	bge	zero,r12,1450c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x384>
   144c4:	00c0420e 	bge	zero,r3,145d0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x448>
   144c8:	50c4f03a 	xor	r2,r10,r3
   144cc:	10800110 	cmplti	r2,r2,4
   144d0:	103fd41e 	bne	r2,zero,14424 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   144d4:	18800108 	cmpgei	r2,r3,4
   144d8:	10004b26 	beq	r2,zero,14608 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x480>
   144dc:	d9800c17 	ldw	r6,48(sp)
   144e0:	1a80008c 	andi	r10,r3,2
   144e4:	d8800d17 	ldw	r2,52(sp)
   144e8:	a9800015 	stw	r6,0(r21)
   144ec:	0023883a 	mov	r17,zero
   144f0:	a8800115 	stw	r2,4(r21)
   144f4:	a8c00315 	stw	r3,12(r21)
   144f8:	503f4c1e 	bne	r10,zero,1422c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   144fc:	1880004c 	andi	r2,r3,1
   14500:	10009b26 	beq	r2,zero,14770 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e8>
   14504:	a9000217 	ldw	r4,8(r21)
   14508:	003fd906 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   1450c:	18800110 	cmplti	r2,r3,4
   14510:	1000061e 	bne	r2,zero,1452c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3a4>
   14514:	1880004c 	andi	r2,r3,1
   14518:	10001226 	beq	r2,zero,14564 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   1451c:	d8800617 	ldw	r2,24(sp)
   14520:	10800217 	ldw	r2,8(r2)
   14524:	1080008c 	andi	r2,r2,2
   14528:	10000e26 	beq	r2,zero,14564 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3dc>
   1452c:	b0005a16 	blt	r22,zero,14698 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x510>
   14530:	d8801d17 	ldw	r2,116(sp)
   14534:	7d9f883a 	add	r15,r15,r22
   14538:	13c07c26 	beq	r2,r15,1472c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5a4>
   1453c:	00c09416 	blt	zero,r3,14790 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   14540:	d8c01d17 	ldw	r3,116(sp)
   14544:	3585883a 	add	r2,r6,r22
   14548:	18808b26 	beq	r3,r2,14778 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   1454c:	02800044 	movi	r10,1
   14550:	03000044 	movi	r12,1
   14554:	5080005c 	xori	r2,r10,1
   14558:	00002606 	br	145f4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x46c>
   1455c:	002f883a 	mov	r23,zero
   14560:	003f4b06 	br	14290 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x108>
   14564:	1880005c 	xori	r2,r3,1
   14568:	10800108 	cmpgei	r2,r2,4
   1456c:	103fdc1e 	bne	r2,zero,144e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x358>
   14570:	00800044 	movi	r2,1
   14574:	a8000015 	stw	zero,0(r21)
   14578:	a8800315 	stw	r2,12(r21)
   1457c:	04400044 	movi	r17,1
   14580:	003fbb06 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14584:	900d883a 	mov	r6,r18
   14588:	003f6c06 	br	1433c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b4>
   1458c:	783f921e 	bne	r15,zero,143d8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x250>
   14590:	303f931e 	bne	r6,zero,143e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   14594:	003fb606 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14598:	210000cc 	andi	r4,r4,3
   1459c:	203f701e 	bne	r4,zero,14360 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1d8>
   145a0:	003fb506 	br	14478 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   145a4:	00800044 	movi	r2,1
   145a8:	d88007c5 	stb	r2,31(sp)
   145ac:	003fb206 	br	14478 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   145b0:	a8800117 	ldw	r2,4(r21)
   145b4:	d8c00d17 	ldw	r3,52(sp)
   145b8:	10c4b03a 	or	r2,r2,r3
   145bc:	a8800115 	stw	r2,4(r21)
   145c0:	003fab06 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   145c4:	10803fcc 	andi	r2,r2,255
   145c8:	103f851e 	bne	r2,zero,143e0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x258>
   145cc:	003fa806 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   145d0:	60800108 	cmpgei	r2,r12,4
   145d4:	10001a26 	beq	r2,zero,14640 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   145d8:	6080004c 	andi	r2,r12,1
   145dc:	10000426 	beq	r2,zero,145f0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x468>
   145e0:	d8800617 	ldw	r2,24(sp)
   145e4:	10800217 	ldw	r2,8(r2)
   145e8:	1080008c 	andi	r2,r2,2
   145ec:	1000141e 	bne	r2,zero,14640 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4b8>
   145f0:	6080005c 	xori	r2,r12,1
   145f4:	10800108 	cmpgei	r2,r2,4
   145f8:	103f8d26 	beq	r2,zero,14430 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2a8>
   145fc:	5280008c 	andi	r10,r10,2
   14600:	6007883a 	mov	r3,r12
   14604:	003fbb06 	br	144f4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   14608:	6280008c 	andi	r10,r12,2
   1460c:	6007883a 	mov	r3,r12
   14610:	003fb806 	br	144f4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x36c>
   14614:	1023883a 	mov	r17,r2
   14618:	003f9706 	br	14478 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2f0>
   1461c:	1023883a 	mov	r17,r2
   14620:	003f9306 	br	14470 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e8>
   14624:	d9000415 	stw	r4,16(sp)
   14628:	001766c0 	call	1766c <strcmp>
   1462c:	d9000417 	ldw	r4,16(sp)
   14630:	10003526 	beq	r2,zero,14708 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x580>
   14634:	99400117 	ldw	r5,4(r19)
   14638:	293ef21e 	bne	r5,r4,14204 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
   1463c:	003ef306 	br	1420c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x84>
   14640:	d9800c17 	ldw	r6,48(sp)
   14644:	b0003d0e 	bge	r22,zero,1473c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5b4>
   14648:	d8800517 	ldw	r2,20(sp)
   1464c:	103fc126 	beq	r2,zero,14554 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14650:	d8c01d17 	ldw	r3,116(sp)
   14654:	98800017 	ldw	r2,0(r19)
   14658:	d9c01c17 	ldw	r7,112(sp)
   1465c:	d8c00015 	stw	r3,0(sp)
   14660:	10800817 	ldw	r2,32(r2)
   14664:	db000b15 	stw	r12,44(sp)
   14668:	da800a15 	stw	r10,40(sp)
   1466c:	b00b883a 	mov	r5,r22
   14670:	9809883a 	mov	r4,r19
   14674:	103ee83a 	callr	r2
   14678:	da800a17 	ldw	r10,40(sp)
   1467c:	db000b17 	ldw	r12,44(sp)
   14680:	1007883a 	mov	r3,r2
   14684:	101d883a 	mov	r14,r2
   14688:	003f8f06 	br	144c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   1468c:	e33fff98 	cmpnei	r12,fp,-2
   14690:	603ee61e 	bne	r12,zero,1422c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa4>
   14694:	003ee306 	br	14224 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9c>
   14698:	d8800817 	ldw	r2,32(sp)
   1469c:	db800a15 	stw	r14,40(sp)
   146a0:	10001c1e 	bne	r2,zero,14714 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58c>
   146a4:	d8c00b15 	stw	r3,44(sp)
   146a8:	d8c01d17 	ldw	r3,116(sp)
   146ac:	98800017 	ldw	r2,0(r19)
   146b0:	d9c01c17 	ldw	r7,112(sp)
   146b4:	d8c00015 	stw	r3,0(sp)
   146b8:	10800817 	ldw	r2,32(r2)
   146bc:	780d883a 	mov	r6,r15
   146c0:	b00b883a 	mov	r5,r22
   146c4:	9809883a 	mov	r4,r19
   146c8:	103ee83a 	callr	r2
   146cc:	db800a17 	ldw	r14,40(sp)
   146d0:	d8c00b17 	ldw	r3,44(sp)
   146d4:	1019883a 	mov	r12,r2
   146d8:	1015883a 	mov	r10,r2
   146dc:	003f7906 	br	144c4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x33c>
   146e0:	d9c00c17 	ldw	r7,48(sp)
   146e4:	a821883a 	mov	r16,r21
   146e8:	80c00315 	stw	r3,12(r16)
   146ec:	d8c00d17 	ldw	r3,52(sp)
   146f0:	81c00015 	stw	r7,0(r16)
   146f4:	1023883a 	mov	r17,r2
   146f8:	80c00115 	stw	r3,4(r16)
   146fc:	003ecc06 	br	14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14700:	a821883a 	mov	r16,r21
   14704:	003ff806 	br	146e8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x560>
   14708:	84800215 	stw	r18,8(r16)
   1470c:	0023883a 	mov	r17,zero
   14710:	003ec706 	br	14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14714:	00c01e16 	blt	zero,r3,14790 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x608>
   14718:	03000044 	movi	r12,1
   1471c:	02800044 	movi	r10,1
   14720:	003f8c06 	br	14554 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14724:	00800184 	movi	r2,6
   14728:	003ebf06 	br	14228 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa0>
   1472c:	00c0150e 	bge	zero,r3,14784 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5fc>
   14730:	02800184 	movi	r10,6
   14734:	03000184 	movi	r12,6
   14738:	003f6306 	br	144c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x340>
   1473c:	d8c01d17 	ldw	r3,116(sp)
   14740:	3585883a 	add	r2,r6,r22
   14744:	18bf831e 	bne	r3,r2,14554 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3cc>
   14748:	6080019c 	xori	r2,r12,6
   1474c:	10800108 	cmpgei	r2,r2,4
   14750:	1000091e 	bne	r2,zero,14778 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5f0>
   14754:	03800184 	movi	r14,6
   14758:	003f3206 	br	14424 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x29c>
   1475c:	00800084 	movi	r2,2
   14760:	a8000015 	stw	zero,0(r21)
   14764:	a8800315 	stw	r2,12(r21)
   14768:	04400044 	movi	r17,1
   1476c:	003eb006 	br	14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14770:	1023883a 	mov	r17,r2
   14774:	003eae06 	br	14230 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
   14778:	02800084 	movi	r10,2
   1477c:	00c00184 	movi	r3,6
   14780:	003f5806 	br	144e4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x35c>
   14784:	03000184 	movi	r12,6
   14788:	02800184 	movi	r10,6
   1478c:	003f9b06 	br	145fc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x474>
   14790:	1880005c 	xori	r2,r3,1
   14794:	10800108 	cmpgei	r2,r2,4
   14798:	103f2626 	beq	r2,zero,14434 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2ac>
   1479c:	03000044 	movi	r12,1
   147a0:	003f4c06 	br	144d4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34c>

000147a4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
   147a4:	defff004 	addi	sp,sp,-64
   147a8:	dd800c15 	stw	r22,48(sp)
   147ac:	dd400b15 	stw	r21,44(sp)
   147b0:	dd000a15 	stw	r20,40(sp)
   147b4:	dcc00915 	stw	r19,36(sp)
   147b8:	dc000615 	stw	r16,24(sp)
   147bc:	dfc00f15 	stw	ra,60(sp)
   147c0:	df000e15 	stw	fp,56(sp)
   147c4:	ddc00d15 	stw	r23,52(sp)
   147c8:	dc800815 	stw	r18,32(sp)
   147cc:	dc400715 	stw	r17,28(sp)
   147d0:	2021883a 	mov	r16,r4
   147d4:	d9000115 	stw	r4,4(sp)
   147d8:	2827883a 	mov	r19,r5
   147dc:	3029883a 	mov	r20,r6
   147e0:	382b883a 	mov	r21,r7
   147e4:	001298c0 	call	1298c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
   147e8:	102d883a 	mov	r22,r2
   147ec:	10803fcc 	andi	r2,r2,255
   147f0:	1000551e 	bne	r2,zero,14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   147f4:	ac400217 	ldw	r17,8(r21)
   147f8:	8880040c 	andi	r2,r17,16
   147fc:	10007c1e 	bne	r2,zero,149f0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x24c>
   14800:	d8c00117 	ldw	r3,4(sp)
   14804:	18800317 	ldw	r2,12(r3)
   14808:	15ffffc4 	addi	r23,r2,-1
   1480c:	10007526 	beq	r2,zero,149e4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   14810:	14000044 	addi	r16,r2,1
   14814:	802090fa 	slli	r16,r16,3
   14818:	8880004c 	andi	r2,r17,1
   1481c:	d8800015 	stw	r2,0(sp)
   14820:	1c21883a 	add	r16,r3,r16
   14824:	00002706 	br	148c4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   14828:	1005d23a 	srai	r2,r2,8
   1482c:	90000326 	beq	r18,zero,1483c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x98>
   14830:	a1800017 	ldw	r6,0(r20)
   14834:	3085883a 	add	r2,r6,r2
   14838:	10800017 	ldw	r2,0(r2)
   1483c:	a08d883a 	add	r6,r20,r2
   14840:	81000017 	ldw	r4,0(r16)
   14844:	d9c00204 	addi	r7,sp,8
   14848:	980b883a 	mov	r5,r19
   1484c:	20800017 	ldw	r2,0(r4)
   14850:	10800617 	ldw	r2,24(r2)
   14854:	103ee83a 	callr	r2
   14858:	102d883a 	mov	r22,r2
   1485c:	10803fcc 	andi	r2,r2,255
   14860:	10001426 	beq	r2,zero,148b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14864:	d8800517 	ldw	r2,20(sp)
   14868:	10800218 	cmpnei	r2,r2,8
   1486c:	10002226 	beq	r2,zero,148f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x154>
   14870:	d8800317 	ldw	r2,12(sp)
   14874:	11000110 	cmplti	r4,r2,4
   14878:	2000041e 	bne	r4,zero,1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   1487c:	e000031e 	bne	fp,zero,1488c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe8>
   14880:	00ffff44 	movi	r3,-3
   14884:	10c4703a 	and	r2,r2,r3
   14888:	d8800315 	stw	r2,12(sp)
   1488c:	a8800317 	ldw	r2,12(r21)
   14890:	10001d26 	beq	r2,zero,14908 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x164>
   14894:	a9000017 	ldw	r4,0(r21)
   14898:	d9400217 	ldw	r5,8(sp)
   1489c:	2140561e 	bne	r4,r5,149f8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x254>
   148a0:	20003626 	beq	r4,zero,1497c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1d8>
   148a4:	a8800117 	ldw	r2,4(r21)
   148a8:	d9000317 	ldw	r4,12(sp)
   148ac:	1104b03a 	or	r2,r2,r4
   148b0:	a8800115 	stw	r2,4(r21)
   148b4:	bdffffc4 	addi	r23,r23,-1
   148b8:	b8bfffd8 	cmpnei	r2,r23,-1
   148bc:	843ffe04 	addi	r16,r16,-8
   148c0:	10004826 	beq	r2,zero,149e4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x240>
   148c4:	80800117 	ldw	r2,4(r16)
   148c8:	d8c00017 	ldw	r3,0(sp)
   148cc:	d8000215 	stw	zero,8(sp)
   148d0:	1700008c 	andi	fp,r2,2
   148d4:	d8000315 	stw	zero,12(sp)
   148d8:	dc400415 	stw	r17,16(sp)
   148dc:	d8000515 	stw	zero,20(sp)
   148e0:	e0c8b03a 	or	r4,fp,r3
   148e4:	1480004c 	andi	r18,r2,1
   148e8:	203ff226 	beq	r4,zero,148b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   148ec:	a03fce1e 	bne	r20,zero,14828 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x84>
   148f0:	000d883a 	mov	r6,zero
   148f4:	003fd206 	br	14840 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x9c>
   148f8:	903fdd26 	beq	r18,zero,14870 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   148fc:	80800017 	ldw	r2,0(r16)
   14900:	d8800515 	stw	r2,20(sp)
   14904:	003fda06 	br	14870 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xcc>
   14908:	d9000217 	ldw	r4,8(sp)
   1490c:	d8800317 	ldw	r2,12(sp)
   14910:	a9000015 	stw	r4,0(r21)
   14914:	d9000417 	ldw	r4,16(sp)
   14918:	a8800115 	stw	r2,4(r21)
   1491c:	a9000215 	stw	r4,8(r21)
   14920:	d9000517 	ldw	r4,20(sp)
   14924:	a9000315 	stw	r4,12(r21)
   14928:	11000110 	cmplti	r4,r2,4
   1492c:	2000061e 	bne	r4,zero,14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   14930:	1100008c 	andi	r4,r2,2
   14934:	20002126 	beq	r4,zero,149bc <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x218>
   14938:	d8800117 	ldw	r2,4(sp)
   1493c:	10800217 	ldw	r2,8(r2)
   14940:	1080004c 	andi	r2,r2,1
   14944:	103fdb1e 	bne	r2,zero,148b4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
   14948:	b005883a 	mov	r2,r22
   1494c:	dfc00f17 	ldw	ra,60(sp)
   14950:	df000e17 	ldw	fp,56(sp)
   14954:	ddc00d17 	ldw	r23,52(sp)
   14958:	dd800c17 	ldw	r22,48(sp)
   1495c:	dd400b17 	ldw	r21,44(sp)
   14960:	dd000a17 	ldw	r20,40(sp)
   14964:	dcc00917 	ldw	r19,36(sp)
   14968:	dc800817 	ldw	r18,32(sp)
   1496c:	dc400717 	ldw	r17,28(sp)
   14970:	dc000617 	ldw	r16,24(sp)
   14974:	dec01004 	addi	sp,sp,64
   14978:	f800283a 	ret
   1497c:	d9000517 	ldw	r4,20(sp)
   14980:	21400220 	cmpeqi	r5,r4,8
   14984:	28000a1e 	bne	r5,zero,149b0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   14988:	11400220 	cmpeqi	r5,r2,8
   1498c:	2800081e 	bne	r5,zero,149b0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   14990:	21000117 	ldw	r4,4(r4)
   14994:	11400117 	ldw	r5,4(r2)
   14998:	217fc226 	beq	r4,r5,148a4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   1499c:	20800007 	ldb	r2,0(r4)
   149a0:	10800aa0 	cmpeqi	r2,r2,42
   149a4:	1000021e 	bne	r2,zero,149b0 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20c>
   149a8:	001766c0 	call	1766c <strcmp>
   149ac:	103fbd26 	beq	r2,zero,148a4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x100>
   149b0:	00800084 	movi	r2,2
   149b4:	a8800115 	stw	r2,4(r21)
   149b8:	003fe306 	br	14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   149bc:	1080004c 	andi	r2,r2,1
   149c0:	103fe126 	beq	r2,zero,14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   149c4:	d8800117 	ldw	r2,4(sp)
   149c8:	10800217 	ldw	r2,8(r2)
   149cc:	1080008c 	andi	r2,r2,2
   149d0:	103fdd26 	beq	r2,zero,14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   149d4:	bdffffc4 	addi	r23,r23,-1
   149d8:	b8bfffd8 	cmpnei	r2,r23,-1
   149dc:	843ffe04 	addi	r16,r16,-8
   149e0:	103fb81e 	bne	r2,zero,148c4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x120>
   149e4:	ad800117 	ldw	r22,4(r21)
   149e8:	b02cc03a 	cmpne	r22,r22,zero
   149ec:	003fd606 	br	14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>
   149f0:	84400217 	ldw	r17,8(r16)
   149f4:	003f8206 	br	14800 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x5c>
   149f8:	00800084 	movi	r2,2
   149fc:	a8000015 	stw	zero,0(r21)
   14a00:	a8800115 	stw	r2,4(r21)
   14a04:	003fd006 	br	14948 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x1a4>

00014a08 <_ZNKSt17bad_function_call4whatEv>:
   14a08:	008000b4 	movhi	r2,2
   14a0c:	10a2bf04 	addi	r2,r2,-29956
   14a10:	f800283a 	ret

00014a14 <_ZNSt17bad_function_callD1Ev>:
   14a14:	008000b4 	movhi	r2,2
   14a18:	10a2cf04 	addi	r2,r2,-29892
   14a1c:	20800015 	stw	r2,0(r4)
   14a20:	0014f781 	jmpi	14f78 <_ZNSt9exceptionD1Ev>

00014a24 <_ZNSt17bad_function_callD0Ev>:
   14a24:	defffe04 	addi	sp,sp,-8
   14a28:	008000b4 	movhi	r2,2
   14a2c:	dc000015 	stw	r16,0(sp)
   14a30:	dfc00115 	stw	ra,4(sp)
   14a34:	10a2cf04 	addi	r2,r2,-29892
   14a38:	20800015 	stw	r2,0(r4)
   14a3c:	2021883a 	mov	r16,r4
   14a40:	0014f780 	call	14f78 <_ZNSt9exceptionD1Ev>
   14a44:	8009883a 	mov	r4,r16
   14a48:	dfc00117 	ldw	ra,4(sp)
   14a4c:	dc000017 	ldw	r16,0(sp)
   14a50:	dec00204 	addi	sp,sp,8
   14a54:	0014a8c1 	jmpi	14a8c <_ZdlPv>

00014a58 <_ZSt25__throw_bad_function_callv>:
   14a58:	deffff04 	addi	sp,sp,-4
   14a5c:	01000104 	movi	r4,4
   14a60:	dfc00015 	stw	ra,0(sp)
   14a64:	0014c1c0 	call	14c1c <__cxa_allocate_exception>
   14a68:	1009883a 	mov	r4,r2
   14a6c:	008000b4 	movhi	r2,2
   14a70:	01800074 	movhi	r6,1
   14a74:	014000b4 	movhi	r5,2
   14a78:	10a2cf04 	addi	r2,r2,-29892
   14a7c:	31928504 	addi	r6,r6,18964
   14a80:	2962ca04 	addi	r5,r5,-29912
   14a84:	20800015 	stw	r2,0(r4)
   14a88:	0013ac40 	call	13ac4 <__cxa_throw>

00014a8c <_ZdlPv>:
   14a8c:	00171181 	jmpi	17118 <free>

00014a90 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
   14a90:	014000b4 	movhi	r5,2
   14a94:	2967d204 	addi	r5,r5,-24760
   14a98:	28c00117 	ldw	r3,4(r5)
   14a9c:	223fff04 	addi	r8,r4,-4
   14aa0:	18001a26 	beq	r3,zero,14b0c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   14aa4:	227fff17 	ldw	r9,-4(r4)
   14aa8:	424d883a 	add	r6,r8,r9
   14aac:	30c01736 	bltu	r6,r3,14b0c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x7c>
   14ab0:	18800117 	ldw	r2,4(r3)
   14ab4:	19802326 	beq	r3,r6,14b44 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xb4>
   14ab8:	01c000b4 	movhi	r7,2
   14abc:	39e7d304 	addi	r7,r7,-24756
   14ac0:	10000726 	beq	r2,zero,14ae0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   14ac4:	3080062e 	bgeu	r6,r2,14ae0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
   14ac8:	11400117 	ldw	r5,4(r2)
   14acc:	19c00104 	addi	r7,r3,4
   14ad0:	1007883a 	mov	r3,r2
   14ad4:	28001826 	beq	r5,zero,14b38 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0xa8>
   14ad8:	2805883a 	mov	r2,r5
   14adc:	30bffa36 	bltu	r6,r2,14ac8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x38>
   14ae0:	30801026 	beq	r6,r2,14b24 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14ae4:	38800017 	ldw	r2,0(r7)
   14ae8:	10c00017 	ldw	r3,0(r2)
   14aec:	10cb883a 	add	r5,r2,r3
   14af0:	41400926 	beq	r8,r5,14b18 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x88>
   14af4:	10800117 	ldw	r2,4(r2)
   14af8:	227fff15 	stw	r9,-4(r4)
   14afc:	20800015 	stw	r2,0(r4)
   14b00:	38800017 	ldw	r2,0(r7)
   14b04:	12000115 	stw	r8,4(r2)
   14b08:	f800283a 	ret
   14b0c:	20c00015 	stw	r3,0(r4)
   14b10:	2a000115 	stw	r8,4(r5)
   14b14:	f800283a 	ret
   14b18:	1a47883a 	add	r3,r3,r9
   14b1c:	10c00015 	stw	r3,0(r2)
   14b20:	f800283a 	ret
   14b24:	31400017 	ldw	r5,0(r6)
   14b28:	30800117 	ldw	r2,4(r6)
   14b2c:	4953883a 	add	r9,r9,r5
   14b30:	18800115 	stw	r2,4(r3)
   14b34:	003feb06 	br	14ae4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14b38:	0005883a 	mov	r2,zero
   14b3c:	30bfe91e 	bne	r6,r2,14ae4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
   14b40:	003ff806 	br	14b24 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x94>
   14b44:	18c00017 	ldw	r3,0(r3)
   14b48:	20800015 	stw	r2,0(r4)
   14b4c:	1a53883a 	add	r9,r3,r9
   14b50:	227fff15 	stw	r9,-4(r4)
   14b54:	2a000115 	stw	r8,4(r5)
   14b58:	f800283a 	ret

00014b5c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
   14b5c:	21000104 	addi	r4,r4,4
   14b60:	20800228 	cmpgeui	r2,r4,8
   14b64:	1000011e 	bne	r2,zero,14b6c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x10>
   14b68:	01000204 	movi	r4,8
   14b6c:	008000b4 	movhi	r2,2
   14b70:	10a7d317 	ldw	r2,-24756(r2)
   14b74:	210000c4 	addi	r4,r4,3
   14b78:	00ffff04 	movi	r3,-4
   14b7c:	20c8703a 	and	r4,r4,r3
   14b80:	10001026 	beq	r2,zero,14bc4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x68>
   14b84:	018000b4 	movhi	r6,2
   14b88:	31a7d304 	addi	r6,r6,-24756
   14b8c:	00000206 	br	14b98 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3c>
   14b90:	19800104 	addi	r6,r3,4
   14b94:	10001426 	beq	r2,zero,14be8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x8c>
   14b98:	11400017 	ldw	r5,0(r2)
   14b9c:	1007883a 	mov	r3,r2
   14ba0:	10800117 	ldw	r2,4(r2)
   14ba4:	293ffa36 	bltu	r5,r4,14b90 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x34>
   14ba8:	290fc83a 	sub	r7,r5,r4
   14bac:	3a000228 	cmpgeui	r8,r7,8
   14bb0:	4000051e 	bne	r8,zero,14bc8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x6c>
   14bb4:	19400015 	stw	r5,0(r3)
   14bb8:	30800015 	stw	r2,0(r6)
   14bbc:	18800104 	addi	r2,r3,4
   14bc0:	f800283a 	ret
   14bc4:	f800283a 	ret
   14bc8:	190b883a 	add	r5,r3,r4
   14bcc:	28800115 	stw	r2,4(r5)
   14bd0:	30c00017 	ldw	r3,0(r6)
   14bd4:	29c00015 	stw	r7,0(r5)
   14bd8:	19000015 	stw	r4,0(r3)
   14bdc:	31400015 	stw	r5,0(r6)
   14be0:	18800104 	addi	r2,r3,4
   14be4:	f800283a 	ret
   14be8:	f800283a 	ret

00014bec <_ZN9__gnu_cxx9__freeresEv>:
   14bec:	008000b4 	movhi	r2,2
   14bf0:	1127d417 	ldw	r4,-24752(r2)
   14bf4:	20000826 	beq	r4,zero,14c18 <_ZN9__gnu_cxx9__freeresEv+0x2c>
   14bf8:	deffff04 	addi	sp,sp,-4
   14bfc:	dfc00015 	stw	ra,0(sp)
   14c00:	00171180 	call	17118 <free>
   14c04:	008000b4 	movhi	r2,2
   14c08:	1027d415 	stw	zero,-24752(r2)
   14c0c:	dfc00017 	ldw	ra,0(sp)
   14c10:	dec00104 	addi	sp,sp,4
   14c14:	f800283a 	ret
   14c18:	f800283a 	ret

00014c1c <__cxa_allocate_exception>:
   14c1c:	defffe04 	addi	sp,sp,-8
   14c20:	dc000015 	stw	r16,0(sp)
   14c24:	24001104 	addi	r16,r4,68
   14c28:	8009883a 	mov	r4,r16
   14c2c:	dfc00115 	stw	ra,4(sp)
   14c30:	001710c0 	call	1710c <malloc>
   14c34:	1007883a 	mov	r3,r2
   14c38:	10000926 	beq	r2,zero,14c60 <__cxa_allocate_exception+0x44>
   14c3c:	01801104 	movi	r6,68
   14c40:	000b883a 	mov	r5,zero
   14c44:	1809883a 	mov	r4,r3
   14c48:	00171240 	call	17124 <memset>
   14c4c:	10801104 	addi	r2,r2,68
   14c50:	dfc00117 	ldw	ra,4(sp)
   14c54:	dc000017 	ldw	r16,0(sp)
   14c58:	dec00204 	addi	sp,sp,8
   14c5c:	f800283a 	ret
   14c60:	8009883a 	mov	r4,r16
   14c64:	0014b5c0 	call	14b5c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14c68:	1007883a 	mov	r3,r2
   14c6c:	103ff31e 	bne	r2,zero,14c3c <__cxa_allocate_exception+0x20>
   14c70:	00139600 	call	13960 <_ZSt9terminatev>

00014c74 <__cxa_free_exception>:
   14c74:	008000b4 	movhi	r2,2
   14c78:	10a7d204 	addi	r2,r2,-24760
   14c7c:	10c00217 	ldw	r3,8(r2)
   14c80:	213fef04 	addi	r4,r4,-68
   14c84:	1900042e 	bgeu	r3,r4,14c98 <__cxa_free_exception+0x24>
   14c88:	10800317 	ldw	r2,12(r2)
   14c8c:	1887883a 	add	r3,r3,r2
   14c90:	20c0012e 	bgeu	r4,r3,14c98 <__cxa_free_exception+0x24>
   14c94:	0014a901 	jmpi	14a90 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14c98:	00171181 	jmpi	17118 <free>

00014c9c <__cxa_allocate_dependent_exception>:
   14c9c:	deffff04 	addi	sp,sp,-4
   14ca0:	01001004 	movi	r4,64
   14ca4:	dfc00015 	stw	ra,0(sp)
   14ca8:	001710c0 	call	1710c <malloc>
   14cac:	1009883a 	mov	r4,r2
   14cb0:	10000626 	beq	r2,zero,14ccc <__cxa_allocate_dependent_exception+0x30>
   14cb4:	01801004 	movi	r6,64
   14cb8:	000b883a 	mov	r5,zero
   14cbc:	00171240 	call	17124 <memset>
   14cc0:	dfc00017 	ldw	ra,0(sp)
   14cc4:	dec00104 	addi	sp,sp,4
   14cc8:	f800283a 	ret
   14ccc:	01001004 	movi	r4,64
   14cd0:	0014b5c0 	call	14b5c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
   14cd4:	1009883a 	mov	r4,r2
   14cd8:	103ff61e 	bne	r2,zero,14cb4 <__cxa_allocate_dependent_exception+0x18>
   14cdc:	00139600 	call	13960 <_ZSt9terminatev>

00014ce0 <__cxa_free_dependent_exception>:
   14ce0:	00c000b4 	movhi	r3,2
   14ce4:	18e7d204 	addi	r3,r3,-24760
   14ce8:	19400217 	ldw	r5,8(r3)
   14cec:	2005883a 	mov	r2,r4
   14cf0:	2900042e 	bgeu	r5,r4,14d04 <__cxa_free_dependent_exception+0x24>
   14cf4:	18c00317 	ldw	r3,12(r3)
   14cf8:	28cb883a 	add	r5,r5,r3
   14cfc:	2140012e 	bgeu	r4,r5,14d04 <__cxa_free_dependent_exception+0x24>
   14d00:	0014a901 	jmpi	14a90 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
   14d04:	1009883a 	mov	r4,r2
   14d08:	00171181 	jmpi	17118 <free>

00014d0c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
   14d0c:	defffd04 	addi	sp,sp,-12
   14d10:	dc000015 	stw	r16,0(sp)
   14d14:	040000b4 	movhi	r16,2
   14d18:	dc400115 	stw	r17,4(sp)
   14d1c:	8427d204 	addi	r16,r16,-24760
   14d20:	04424004 	movi	r17,2304
   14d24:	01024004 	movi	r4,2304
   14d28:	dfc00215 	stw	ra,8(sp)
   14d2c:	84400315 	stw	r17,12(r16)
   14d30:	001710c0 	call	1710c <malloc>
   14d34:	80800215 	stw	r2,8(r16)
   14d38:	10000826 	beq	r2,zero,14d5c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x50>
   14d3c:	80800115 	stw	r2,4(r16)
   14d40:	14400015 	stw	r17,0(r2)
   14d44:	10000115 	stw	zero,4(r2)
   14d48:	dfc00217 	ldw	ra,8(sp)
   14d4c:	dc400117 	ldw	r17,4(sp)
   14d50:	dc000017 	ldw	r16,0(sp)
   14d54:	dec00304 	addi	sp,sp,12
   14d58:	f800283a 	ret
   14d5c:	008000b4 	movhi	r2,2
   14d60:	1027d515 	stw	zero,-24748(r2)
   14d64:	008000b4 	movhi	r2,2
   14d68:	1027d315 	stw	zero,-24756(r2)
   14d6c:	003ff606 	br	14d48 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3c>

00014d70 <__cxa_call_terminate>:
   14d70:	defffe04 	addi	sp,sp,-8
   14d74:	dfc00115 	stw	ra,4(sp)
   14d78:	dc000015 	stw	r16,0(sp)
   14d7c:	20000d26 	beq	r4,zero,14db4 <__cxa_call_terminate+0x44>
   14d80:	2021883a 	mov	r16,r4
   14d84:	0014dd00 	call	14dd0 <__cxa_begin_catch>
   14d88:	80800017 	ldw	r2,0(r16)
   14d8c:	81000117 	ldw	r4,4(r16)
   14d90:	00ef3574 	movhi	r3,48341
   14d94:	18f54004 	addi	r3,r3,-11008
   14d98:	016e2cb4 	movhi	r5,47282
   14d9c:	296aaf04 	addi	r5,r5,-21828
   14da0:	10c7883a 	add	r3,r2,r3
   14da4:	1885803a 	cmpltu	r2,r3,r2
   14da8:	2149883a 	add	r4,r4,r5
   14dac:	1105883a 	add	r2,r2,r4
   14db0:	10000126 	beq	r2,zero,14db8 <__cxa_call_terminate+0x48>
   14db4:	00139600 	call	13960 <_ZSt9terminatev>
   14db8:	18c000a8 	cmpgeui	r3,r3,2
   14dbc:	183ffd1e 	bne	r3,zero,14db4 <__cxa_call_terminate+0x44>
   14dc0:	813ff817 	ldw	r4,-32(r16)
   14dc4:	00138980 	call	13898 <_ZN10__cxxabiv111__terminateEPFvvE>

00014dc8 <__cxa_get_exception_ptr>:
   14dc8:	20bfff17 	ldw	r2,-4(r4)
   14dcc:	f800283a 	ret

00014dd0 <__cxa_begin_catch>:
   14dd0:	defffe04 	addi	sp,sp,-8
   14dd4:	dc000015 	stw	r16,0(sp)
   14dd8:	dfc00115 	stw	ra,4(sp)
   14ddc:	2021883a 	mov	r16,r4
   14de0:	0014fd40 	call	14fd4 <__cxa_get_globals>
   14de4:	80c00017 	ldw	r3,0(r16)
   14de8:	81800117 	ldw	r6,4(r16)
   14dec:	012f3574 	movhi	r4,48341
   14df0:	21354004 	addi	r4,r4,-11008
   14df4:	016e2cb4 	movhi	r5,47282
   14df8:	296aaf04 	addi	r5,r5,-21828
   14dfc:	1909883a 	add	r4,r3,r4
   14e00:	314d883a 	add	r6,r6,r5
   14e04:	20c7803a 	cmpltu	r3,r4,r3
   14e08:	1987883a 	add	r3,r3,r6
   14e0c:	100b883a 	mov	r5,r2
   14e10:	81bff504 	addi	r6,r16,-44
   14e14:	10800017 	ldw	r2,0(r2)
   14e18:	18000626 	beq	r3,zero,14e34 <__cxa_begin_catch+0x64>
   14e1c:	1000191e 	bne	r2,zero,14e84 <__cxa_begin_catch+0xb4>
   14e20:	29800015 	stw	r6,0(r5)
   14e24:	dfc00117 	ldw	ra,4(sp)
   14e28:	dc000017 	ldw	r16,0(sp)
   14e2c:	dec00204 	addi	sp,sp,8
   14e30:	f800283a 	ret
   14e34:	210000a8 	cmpgeui	r4,r4,2
   14e38:	203ff81e 	bne	r4,zero,14e1c <__cxa_begin_catch+0x4c>
   14e3c:	80fffa17 	ldw	r3,-24(r16)
   14e40:	18000d16 	blt	r3,zero,14e78 <__cxa_begin_catch+0xa8>
   14e44:	18c00044 	addi	r3,r3,1
   14e48:	29000117 	ldw	r4,4(r5)
   14e4c:	80fffa15 	stw	r3,-24(r16)
   14e50:	20ffffc4 	addi	r3,r4,-1
   14e54:	28c00115 	stw	r3,4(r5)
   14e58:	11800226 	beq	r2,r6,14e64 <__cxa_begin_catch+0x94>
   14e5c:	80bff915 	stw	r2,-28(r16)
   14e60:	29800015 	stw	r6,0(r5)
   14e64:	80bfff17 	ldw	r2,-4(r16)
   14e68:	dfc00117 	ldw	ra,4(sp)
   14e6c:	dc000017 	ldw	r16,0(sp)
   14e70:	dec00204 	addi	sp,sp,8
   14e74:	f800283a 	ret
   14e78:	01000044 	movi	r4,1
   14e7c:	20c7c83a 	sub	r3,r4,r3
   14e80:	003ff106 	br	14e48 <__cxa_begin_catch+0x78>
   14e84:	00139600 	call	13960 <_ZSt9terminatev>

00014e88 <__cxa_end_catch>:
   14e88:	deffff04 	addi	sp,sp,-4
   14e8c:	dfc00015 	stw	ra,0(sp)
   14e90:	0014fc80 	call	14fc8 <__cxa_get_globals_fast>
   14e94:	11000017 	ldw	r4,0(r2)
   14e98:	20001426 	beq	r4,zero,14eec <__cxa_end_catch+0x64>
   14e9c:	20c00b17 	ldw	r3,44(r4)
   14ea0:	21800c17 	ldw	r6,48(r4)
   14ea4:	016f3574 	movhi	r5,48341
   14ea8:	29754004 	addi	r5,r5,-11008
   14eac:	01ee2cb4 	movhi	r7,47282
   14eb0:	39eaaf04 	addi	r7,r7,-21828
   14eb4:	194b883a 	add	r5,r3,r5
   14eb8:	28c7803a 	cmpltu	r3,r5,r3
   14ebc:	31cd883a 	add	r6,r6,r7
   14ec0:	1987883a 	add	r3,r3,r6
   14ec4:	1800111e 	bne	r3,zero,14f0c <__cxa_end_catch+0x84>
   14ec8:	294000a8 	cmpgeui	r5,r5,2
   14ecc:	28000f1e 	bne	r5,zero,14f0c <__cxa_end_catch+0x84>
   14ed0:	20c00517 	ldw	r3,20(r4)
   14ed4:	18000816 	blt	r3,zero,14ef8 <__cxa_end_catch+0x70>
   14ed8:	18ffffc4 	addi	r3,r3,-1
   14edc:	18001026 	beq	r3,zero,14f20 <__cxa_end_catch+0x98>
   14ee0:	18bfffd8 	cmpnei	r2,r3,-1
   14ee4:	10001426 	beq	r2,zero,14f38 <__cxa_end_catch+0xb0>
   14ee8:	20c00515 	stw	r3,20(r4)
   14eec:	dfc00017 	ldw	ra,0(sp)
   14ef0:	dec00104 	addi	sp,sp,4
   14ef4:	f800283a 	ret
   14ef8:	18c00044 	addi	r3,r3,1
   14efc:	183ffa1e 	bne	r3,zero,14ee8 <__cxa_end_catch+0x60>
   14f00:	21400417 	ldw	r5,16(r4)
   14f04:	11400015 	stw	r5,0(r2)
   14f08:	003ff706 	br	14ee8 <__cxa_end_catch+0x60>
   14f0c:	21000b04 	addi	r4,r4,44
   14f10:	10000015 	stw	zero,0(r2)
   14f14:	dfc00017 	ldw	ra,0(sp)
   14f18:	dec00104 	addi	sp,sp,4
   14f1c:	0016e241 	jmpi	16e24 <_Unwind_DeleteException>
   14f20:	20c00417 	ldw	r3,16(r4)
   14f24:	21000b04 	addi	r4,r4,44
   14f28:	10c00015 	stw	r3,0(r2)
   14f2c:	dfc00017 	ldw	ra,0(sp)
   14f30:	dec00104 	addi	sp,sp,4
   14f34:	0016e241 	jmpi	16e24 <_Unwind_DeleteException>
   14f38:	00139600 	call	13960 <_ZSt9terminatev>

00014f3c <_ZSt18uncaught_exceptionv>:
   14f3c:	deffff04 	addi	sp,sp,-4
   14f40:	dfc00015 	stw	ra,0(sp)
   14f44:	0014fd40 	call	14fd4 <__cxa_get_globals>
   14f48:	10800117 	ldw	r2,4(r2)
   14f4c:	1004c03a 	cmpne	r2,r2,zero
   14f50:	dfc00017 	ldw	ra,0(sp)
   14f54:	dec00104 	addi	sp,sp,4
   14f58:	f800283a 	ret

00014f5c <_ZSt19uncaught_exceptionsv>:
   14f5c:	deffff04 	addi	sp,sp,-4
   14f60:	dfc00015 	stw	ra,0(sp)
   14f64:	0014fd40 	call	14fd4 <__cxa_get_globals>
   14f68:	10800117 	ldw	r2,4(r2)
   14f6c:	dfc00017 	ldw	ra,0(sp)
   14f70:	dec00104 	addi	sp,sp,4
   14f74:	f800283a 	ret

00014f78 <_ZNSt9exceptionD1Ev>:
   14f78:	f800283a 	ret

00014f7c <_ZNSt13bad_exceptionD1Ev>:
   14f7c:	f800283a 	ret

00014f80 <_ZGTtNKSt9exception4whatEv>:
   14f80:	008000b4 	movhi	r2,2
   14f84:	10a2d204 	addi	r2,r2,-29880
   14f88:	f800283a 	ret

00014f8c <_ZGTtNKSt13bad_exception4whatEv>:
   14f8c:	008000b4 	movhi	r2,2
   14f90:	10a2d604 	addi	r2,r2,-29864
   14f94:	f800283a 	ret

00014f98 <_ZNSt9exceptionD0Ev>:
   14f98:	01400104 	movi	r5,4
   14f9c:	0012b581 	jmpi	12b58 <_ZdlPvj>

00014fa0 <_ZNSt13bad_exceptionD0Ev>:
   14fa0:	01400104 	movi	r5,4
   14fa4:	0012b581 	jmpi	12b58 <_ZdlPvj>

00014fa8 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
   14fa8:	f800283a 	ret

00014fac <_ZN10__cxxabiv115__forced_unwindD0Ev>:
   14fac:	01400104 	movi	r5,4
   14fb0:	0012b581 	jmpi	12b58 <_ZdlPvj>

00014fb4 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
   14fb4:	f800283a 	ret

00014fb8 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
   14fb8:	01400104 	movi	r5,4
   14fbc:	0012b581 	jmpi	12b58 <_ZdlPvj>

00014fc0 <_ZGTtNKSt9exceptionD1Ev>:
   14fc0:	f800283a 	ret

00014fc4 <_ZGTtNKSt13bad_exceptionD1Ev>:
   14fc4:	f800283a 	ret

00014fc8 <__cxa_get_globals_fast>:
   14fc8:	008000b4 	movhi	r2,2
   14fcc:	10a76a04 	addi	r2,r2,-25176
   14fd0:	f800283a 	ret

00014fd4 <__cxa_get_globals>:
   14fd4:	008000b4 	movhi	r2,2
   14fd8:	10a76a04 	addi	r2,r2,-25176
   14fdc:	f800283a 	ret

00014fe0 <_ZN10__cxxabiv123__fundamental_type_infoD1Ev>:
   14fe0:	008000b4 	movhi	r2,2
   14fe4:	10a31b04 	addi	r2,r2,-29588
   14fe8:	20800015 	stw	r2,0(r4)
   14fec:	0013fb81 	jmpi	13fb8 <_ZNSt9type_infoD1Ev>

00014ff0 <_ZN10__cxxabiv123__fundamental_type_infoD0Ev>:
   14ff0:	defffe04 	addi	sp,sp,-8
   14ff4:	008000b4 	movhi	r2,2
   14ff8:	dc000015 	stw	r16,0(sp)
   14ffc:	dfc00115 	stw	ra,4(sp)
   15000:	10a31b04 	addi	r2,r2,-29588
   15004:	20800015 	stw	r2,0(r4)
   15008:	2021883a 	mov	r16,r4
   1500c:	0013fb80 	call	13fb8 <_ZNSt9type_infoD1Ev>
   15010:	01400204 	movi	r5,8
   15014:	8009883a 	mov	r4,r16
   15018:	dfc00117 	ldw	ra,4(sp)
   1501c:	dc000017 	ldw	r16,0(sp)
   15020:	dec00204 	addi	sp,sp,8
   15024:	0012b581 	jmpi	12b58 <_ZdlPvj>

00015028 <_Znwj>:
   15028:	defffe04 	addi	sp,sp,-8
   1502c:	dc000015 	stw	r16,0(sp)
   15030:	dfc00115 	stw	ra,4(sp)
   15034:	2021883a 	mov	r16,r4
   15038:	2000011e 	bne	r4,zero,15040 <_Znwj+0x18>
   1503c:	04000044 	movi	r16,1
   15040:	8009883a 	mov	r4,r16
   15044:	001710c0 	call	1710c <malloc>
   15048:	10000426 	beq	r2,zero,1505c <_Znwj+0x34>
   1504c:	dfc00117 	ldw	ra,4(sp)
   15050:	dc000017 	ldw	r16,0(sp)
   15054:	dec00204 	addi	sp,sp,8
   15058:	f800283a 	ret
   1505c:	00155500 	call	15550 <_ZSt15get_new_handlerv>
   15060:	10000226 	beq	r2,zero,1506c <_Znwj+0x44>
   15064:	103ee83a 	callr	r2
   15068:	003ff506 	br	15040 <_Znwj+0x18>
   1506c:	01000104 	movi	r4,4
   15070:	0014c1c0 	call	14c1c <__cxa_allocate_exception>
   15074:	1009883a 	mov	r4,r2
   15078:	008000b4 	movhi	r2,2
   1507c:	01800074 	movhi	r6,1
   15080:	014000b4 	movhi	r5,2
   15084:	10a41b04 	addi	r2,r2,-28564
   15088:	31951604 	addi	r6,r6,21592
   1508c:	29641604 	addi	r5,r5,-28584
   15090:	20800015 	stw	r2,0(r4)
   15094:	0013ac40 	call	13ac4 <__cxa_throw>

00015098 <_ZNK10__cxxabiv117__pbase_type_info15__pointer_catchEPKS0_PPvj>:
   15098:	21000317 	ldw	r4,12(r4)
   1509c:	29400317 	ldw	r5,12(r5)
   150a0:	39c00084 	addi	r7,r7,2
   150a4:	20800017 	ldw	r2,0(r4)
   150a8:	10800417 	ldw	r2,16(r2)
   150ac:	1000683a 	jmp	r2

000150b0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>:
   150b0:	008000b4 	movhi	r2,2
   150b4:	10a3ef04 	addi	r2,r2,-28740
   150b8:	20800015 	stw	r2,0(r4)
   150bc:	0013fb81 	jmpi	13fb8 <_ZNSt9type_infoD1Ev>

000150c0 <_ZN10__cxxabiv117__pbase_type_infoD0Ev>:
   150c0:	defffe04 	addi	sp,sp,-8
   150c4:	008000b4 	movhi	r2,2
   150c8:	dc000015 	stw	r16,0(sp)
   150cc:	dfc00115 	stw	ra,4(sp)
   150d0:	10a3ef04 	addi	r2,r2,-28740
   150d4:	20800015 	stw	r2,0(r4)
   150d8:	2021883a 	mov	r16,r4
   150dc:	0013fb80 	call	13fb8 <_ZNSt9type_infoD1Ev>
   150e0:	01400404 	movi	r5,16
   150e4:	8009883a 	mov	r4,r16
   150e8:	dfc00117 	ldw	ra,4(sp)
   150ec:	dc000017 	ldw	r16,0(sp)
   150f0:	dec00204 	addi	sp,sp,8
   150f4:	0012b581 	jmpi	12b58 <_ZdlPvj>

000150f8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj>:
   150f8:	defff804 	addi	sp,sp,-32
   150fc:	dcc00315 	stw	r19,12(sp)
   15100:	dc400115 	stw	r17,4(sp)
   15104:	2027883a 	mov	r19,r4
   15108:	2c400117 	ldw	r17,4(r5)
   1510c:	21000117 	ldw	r4,4(r4)
   15110:	dfc00715 	stw	ra,28(sp)
   15114:	dd800615 	stw	r22,24(sp)
   15118:	dd400515 	stw	r21,20(sp)
   1511c:	dd000415 	stw	r20,16(sp)
   15120:	dc800215 	stw	r18,8(sp)
   15124:	dc000015 	stw	r16,0(sp)
   15128:	24400926 	beq	r4,r17,15150 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
   1512c:	20800007 	ldb	r2,0(r4)
   15130:	2821883a 	mov	r16,r5
   15134:	3025883a 	mov	r18,r6
   15138:	10800aa0 	cmpeqi	r2,r2,42
   1513c:	3829883a 	mov	r20,r7
   15140:	10000e1e 	bne	r2,zero,1517c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   15144:	880b883a 	mov	r5,r17
   15148:	001766c0 	call	1766c <strcmp>
   1514c:	10000b1e 	bne	r2,zero,1517c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x84>
   15150:	00800044 	movi	r2,1
   15154:	dfc00717 	ldw	ra,28(sp)
   15158:	dd800617 	ldw	r22,24(sp)
   1515c:	dd400517 	ldw	r21,20(sp)
   15160:	dd000417 	ldw	r20,16(sp)
   15164:	dcc00317 	ldw	r19,12(sp)
   15168:	dc800217 	ldw	r18,8(sp)
   1516c:	dc400117 	ldw	r17,4(sp)
   15170:	dc000017 	ldw	r16,0(sp)
   15174:	dec00804 	addi	sp,sp,32
   15178:	f800283a 	ret
   1517c:	008000b4 	movhi	r2,2
   15180:	9d400017 	ldw	r21,0(r19)
   15184:	1165c617 	ldw	r5,-26856(r2)
   15188:	adbfff17 	ldw	r22,-4(r21)
   1518c:	89403726 	beq	r17,r5,1526c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   15190:	88800007 	ldb	r2,0(r17)
   15194:	10800aa0 	cmpeqi	r2,r2,42
   15198:	1000031e 	bne	r2,zero,151a8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   1519c:	8809883a 	mov	r4,r17
   151a0:	001766c0 	call	1766c <strcmp>
   151a4:	10003126 	beq	r2,zero,1526c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x174>
   151a8:	80006926 	beq	r16,zero,15350 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x258>
   151ac:	80800017 	ldw	r2,0(r16)
   151b0:	b1000117 	ldw	r4,4(r22)
   151b4:	10bfff17 	ldw	r2,-4(r2)
   151b8:	11400117 	ldw	r5,4(r2)
   151bc:	21400526 	beq	r4,r5,151d4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xdc>
   151c0:	20800007 	ldb	r2,0(r4)
   151c4:	10800aa0 	cmpeqi	r2,r2,42
   151c8:	1000421e 	bne	r2,zero,152d4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   151cc:	001766c0 	call	1766c <strcmp>
   151d0:	1000401e 	bne	r2,zero,152d4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   151d4:	a080004c 	andi	r2,r20,1
   151d8:	10003e26 	beq	r2,zero,152d4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   151dc:	99000217 	ldw	r4,8(r19)
   151e0:	81800217 	ldw	r6,8(r16)
   151e4:	21c0180c 	andi	r7,r4,96
   151e8:	3080180c 	andi	r2,r6,96
   151ec:	01ca303a 	nor	r5,zero,r7
   151f0:	288a703a 	and	r5,r5,r2
   151f4:	28000126 	beq	r5,zero,151fc <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x104>
   151f8:	31cc703a 	and	r6,r6,r7
   151fc:	0084303a 	nor	r2,zero,r2
   15200:	0106303a 	nor	r3,zero,r4
   15204:	11c4703a 	and	r2,r2,r7
   15208:	1986703a 	and	r3,r3,r6
   1520c:	10c4b03a 	or	r2,r2,r3
   15210:	1000301e 	bne	r2,zero,152d4 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1dc>
   15214:	2100004c 	andi	r4,r4,1
   15218:	20003c26 	beq	r4,zero,1530c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x214>
   1521c:	a8c00617 	ldw	r3,24(r21)
   15220:	00800074 	movhi	r2,1
   15224:	10942604 	addi	r2,r2,20632
   15228:	18803b1e 	bne	r3,r2,15318 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x220>
   1522c:	99000317 	ldw	r4,12(r19)
   15230:	81400317 	ldw	r5,12(r16)
   15234:	a1c00084 	addi	r7,r20,2
   15238:	20800017 	ldw	r2,0(r4)
   1523c:	900d883a 	mov	r6,r18
   15240:	10800417 	ldw	r2,16(r2)
   15244:	dfc00717 	ldw	ra,28(sp)
   15248:	dd800617 	ldw	r22,24(sp)
   1524c:	dd400517 	ldw	r21,20(sp)
   15250:	dd000417 	ldw	r20,16(sp)
   15254:	dcc00317 	ldw	r19,12(sp)
   15258:	dc800217 	ldw	r18,8(sp)
   1525c:	dc400117 	ldw	r17,4(sp)
   15260:	dc000017 	ldw	r16,0(sp)
   15264:	dec00804 	addi	sp,sp,32
   15268:	1000683a 	jmp	r2
   1526c:	008000b4 	movhi	r2,2
   15270:	b4400117 	ldw	r17,4(r22)
   15274:	11627817 	ldw	r5,-30240(r2)
   15278:	89401c26 	beq	r17,r5,152ec <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   1527c:	88800007 	ldb	r2,0(r17)
   15280:	10800aa0 	cmpeqi	r2,r2,42
   15284:	1000151e 	bne	r2,zero,152dc <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1e4>
   15288:	8809883a 	mov	r4,r17
   1528c:	001766c0 	call	1766c <strcmp>
   15290:	10001626 	beq	r2,zero,152ec <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1f4>
   15294:	008000b4 	movhi	r2,2
   15298:	11640317 	ldw	r5,-28660(r2)
   1529c:	89400326 	beq	r17,r5,152ac <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   152a0:	8809883a 	mov	r4,r17
   152a4:	001766c0 	call	1766c <strcmp>
   152a8:	103fbf1e 	bne	r2,zero,151a8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   152ac:	99000317 	ldw	r4,12(r19)
   152b0:	20800017 	ldw	r2,0(r4)
   152b4:	10800317 	ldw	r2,12(r2)
   152b8:	103ee83a 	callr	r2
   152bc:	10c03fcc 	andi	r3,r2,255
   152c0:	18000d26 	beq	r3,zero,152f8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x200>
   152c4:	00c000b4 	movhi	r3,2
   152c8:	18e5f004 	addi	r3,r3,-26688
   152cc:	90c00015 	stw	r3,0(r18)
   152d0:	003fa006 	br	15154 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   152d4:	0005883a 	mov	r2,zero
   152d8:	003f9e06 	br	15154 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   152dc:	008000b4 	movhi	r2,2
   152e0:	10a40317 	ldw	r2,-28660(r2)
   152e4:	88bfb01e 	bne	r17,r2,151a8 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
   152e8:	003ff006 	br	152ac <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x1b4>
   152ec:	90000015 	stw	zero,0(r18)
   152f0:	00800044 	movi	r2,1
   152f4:	003f9706 	br	15154 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   152f8:	008000b4 	movhi	r2,2
   152fc:	10a5ef04 	addi	r2,r2,-26692
   15300:	90800015 	stw	r2,0(r18)
   15304:	00800044 	movi	r2,1
   15308:	003f9206 	br	15154 <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x5c>
   1530c:	00bfff84 	movi	r2,-2
   15310:	a0a8703a 	and	r20,r20,r2
   15314:	003fc106 	br	1521c <_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj+0x124>
   15318:	a00f883a 	mov	r7,r20
   1531c:	900d883a 	mov	r6,r18
   15320:	800b883a 	mov	r5,r16
   15324:	9809883a 	mov	r4,r19
   15328:	dfc00717 	ldw	ra,28(sp)
   1532c:	dd800617 	ldw	r22,24(sp)
   15330:	dd400517 	ldw	r21,20(sp)
   15334:	dd000417 	ldw	r20,16(sp)
   15338:	dcc00317 	ldw	r19,12(sp)
   1533c:	dc800217 	ldw	r18,8(sp)
   15340:	dc400117 	ldw	r17,4(sp)
   15344:	dc000017 	ldw	r16,0(sp)
   15348:	dec00804 	addi	sp,sp,32
   1534c:	1800683a 	jmp	r3
   15350:	00154d40 	call	154d4 <__cxa_bad_typeid>

00015354 <_ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev>:
   15354:	008000b4 	movhi	r2,2
   15358:	10a40704 	addi	r2,r2,-28644
   1535c:	20800015 	stw	r2,0(r4)
   15360:	00150b01 	jmpi	150b0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>

00015364 <_ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev>:
   15364:	defffe04 	addi	sp,sp,-8
   15368:	008000b4 	movhi	r2,2
   1536c:	dc000015 	stw	r16,0(sp)
   15370:	dfc00115 	stw	ra,4(sp)
   15374:	10a40704 	addi	r2,r2,-28644
   15378:	20800015 	stw	r2,0(r4)
   1537c:	2021883a 	mov	r16,r4
   15380:	00150b00 	call	150b0 <_ZN10__cxxabiv117__pbase_type_infoD1Ev>
   15384:	01400504 	movi	r5,20
   15388:	8009883a 	mov	r4,r16
   1538c:	dfc00117 	ldw	ra,4(sp)
   15390:	dc000017 	ldw	r16,0(sp)
   15394:	dec00204 	addi	sp,sp,8
   15398:	0012b581 	jmpi	12b58 <_ZdlPvj>

0001539c <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj>:
   1539c:	20c00417 	ldw	r3,16(r4)
   153a0:	28800417 	ldw	r2,16(r5)
   153a4:	defffb04 	addi	sp,sp,-20
   153a8:	dc400215 	stw	r17,8(sp)
   153ac:	dc000115 	stw	r16,4(sp)
   153b0:	2023883a 	mov	r17,r4
   153b4:	2821883a 	mov	r16,r5
   153b8:	19000117 	ldw	r4,4(r3)
   153bc:	11400117 	ldw	r5,4(r2)
   153c0:	dc800315 	stw	r18,12(sp)
   153c4:	dfc00415 	stw	ra,16(sp)
   153c8:	3825883a 	mov	r18,r7
   153cc:	21400e26 	beq	r4,r5,15408 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   153d0:	20800007 	ldb	r2,0(r4)
   153d4:	d9800015 	stw	r6,0(sp)
   153d8:	10800aa0 	cmpeqi	r2,r2,42
   153dc:	1000031e 	bne	r2,zero,153ec <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x50>
   153e0:	001766c0 	call	1766c <strcmp>
   153e4:	d9800017 	ldw	r6,0(sp)
   153e8:	10000726 	beq	r2,zero,15408 <_ZNK10__cxxabiv129__pointer_to_member_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj+0x6c>
   153ec:	0005883a 	mov	r2,zero
   153f0:	dfc00417 	ldw	ra,16(sp)
   153f4:	dc800317 	ldw	r18,12(sp)
   153f8:	dc400217 	ldw	r17,8(sp)
   153fc:	dc000117 	ldw	r16,4(sp)
   15400:	dec00504 	addi	sp,sp,20
   15404:	f800283a 	ret
   15408:	89000317 	ldw	r4,12(r17)
   1540c:	81400317 	ldw	r5,12(r16)
   15410:	91c00084 	addi	r7,r18,2
   15414:	20800017 	ldw	r2,0(r4)
   15418:	10800417 	ldw	r2,16(r2)
   1541c:	dfc00417 	ldw	ra,16(sp)
   15420:	dc800317 	ldw	r18,12(sp)
   15424:	dc400217 	ldw	r17,8(sp)
   15428:	dc000117 	ldw	r16,4(sp)
   1542c:	dec00504 	addi	sp,sp,20
   15430:	1000683a 	jmp	r2

00015434 <__cxa_pure_virtual>:
   15434:	deffff04 	addi	sp,sp,-4
   15438:	dfc00015 	stw	ra,0(sp)
   1543c:	00139600 	call	13960 <_ZSt9terminatev>

00015440 <__cxa_deleted_virtual>:
   15440:	deffff04 	addi	sp,sp,-4
   15444:	dfc00015 	stw	ra,0(sp)
   15448:	00139600 	call	13960 <_ZSt9terminatev>

0001544c <_ZNKSt9bad_alloc4whatEv>:
   1544c:	008000b4 	movhi	r2,2
   15450:	10a40e04 	addi	r2,r2,-28616
   15454:	f800283a 	ret

00015458 <_ZNSt9bad_allocD1Ev>:
   15458:	008000b4 	movhi	r2,2
   1545c:	10a41b04 	addi	r2,r2,-28564
   15460:	20800015 	stw	r2,0(r4)
   15464:	0014f781 	jmpi	14f78 <_ZNSt9exceptionD1Ev>

00015468 <_ZNSt9bad_allocD0Ev>:
   15468:	defffe04 	addi	sp,sp,-8
   1546c:	008000b4 	movhi	r2,2
   15470:	dc000015 	stw	r16,0(sp)
   15474:	dfc00115 	stw	ra,4(sp)
   15478:	10a41b04 	addi	r2,r2,-28564
   1547c:	20800015 	stw	r2,0(r4)
   15480:	2021883a 	mov	r16,r4
   15484:	0014f780 	call	14f78 <_ZNSt9exceptionD1Ev>
   15488:	01400104 	movi	r5,4
   1548c:	8009883a 	mov	r4,r16
   15490:	dfc00117 	ldw	ra,4(sp)
   15494:	dc000017 	ldw	r16,0(sp)
   15498:	dec00204 	addi	sp,sp,8
   1549c:	0012b581 	jmpi	12b58 <_ZdlPvj>

000154a0 <__cxa_bad_cast>:
   154a0:	deffff04 	addi	sp,sp,-4
   154a4:	01000104 	movi	r4,4
   154a8:	dfc00015 	stw	ra,0(sp)
   154ac:	0014c1c0 	call	14c1c <__cxa_allocate_exception>
   154b0:	1009883a 	mov	r4,r2
   154b4:	008000b4 	movhi	r2,2
   154b8:	01800074 	movhi	r6,1
   154bc:	014000b4 	movhi	r5,2
   154c0:	10a44004 	addi	r2,r2,-28416
   154c4:	31956f04 	addi	r6,r6,21948
   154c8:	29643b04 	addi	r5,r5,-28436
   154cc:	20800015 	stw	r2,0(r4)
   154d0:	0013ac40 	call	13ac4 <__cxa_throw>

000154d4 <__cxa_bad_typeid>:
   154d4:	deffff04 	addi	sp,sp,-4
   154d8:	01000104 	movi	r4,4
   154dc:	dfc00015 	stw	ra,0(sp)
   154e0:	0014c1c0 	call	14c1c <__cxa_allocate_exception>
   154e4:	1009883a 	mov	r4,r2
   154e8:	008000b4 	movhi	r2,2
   154ec:	01800074 	movhi	r6,1
   154f0:	014000b4 	movhi	r5,2
   154f4:	10a45004 	addi	r2,r2,-28352
   154f8:	31958404 	addi	r6,r6,22032
   154fc:	29644b04 	addi	r5,r5,-28372
   15500:	20800015 	stw	r2,0(r4)
   15504:	0013ac40 	call	13ac4 <__cxa_throw>

00015508 <__cxa_throw_bad_array_new_length>:
   15508:	deffff04 	addi	sp,sp,-4
   1550c:	01000104 	movi	r4,4
   15510:	dfc00015 	stw	ra,0(sp)
   15514:	0014c1c0 	call	14c1c <__cxa_allocate_exception>
   15518:	1009883a 	mov	r4,r2
   1551c:	008000b4 	movhi	r2,2
   15520:	01800074 	movhi	r6,1
   15524:	014000b4 	movhi	r5,2
   15528:	10a43104 	addi	r2,r2,-28476
   1552c:	31955a04 	addi	r6,r6,21864
   15530:	29642c04 	addi	r5,r5,-28496
   15534:	20800015 	stw	r2,0(r4)
   15538:	0013ac40 	call	13ac4 <__cxa_throw>

0001553c <_ZSt15set_new_handlerPFvvE>:
   1553c:	00c000b4 	movhi	r3,2
   15540:	008000b4 	movhi	r2,2
   15544:	10a76c17 	ldw	r2,-25168(r2)
   15548:	19276c15 	stw	r4,-25168(r3)
   1554c:	f800283a 	ret

00015550 <_ZSt15get_new_handlerv>:
   15550:	008000b4 	movhi	r2,2
   15554:	10a76c17 	ldw	r2,-25168(r2)
   15558:	f800283a 	ret

0001555c <_ZNKSt20bad_array_new_length4whatEv>:
   1555c:	008000b4 	movhi	r2,2
   15560:	10a41e04 	addi	r2,r2,-28552
   15564:	f800283a 	ret

00015568 <_ZNSt20bad_array_new_lengthD1Ev>:
   15568:	008000b4 	movhi	r2,2
   1556c:	10a43104 	addi	r2,r2,-28476
   15570:	20800015 	stw	r2,0(r4)
   15574:	00154581 	jmpi	15458 <_ZNSt9bad_allocD1Ev>

00015578 <_ZNSt20bad_array_new_lengthD0Ev>:
   15578:	defffe04 	addi	sp,sp,-8
   1557c:	008000b4 	movhi	r2,2
   15580:	dc000015 	stw	r16,0(sp)
   15584:	dfc00115 	stw	ra,4(sp)
   15588:	10a43104 	addi	r2,r2,-28476
   1558c:	20800015 	stw	r2,0(r4)
   15590:	2021883a 	mov	r16,r4
   15594:	00154580 	call	15458 <_ZNSt9bad_allocD1Ev>
   15598:	01400104 	movi	r5,4
   1559c:	8009883a 	mov	r4,r16
   155a0:	dfc00117 	ldw	ra,4(sp)
   155a4:	dc000017 	ldw	r16,0(sp)
   155a8:	dec00204 	addi	sp,sp,8
   155ac:	0012b581 	jmpi	12b58 <_ZdlPvj>

000155b0 <_ZNKSt8bad_cast4whatEv>:
   155b0:	008000b4 	movhi	r2,2
   155b4:	10a43404 	addi	r2,r2,-28464
   155b8:	f800283a 	ret

000155bc <_ZNSt8bad_castD1Ev>:
   155bc:	008000b4 	movhi	r2,2
   155c0:	10a44004 	addi	r2,r2,-28416
   155c4:	20800015 	stw	r2,0(r4)
   155c8:	0014f781 	jmpi	14f78 <_ZNSt9exceptionD1Ev>

000155cc <_ZNSt8bad_castD0Ev>:
   155cc:	defffe04 	addi	sp,sp,-8
   155d0:	008000b4 	movhi	r2,2
   155d4:	dc000015 	stw	r16,0(sp)
   155d8:	dfc00115 	stw	ra,4(sp)
   155dc:	10a44004 	addi	r2,r2,-28416
   155e0:	20800015 	stw	r2,0(r4)
   155e4:	2021883a 	mov	r16,r4
   155e8:	0014f780 	call	14f78 <_ZNSt9exceptionD1Ev>
   155ec:	01400104 	movi	r5,4
   155f0:	8009883a 	mov	r4,r16
   155f4:	dfc00117 	ldw	ra,4(sp)
   155f8:	dc000017 	ldw	r16,0(sp)
   155fc:	dec00204 	addi	sp,sp,8
   15600:	0012b581 	jmpi	12b58 <_ZdlPvj>

00015604 <_ZNKSt10bad_typeid4whatEv>:
   15604:	008000b4 	movhi	r2,2
   15608:	10a44304 	addi	r2,r2,-28404
   1560c:	f800283a 	ret

00015610 <_ZNSt10bad_typeidD1Ev>:
   15610:	008000b4 	movhi	r2,2
   15614:	10a45004 	addi	r2,r2,-28352
   15618:	20800015 	stw	r2,0(r4)
   1561c:	0014f781 	jmpi	14f78 <_ZNSt9exceptionD1Ev>

00015620 <_ZNSt10bad_typeidD0Ev>:
   15620:	defffe04 	addi	sp,sp,-8
   15624:	008000b4 	movhi	r2,2
   15628:	dc000015 	stw	r16,0(sp)
   1562c:	dfc00115 	stw	ra,4(sp)
   15630:	10a45004 	addi	r2,r2,-28352
   15634:	20800015 	stw	r2,0(r4)
   15638:	2021883a 	mov	r16,r4
   1563c:	0014f780 	call	14f78 <_ZNSt9exceptionD1Ev>
   15640:	01400104 	movi	r5,4
   15644:	8009883a 	mov	r4,r16
   15648:	dfc00117 	ldw	ra,4(sp)
   1564c:	dc000017 	ldw	r16,0(sp)
   15650:	dec00204 	addi	sp,sp,8
   15654:	0012b581 	jmpi	12b58 <_ZdlPvj>

00015658 <__divdf3>:
   15658:	2810d53a 	srli	r8,r5,20
   1565c:	defff004 	addi	sp,sp,-64
   15660:	dc000615 	stw	r16,24(sp)
   15664:	04000434 	movhi	r16,16
   15668:	df000e15 	stw	fp,56(sp)
   1566c:	ddc00d15 	stw	r23,52(sp)
   15670:	dd800c15 	stw	r22,48(sp)
   15674:	dd000a15 	stw	r20,40(sp)
   15678:	843fffc4 	addi	r16,r16,-1
   1567c:	dfc00f15 	stw	ra,60(sp)
   15680:	dd400b15 	stw	r21,44(sp)
   15684:	dcc00915 	stw	r19,36(sp)
   15688:	dc800815 	stw	r18,32(sp)
   1568c:	dc400715 	stw	r17,28(sp)
   15690:	4201ffcc 	andi	r8,r8,2047
   15694:	282ed7fa 	srli	r23,r5,31
   15698:	3039883a 	mov	fp,r6
   1569c:	382d883a 	mov	r22,r7
   156a0:	2029883a 	mov	r20,r4
   156a4:	2c20703a 	and	r16,r5,r16
   156a8:	40006826 	beq	r8,zero,1584c <__divdf3+0x1f4>
   156ac:	4081ffe0 	cmpeqi	r2,r8,2047
   156b0:	1000791e 	bne	r2,zero,15898 <__divdf3+0x240>
   156b4:	2026d77a 	srli	r19,r4,29
   156b8:	800a90fa 	slli	r5,r16,3
   156bc:	202890fa 	slli	r20,r4,3
   156c0:	44bf0044 	addi	r18,r8,-1023
   156c4:	994ab03a 	or	r5,r19,r5
   156c8:	2cc02034 	orhi	r19,r5,128
   156cc:	0021883a 	mov	r16,zero
   156d0:	0023883a 	mov	r17,zero
   156d4:	b010d53a 	srli	r8,r22,20
   156d8:	00c00434 	movhi	r3,16
   156dc:	18ffffc4 	addi	r3,r3,-1
   156e0:	4201ffcc 	andi	r8,r8,2047
   156e4:	b02ad7fa 	srli	r21,r22,31
   156e8:	b0ec703a 	and	r22,r22,r3
   156ec:	40004626 	beq	r8,zero,15808 <__divdf3+0x1b0>
   156f0:	4081ffe0 	cmpeqi	r2,r8,2047
   156f4:	10006f1e 	bne	r2,zero,158b4 <__divdf3+0x25c>
   156f8:	b00690fa 	slli	r3,r22,3
   156fc:	e004d77a 	srli	r2,fp,29
   15700:	e01290fa 	slli	r9,fp,3
   15704:	423f0044 	addi	r8,r8,-1023
   15708:	10c6b03a 	or	r3,r2,r3
   1570c:	1d802034 	orhi	r22,r3,128
   15710:	9225c83a 	sub	r18,r18,r8
   15714:	0007883a 	mov	r3,zero
   15718:	80800428 	cmpgeui	r2,r16,16
   1571c:	bd4ef03a 	xor	r7,r23,r21
   15720:	1000a71e 	bne	r2,zero,159c0 <__divdf3+0x368>
   15724:	800c90ba 	slli	r6,r16,2
   15728:	00800074 	movhi	r2,1
   1572c:	3085883a 	add	r2,r6,r2
   15730:	1095ce17 	ldw	r2,22328(r2)
   15734:	1000683a 	jmp	r2
   15738:	000159c0 	call	159c <__alt_mem_onchip_mem-0xea64>
   1573c:	000157e4 	muli	zero,zero,1375
   15740:	00015794 	movui	zero,1374
   15744:	000157f4 	movhi	zero,1375
   15748:	00015794 	movui	zero,1374
   1574c:	00015964 	muli	zero,zero,1381
   15750:	00015794 	movui	zero,1374
   15754:	000157f4 	movhi	zero,1375
   15758:	000157e4 	muli	zero,zero,1375
   1575c:	000157e4 	muli	zero,zero,1375
   15760:	00015964 	muli	zero,zero,1381
   15764:	000157f4 	movhi	zero,1375
   15768:	00015778 	rdprs	zero,zero,1373
   1576c:	00015778 	rdprs	zero,zero,1373
   15770:	00015778 	rdprs	zero,zero,1373
   15774:	0001597c 	xorhi	zero,zero,1381
   15778:	b80f883a 	mov	r7,r23
   1577c:	888000a0 	cmpeqi	r2,r17,2
   15780:	1000181e 	bne	r2,zero,157e4 <__divdf3+0x18c>
   15784:	888000e0 	cmpeqi	r2,r17,3
   15788:	1001f61e 	bne	r2,zero,15f64 <__divdf3+0x90c>
   1578c:	88800060 	cmpeqi	r2,r17,1
   15790:	10006126 	beq	r2,zero,15918 <__divdf3+0x2c0>
   15794:	0007883a 	mov	r3,zero
   15798:	000b883a 	mov	r5,zero
   1579c:	0029883a 	mov	r20,zero
   157a0:	1806953a 	slli	r3,r3,20
   157a4:	380e97fa 	slli	r7,r7,31
   157a8:	a005883a 	mov	r2,r20
   157ac:	1946b03a 	or	r3,r3,r5
   157b0:	19c6b03a 	or	r3,r3,r7
   157b4:	dfc00f17 	ldw	ra,60(sp)
   157b8:	df000e17 	ldw	fp,56(sp)
   157bc:	ddc00d17 	ldw	r23,52(sp)
   157c0:	dd800c17 	ldw	r22,48(sp)
   157c4:	dd400b17 	ldw	r21,44(sp)
   157c8:	dd000a17 	ldw	r20,40(sp)
   157cc:	dcc00917 	ldw	r19,36(sp)
   157d0:	dc800817 	ldw	r18,32(sp)
   157d4:	dc400717 	ldw	r17,28(sp)
   157d8:	dc000617 	ldw	r16,24(sp)
   157dc:	dec01004 	addi	sp,sp,64
   157e0:	f800283a 	ret
   157e4:	00c1ffc4 	movi	r3,2047
   157e8:	000b883a 	mov	r5,zero
   157ec:	0029883a 	mov	r20,zero
   157f0:	003feb06 	br	157a0 <__divdf3+0x148>
   157f4:	a80f883a 	mov	r7,r21
   157f8:	b027883a 	mov	r19,r22
   157fc:	4829883a 	mov	r20,r9
   15800:	1823883a 	mov	r17,r3
   15804:	003fdd06 	br	1577c <__divdf3+0x124>
   15808:	b712b03a 	or	r9,r22,fp
   1580c:	48003e26 	beq	r9,zero,15908 <__divdf3+0x2b0>
   15810:	b0017726 	beq	r22,zero,15df0 <__divdf3+0x798>
   15814:	b009883a 	mov	r4,r22
   15818:	0016ec40 	call	16ec4 <__clzsi2>
   1581c:	117ffd44 	addi	r5,r2,-11
   15820:	01000744 	movi	r4,29
   15824:	127ffe04 	addi	r9,r2,-8
   15828:	2149c83a 	sub	r4,r4,r5
   1582c:	b246983a 	sll	r3,r22,r9
   15830:	e108d83a 	srl	r4,fp,r4
   15834:	e252983a 	sll	r9,fp,r9
   15838:	20ecb03a 	or	r22,r4,r3
   1583c:	1491883a 	add	r8,r2,r18
   15840:	4480fcc4 	addi	r18,r8,1011
   15844:	0007883a 	mov	r3,zero
   15848:	003fb306 	br	15718 <__divdf3+0xc0>
   1584c:	8126b03a 	or	r19,r16,r4
   15850:	2023883a 	mov	r17,r4
   15854:	98002726 	beq	r19,zero,158f4 <__divdf3+0x29c>
   15858:	80017026 	beq	r16,zero,15e1c <__divdf3+0x7c4>
   1585c:	8009883a 	mov	r4,r16
   15860:	0016ec40 	call	16ec4 <__clzsi2>
   15864:	113ffd44 	addi	r4,r2,-11
   15868:	00c00744 	movi	r3,29
   1586c:	14fffe04 	addi	r19,r2,-8
   15870:	1907c83a 	sub	r3,r3,r4
   15874:	84ca983a 	sll	r5,r16,r19
   15878:	88c6d83a 	srl	r3,r17,r3
   1587c:	8ce8983a 	sll	r20,r17,r19
   15880:	1966b03a 	or	r19,r3,r5
   15884:	023f0344 	movi	r8,-1011
   15888:	40a5c83a 	sub	r18,r8,r2
   1588c:	0021883a 	mov	r16,zero
   15890:	0023883a 	mov	r17,zero
   15894:	003f8f06 	br	156d4 <__divdf3+0x7c>
   15898:	8126b03a 	or	r19,r16,r4
   1589c:	9800101e 	bne	r19,zero,158e0 <__divdf3+0x288>
   158a0:	0029883a 	mov	r20,zero
   158a4:	04000204 	movi	r16,8
   158a8:	0481ffc4 	movi	r18,2047
   158ac:	04400084 	movi	r17,2
   158b0:	003f8806 	br	156d4 <__divdf3+0x7c>
   158b4:	b712b03a 	or	r9,r22,fp
   158b8:	94be0044 	addi	r18,r18,-2047
   158bc:	4800041e 	bne	r9,zero,158d0 <__divdf3+0x278>
   158c0:	84000094 	ori	r16,r16,2
   158c4:	002d883a 	mov	r22,zero
   158c8:	00c00084 	movi	r3,2
   158cc:	003f9206 	br	15718 <__divdf3+0xc0>
   158d0:	840000d4 	ori	r16,r16,3
   158d4:	e013883a 	mov	r9,fp
   158d8:	00c000c4 	movi	r3,3
   158dc:	003f8e06 	br	15718 <__divdf3+0xc0>
   158e0:	8027883a 	mov	r19,r16
   158e4:	0481ffc4 	movi	r18,2047
   158e8:	04000304 	movi	r16,12
   158ec:	044000c4 	movi	r17,3
   158f0:	003f7806 	br	156d4 <__divdf3+0x7c>
   158f4:	0029883a 	mov	r20,zero
   158f8:	04000104 	movi	r16,4
   158fc:	0025883a 	mov	r18,zero
   15900:	04400044 	movi	r17,1
   15904:	003f7306 	br	156d4 <__divdf3+0x7c>
   15908:	84000054 	ori	r16,r16,1
   1590c:	002d883a 	mov	r22,zero
   15910:	00c00044 	movi	r3,1
   15914:	003f8006 	br	15718 <__divdf3+0xc0>
   15918:	9440ffc4 	addi	r17,r18,1023
   1591c:	0441050e 	bge	zero,r17,15d34 <__divdf3+0x6dc>
   15920:	a08001cc 	andi	r2,r20,7
   15924:	10016c1e 	bne	r2,zero,15ed8 <__divdf3+0x880>
   15928:	a008d0fa 	srli	r4,r20,3
   1592c:	9880402c 	andhi	r2,r19,256
   15930:	10000426 	beq	r2,zero,15944 <__divdf3+0x2ec>
   15934:	00bfc034 	movhi	r2,65280
   15938:	10bfffc4 	addi	r2,r2,-1
   1593c:	98a6703a 	and	r19,r19,r2
   15940:	94410004 	addi	r17,r18,1024
   15944:	8881ffc8 	cmpgei	r2,r17,2047
   15948:	103fa61e 	bne	r2,zero,157e4 <__divdf3+0x18c>
   1594c:	9828977a 	slli	r20,r19,29
   15950:	980a927a 	slli	r5,r19,9
   15954:	88c1ffcc 	andi	r3,r17,2047
   15958:	a128b03a 	or	r20,r20,r4
   1595c:	280ad33a 	srli	r5,r5,12
   15960:	003f8f06 	br	157a0 <__divdf3+0x148>
   15964:	01400434 	movhi	r5,16
   15968:	000f883a 	mov	r7,zero
   1596c:	297fffc4 	addi	r5,r5,-1
   15970:	053fffc4 	movi	r20,-1
   15974:	00c1ffc4 	movi	r3,2047
   15978:	003f8906 	br	157a0 <__divdf3+0x148>
   1597c:	9880022c 	andhi	r2,r19,8
   15980:	10000926 	beq	r2,zero,159a8 <__divdf3+0x350>
   15984:	b080022c 	andhi	r2,r22,8
   15988:	1000071e 	bne	r2,zero,159a8 <__divdf3+0x350>
   1598c:	00800434 	movhi	r2,16
   15990:	b1400234 	orhi	r5,r22,8
   15994:	10bfffc4 	addi	r2,r2,-1
   15998:	288a703a 	and	r5,r5,r2
   1599c:	a80f883a 	mov	r7,r21
   159a0:	4829883a 	mov	r20,r9
   159a4:	003ff306 	br	15974 <__divdf3+0x31c>
   159a8:	00800434 	movhi	r2,16
   159ac:	99400234 	orhi	r5,r19,8
   159b0:	10bfffc4 	addi	r2,r2,-1
   159b4:	288a703a 	and	r5,r5,r2
   159b8:	b80f883a 	mov	r7,r23
   159bc:	003fed06 	br	15974 <__divdf3+0x31c>
   159c0:	b4c10536 	bltu	r22,r19,15dd8 <__divdf3+0x780>
   159c4:	b4c10326 	beq	r22,r19,15dd4 <__divdf3+0x77c>
   159c8:	94bfffc4 	addi	r18,r18,-1
   159cc:	a039883a 	mov	fp,r20
   159d0:	9821883a 	mov	r16,r19
   159d4:	0023883a 	mov	r17,zero
   159d8:	b006923a 	slli	r3,r22,8
   159dc:	482cd63a 	srli	r22,r9,24
   159e0:	8009883a 	mov	r4,r16
   159e4:	182ed43a 	srli	r23,r3,16
   159e8:	b0ecb03a 	or	r22,r22,r3
   159ec:	d9c00015 	stw	r7,0(sp)
   159f0:	b80b883a 	mov	r5,r23
   159f4:	482a923a 	slli	r21,r9,8
   159f8:	b53fffcc 	andi	r20,r22,65535
   159fc:	001700c0 	call	1700c <__udivsi3>
   15a00:	100b883a 	mov	r5,r2
   15a04:	a009883a 	mov	r4,r20
   15a08:	1027883a 	mov	r19,r2
   15a0c:	00170cc0 	call	170cc <__mulsi3>
   15a10:	8009883a 	mov	r4,r16
   15a14:	b80b883a 	mov	r5,r23
   15a18:	1021883a 	mov	r16,r2
   15a1c:	00170700 	call	17070 <__umodsi3>
   15a20:	1004943a 	slli	r2,r2,16
   15a24:	e008d43a 	srli	r4,fp,16
   15a28:	d9c00017 	ldw	r7,0(sp)
   15a2c:	2088b03a 	or	r4,r4,r2
   15a30:	2400042e 	bgeu	r4,r16,15a44 <__divdf3+0x3ec>
   15a34:	2589883a 	add	r4,r4,r22
   15a38:	98bfffc4 	addi	r2,r19,-1
   15a3c:	2581082e 	bgeu	r4,r22,15e60 <__divdf3+0x808>
   15a40:	1027883a 	mov	r19,r2
   15a44:	2421c83a 	sub	r16,r4,r16
   15a48:	b80b883a 	mov	r5,r23
   15a4c:	8009883a 	mov	r4,r16
   15a50:	d9c00215 	stw	r7,8(sp)
   15a54:	001700c0 	call	1700c <__udivsi3>
   15a58:	100b883a 	mov	r5,r2
   15a5c:	a009883a 	mov	r4,r20
   15a60:	d8800115 	stw	r2,4(sp)
   15a64:	00170cc0 	call	170cc <__mulsi3>
   15a68:	b80b883a 	mov	r5,r23
   15a6c:	8009883a 	mov	r4,r16
   15a70:	d8800015 	stw	r2,0(sp)
   15a74:	00170700 	call	17070 <__umodsi3>
   15a78:	100c943a 	slli	r6,r2,16
   15a7c:	d8c00017 	ldw	r3,0(sp)
   15a80:	e73fffcc 	andi	fp,fp,65535
   15a84:	e18cb03a 	or	r6,fp,r6
   15a88:	da000117 	ldw	r8,4(sp)
   15a8c:	d9c00217 	ldw	r7,8(sp)
   15a90:	30c0042e 	bgeu	r6,r3,15aa4 <__divdf3+0x44c>
   15a94:	358d883a 	add	r6,r6,r22
   15a98:	40bfffc4 	addi	r2,r8,-1
   15a9c:	3580ec2e 	bgeu	r6,r22,15e50 <__divdf3+0x7f8>
   15aa0:	1011883a 	mov	r8,r2
   15aa4:	9826943a 	slli	r19,r19,16
   15aa8:	af3fffcc 	andi	fp,r21,65535
   15aac:	30c7c83a 	sub	r3,r6,r3
   15ab0:	9a26b03a 	or	r19,r19,r8
   15ab4:	9810d43a 	srli	r8,r19,16
   15ab8:	9abfffcc 	andi	r10,r19,65535
   15abc:	5009883a 	mov	r4,r10
   15ac0:	e00b883a 	mov	r5,fp
   15ac4:	d9c00515 	stw	r7,20(sp)
   15ac8:	d8c00315 	stw	r3,12(sp)
   15acc:	da800415 	stw	r10,16(sp)
   15ad0:	da000015 	stw	r8,0(sp)
   15ad4:	00170cc0 	call	170cc <__mulsi3>
   15ad8:	da000017 	ldw	r8,0(sp)
   15adc:	e00b883a 	mov	r5,fp
   15ae0:	d8800215 	stw	r2,8(sp)
   15ae4:	4009883a 	mov	r4,r8
   15ae8:	00170cc0 	call	170cc <__mulsi3>
   15aec:	da000017 	ldw	r8,0(sp)
   15af0:	a820d43a 	srli	r16,r21,16
   15af4:	d8800115 	stw	r2,4(sp)
   15af8:	4009883a 	mov	r4,r8
   15afc:	800b883a 	mov	r5,r16
   15b00:	00170cc0 	call	170cc <__mulsi3>
   15b04:	da800417 	ldw	r10,16(sp)
   15b08:	8009883a 	mov	r4,r16
   15b0c:	d8800015 	stw	r2,0(sp)
   15b10:	500b883a 	mov	r5,r10
   15b14:	00170cc0 	call	170cc <__mulsi3>
   15b18:	d9800217 	ldw	r6,8(sp)
   15b1c:	da000117 	ldw	r8,4(sp)
   15b20:	da400017 	ldw	r9,0(sp)
   15b24:	3008d43a 	srli	r4,r6,16
   15b28:	1205883a 	add	r2,r2,r8
   15b2c:	d8c00317 	ldw	r3,12(sp)
   15b30:	2089883a 	add	r4,r4,r2
   15b34:	d9c00517 	ldw	r7,20(sp)
   15b38:	2200022e 	bgeu	r4,r8,15b44 <__divdf3+0x4ec>
   15b3c:	00800074 	movhi	r2,1
   15b40:	4893883a 	add	r9,r9,r2
   15b44:	200ad43a 	srli	r5,r4,16
   15b48:	2008943a 	slli	r4,r4,16
   15b4c:	31bfffcc 	andi	r6,r6,65535
   15b50:	2a4b883a 	add	r5,r5,r9
   15b54:	218d883a 	add	r6,r4,r6
   15b58:	19409436 	bltu	r3,r5,15dac <__divdf3+0x754>
   15b5c:	19409226 	beq	r3,r5,15da8 <__divdf3+0x750>
   15b60:	898dc83a 	sub	r6,r17,r6
   15b64:	89a3803a 	cmpltu	r17,r17,r6
   15b68:	1947c83a 	sub	r3,r3,r5
   15b6c:	1c47c83a 	sub	r3,r3,r17
   15b70:	9440ffc4 	addi	r17,r18,1023
   15b74:	b0c0d326 	beq	r22,r3,15ec4 <__divdf3+0x86c>
   15b78:	1809883a 	mov	r4,r3
   15b7c:	b80b883a 	mov	r5,r23
   15b80:	d9800315 	stw	r6,12(sp)
   15b84:	d9c00215 	stw	r7,8(sp)
   15b88:	d8c00015 	stw	r3,0(sp)
   15b8c:	001700c0 	call	1700c <__udivsi3>
   15b90:	100b883a 	mov	r5,r2
   15b94:	a009883a 	mov	r4,r20
   15b98:	d8800115 	stw	r2,4(sp)
   15b9c:	00170cc0 	call	170cc <__mulsi3>
   15ba0:	d8c00017 	ldw	r3,0(sp)
   15ba4:	b80b883a 	mov	r5,r23
   15ba8:	d8800015 	stw	r2,0(sp)
   15bac:	1809883a 	mov	r4,r3
   15bb0:	00170700 	call	17070 <__umodsi3>
   15bb4:	d9800317 	ldw	r6,12(sp)
   15bb8:	1006943a 	slli	r3,r2,16
   15bbc:	da400017 	ldw	r9,0(sp)
   15bc0:	3008d43a 	srli	r4,r6,16
   15bc4:	da000117 	ldw	r8,4(sp)
   15bc8:	d9c00217 	ldw	r7,8(sp)
   15bcc:	20c6b03a 	or	r3,r4,r3
   15bd0:	1a40062e 	bgeu	r3,r9,15bec <__divdf3+0x594>
   15bd4:	1d87883a 	add	r3,r3,r22
   15bd8:	40bfffc4 	addi	r2,r8,-1
   15bdc:	1d80c836 	bltu	r3,r22,15f00 <__divdf3+0x8a8>
   15be0:	1a40c72e 	bgeu	r3,r9,15f00 <__divdf3+0x8a8>
   15be4:	423fff84 	addi	r8,r8,-2
   15be8:	1d87883a 	add	r3,r3,r22
   15bec:	1a47c83a 	sub	r3,r3,r9
   15bf0:	1809883a 	mov	r4,r3
   15bf4:	b80b883a 	mov	r5,r23
   15bf8:	d9800415 	stw	r6,16(sp)
   15bfc:	d9c00315 	stw	r7,12(sp)
   15c00:	da000215 	stw	r8,8(sp)
   15c04:	d8c00115 	stw	r3,4(sp)
   15c08:	001700c0 	call	1700c <__udivsi3>
   15c0c:	100b883a 	mov	r5,r2
   15c10:	a009883a 	mov	r4,r20
   15c14:	d8800015 	stw	r2,0(sp)
   15c18:	00170cc0 	call	170cc <__mulsi3>
   15c1c:	d8c00117 	ldw	r3,4(sp)
   15c20:	b80b883a 	mov	r5,r23
   15c24:	102f883a 	mov	r23,r2
   15c28:	1809883a 	mov	r4,r3
   15c2c:	00170700 	call	17070 <__umodsi3>
   15c30:	d9800417 	ldw	r6,16(sp)
   15c34:	1004943a 	slli	r2,r2,16
   15c38:	da400017 	ldw	r9,0(sp)
   15c3c:	31bfffcc 	andi	r6,r6,65535
   15c40:	308cb03a 	or	r6,r6,r2
   15c44:	da000217 	ldw	r8,8(sp)
   15c48:	d9c00317 	ldw	r7,12(sp)
   15c4c:	35c0062e 	bgeu	r6,r23,15c68 <__divdf3+0x610>
   15c50:	358d883a 	add	r6,r6,r22
   15c54:	48bfffc4 	addi	r2,r9,-1
   15c58:	3580a736 	bltu	r6,r22,15ef8 <__divdf3+0x8a0>
   15c5c:	35c0a62e 	bgeu	r6,r23,15ef8 <__divdf3+0x8a0>
   15c60:	4a7fff84 	addi	r9,r9,-2
   15c64:	358d883a 	add	r6,r6,r22
   15c68:	4028943a 	slli	r20,r8,16
   15c6c:	35d5c83a 	sub	r10,r6,r23
   15c70:	e009883a 	mov	r4,fp
   15c74:	a268b03a 	or	r20,r20,r9
   15c78:	a23fffcc 	andi	r8,r20,65535
   15c7c:	a02ed43a 	srli	r23,r20,16
   15c80:	400b883a 	mov	r5,r8
   15c84:	d9c00315 	stw	r7,12(sp)
   15c88:	da800215 	stw	r10,8(sp)
   15c8c:	da000115 	stw	r8,4(sp)
   15c90:	00170cc0 	call	170cc <__mulsi3>
   15c94:	e00b883a 	mov	r5,fp
   15c98:	b809883a 	mov	r4,r23
   15c9c:	1039883a 	mov	fp,r2
   15ca0:	00170cc0 	call	170cc <__mulsi3>
   15ca4:	8009883a 	mov	r4,r16
   15ca8:	b80b883a 	mov	r5,r23
   15cac:	d8800015 	stw	r2,0(sp)
   15cb0:	00170cc0 	call	170cc <__mulsi3>
   15cb4:	da000117 	ldw	r8,4(sp)
   15cb8:	8009883a 	mov	r4,r16
   15cbc:	1021883a 	mov	r16,r2
   15cc0:	400b883a 	mov	r5,r8
   15cc4:	00170cc0 	call	170cc <__mulsi3>
   15cc8:	d9800017 	ldw	r6,0(sp)
   15ccc:	e006d43a 	srli	r3,fp,16
   15cd0:	da800217 	ldw	r10,8(sp)
   15cd4:	1185883a 	add	r2,r2,r6
   15cd8:	1887883a 	add	r3,r3,r2
   15cdc:	d9c00317 	ldw	r7,12(sp)
   15ce0:	1980022e 	bgeu	r3,r6,15cec <__divdf3+0x694>
   15ce4:	00800074 	movhi	r2,1
   15ce8:	80a1883a 	add	r16,r16,r2
   15cec:	1808d43a 	srli	r4,r3,16
   15cf0:	1806943a 	slli	r3,r3,16
   15cf4:	e73fffcc 	andi	fp,fp,65535
   15cf8:	2409883a 	add	r4,r4,r16
   15cfc:	1f07883a 	add	r3,r3,fp
   15d00:	51000436 	bltu	r10,r4,15d14 <__divdf3+0x6bc>
   15d04:	51000226 	beq	r10,r4,15d10 <__divdf3+0x6b8>
   15d08:	a5000054 	ori	r20,r20,1
   15d0c:	003f0306 	br	1591c <__divdf3+0x2c4>
   15d10:	183f0226 	beq	r3,zero,1591c <__divdf3+0x2c4>
   15d14:	b28d883a 	add	r6,r22,r10
   15d18:	a0bfffc4 	addi	r2,r20,-1
   15d1c:	35806536 	bltu	r6,r22,15eb4 <__divdf3+0x85c>
   15d20:	31008036 	bltu	r6,r4,15f24 <__divdf3+0x8cc>
   15d24:	31009426 	beq	r6,r4,15f78 <__divdf3+0x920>
   15d28:	1029883a 	mov	r20,r2
   15d2c:	003ff606 	br	15d08 <__divdf3+0x6b0>
   15d30:	053fffc4 	movi	r20,-1
   15d34:	01400044 	movi	r5,1
   15d38:	2c4bc83a 	sub	r5,r5,r17
   15d3c:	28800e48 	cmpgei	r2,r5,57
   15d40:	103e941e 	bne	r2,zero,15794 <__divdf3+0x13c>
   15d44:	28800808 	cmpgei	r2,r5,32
   15d48:	1000491e 	bne	r2,zero,15e70 <__divdf3+0x818>
   15d4c:	92010784 	addi	r8,r18,1054
   15d50:	9a04983a 	sll	r2,r19,r8
   15d54:	a146d83a 	srl	r3,r20,r5
   15d58:	a210983a 	sll	r8,r20,r8
   15d5c:	994ad83a 	srl	r5,r19,r5
   15d60:	10e8b03a 	or	r20,r2,r3
   15d64:	4010c03a 	cmpne	r8,r8,zero
   15d68:	a228b03a 	or	r20,r20,r8
   15d6c:	a08001cc 	andi	r2,r20,7
   15d70:	10000726 	beq	r2,zero,15d90 <__divdf3+0x738>
   15d74:	a08003cc 	andi	r2,r20,15
   15d78:	10800120 	cmpeqi	r2,r2,4
   15d7c:	1000041e 	bne	r2,zero,15d90 <__divdf3+0x738>
   15d80:	a0800104 	addi	r2,r20,4
   15d84:	1529803a 	cmpltu	r20,r2,r20
   15d88:	2d0b883a 	add	r5,r5,r20
   15d8c:	1029883a 	mov	r20,r2
   15d90:	2880202c 	andhi	r2,r5,128
   15d94:	10006f26 	beq	r2,zero,15f54 <__divdf3+0x8fc>
   15d98:	00c00044 	movi	r3,1
   15d9c:	000b883a 	mov	r5,zero
   15da0:	0029883a 	mov	r20,zero
   15da4:	003e7e06 	br	157a0 <__divdf3+0x148>
   15da8:	89bf6d2e 	bgeu	r17,r6,15b60 <__divdf3+0x508>
   15dac:	8d63883a 	add	r17,r17,r21
   15db0:	8d45803a 	cmpltu	r2,r17,r21
   15db4:	1585883a 	add	r2,r2,r22
   15db8:	1887883a 	add	r3,r3,r2
   15dbc:	98bfffc4 	addi	r2,r19,-1
   15dc0:	b0c0202e 	bgeu	r22,r3,15e44 <__divdf3+0x7ec>
   15dc4:	19405136 	bltu	r3,r5,15f0c <__divdf3+0x8b4>
   15dc8:	28c04f26 	beq	r5,r3,15f08 <__divdf3+0x8b0>
   15dcc:	1027883a 	mov	r19,r2
   15dd0:	003f6306 	br	15b60 <__divdf3+0x508>
   15dd4:	a27efc36 	bltu	r20,r9,159c8 <__divdf3+0x370>
   15dd8:	983897fa 	slli	fp,r19,31
   15ddc:	a004d07a 	srli	r2,r20,1
   15de0:	9820d07a 	srli	r16,r19,1
   15de4:	a02297fa 	slli	r17,r20,31
   15de8:	e0b8b03a 	or	fp,fp,r2
   15dec:	003efa06 	br	159d8 <__divdf3+0x380>
   15df0:	e009883a 	mov	r4,fp
   15df4:	0016ec40 	call	16ec4 <__clzsi2>
   15df8:	11400544 	addi	r5,r2,21
   15dfc:	29000748 	cmpgei	r4,r5,29
   15e00:	1007883a 	mov	r3,r2
   15e04:	10800804 	addi	r2,r2,32
   15e08:	203e8526 	beq	r4,zero,15820 <__divdf3+0x1c8>
   15e0c:	18fffe04 	addi	r3,r3,-8
   15e10:	e0ec983a 	sll	r22,fp,r3
   15e14:	0013883a 	mov	r9,zero
   15e18:	003e8806 	br	1583c <__divdf3+0x1e4>
   15e1c:	0016ec40 	call	16ec4 <__clzsi2>
   15e20:	11000544 	addi	r4,r2,21
   15e24:	20c00748 	cmpgei	r3,r4,29
   15e28:	100b883a 	mov	r5,r2
   15e2c:	10800804 	addi	r2,r2,32
   15e30:	183e8d26 	beq	r3,zero,15868 <__divdf3+0x210>
   15e34:	297ffe04 	addi	r5,r5,-8
   15e38:	a166983a 	sll	r19,r20,r5
   15e3c:	0029883a 	mov	r20,zero
   15e40:	003e9006 	br	15884 <__divdf3+0x22c>
   15e44:	b0ffe11e 	bne	r22,r3,15dcc <__divdf3+0x774>
   15e48:	8d7fe036 	bltu	r17,r21,15dcc <__divdf3+0x774>
   15e4c:	003fdd06 	br	15dc4 <__divdf3+0x76c>
   15e50:	30ff132e 	bgeu	r6,r3,15aa0 <__divdf3+0x448>
   15e54:	423fff84 	addi	r8,r8,-2
   15e58:	358d883a 	add	r6,r6,r22
   15e5c:	003f1106 	br	15aa4 <__divdf3+0x44c>
   15e60:	243ef72e 	bgeu	r4,r16,15a40 <__divdf3+0x3e8>
   15e64:	9cffff84 	addi	r19,r19,-2
   15e68:	2589883a 	add	r4,r4,r22
   15e6c:	003ef506 	br	15a44 <__divdf3+0x3ec>
   15e70:	00fff844 	movi	r3,-31
   15e74:	1c47c83a 	sub	r3,r3,r17
   15e78:	29400820 	cmpeqi	r5,r5,32
   15e7c:	98c6d83a 	srl	r3,r19,r3
   15e80:	2800031e 	bne	r5,zero,15e90 <__divdf3+0x838>
   15e84:	91410f84 	addi	r5,r18,1086
   15e88:	994a983a 	sll	r5,r19,r5
   15e8c:	a168b03a 	or	r20,r20,r5
   15e90:	a028c03a 	cmpne	r20,r20,zero
   15e94:	a0e8b03a 	or	r20,r20,r3
   15e98:	a4c001cc 	andi	r19,r20,7
   15e9c:	9800291e 	bne	r19,zero,15f44 <__divdf3+0x8ec>
   15ea0:	000b883a 	mov	r5,zero
   15ea4:	a028d0fa 	srli	r20,r20,3
   15ea8:	0007883a 	mov	r3,zero
   15eac:	a4e8b03a 	or	r20,r20,r19
   15eb0:	003e3b06 	br	157a0 <__divdf3+0x148>
   15eb4:	1029883a 	mov	r20,r2
   15eb8:	313f931e 	bne	r6,r4,15d08 <__divdf3+0x6b0>
   15ebc:	1d7f921e 	bne	r3,r21,15d08 <__divdf3+0x6b0>
   15ec0:	003e9606 	br	1591c <__divdf3+0x2c4>
   15ec4:	047f9a0e 	bge	zero,r17,15d30 <__divdf3+0x6d8>
   15ec8:	0009883a 	mov	r4,zero
   15ecc:	05000044 	movi	r20,1
   15ed0:	9d27883a 	add	r19,r19,r20
   15ed4:	003e9506 	br	1592c <__divdf3+0x2d4>
   15ed8:	a08003cc 	andi	r2,r20,15
   15edc:	10800118 	cmpnei	r2,r2,4
   15ee0:	103e9126 	beq	r2,zero,15928 <__divdf3+0x2d0>
   15ee4:	a1000104 	addi	r4,r20,4
   15ee8:	00bffec4 	movi	r2,-5
   15eec:	2008d0fa 	srli	r4,r4,3
   15ef0:	1529803a 	cmpltu	r20,r2,r20
   15ef4:	003ff606 	br	15ed0 <__divdf3+0x878>
   15ef8:	1013883a 	mov	r9,r2
   15efc:	003f5a06 	br	15c68 <__divdf3+0x610>
   15f00:	1011883a 	mov	r8,r2
   15f04:	003f3906 	br	15bec <__divdf3+0x594>
   15f08:	89bfb02e 	bgeu	r17,r6,15dcc <__divdf3+0x774>
   15f0c:	8d63883a 	add	r17,r17,r21
   15f10:	8d45803a 	cmpltu	r2,r17,r21
   15f14:	1585883a 	add	r2,r2,r22
   15f18:	9cffff84 	addi	r19,r19,-2
   15f1c:	1887883a 	add	r3,r3,r2
   15f20:	003f0f06 	br	15b60 <__divdf3+0x508>
   15f24:	ad45883a 	add	r2,r21,r21
   15f28:	156b803a 	cmpltu	r21,r2,r21
   15f2c:	adad883a 	add	r22,r21,r22
   15f30:	358d883a 	add	r6,r6,r22
   15f34:	a53fff84 	addi	r20,r20,-2
   15f38:	102b883a 	mov	r21,r2
   15f3c:	313fdf26 	beq	r6,r4,15ebc <__divdf3+0x864>
   15f40:	003f7106 	br	15d08 <__divdf3+0x6b0>
   15f44:	a08003cc 	andi	r2,r20,15
   15f48:	10800118 	cmpnei	r2,r2,4
   15f4c:	000b883a 	mov	r5,zero
   15f50:	103f8b1e 	bne	r2,zero,15d80 <__divdf3+0x728>
   15f54:	2804927a 	slli	r2,r5,9
   15f58:	2826977a 	slli	r19,r5,29
   15f5c:	100ad33a 	srli	r5,r2,12
   15f60:	003fd006 	br	15ea4 <__divdf3+0x84c>
   15f64:	00800434 	movhi	r2,16
   15f68:	99400234 	orhi	r5,r19,8
   15f6c:	10bfffc4 	addi	r2,r2,-1
   15f70:	288a703a 	and	r5,r5,r2
   15f74:	003e7f06 	br	15974 <__divdf3+0x31c>
   15f78:	a8ffea36 	bltu	r21,r3,15f24 <__divdf3+0x8cc>
   15f7c:	1029883a 	mov	r20,r2
   15f80:	1d7f611e 	bne	r3,r21,15d08 <__divdf3+0x6b0>
   15f84:	003e6506 	br	1591c <__divdf3+0x2c4>

00015f88 <__muldf3>:
   15f88:	2810d53a 	srli	r8,r5,20
   15f8c:	defff004 	addi	sp,sp,-64
   15f90:	00800434 	movhi	r2,16
   15f94:	df000e15 	stw	fp,56(sp)
   15f98:	dd000a15 	stw	r20,40(sp)
   15f9c:	dcc00915 	stw	r19,36(sp)
   15fa0:	dc400715 	stw	r17,28(sp)
   15fa4:	10bfffc4 	addi	r2,r2,-1
   15fa8:	dfc00f15 	stw	ra,60(sp)
   15fac:	ddc00d15 	stw	r23,52(sp)
   15fb0:	dd800c15 	stw	r22,48(sp)
   15fb4:	dd400b15 	stw	r21,44(sp)
   15fb8:	dc800815 	stw	r18,32(sp)
   15fbc:	dc000615 	stw	r16,24(sp)
   15fc0:	4201ffcc 	andi	r8,r8,2047
   15fc4:	2828d7fa 	srli	r20,r5,31
   15fc8:	2023883a 	mov	r17,r4
   15fcc:	3039883a 	mov	fp,r6
   15fd0:	28a6703a 	and	r19,r5,r2
   15fd4:	40013426 	beq	r8,zero,164a8 <__muldf3+0x520>
   15fd8:	4081ffe0 	cmpeqi	r2,r8,2047
   15fdc:	1001461e 	bne	r2,zero,164f8 <__muldf3+0x570>
   15fe0:	980a90fa 	slli	r5,r19,3
   15fe4:	2026d77a 	srli	r19,r4,29
   15fe8:	202490fa 	slli	r18,r4,3
   15fec:	423f0044 	addi	r8,r8,-1023
   15ff0:	9966b03a 	or	r19,r19,r5
   15ff4:	9cc02034 	orhi	r19,r19,128
   15ff8:	002b883a 	mov	r21,zero
   15ffc:	002d883a 	mov	r22,zero
   16000:	3804d53a 	srli	r2,r7,20
   16004:	00c00434 	movhi	r3,16
   16008:	18ffffc4 	addi	r3,r3,-1
   1600c:	1081ffcc 	andi	r2,r2,2047
   16010:	382ed7fa 	srli	r23,r7,31
   16014:	38e0703a 	and	r16,r7,r3
   16018:	10011026 	beq	r2,zero,1645c <__muldf3+0x4d4>
   1601c:	10c1ffe0 	cmpeqi	r3,r2,2047
   16020:	18013c1e 	bne	r3,zero,16514 <__muldf3+0x58c>
   16024:	e008d77a 	srli	r4,fp,29
   16028:	802090fa 	slli	r16,r16,3
   1602c:	e02290fa 	slli	r17,fp,3
   16030:	10bf0044 	addi	r2,r2,-1023
   16034:	2420b03a 	or	r16,r4,r16
   16038:	84002034 	orhi	r16,r16,128
   1603c:	4091883a 	add	r8,r8,r2
   16040:	0009883a 	mov	r4,zero
   16044:	a8800428 	cmpgeui	r2,r21,16
   16048:	a5ccf03a 	xor	r6,r20,r23
   1604c:	41c00044 	addi	r7,r8,1
   16050:	1000371e 	bne	r2,zero,16130 <__muldf3+0x1a8>
   16054:	a80490ba 	slli	r2,r21,2
   16058:	00c00074 	movhi	r3,1
   1605c:	10c7883a 	add	r3,r2,r3
   16060:	18981a17 	ldw	r2,24680(r3)
   16064:	1000683a 	jmp	r2
   16068:	00016130 	cmpltui	zero,zero,1412
   1606c:	000160ac 	andhi	zero,zero,1410
   16070:	000160ac 	andhi	zero,zero,1410
   16074:	000160a8 	cmpgeui	zero,zero,1410
   16078:	000160b8 	rdprs	zero,zero,1410
   1607c:	000160b8 	rdprs	zero,zero,1410
   16080:	00016588 	cmpgei	zero,zero,1430
   16084:	000160a8 	cmpgeui	zero,zero,1410
   16088:	000160b8 	rdprs	zero,zero,1410
   1608c:	00016588 	cmpgei	zero,zero,1430
   16090:	000160b8 	rdprs	zero,zero,1410
   16094:	000160a8 	cmpgeui	zero,zero,1410
   16098:	00016530 	cmpltui	zero,zero,1428
   1609c:	00016530 	cmpltui	zero,zero,1428
   160a0:	00016530 	cmpltui	zero,zero,1428
   160a4:	00016614 	movui	zero,1432
   160a8:	b80d883a 	mov	r6,r23
   160ac:	8027883a 	mov	r19,r16
   160b0:	8825883a 	mov	r18,r17
   160b4:	202d883a 	mov	r22,r4
   160b8:	b08000a0 	cmpeqi	r2,r22,2
   160bc:	1000181e 	bne	r2,zero,16120 <__muldf3+0x198>
   160c0:	b08000e0 	cmpeqi	r2,r22,3
   160c4:	1001961e 	bne	r2,zero,16720 <__muldf3+0x798>
   160c8:	b0800060 	cmpeqi	r2,r22,1
   160cc:	1000c926 	beq	r2,zero,163f4 <__muldf3+0x46c>
   160d0:	0007883a 	mov	r3,zero
   160d4:	0027883a 	mov	r19,zero
   160d8:	0025883a 	mov	r18,zero
   160dc:	1806953a 	slli	r3,r3,20
   160e0:	300c97fa 	slli	r6,r6,31
   160e4:	9005883a 	mov	r2,r18
   160e8:	1cc6b03a 	or	r3,r3,r19
   160ec:	1986b03a 	or	r3,r3,r6
   160f0:	dfc00f17 	ldw	ra,60(sp)
   160f4:	df000e17 	ldw	fp,56(sp)
   160f8:	ddc00d17 	ldw	r23,52(sp)
   160fc:	dd800c17 	ldw	r22,48(sp)
   16100:	dd400b17 	ldw	r21,44(sp)
   16104:	dd000a17 	ldw	r20,40(sp)
   16108:	dcc00917 	ldw	r19,36(sp)
   1610c:	dc800817 	ldw	r18,32(sp)
   16110:	dc400717 	ldw	r17,28(sp)
   16114:	dc000617 	ldw	r16,24(sp)
   16118:	dec01004 	addi	sp,sp,64
   1611c:	f800283a 	ret
   16120:	00c1ffc4 	movi	r3,2047
   16124:	0027883a 	mov	r19,zero
   16128:	0025883a 	mov	r18,zero
   1612c:	003feb06 	br	160dc <__muldf3+0x154>
   16130:	9028d43a 	srli	r20,r18,16
   16134:	8f3fffcc 	andi	fp,r17,65535
   16138:	957fffcc 	andi	r21,r18,65535
   1613c:	a80b883a 	mov	r5,r21
   16140:	e009883a 	mov	r4,fp
   16144:	d9800315 	stw	r6,12(sp)
   16148:	da000215 	stw	r8,8(sp)
   1614c:	d9c00115 	stw	r7,4(sp)
   16150:	8822d43a 	srli	r17,r17,16
   16154:	00170cc0 	call	170cc <__mulsi3>
   16158:	e00b883a 	mov	r5,fp
   1615c:	a009883a 	mov	r4,r20
   16160:	102d883a 	mov	r22,r2
   16164:	00170cc0 	call	170cc <__mulsi3>
   16168:	880b883a 	mov	r5,r17
   1616c:	a009883a 	mov	r4,r20
   16170:	102f883a 	mov	r23,r2
   16174:	00170cc0 	call	170cc <__mulsi3>
   16178:	a80b883a 	mov	r5,r21
   1617c:	8809883a 	mov	r4,r17
   16180:	d8800015 	stw	r2,0(sp)
   16184:	00170cc0 	call	170cc <__mulsi3>
   16188:	b006d43a 	srli	r3,r22,16
   1618c:	15e5883a 	add	r18,r2,r23
   16190:	d9c00117 	ldw	r7,4(sp)
   16194:	1c87883a 	add	r3,r3,r18
   16198:	da000217 	ldw	r8,8(sp)
   1619c:	d9800317 	ldw	r6,12(sp)
   161a0:	1dc0042e 	bgeu	r3,r23,161b4 <__muldf3+0x22c>
   161a4:	d9000017 	ldw	r4,0(sp)
   161a8:	00800074 	movhi	r2,1
   161ac:	2085883a 	add	r2,r4,r2
   161b0:	d8800015 	stw	r2,0(sp)
   161b4:	1804943a 	slli	r2,r3,16
   161b8:	85ffffcc 	andi	r23,r16,65535
   161bc:	b5bfffcc 	andi	r22,r22,65535
   161c0:	1585883a 	add	r2,r2,r22
   161c4:	a80b883a 	mov	r5,r21
   161c8:	b809883a 	mov	r4,r23
   161cc:	1824d43a 	srli	r18,r3,16
   161d0:	d9800515 	stw	r6,20(sp)
   161d4:	da000415 	stw	r8,16(sp)
   161d8:	d9c00315 	stw	r7,12(sp)
   161dc:	8020d43a 	srli	r16,r16,16
   161e0:	d8800115 	stw	r2,4(sp)
   161e4:	00170cc0 	call	170cc <__mulsi3>
   161e8:	a009883a 	mov	r4,r20
   161ec:	b80b883a 	mov	r5,r23
   161f0:	d8800215 	stw	r2,8(sp)
   161f4:	00170cc0 	call	170cc <__mulsi3>
   161f8:	a009883a 	mov	r4,r20
   161fc:	800b883a 	mov	r5,r16
   16200:	102d883a 	mov	r22,r2
   16204:	00170cc0 	call	170cc <__mulsi3>
   16208:	a80b883a 	mov	r5,r21
   1620c:	8009883a 	mov	r4,r16
   16210:	1029883a 	mov	r20,r2
   16214:	00170cc0 	call	170cc <__mulsi3>
   16218:	da800217 	ldw	r10,8(sp)
   1621c:	1585883a 	add	r2,r2,r22
   16220:	d9c00317 	ldw	r7,12(sp)
   16224:	5006d43a 	srli	r3,r10,16
   16228:	da000417 	ldw	r8,16(sp)
   1622c:	d9800517 	ldw	r6,20(sp)
   16230:	1887883a 	add	r3,r3,r2
   16234:	1d80022e 	bgeu	r3,r22,16240 <__muldf3+0x2b8>
   16238:	00800074 	movhi	r2,1
   1623c:	a0a9883a 	add	r20,r20,r2
   16240:	1804d43a 	srli	r2,r3,16
   16244:	1806943a 	slli	r3,r3,16
   16248:	982cd43a 	srli	r22,r19,16
   1624c:	9d7fffcc 	andi	r21,r19,65535
   16250:	e009883a 	mov	r4,fp
   16254:	54ffffcc 	andi	r19,r10,65535
   16258:	a80b883a 	mov	r5,r21
   1625c:	1ce7883a 	add	r19,r3,r19
   16260:	d9800515 	stw	r6,20(sp)
   16264:	da000415 	stw	r8,16(sp)
   16268:	d9c00315 	stw	r7,12(sp)
   1626c:	1529883a 	add	r20,r2,r20
   16270:	00170cc0 	call	170cc <__mulsi3>
   16274:	e00b883a 	mov	r5,fp
   16278:	b009883a 	mov	r4,r22
   1627c:	d8800215 	stw	r2,8(sp)
   16280:	00170cc0 	call	170cc <__mulsi3>
   16284:	8809883a 	mov	r4,r17
   16288:	b00b883a 	mov	r5,r22
   1628c:	1039883a 	mov	fp,r2
   16290:	00170cc0 	call	170cc <__mulsi3>
   16294:	8809883a 	mov	r4,r17
   16298:	a80b883a 	mov	r5,r21
   1629c:	1023883a 	mov	r17,r2
   162a0:	00170cc0 	call	170cc <__mulsi3>
   162a4:	d8c00217 	ldw	r3,8(sp)
   162a8:	1705883a 	add	r2,r2,fp
   162ac:	d9c00317 	ldw	r7,12(sp)
   162b0:	1808d43a 	srli	r4,r3,16
   162b4:	da000417 	ldw	r8,16(sp)
   162b8:	d9800517 	ldw	r6,20(sp)
   162bc:	2089883a 	add	r4,r4,r2
   162c0:	94e5883a 	add	r18,r18,r19
   162c4:	2700022e 	bgeu	r4,fp,162d0 <__muldf3+0x348>
   162c8:	00800074 	movhi	r2,1
   162cc:	88a3883a 	add	r17,r17,r2
   162d0:	2004d43a 	srli	r2,r4,16
   162d4:	2038943a 	slli	fp,r4,16
   162d8:	18ffffcc 	andi	r3,r3,65535
   162dc:	b809883a 	mov	r4,r23
   162e0:	a80b883a 	mov	r5,r21
   162e4:	d9800415 	stw	r6,16(sp)
   162e8:	da000315 	stw	r8,12(sp)
   162ec:	d9c00215 	stw	r7,8(sp)
   162f0:	e0f9883a 	add	fp,fp,r3
   162f4:	1463883a 	add	r17,r2,r17
   162f8:	00170cc0 	call	170cc <__mulsi3>
   162fc:	b80b883a 	mov	r5,r23
   16300:	b009883a 	mov	r4,r22
   16304:	102f883a 	mov	r23,r2
   16308:	00170cc0 	call	170cc <__mulsi3>
   1630c:	b00b883a 	mov	r5,r22
   16310:	8009883a 	mov	r4,r16
   16314:	102d883a 	mov	r22,r2
   16318:	00170cc0 	call	170cc <__mulsi3>
   1631c:	a80b883a 	mov	r5,r21
   16320:	8009883a 	mov	r4,r16
   16324:	1021883a 	mov	r16,r2
   16328:	00170cc0 	call	170cc <__mulsi3>
   1632c:	b80ad43a 	srli	r5,r23,16
   16330:	1585883a 	add	r2,r2,r22
   16334:	d9c00217 	ldw	r7,8(sp)
   16338:	288b883a 	add	r5,r5,r2
   1633c:	da000317 	ldw	r8,12(sp)
   16340:	d9800417 	ldw	r6,16(sp)
   16344:	2d80022e 	bgeu	r5,r22,16350 <__muldf3+0x3c8>
   16348:	00800074 	movhi	r2,1
   1634c:	80a1883a 	add	r16,r16,r2
   16350:	2806943a 	slli	r3,r5,16
   16354:	d8800017 	ldw	r2,0(sp)
   16358:	bdffffcc 	andi	r23,r23,65535
   1635c:	1dc7883a 	add	r3,r3,r23
   16360:	90ab883a 	add	r21,r18,r2
   16364:	acd5803a 	cmpltu	r10,r21,r19
   16368:	1d07883a 	add	r3,r3,r20
   1636c:	af2b883a 	add	r21,r21,fp
   16370:	1a97883a 	add	r11,r3,r10
   16374:	af09803a 	cmpltu	r4,r21,fp
   16378:	2826d43a 	srli	r19,r5,16
   1637c:	5c53883a 	add	r9,r11,r17
   16380:	4905883a 	add	r2,r9,r4
   16384:	1d07803a 	cmpltu	r3,r3,r20
   16388:	5a95803a 	cmpltu	r10,r11,r10
   1638c:	1a86b03a 	or	r3,r3,r10
   16390:	1109803a 	cmpltu	r4,r2,r4
   16394:	4c53803a 	cmpltu	r9,r9,r17
   16398:	1ce7883a 	add	r19,r3,r19
   1639c:	4908b03a 	or	r4,r9,r4
   163a0:	a824927a 	slli	r18,r21,9
   163a4:	d8c00117 	ldw	r3,4(sp)
   163a8:	9927883a 	add	r19,r19,r4
   163ac:	9c27883a 	add	r19,r19,r16
   163b0:	9826927a 	slli	r19,r19,9
   163b4:	a82ad5fa 	srli	r21,r21,23
   163b8:	100ad5fa 	srli	r5,r2,23
   163bc:	90e4b03a 	or	r18,r18,r3
   163c0:	1004927a 	slli	r2,r2,9
   163c4:	9024c03a 	cmpne	r18,r18,zero
   163c8:	9564b03a 	or	r18,r18,r21
   163cc:	98c0402c 	andhi	r3,r19,256
   163d0:	90a4b03a 	or	r18,r18,r2
   163d4:	9966b03a 	or	r19,r19,r5
   163d8:	1800b626 	beq	r3,zero,166b4 <__muldf3+0x72c>
   163dc:	9006d07a 	srli	r3,r18,1
   163e0:	980497fa 	slli	r2,r19,31
   163e4:	9480004c 	andi	r18,r18,1
   163e8:	9826d07a 	srli	r19,r19,1
   163ec:	1c86b03a 	or	r3,r3,r18
   163f0:	18a4b03a 	or	r18,r3,r2
   163f4:	3900ffc4 	addi	r4,r7,1023
   163f8:	0100690e 	bge	zero,r4,165a0 <__muldf3+0x618>
   163fc:	908001cc 	andi	r2,r18,7
   16400:	10000726 	beq	r2,zero,16420 <__muldf3+0x498>
   16404:	908003cc 	andi	r2,r18,15
   16408:	10800120 	cmpeqi	r2,r2,4
   1640c:	1000041e 	bne	r2,zero,16420 <__muldf3+0x498>
   16410:	90800104 	addi	r2,r18,4
   16414:	14a5803a 	cmpltu	r18,r2,r18
   16418:	9ca7883a 	add	r19,r19,r18
   1641c:	1025883a 	mov	r18,r2
   16420:	9880402c 	andhi	r2,r19,256
   16424:	10000426 	beq	r2,zero,16438 <__muldf3+0x4b0>
   16428:	00bfc034 	movhi	r2,65280
   1642c:	10bfffc4 	addi	r2,r2,-1
   16430:	98a6703a 	and	r19,r19,r2
   16434:	39010004 	addi	r4,r7,1024
   16438:	2081ffc8 	cmpgei	r2,r4,2047
   1643c:	103f381e 	bne	r2,zero,16120 <__muldf3+0x198>
   16440:	9804977a 	slli	r2,r19,29
   16444:	9024d0fa 	srli	r18,r18,3
   16448:	9826927a 	slli	r19,r19,9
   1644c:	20c1ffcc 	andi	r3,r4,2047
   16450:	14a4b03a 	or	r18,r2,r18
   16454:	9826d33a 	srli	r19,r19,12
   16458:	003f2006 	br	160dc <__muldf3+0x154>
   1645c:	8722b03a 	or	r17,r16,fp
   16460:	88004526 	beq	r17,zero,16578 <__muldf3+0x5f0>
   16464:	da000015 	stw	r8,0(sp)
   16468:	80008626 	beq	r16,zero,16684 <__muldf3+0x6fc>
   1646c:	8009883a 	mov	r4,r16
   16470:	0016ec40 	call	16ec4 <__clzsi2>
   16474:	da000017 	ldw	r8,0(sp)
   16478:	117ffd44 	addi	r5,r2,-11
   1647c:	01000744 	movi	r4,29
   16480:	147ffe04 	addi	r17,r2,-8
   16484:	2149c83a 	sub	r4,r4,r5
   16488:	8460983a 	sll	r16,r16,r17
   1648c:	e108d83a 	srl	r4,fp,r4
   16490:	e462983a 	sll	r17,fp,r17
   16494:	2420b03a 	or	r16,r4,r16
   16498:	4091c83a 	sub	r8,r8,r2
   1649c:	423f0344 	addi	r8,r8,-1011
   164a0:	0009883a 	mov	r4,zero
   164a4:	003ee706 	br	16044 <__muldf3+0xbc>
   164a8:	9924b03a 	or	r18,r19,r4
   164ac:	90002d26 	beq	r18,zero,16564 <__muldf3+0x5dc>
   164b0:	d9c00015 	stw	r7,0(sp)
   164b4:	98006826 	beq	r19,zero,16658 <__muldf3+0x6d0>
   164b8:	9809883a 	mov	r4,r19
   164bc:	0016ec40 	call	16ec4 <__clzsi2>
   164c0:	d9c00017 	ldw	r7,0(sp)
   164c4:	113ffd44 	addi	r4,r2,-11
   164c8:	00c00744 	movi	r3,29
   164cc:	14bffe04 	addi	r18,r2,-8
   164d0:	1907c83a 	sub	r3,r3,r4
   164d4:	9ca6983a 	sll	r19,r19,r18
   164d8:	88c6d83a 	srl	r3,r17,r3
   164dc:	8ca4983a 	sll	r18,r17,r18
   164e0:	1ce6b03a 	or	r19,r3,r19
   164e4:	023f0344 	movi	r8,-1011
   164e8:	4091c83a 	sub	r8,r8,r2
   164ec:	002b883a 	mov	r21,zero
   164f0:	002d883a 	mov	r22,zero
   164f4:	003ec206 	br	16000 <__muldf3+0x78>
   164f8:	9924b03a 	or	r18,r19,r4
   164fc:	9000141e 	bne	r18,zero,16550 <__muldf3+0x5c8>
   16500:	0027883a 	mov	r19,zero
   16504:	05400204 	movi	r21,8
   16508:	0201ffc4 	movi	r8,2047
   1650c:	05800084 	movi	r22,2
   16510:	003ebb06 	br	16000 <__muldf3+0x78>
   16514:	8722b03a 	or	r17,r16,fp
   16518:	4201ffc4 	addi	r8,r8,2047
   1651c:	8800081e 	bne	r17,zero,16540 <__muldf3+0x5b8>
   16520:	ad400094 	ori	r21,r21,2
   16524:	0021883a 	mov	r16,zero
   16528:	01000084 	movi	r4,2
   1652c:	003ec506 	br	16044 <__muldf3+0xbc>
   16530:	b08000a0 	cmpeqi	r2,r22,2
   16534:	a00d883a 	mov	r6,r20
   16538:	103ee126 	beq	r2,zero,160c0 <__muldf3+0x138>
   1653c:	003ef806 	br	16120 <__muldf3+0x198>
   16540:	ad4000d4 	ori	r21,r21,3
   16544:	e023883a 	mov	r17,fp
   16548:	010000c4 	movi	r4,3
   1654c:	003ebd06 	br	16044 <__muldf3+0xbc>
   16550:	2025883a 	mov	r18,r4
   16554:	05400304 	movi	r21,12
   16558:	0201ffc4 	movi	r8,2047
   1655c:	058000c4 	movi	r22,3
   16560:	003ea706 	br	16000 <__muldf3+0x78>
   16564:	0027883a 	mov	r19,zero
   16568:	05400104 	movi	r21,4
   1656c:	0011883a 	mov	r8,zero
   16570:	05800044 	movi	r22,1
   16574:	003ea206 	br	16000 <__muldf3+0x78>
   16578:	ad400054 	ori	r21,r21,1
   1657c:	0021883a 	mov	r16,zero
   16580:	01000044 	movi	r4,1
   16584:	003eaf06 	br	16044 <__muldf3+0xbc>
   16588:	04c00434 	movhi	r19,16
   1658c:	000d883a 	mov	r6,zero
   16590:	9cffffc4 	addi	r19,r19,-1
   16594:	04bfffc4 	movi	r18,-1
   16598:	00c1ffc4 	movi	r3,2047
   1659c:	003ecf06 	br	160dc <__muldf3+0x154>
   165a0:	00800044 	movi	r2,1
   165a4:	1105c83a 	sub	r2,r2,r4
   165a8:	10c00e48 	cmpgei	r3,r2,57
   165ac:	183ec81e 	bne	r3,zero,160d0 <__muldf3+0x148>
   165b0:	10c00808 	cmpgei	r3,r2,32
   165b4:	1800411e 	bne	r3,zero,166bc <__muldf3+0x734>
   165b8:	39c10784 	addi	r7,r7,1054
   165bc:	99c6983a 	sll	r3,r19,r7
   165c0:	9088d83a 	srl	r4,r18,r2
   165c4:	91ce983a 	sll	r7,r18,r7
   165c8:	98a6d83a 	srl	r19,r19,r2
   165cc:	1904b03a 	or	r2,r3,r4
   165d0:	3824c03a 	cmpne	r18,r7,zero
   165d4:	1484b03a 	or	r2,r2,r18
   165d8:	10c001cc 	andi	r3,r2,7
   165dc:	18000726 	beq	r3,zero,165fc <__muldf3+0x674>
   165e0:	10c003cc 	andi	r3,r2,15
   165e4:	18c00120 	cmpeqi	r3,r3,4
   165e8:	1800041e 	bne	r3,zero,165fc <__muldf3+0x674>
   165ec:	10c00104 	addi	r3,r2,4
   165f0:	1885803a 	cmpltu	r2,r3,r2
   165f4:	98a7883a 	add	r19,r19,r2
   165f8:	1805883a 	mov	r2,r3
   165fc:	98c0202c 	andhi	r3,r19,128
   16600:	18004326 	beq	r3,zero,16710 <__muldf3+0x788>
   16604:	00c00044 	movi	r3,1
   16608:	0027883a 	mov	r19,zero
   1660c:	0025883a 	mov	r18,zero
   16610:	003eb206 	br	160dc <__muldf3+0x154>
   16614:	9880022c 	andhi	r2,r19,8
   16618:	10000926 	beq	r2,zero,16640 <__muldf3+0x6b8>
   1661c:	8080022c 	andhi	r2,r16,8
   16620:	1000071e 	bne	r2,zero,16640 <__muldf3+0x6b8>
   16624:	00800434 	movhi	r2,16
   16628:	84c00234 	orhi	r19,r16,8
   1662c:	10bfffc4 	addi	r2,r2,-1
   16630:	98a6703a 	and	r19,r19,r2
   16634:	b80d883a 	mov	r6,r23
   16638:	8825883a 	mov	r18,r17
   1663c:	003fd606 	br	16598 <__muldf3+0x610>
   16640:	00800434 	movhi	r2,16
   16644:	9cc00234 	orhi	r19,r19,8
   16648:	10bfffc4 	addi	r2,r2,-1
   1664c:	98a6703a 	and	r19,r19,r2
   16650:	a00d883a 	mov	r6,r20
   16654:	003fd006 	br	16598 <__muldf3+0x610>
   16658:	0016ec40 	call	16ec4 <__clzsi2>
   1665c:	11000544 	addi	r4,r2,21
   16660:	21400748 	cmpgei	r5,r4,29
   16664:	1007883a 	mov	r3,r2
   16668:	d9c00017 	ldw	r7,0(sp)
   1666c:	10800804 	addi	r2,r2,32
   16670:	283f9526 	beq	r5,zero,164c8 <__muldf3+0x540>
   16674:	18fffe04 	addi	r3,r3,-8
   16678:	88e6983a 	sll	r19,r17,r3
   1667c:	0025883a 	mov	r18,zero
   16680:	003f9806 	br	164e4 <__muldf3+0x55c>
   16684:	e009883a 	mov	r4,fp
   16688:	0016ec40 	call	16ec4 <__clzsi2>
   1668c:	11400544 	addi	r5,r2,21
   16690:	29000748 	cmpgei	r4,r5,29
   16694:	1007883a 	mov	r3,r2
   16698:	da000017 	ldw	r8,0(sp)
   1669c:	10800804 	addi	r2,r2,32
   166a0:	203f7626 	beq	r4,zero,1647c <__muldf3+0x4f4>
   166a4:	1c3ffe04 	addi	r16,r3,-8
   166a8:	e420983a 	sll	r16,fp,r16
   166ac:	0023883a 	mov	r17,zero
   166b0:	003f7906 	br	16498 <__muldf3+0x510>
   166b4:	400f883a 	mov	r7,r8
   166b8:	003f4e06 	br	163f4 <__muldf3+0x46c>
   166bc:	00fff844 	movi	r3,-31
   166c0:	1907c83a 	sub	r3,r3,r4
   166c4:	10800820 	cmpeqi	r2,r2,32
   166c8:	98c6d83a 	srl	r3,r19,r3
   166cc:	1000031e 	bne	r2,zero,166dc <__muldf3+0x754>
   166d0:	39c10f84 	addi	r7,r7,1086
   166d4:	99e6983a 	sll	r19,r19,r7
   166d8:	94e4b03a 	or	r18,r18,r19
   166dc:	9024c03a 	cmpne	r18,r18,zero
   166e0:	90c4b03a 	or	r2,r18,r3
   166e4:	148001cc 	andi	r18,r2,7
   166e8:	9000051e 	bne	r18,zero,16700 <__muldf3+0x778>
   166ec:	0027883a 	mov	r19,zero
   166f0:	1004d0fa 	srli	r2,r2,3
   166f4:	0007883a 	mov	r3,zero
   166f8:	14a4b03a 	or	r18,r2,r18
   166fc:	003e7706 	br	160dc <__muldf3+0x154>
   16700:	10c003cc 	andi	r3,r2,15
   16704:	18c00118 	cmpnei	r3,r3,4
   16708:	0027883a 	mov	r19,zero
   1670c:	183fb71e 	bne	r3,zero,165ec <__muldf3+0x664>
   16710:	9806927a 	slli	r3,r19,9
   16714:	9824977a 	slli	r18,r19,29
   16718:	1826d33a 	srli	r19,r3,12
   1671c:	003ff406 	br	166f0 <__muldf3+0x768>
   16720:	00800434 	movhi	r2,16
   16724:	9cc00234 	orhi	r19,r19,8
   16728:	10bfffc4 	addi	r2,r2,-1
   1672c:	98a6703a 	and	r19,r19,r2
   16730:	003f9906 	br	16598 <__muldf3+0x610>

00016734 <__extendsfdf2>:
   16734:	200ad5fa 	srli	r5,r4,23
   16738:	defffd04 	addi	sp,sp,-12
   1673c:	dc000015 	stw	r16,0(sp)
   16740:	29403fcc 	andi	r5,r5,255
   16744:	04002034 	movhi	r16,128
   16748:	28800044 	addi	r2,r5,1
   1674c:	dc400115 	stw	r17,4(sp)
   16750:	843fffc4 	addi	r16,r16,-1
   16754:	dfc00215 	stw	ra,8(sp)
   16758:	10803f8c 	andi	r2,r2,254
   1675c:	2022d7fa 	srli	r17,r4,31
   16760:	8120703a 	and	r16,r16,r4
   16764:	10000d26 	beq	r2,zero,1679c <__extendsfdf2+0x68>
   16768:	8008d0fa 	srli	r4,r16,3
   1676c:	8020977a 	slli	r16,r16,29
   16770:	28c0e004 	addi	r3,r5,896
   16774:	180a953a 	slli	r5,r3,20
   16778:	880697fa 	slli	r3,r17,31
   1677c:	8005883a 	mov	r2,r16
   16780:	290ab03a 	or	r5,r5,r4
   16784:	28c6b03a 	or	r3,r5,r3
   16788:	dfc00217 	ldw	ra,8(sp)
   1678c:	dc400117 	ldw	r17,4(sp)
   16790:	dc000017 	ldw	r16,0(sp)
   16794:	dec00304 	addi	sp,sp,12
   16798:	f800283a 	ret
   1679c:	2800111e 	bne	r5,zero,167e4 <__extendsfdf2+0xb0>
   167a0:	80001926 	beq	r16,zero,16808 <__extendsfdf2+0xd4>
   167a4:	8009883a 	mov	r4,r16
   167a8:	0016ec40 	call	16ec4 <__clzsi2>
   167ac:	10c002c8 	cmpgei	r3,r2,11
   167b0:	18001b1e 	bne	r3,zero,16820 <__extendsfdf2+0xec>
   167b4:	010002c4 	movi	r4,11
   167b8:	2089c83a 	sub	r4,r4,r2
   167bc:	10c00544 	addi	r3,r2,21
   167c0:	810ad83a 	srl	r5,r16,r4
   167c4:	80e0983a 	sll	r16,r16,r3
   167c8:	01000434 	movhi	r4,16
   167cc:	00c0e244 	movi	r3,905
   167d0:	213fffc4 	addi	r4,r4,-1
   167d4:	1887c83a 	sub	r3,r3,r2
   167d8:	2908703a 	and	r4,r5,r4
   167dc:	18c1ffcc 	andi	r3,r3,2047
   167e0:	003fe406 	br	16774 <__extendsfdf2+0x40>
   167e4:	80000b26 	beq	r16,zero,16814 <__extendsfdf2+0xe0>
   167e8:	800ad0fa 	srli	r5,r16,3
   167ec:	00800434 	movhi	r2,16
   167f0:	10bfffc4 	addi	r2,r2,-1
   167f4:	29000234 	orhi	r4,r5,8
   167f8:	8020977a 	slli	r16,r16,29
   167fc:	2088703a 	and	r4,r4,r2
   16800:	00c1ffc4 	movi	r3,2047
   16804:	003fdb06 	br	16774 <__extendsfdf2+0x40>
   16808:	0007883a 	mov	r3,zero
   1680c:	0009883a 	mov	r4,zero
   16810:	003fd806 	br	16774 <__extendsfdf2+0x40>
   16814:	00c1ffc4 	movi	r3,2047
   16818:	0009883a 	mov	r4,zero
   1681c:	003fd506 	br	16774 <__extendsfdf2+0x40>
   16820:	113ffd44 	addi	r4,r2,-11
   16824:	810a983a 	sll	r5,r16,r4
   16828:	0021883a 	mov	r16,zero
   1682c:	003fe606 	br	167c8 <__extendsfdf2+0x94>

00016830 <__truncdfsf2>:
   16830:	2804d53a 	srli	r2,r5,20
   16834:	00c00434 	movhi	r3,16
   16838:	18ffffc4 	addi	r3,r3,-1
   1683c:	28c6703a 	and	r3,r5,r3
   16840:	180c90fa 	slli	r6,r3,3
   16844:	1081ffcc 	andi	r2,r2,2047
   16848:	2006d77a 	srli	r3,r4,29
   1684c:	11c00044 	addi	r7,r2,1
   16850:	39c1ff8c 	andi	r7,r7,2046
   16854:	280ad7fa 	srli	r5,r5,31
   16858:	201090fa 	slli	r8,r4,3
   1685c:	1986b03a 	or	r3,r3,r6
   16860:	38000b26 	beq	r7,zero,16890 <__truncdfsf2+0x60>
   16864:	11bf2004 	addi	r6,r2,-896
   16868:	31c03fc8 	cmpgei	r7,r6,255
   1686c:	38001226 	beq	r7,zero,168b8 <__truncdfsf2+0x88>
   16870:	00bfffc4 	movi	r2,-1
   16874:	0007883a 	mov	r3,zero
   16878:	10803fcc 	andi	r2,r2,255
   1687c:	100495fa 	slli	r2,r2,23
   16880:	280a97fa 	slli	r5,r5,31
   16884:	10c4b03a 	or	r2,r2,r3
   16888:	1144b03a 	or	r2,r2,r5
   1688c:	f800283a 	ret
   16890:	1a10b03a 	or	r8,r3,r8
   16894:	1000041e 	bne	r2,zero,168a8 <__truncdfsf2+0x78>
   16898:	40001d1e 	bne	r8,zero,16910 <__truncdfsf2+0xe0>
   1689c:	0005883a 	mov	r2,zero
   168a0:	0007883a 	mov	r3,zero
   168a4:	003ff406 	br	16878 <__truncdfsf2+0x48>
   168a8:	403ff126 	beq	r8,zero,16870 <__truncdfsf2+0x40>
   168ac:	18c01034 	orhi	r3,r3,64
   168b0:	00bfffc4 	movi	r2,-1
   168b4:	003ff006 	br	16878 <__truncdfsf2+0x48>
   168b8:	0180170e 	bge	zero,r6,16918 <__truncdfsf2+0xe8>
   168bc:	200891ba 	slli	r4,r4,6
   168c0:	180690fa 	slli	r3,r3,3
   168c4:	4010d77a 	srli	r8,r8,29
   168c8:	2008c03a 	cmpne	r4,r4,zero
   168cc:	20c6b03a 	or	r3,r4,r3
   168d0:	1a06b03a 	or	r3,r3,r8
   168d4:	188001cc 	andi	r2,r3,7
   168d8:	10002f26 	beq	r2,zero,16998 <__truncdfsf2+0x168>
   168dc:	188003cc 	andi	r2,r3,15
   168e0:	10800118 	cmpnei	r2,r2,4
   168e4:	10000126 	beq	r2,zero,168ec <__truncdfsf2+0xbc>
   168e8:	18c00104 	addi	r3,r3,4
   168ec:	1881002c 	andhi	r2,r3,1024
   168f0:	10002926 	beq	r2,zero,16998 <__truncdfsf2+0x168>
   168f4:	30800044 	addi	r2,r6,1
   168f8:	11003fe0 	cmpeqi	r4,r2,255
   168fc:	203fdc1e 	bne	r4,zero,16870 <__truncdfsf2+0x40>
   16900:	180691ba 	slli	r3,r3,6
   16904:	1806d27a 	srli	r3,r3,9
   16908:	003fdb06 	br	16878 <__truncdfsf2+0x48>
   1690c:	0005883a 	mov	r2,zero
   16910:	00c00144 	movi	r3,5
   16914:	003ffa06 	br	16900 <__truncdfsf2+0xd0>
   16918:	313ffa50 	cmplti	r4,r6,-23
   1691c:	203ffb1e 	bne	r4,zero,1690c <__truncdfsf2+0xdc>
   16920:	01c00784 	movi	r7,30
   16924:	398fc83a 	sub	r7,r7,r6
   16928:	3a400808 	cmpgei	r9,r7,32
   1692c:	19002034 	orhi	r4,r3,128
   16930:	48001126 	beq	r9,zero,16978 <__truncdfsf2+0x148>
   16934:	00ffff84 	movi	r3,-2
   16938:	198dc83a 	sub	r6,r3,r6
   1693c:	39c00820 	cmpeqi	r7,r7,32
   16940:	218cd83a 	srl	r6,r4,r6
   16944:	3800031e 	bne	r7,zero,16954 <__truncdfsf2+0x124>
   16948:	10ff2884 	addi	r3,r2,-862
   1694c:	20c8983a 	sll	r4,r4,r3
   16950:	4110b03a 	or	r8,r8,r4
   16954:	4006c03a 	cmpne	r3,r8,zero
   16958:	1986b03a 	or	r3,r3,r6
   1695c:	188001cc 	andi	r2,r3,7
   16960:	000d883a 	mov	r6,zero
   16964:	103fdd1e 	bne	r2,zero,168dc <__truncdfsf2+0xac>
   16968:	1881002c 	andhi	r2,r3,1024
   1696c:	103fe426 	beq	r2,zero,16900 <__truncdfsf2+0xd0>
   16970:	00800044 	movi	r2,1
   16974:	003fe206 	br	16900 <__truncdfsf2+0xd0>
   16978:	10ff2084 	addi	r3,r2,-894
   1697c:	40c4983a 	sll	r2,r8,r3
   16980:	20c8983a 	sll	r4,r4,r3
   16984:	41c6d83a 	srl	r3,r8,r7
   16988:	1004c03a 	cmpne	r2,r2,zero
   1698c:	1108b03a 	or	r4,r2,r4
   16990:	1906b03a 	or	r3,r3,r4
   16994:	003ff106 	br	1695c <__truncdfsf2+0x12c>
   16998:	3005883a 	mov	r2,r6
   1699c:	003fd806 	br	16900 <__truncdfsf2+0xd0>

000169a0 <_Unwind_ForcedUnwind_Phase2>:
   169a0:	28800017 	ldw	r2,0(r5)
   169a4:	defff504 	addi	sp,sp,-44
   169a8:	dd400815 	stw	r21,32(sp)
   169ac:	dd000715 	stw	r20,28(sp)
   169b0:	dcc00615 	stw	r19,24(sp)
   169b4:	dc800515 	stw	r18,20(sp)
   169b8:	dc400415 	stw	r17,16(sp)
   169bc:	dc000315 	stw	r16,12(sp)
   169c0:	dfc00a15 	stw	ra,40(sp)
   169c4:	dd800915 	stw	r22,36(sp)
   169c8:	302b883a 	mov	r21,r6
   169cc:	24c00317 	ldw	r19,12(r4)
   169d0:	25000417 	ldw	r20,16(r4)
   169d4:	21800017 	ldw	r6,0(r4)
   169d8:	21c00117 	ldw	r7,4(r4)
   169dc:	2823883a 	mov	r17,r5
   169e0:	2021883a 	mov	r16,r4
   169e4:	04800044 	movi	r18,1
   169e8:	10001d26 	beq	r2,zero,16a60 <_Unwind_ForcedUnwind_Phase2+0xc0>
   169ec:	15800617 	ldw	r22,24(r2)
   169f0:	01400284 	movi	r5,10
   169f4:	01000044 	movi	r4,1
   169f8:	dd000215 	stw	r20,8(sp)
   169fc:	dc400115 	stw	r17,4(sp)
   16a00:	dc000015 	stw	r16,0(sp)
   16a04:	983ee83a 	callr	r19
   16a08:	01400284 	movi	r5,10
   16a0c:	01000044 	movi	r4,1
   16a10:	10001a1e 	bne	r2,zero,16a7c <_Unwind_ForcedUnwind_Phase2+0xdc>
   16a14:	81800017 	ldw	r6,0(r16)
   16a18:	81c00117 	ldw	r7,4(r16)
   16a1c:	b0000926 	beq	r22,zero,16a44 <_Unwind_ForcedUnwind_Phase2+0xa4>
   16a20:	dc400115 	stw	r17,4(sp)
   16a24:	dc000015 	stw	r16,0(sp)
   16a28:	b03ee83a 	callr	r22
   16a2c:	10c001e0 	cmpeqi	r3,r2,7
   16a30:	11000218 	cmpnei	r4,r2,8
   16a34:	18001d1e 	bne	r3,zero,16aac <_Unwind_ForcedUnwind_Phase2+0x10c>
   16a38:	2000101e 	bne	r4,zero,16a7c <_Unwind_ForcedUnwind_Phase2+0xdc>
   16a3c:	81800017 	ldw	r6,0(r16)
   16a40:	81c00117 	ldw	r7,4(r16)
   16a44:	88800017 	ldw	r2,0(r17)
   16a48:	00c000b4 	movhi	r3,2
   16a4c:	94800044 	addi	r18,r18,1
   16a50:	10800017 	ldw	r2,0(r2)
   16a54:	18a76d15 	stw	r2,-25164(r3)
   16a58:	88800015 	stw	r2,0(r17)
   16a5c:	103fe31e 	bne	r2,zero,169ec <_Unwind_ForcedUnwind_Phase2+0x4c>
   16a60:	dd000215 	stw	r20,8(sp)
   16a64:	dc400115 	stw	r17,4(sp)
   16a68:	dc000015 	stw	r16,0(sp)
   16a6c:	01400684 	movi	r5,26
   16a70:	01000044 	movi	r4,1
   16a74:	983ee83a 	callr	r19
   16a78:	10000b26 	beq	r2,zero,16aa8 <_Unwind_ForcedUnwind_Phase2+0x108>
   16a7c:	00800084 	movi	r2,2
   16a80:	dfc00a17 	ldw	ra,40(sp)
   16a84:	dd800917 	ldw	r22,36(sp)
   16a88:	dd400817 	ldw	r21,32(sp)
   16a8c:	dd000717 	ldw	r20,28(sp)
   16a90:	dcc00617 	ldw	r19,24(sp)
   16a94:	dc800517 	ldw	r18,20(sp)
   16a98:	dc400417 	ldw	r17,16(sp)
   16a9c:	dc000317 	ldw	r16,12(sp)
   16aa0:	dec00b04 	addi	sp,sp,44
   16aa4:	f800283a 	ret
   16aa8:	00800144 	movi	r2,5
   16aac:	ac800015 	stw	r18,0(r21)
   16ab0:	003ff306 	br	16a80 <_Unwind_ForcedUnwind_Phase2+0xe0>

00016ab4 <_Unwind_RaiseException_Phase2>:
   16ab4:	28800017 	ldw	r2,0(r5)
   16ab8:	10002f26 	beq	r2,zero,16b78 <_Unwind_RaiseException_Phase2+0xc4>
   16abc:	defff804 	addi	sp,sp,-32
   16ac0:	dcc00515 	stw	r19,20(sp)
   16ac4:	dc800415 	stw	r18,16(sp)
   16ac8:	dc400315 	stw	r17,12(sp)
   16acc:	dc000215 	stw	r16,8(sp)
   16ad0:	dfc00715 	stw	ra,28(sp)
   16ad4:	dd000615 	stw	r20,24(sp)
   16ad8:	2823883a 	mov	r17,r5
   16adc:	2021883a 	mov	r16,r4
   16ae0:	3027883a 	mov	r19,r6
   16ae4:	04800044 	movi	r18,1
   16ae8:	00001306 	br	16b38 <_Unwind_RaiseException_Phase2+0x84>
   16aec:	18000e26 	beq	r3,zero,16b28 <_Unwind_RaiseException_Phase2+0x74>
   16af0:	01400084 	movi	r5,2
   16af4:	0029883a 	mov	r20,zero
   16af8:	81800017 	ldw	r6,0(r16)
   16afc:	81c00117 	ldw	r7,4(r16)
   16b00:	01000044 	movi	r4,1
   16b04:	dc400115 	stw	r17,4(sp)
   16b08:	dc000015 	stw	r16,0(sp)
   16b0c:	183ee83a 	callr	r3
   16b10:	10c001e0 	cmpeqi	r3,r2,7
   16b14:	18001a1e 	bne	r3,zero,16b80 <_Unwind_RaiseException_Phase2+0xcc>
   16b18:	10800218 	cmpnei	r2,r2,8
   16b1c:	10000d1e 	bne	r2,zero,16b54 <_Unwind_RaiseException_Phase2+0xa0>
   16b20:	a000191e 	bne	r20,zero,16b88 <_Unwind_RaiseException_Phase2+0xd4>
   16b24:	88800017 	ldw	r2,0(r17)
   16b28:	10800017 	ldw	r2,0(r2)
   16b2c:	94800044 	addi	r18,r18,1
   16b30:	88800015 	stw	r2,0(r17)
   16b34:	10000726 	beq	r2,zero,16b54 <_Unwind_RaiseException_Phase2+0xa0>
   16b38:	81000417 	ldw	r4,16(r16)
   16b3c:	10c00617 	ldw	r3,24(r2)
   16b40:	113fea1e 	bne	r2,r4,16aec <_Unwind_RaiseException_Phase2+0x38>
   16b44:	18001026 	beq	r3,zero,16b88 <_Unwind_RaiseException_Phase2+0xd4>
   16b48:	01400184 	movi	r5,6
   16b4c:	05000104 	movi	r20,4
   16b50:	003fe906 	br	16af8 <_Unwind_RaiseException_Phase2+0x44>
   16b54:	00800084 	movi	r2,2
   16b58:	dfc00717 	ldw	ra,28(sp)
   16b5c:	dd000617 	ldw	r20,24(sp)
   16b60:	dcc00517 	ldw	r19,20(sp)
   16b64:	dc800417 	ldw	r18,16(sp)
   16b68:	dc400317 	ldw	r17,12(sp)
   16b6c:	dc000217 	ldw	r16,8(sp)
   16b70:	dec00804 	addi	sp,sp,32
   16b74:	f800283a 	ret
   16b78:	00800084 	movi	r2,2
   16b7c:	f800283a 	ret
   16b80:	9c800015 	stw	r18,0(r19)
   16b84:	003ff406 	br	16b58 <_Unwind_RaiseException_Phase2+0xa4>
   16b88:	00170f40 	call	170f4 <abort>

00016b8c <uw_install_context.constprop.0.isra.0>:
   16b8c:	deffff04 	addi	sp,sp,-4
   16b90:	df000015 	stw	fp,0(sp)
   16b94:	20800804 	addi	r2,r4,32
   16b98:	00c000b4 	movhi	r3,2
   16b9c:	19276d15 	stw	r4,-25164(r3)
   16ba0:	d839883a 	mov	fp,sp
   16ba4:	20c00917 	ldw	r3,36(r4)
   16ba8:	21000817 	ldw	r4,32(r4)
   16bac:	16c00217 	ldw	sp,8(r2)
   16bb0:	2039883a 	mov	fp,r4
   16bb4:	1800683a 	jmp	r3

00016bb8 <_Unwind_SjLj_Register>:
   16bb8:	008000b4 	movhi	r2,2
   16bbc:	10a76d17 	ldw	r2,-25164(r2)
   16bc0:	20800015 	stw	r2,0(r4)
   16bc4:	008000b4 	movhi	r2,2
   16bc8:	11276d15 	stw	r4,-25164(r2)
   16bcc:	f800283a 	ret

00016bd0 <_Unwind_SjLj_Unregister>:
   16bd0:	20c00017 	ldw	r3,0(r4)
   16bd4:	008000b4 	movhi	r2,2
   16bd8:	10e76d15 	stw	r3,-25164(r2)
   16bdc:	f800283a 	ret

00016be0 <_Unwind_GetGR>:
   16be0:	29400084 	addi	r5,r5,2
   16be4:	20800017 	ldw	r2,0(r4)
   16be8:	280a90ba 	slli	r5,r5,2
   16bec:	114b883a 	add	r5,r2,r5
   16bf0:	28800017 	ldw	r2,0(r5)
   16bf4:	f800283a 	ret

00016bf8 <_Unwind_GetCFA>:
   16bf8:	20800017 	ldw	r2,0(r4)
   16bfc:	10000226 	beq	r2,zero,16c08 <_Unwind_GetCFA+0x10>
   16c00:	10800a17 	ldw	r2,40(r2)
   16c04:	f800283a 	ret
   16c08:	0005883a 	mov	r2,zero
   16c0c:	f800283a 	ret

00016c10 <_Unwind_SetGR>:
   16c10:	29400084 	addi	r5,r5,2
   16c14:	20800017 	ldw	r2,0(r4)
   16c18:	280a90ba 	slli	r5,r5,2
   16c1c:	114b883a 	add	r5,r2,r5
   16c20:	29800015 	stw	r6,0(r5)
   16c24:	f800283a 	ret

00016c28 <_Unwind_GetIP>:
   16c28:	20800017 	ldw	r2,0(r4)
   16c2c:	10800117 	ldw	r2,4(r2)
   16c30:	10800044 	addi	r2,r2,1
   16c34:	f800283a 	ret

00016c38 <_Unwind_GetIPInfo>:
   16c38:	20800017 	ldw	r2,0(r4)
   16c3c:	28000015 	stw	zero,0(r5)
   16c40:	10000326 	beq	r2,zero,16c50 <_Unwind_GetIPInfo+0x18>
   16c44:	10800117 	ldw	r2,4(r2)
   16c48:	10800044 	addi	r2,r2,1
   16c4c:	f800283a 	ret
   16c50:	0005883a 	mov	r2,zero
   16c54:	f800283a 	ret

00016c58 <_Unwind_SetIP>:
   16c58:	20800017 	ldw	r2,0(r4)
   16c5c:	297fffc4 	addi	r5,r5,-1
   16c60:	11400115 	stw	r5,4(r2)
   16c64:	f800283a 	ret

00016c68 <_Unwind_GetLanguageSpecificData>:
   16c68:	20800017 	ldw	r2,0(r4)
   16c6c:	10800717 	ldw	r2,28(r2)
   16c70:	f800283a 	ret

00016c74 <_Unwind_GetRegionStart>:
   16c74:	0005883a 	mov	r2,zero
   16c78:	f800283a 	ret

00016c7c <_Unwind_FindEnclosingFunction>:
   16c7c:	0005883a 	mov	r2,zero
   16c80:	f800283a 	ret

00016c84 <_Unwind_GetDataRelBase>:
   16c84:	0005883a 	mov	r2,zero
   16c88:	f800283a 	ret

00016c8c <_Unwind_GetTextRelBase>:
   16c8c:	0005883a 	mov	r2,zero
   16c90:	f800283a 	ret

00016c94 <_Unwind_SjLj_RaiseException>:
   16c94:	defff804 	addi	sp,sp,-32
   16c98:	008000b4 	movhi	r2,2
   16c9c:	dc400515 	stw	r17,20(sp)
   16ca0:	14676d17 	ldw	r17,-25164(r2)
   16ca4:	dfc00715 	stw	ra,28(sp)
   16ca8:	dc800615 	stw	r18,24(sp)
   16cac:	dc000415 	stw	r16,16(sp)
   16cb0:	dc400215 	stw	r17,8(sp)
   16cb4:	88001426 	beq	r17,zero,16d08 <_Unwind_SjLj_RaiseException+0x74>
   16cb8:	2021883a 	mov	r16,r4
   16cbc:	8805883a 	mov	r2,r17
   16cc0:	dc800204 	addi	r18,sp,8
   16cc4:	10800617 	ldw	r2,24(r2)
   16cc8:	10000b26 	beq	r2,zero,16cf8 <_Unwind_SjLj_RaiseException+0x64>
   16ccc:	81800017 	ldw	r6,0(r16)
   16cd0:	81c00117 	ldw	r7,4(r16)
   16cd4:	01400044 	movi	r5,1
   16cd8:	dc800115 	stw	r18,4(sp)
   16cdc:	dc000015 	stw	r16,0(sp)
   16ce0:	01000044 	movi	r4,1
   16ce4:	103ee83a 	callr	r2
   16ce8:	10c001a0 	cmpeqi	r3,r2,6
   16cec:	18000d1e 	bne	r3,zero,16d24 <_Unwind_SjLj_RaiseException+0x90>
   16cf0:	10800218 	cmpnei	r2,r2,8
   16cf4:	1000171e 	bne	r2,zero,16d54 <_Unwind_SjLj_RaiseException+0xc0>
   16cf8:	d8800217 	ldw	r2,8(sp)
   16cfc:	10800017 	ldw	r2,0(r2)
   16d00:	d8800215 	stw	r2,8(sp)
   16d04:	103fef1e 	bne	r2,zero,16cc4 <_Unwind_SjLj_RaiseException+0x30>
   16d08:	00800144 	movi	r2,5
   16d0c:	dfc00717 	ldw	ra,28(sp)
   16d10:	dc800617 	ldw	r18,24(sp)
   16d14:	dc400517 	ldw	r17,20(sp)
   16d18:	dc000417 	ldw	r16,16(sp)
   16d1c:	dec00804 	addi	sp,sp,32
   16d20:	f800283a 	ret
   16d24:	d8800217 	ldw	r2,8(sp)
   16d28:	80000315 	stw	zero,12(r16)
   16d2c:	d9800304 	addi	r6,sp,12
   16d30:	80800415 	stw	r2,16(r16)
   16d34:	900b883a 	mov	r5,r18
   16d38:	8009883a 	mov	r4,r16
   16d3c:	dc400215 	stw	r17,8(sp)
   16d40:	0016ab40 	call	16ab4 <_Unwind_RaiseException_Phase2>
   16d44:	10c001d8 	cmpnei	r3,r2,7
   16d48:	183ff01e 	bne	r3,zero,16d0c <_Unwind_SjLj_RaiseException+0x78>
   16d4c:	d9000217 	ldw	r4,8(sp)
   16d50:	0016b8c0 	call	16b8c <uw_install_context.constprop.0.isra.0>
   16d54:	008000c4 	movi	r2,3
   16d58:	003fec06 	br	16d0c <_Unwind_SjLj_RaiseException+0x78>

00016d5c <_Unwind_SjLj_ForcedUnwind>:
   16d5c:	008000b4 	movhi	r2,2
   16d60:	defffd04 	addi	sp,sp,-12
   16d64:	10e76d17 	ldw	r3,-25164(r2)
   16d68:	dfc00215 	stw	ra,8(sp)
   16d6c:	21400315 	stw	r5,12(r4)
   16d70:	21800415 	stw	r6,16(r4)
   16d74:	d80b883a 	mov	r5,sp
   16d78:	d9800104 	addi	r6,sp,4
   16d7c:	d8c00015 	stw	r3,0(sp)
   16d80:	00169a00 	call	169a0 <_Unwind_ForcedUnwind_Phase2>
   16d84:	10c001e0 	cmpeqi	r3,r2,7
   16d88:	1800031e 	bne	r3,zero,16d98 <_Unwind_SjLj_ForcedUnwind+0x3c>
   16d8c:	dfc00217 	ldw	ra,8(sp)
   16d90:	dec00304 	addi	sp,sp,12
   16d94:	f800283a 	ret
   16d98:	d9000017 	ldw	r4,0(sp)
   16d9c:	0016b8c0 	call	16b8c <uw_install_context.constprop.0.isra.0>

00016da0 <_Unwind_SjLj_Resume>:
   16da0:	008000b4 	movhi	r2,2
   16da4:	10e76d17 	ldw	r3,-25164(r2)
   16da8:	20800317 	ldw	r2,12(r4)
   16dac:	defffd04 	addi	sp,sp,-12
   16db0:	dfc00215 	stw	ra,8(sp)
   16db4:	d8c00015 	stw	r3,0(sp)
   16db8:	d9800104 	addi	r6,sp,4
   16dbc:	d80b883a 	mov	r5,sp
   16dc0:	1000051e 	bne	r2,zero,16dd8 <_Unwind_SjLj_Resume+0x38>
   16dc4:	0016ab40 	call	16ab4 <_Unwind_RaiseException_Phase2>
   16dc8:	108001e0 	cmpeqi	r2,r2,7
   16dcc:	10000426 	beq	r2,zero,16de0 <_Unwind_SjLj_Resume+0x40>
   16dd0:	d9000017 	ldw	r4,0(sp)
   16dd4:	0016b8c0 	call	16b8c <uw_install_context.constprop.0.isra.0>
   16dd8:	00169a00 	call	169a0 <_Unwind_ForcedUnwind_Phase2>
   16ddc:	003ffa06 	br	16dc8 <_Unwind_SjLj_Resume+0x28>
   16de0:	00170f40 	call	170f4 <abort>

00016de4 <_Unwind_SjLj_Resume_or_Rethrow>:
   16de4:	20800317 	ldw	r2,12(r4)
   16de8:	1000011e 	bne	r2,zero,16df0 <_Unwind_SjLj_Resume_or_Rethrow+0xc>
   16dec:	0016c941 	jmpi	16c94 <_Unwind_SjLj_RaiseException>
   16df0:	008000b4 	movhi	r2,2
   16df4:	10a76d17 	ldw	r2,-25164(r2)
   16df8:	defffd04 	addi	sp,sp,-12
   16dfc:	d9800104 	addi	r6,sp,4
   16e00:	d80b883a 	mov	r5,sp
   16e04:	dfc00215 	stw	ra,8(sp)
   16e08:	d8800015 	stw	r2,0(sp)
   16e0c:	00169a00 	call	169a0 <_Unwind_ForcedUnwind_Phase2>
   16e10:	108001e0 	cmpeqi	r2,r2,7
   16e14:	10000226 	beq	r2,zero,16e20 <_Unwind_SjLj_Resume_or_Rethrow+0x3c>
   16e18:	d9000017 	ldw	r4,0(sp)
   16e1c:	0016b8c0 	call	16b8c <uw_install_context.constprop.0.isra.0>
   16e20:	00170f40 	call	170f4 <abort>

00016e24 <_Unwind_DeleteException>:
   16e24:	20800217 	ldw	r2,8(r4)
   16e28:	200b883a 	mov	r5,r4
   16e2c:	10000226 	beq	r2,zero,16e38 <_Unwind_DeleteException+0x14>
   16e30:	01000044 	movi	r4,1
   16e34:	1000683a 	jmp	r2
   16e38:	f800283a 	ret

00016e3c <_Unwind_Backtrace>:
   16e3c:	008000b4 	movhi	r2,2
   16e40:	10a76d17 	ldw	r2,-25164(r2)
   16e44:	defffb04 	addi	sp,sp,-20
   16e48:	dc800315 	stw	r18,12(sp)
   16e4c:	dc400215 	stw	r17,8(sp)
   16e50:	dc000115 	stw	r16,4(sp)
   16e54:	dfc00415 	stw	ra,16(sp)
   16e58:	d8800015 	stw	r2,0(sp)
   16e5c:	2021883a 	mov	r16,r4
   16e60:	2823883a 	mov	r17,r5
   16e64:	d825883a 	mov	r18,sp
   16e68:	10000826 	beq	r2,zero,16e8c <_Unwind_Backtrace+0x50>
   16e6c:	880b883a 	mov	r5,r17
   16e70:	9009883a 	mov	r4,r18
   16e74:	803ee83a 	callr	r16
   16e78:	1000101e 	bne	r2,zero,16ebc <_Unwind_Backtrace+0x80>
   16e7c:	d8800017 	ldw	r2,0(sp)
   16e80:	10800017 	ldw	r2,0(r2)
   16e84:	d8800015 	stw	r2,0(sp)
   16e88:	103ff81e 	bne	r2,zero,16e6c <_Unwind_Backtrace+0x30>
   16e8c:	880b883a 	mov	r5,r17
   16e90:	9009883a 	mov	r4,r18
   16e94:	803ee83a 	callr	r16
   16e98:	00c00144 	movi	r3,5
   16e9c:	1000071e 	bne	r2,zero,16ebc <_Unwind_Backtrace+0x80>
   16ea0:	1805883a 	mov	r2,r3
   16ea4:	dfc00417 	ldw	ra,16(sp)
   16ea8:	dc800317 	ldw	r18,12(sp)
   16eac:	dc400217 	ldw	r17,8(sp)
   16eb0:	dc000117 	ldw	r16,4(sp)
   16eb4:	dec00504 	addi	sp,sp,20
   16eb8:	f800283a 	ret
   16ebc:	00c000c4 	movi	r3,3
   16ec0:	003ff706 	br	16ea0 <_Unwind_Backtrace+0x64>

00016ec4 <__clzsi2>:
   16ec4:	00bfffd4 	movui	r2,65535
   16ec8:	11000436 	bltu	r2,r4,16edc <__clzsi2+0x18>
   16ecc:	20804030 	cmpltui	r2,r4,256
   16ed0:	10000e26 	beq	r2,zero,16f0c <__clzsi2+0x48>
   16ed4:	01400804 	movi	r5,32
   16ed8:	00000406 	br	16eec <__clzsi2+0x28>
   16edc:	00804034 	movhi	r2,256
   16ee0:	20800736 	bltu	r4,r2,16f00 <__clzsi2+0x3c>
   16ee4:	2008d63a 	srli	r4,r4,24
   16ee8:	01400204 	movi	r5,8
   16eec:	00c000b4 	movhi	r3,2
   16ef0:	20c7883a 	add	r3,r4,r3
   16ef4:	18a45303 	ldbu	r2,-28340(r3)
   16ef8:	2885c83a 	sub	r2,r5,r2
   16efc:	f800283a 	ret
   16f00:	2008d43a 	srli	r4,r4,16
   16f04:	01400404 	movi	r5,16
   16f08:	003ff806 	br	16eec <__clzsi2+0x28>
   16f0c:	2008d23a 	srli	r4,r4,8
   16f10:	01400604 	movi	r5,24
   16f14:	003ff506 	br	16eec <__clzsi2+0x28>

00016f18 <__divsi3>:
   16f18:	20001a16 	blt	r4,zero,16f84 <__divsi3+0x6c>
   16f1c:	000f883a 	mov	r7,zero
   16f20:	2800020e 	bge	r5,zero,16f2c <__divsi3+0x14>
   16f24:	014bc83a 	sub	r5,zero,r5
   16f28:	39c0005c 	xori	r7,r7,1
   16f2c:	200d883a 	mov	r6,r4
   16f30:	00c00044 	movi	r3,1
   16f34:	2900092e 	bgeu	r5,r4,16f5c <__divsi3+0x44>
   16f38:	00800804 	movi	r2,32
   16f3c:	00c00044 	movi	r3,1
   16f40:	00000106 	br	16f48 <__divsi3+0x30>
   16f44:	10001226 	beq	r2,zero,16f90 <__divsi3+0x78>
   16f48:	294b883a 	add	r5,r5,r5
   16f4c:	10bfffc4 	addi	r2,r2,-1
   16f50:	18c7883a 	add	r3,r3,r3
   16f54:	293ffb36 	bltu	r5,r4,16f44 <__divsi3+0x2c>
   16f58:	18000d26 	beq	r3,zero,16f90 <__divsi3+0x78>
   16f5c:	0005883a 	mov	r2,zero
   16f60:	31400236 	bltu	r6,r5,16f6c <__divsi3+0x54>
   16f64:	314dc83a 	sub	r6,r6,r5
   16f68:	10c4b03a 	or	r2,r2,r3
   16f6c:	1806d07a 	srli	r3,r3,1
   16f70:	280ad07a 	srli	r5,r5,1
   16f74:	183ffa1e 	bne	r3,zero,16f60 <__divsi3+0x48>
   16f78:	38000126 	beq	r7,zero,16f80 <__divsi3+0x68>
   16f7c:	0085c83a 	sub	r2,zero,r2
   16f80:	f800283a 	ret
   16f84:	0109c83a 	sub	r4,zero,r4
   16f88:	01c00044 	movi	r7,1
   16f8c:	003fe406 	br	16f20 <__divsi3+0x8>
   16f90:	0005883a 	mov	r2,zero
   16f94:	003ff806 	br	16f78 <__divsi3+0x60>

00016f98 <__modsi3>:
   16f98:	20001916 	blt	r4,zero,17000 <__modsi3+0x68>
   16f9c:	000f883a 	mov	r7,zero
   16fa0:	2005883a 	mov	r2,r4
   16fa4:	2800010e 	bge	r5,zero,16fac <__modsi3+0x14>
   16fa8:	014bc83a 	sub	r5,zero,r5
   16fac:	00c00044 	movi	r3,1
   16fb0:	2900092e 	bgeu	r5,r4,16fd8 <__modsi3+0x40>
   16fb4:	01800804 	movi	r6,32
   16fb8:	00c00044 	movi	r3,1
   16fbc:	00000106 	br	16fc4 <__modsi3+0x2c>
   16fc0:	30000d26 	beq	r6,zero,16ff8 <__modsi3+0x60>
   16fc4:	294b883a 	add	r5,r5,r5
   16fc8:	31bfffc4 	addi	r6,r6,-1
   16fcc:	18c7883a 	add	r3,r3,r3
   16fd0:	293ffb36 	bltu	r5,r4,16fc0 <__modsi3+0x28>
   16fd4:	18000826 	beq	r3,zero,16ff8 <__modsi3+0x60>
   16fd8:	1806d07a 	srli	r3,r3,1
   16fdc:	11400136 	bltu	r2,r5,16fe4 <__modsi3+0x4c>
   16fe0:	1145c83a 	sub	r2,r2,r5
   16fe4:	280ad07a 	srli	r5,r5,1
   16fe8:	183ffb1e 	bne	r3,zero,16fd8 <__modsi3+0x40>
   16fec:	38000126 	beq	r7,zero,16ff4 <__modsi3+0x5c>
   16ff0:	0085c83a 	sub	r2,zero,r2
   16ff4:	f800283a 	ret
   16ff8:	2005883a 	mov	r2,r4
   16ffc:	003ffb06 	br	16fec <__modsi3+0x54>
   17000:	0109c83a 	sub	r4,zero,r4
   17004:	01c00044 	movi	r7,1
   17008:	003fe506 	br	16fa0 <__modsi3+0x8>

0001700c <__udivsi3>:
   1700c:	200d883a 	mov	r6,r4
   17010:	2900152e 	bgeu	r5,r4,17068 <__udivsi3+0x5c>
   17014:	28001416 	blt	r5,zero,17068 <__udivsi3+0x5c>
   17018:	00800804 	movi	r2,32
   1701c:	00c00044 	movi	r3,1
   17020:	00000206 	br	1702c <__udivsi3+0x20>
   17024:	10000e26 	beq	r2,zero,17060 <__udivsi3+0x54>
   17028:	28000516 	blt	r5,zero,17040 <__udivsi3+0x34>
   1702c:	294b883a 	add	r5,r5,r5
   17030:	10bfffc4 	addi	r2,r2,-1
   17034:	18c7883a 	add	r3,r3,r3
   17038:	293ffa36 	bltu	r5,r4,17024 <__udivsi3+0x18>
   1703c:	18000826 	beq	r3,zero,17060 <__udivsi3+0x54>
   17040:	0005883a 	mov	r2,zero
   17044:	31400236 	bltu	r6,r5,17050 <__udivsi3+0x44>
   17048:	314dc83a 	sub	r6,r6,r5
   1704c:	10c4b03a 	or	r2,r2,r3
   17050:	1806d07a 	srli	r3,r3,1
   17054:	280ad07a 	srli	r5,r5,1
   17058:	183ffa1e 	bne	r3,zero,17044 <__udivsi3+0x38>
   1705c:	f800283a 	ret
   17060:	0005883a 	mov	r2,zero
   17064:	f800283a 	ret
   17068:	00c00044 	movi	r3,1
   1706c:	003ff406 	br	17040 <__udivsi3+0x34>

00017070 <__umodsi3>:
   17070:	2005883a 	mov	r2,r4
   17074:	2900132e 	bgeu	r5,r4,170c4 <__umodsi3+0x54>
   17078:	28001216 	blt	r5,zero,170c4 <__umodsi3+0x54>
   1707c:	01800804 	movi	r6,32
   17080:	00c00044 	movi	r3,1
   17084:	00000206 	br	17090 <__umodsi3+0x20>
   17088:	30000c26 	beq	r6,zero,170bc <__umodsi3+0x4c>
   1708c:	28000516 	blt	r5,zero,170a4 <__umodsi3+0x34>
   17090:	294b883a 	add	r5,r5,r5
   17094:	31bfffc4 	addi	r6,r6,-1
   17098:	18c7883a 	add	r3,r3,r3
   1709c:	293ffa36 	bltu	r5,r4,17088 <__umodsi3+0x18>
   170a0:	18000626 	beq	r3,zero,170bc <__umodsi3+0x4c>
   170a4:	1806d07a 	srli	r3,r3,1
   170a8:	11400136 	bltu	r2,r5,170b0 <__umodsi3+0x40>
   170ac:	1145c83a 	sub	r2,r2,r5
   170b0:	280ad07a 	srli	r5,r5,1
   170b4:	183ffb1e 	bne	r3,zero,170a4 <__umodsi3+0x34>
   170b8:	f800283a 	ret
   170bc:	2005883a 	mov	r2,r4
   170c0:	f800283a 	ret
   170c4:	00c00044 	movi	r3,1
   170c8:	003ff606 	br	170a4 <__umodsi3+0x34>

000170cc <__mulsi3>:
   170cc:	0005883a 	mov	r2,zero
   170d0:	20000726 	beq	r4,zero,170f0 <__mulsi3+0x24>
   170d4:	20c0004c 	andi	r3,r4,1
   170d8:	2008d07a 	srli	r4,r4,1
   170dc:	18000126 	beq	r3,zero,170e4 <__mulsi3+0x18>
   170e0:	1145883a 	add	r2,r2,r5
   170e4:	294b883a 	add	r5,r5,r5
   170e8:	203ffa1e 	bne	r4,zero,170d4 <__mulsi3+0x8>
   170ec:	f800283a 	ret
   170f0:	f800283a 	ret

000170f4 <abort>:
#include <unistd.h>
#include <signal.h>

void
abort (void)
{
   170f4:	deffff04 	addi	sp,sp,-4
  write (2, "Abort called\n", sizeof ("Abort called\n")-1);
#endif

  while (1)
    {
      raise (SIGABRT);
   170f8:	01000184 	movi	r4,6
{
   170fc:	dfc00015 	stw	ra,0(sp)
      raise (SIGABRT);
   17100:	00175f40 	call	175f4 <raise>
      _exit (1);
   17104:	01000044 	movi	r4,1
   17108:	00176b00 	call	176b0 <_exit>

0001710c <malloc>:
#ifndef _REENT_ONLY

void *
malloc (size_t nbytes)		/* get a block */
{
  return _malloc_r (_REENT, nbytes);
   1710c:	200b883a 	mov	r5,r4
   17110:	d1209e17 	ldw	r4,-32136(gp)
   17114:	001723c1 	jmpi	1723c <_malloc_r>

00017118 <free>:
}

void
free (void *aptr)
{
  _free_r (_REENT, aptr);
   17118:	200b883a 	mov	r5,r4
   1711c:	d1209e17 	ldw	r4,-32136(gp)
   17120:	00171441 	jmpi	17144 <_free_r>

00017124 <memset>:
void *
__inhibit_loop_to_libcall
memset (void *m,
	int c,
	size_t n)
{
   17124:	2005883a 	mov	r2,r4
      s = (char*)aligned_addr;
    }

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (n--)
   17128:	218d883a 	add	r6,r4,r6
  char *s = (char *) m;
   1712c:	2007883a 	mov	r3,r4
  while (n--)
   17130:	1980011e 	bne	r3,r6,17138 <memset+0x14>
    *s++ = (char) c;

  return m;
}
   17134:	f800283a 	ret
    *s++ = (char) c;
   17138:	18c00044 	addi	r3,r3,1
   1713c:	197fffc5 	stb	r5,-1(r3)
   17140:	003ffb06 	br	17130 <memset+0xc>

00017144 <_free_r>:
void nano_free (RARG void * free_p)
{
    chunk * p_to_free;
    chunk * p, * q;

    if (free_p == NULL) return;
   17144:	28003c26 	beq	r5,zero,17238 <_free_r+0xf4>
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   17148:	28bfff17 	ldw	r2,-4(r5)
{
   1714c:	defffd04 	addi	sp,sp,-12
   17150:	dc000115 	stw	r16,4(sp)
   17154:	dfc00215 	stw	ra,8(sp)
    chunk * c = (chunk *)((char *)ptr - CHUNK_OFFSET);
   17158:	2c3fff04 	addi	r16,r5,-4
    if (c->size < 0) c = (chunk *)((char *)c + c->size);
   1715c:	1000010e 	bge	r2,zero,17164 <_free_r+0x20>
   17160:	80a1883a 	add	r16,r16,r2

    p_to_free = get_chunk_from_ptr(free_p);

    MALLOC_LOCK;
   17164:	d9000015 	stw	r4,0(sp)
   17168:	00179980 	call	17998 <__malloc_lock>
    if (free_list == NULL)
   1716c:	d0a21917 	ldw	r2,-30620(gp)
   17170:	d9000017 	ldw	r4,0(sp)
   17174:	1000061e 	bne	r2,zero,17190 <_free_r+0x4c>
    {
        /* Set first free list element */
        p_to_free->next = free_list;
   17178:	80000115 	stw	zero,4(r16)
        else
        {
            /* Insert before current free_list */
            p_to_free->next = free_list;
        }
        free_list = p_to_free;
   1717c:	d4221915 	stw	r16,-30620(gp)
         * a fragment. */
        p_to_free->next = q;
        p->next = p_to_free;
    }
    MALLOC_UNLOCK;
}
   17180:	dfc00217 	ldw	ra,8(sp)
   17184:	dc000117 	ldw	r16,4(sp)
   17188:	dec00304 	addi	sp,sp,12
    MALLOC_UNLOCK;
   1718c:	001799c1 	jmpi	1799c <__malloc_unlock>
    if (p_to_free < free_list)
   17190:	8080092e 	bgeu	r16,r2,171b8 <_free_r+0x74>
        if ((char *)p_to_free + p_to_free->size == (char *)free_list)
   17194:	81400017 	ldw	r5,0(r16)
   17198:	8147883a 	add	r3,r16,r5
   1719c:	10c0041e 	bne	r2,r3,171b0 <_free_r+0x6c>
            p_to_free->size += free_list->size;
   171a0:	10c00017 	ldw	r3,0(r2)
            p_to_free->next = free_list->next;
   171a4:	10800117 	ldw	r2,4(r2)
            p_to_free->size += free_list->size;
   171a8:	1947883a 	add	r3,r3,r5
   171ac:	80c00015 	stw	r3,0(r16)
            p_to_free->next = free_list;
   171b0:	80800115 	stw	r2,4(r16)
   171b4:	003ff106 	br	1717c <_free_r+0x38>
        q = q->next;
   171b8:	1007883a 	mov	r3,r2
   171bc:	10800117 	ldw	r2,4(r2)
    } while (q && q <= p_to_free);
   171c0:	10000126 	beq	r2,zero,171c8 <_free_r+0x84>
   171c4:	80bffc2e 	bgeu	r16,r2,171b8 <_free_r+0x74>
    if ((char *)p + p->size == (char *)p_to_free)
   171c8:	19400017 	ldw	r5,0(r3)
   171cc:	194d883a 	add	r6,r3,r5
   171d0:	34000b1e 	bne	r6,r16,17200 <_free_r+0xbc>
        p->size += p_to_free->size;
   171d4:	81800017 	ldw	r6,0(r16)
   171d8:	298b883a 	add	r5,r5,r6
   171dc:	19400015 	stw	r5,0(r3)
        if ((char *)p + p->size == (char *) q)
   171e0:	194d883a 	add	r6,r3,r5
   171e4:	11bfe61e 	bne	r2,r6,17180 <_free_r+0x3c>
            p->size += q->size;
   171e8:	11800017 	ldw	r6,0(r2)
            p->next = q->next;
   171ec:	10800117 	ldw	r2,4(r2)
            p->size += q->size;
   171f0:	314b883a 	add	r5,r6,r5
   171f4:	19400015 	stw	r5,0(r3)
            p->next = q->next;
   171f8:	18800115 	stw	r2,4(r3)
   171fc:	003fe006 	br	17180 <_free_r+0x3c>
    else if ((char *)p + p->size > (char *)p_to_free)
   17200:	8180032e 	bgeu	r16,r6,17210 <_free_r+0xcc>
        RERRNO = ENOMEM;
   17204:	00800304 	movi	r2,12
   17208:	20800015 	stw	r2,0(r4)
        MALLOC_UNLOCK;
   1720c:	003fdc06 	br	17180 <_free_r+0x3c>
    else if ((char *)p_to_free + p_to_free->size == (char *) q)
   17210:	81800017 	ldw	r6,0(r16)
   17214:	818b883a 	add	r5,r16,r6
   17218:	1140041e 	bne	r2,r5,1722c <_free_r+0xe8>
        p_to_free->size += q->size;
   1721c:	11400017 	ldw	r5,0(r2)
        p_to_free->next = q->next;
   17220:	10800117 	ldw	r2,4(r2)
        p_to_free->size += q->size;
   17224:	298b883a 	add	r5,r5,r6
   17228:	81400015 	stw	r5,0(r16)
        p_to_free->next = q;
   1722c:	80800115 	stw	r2,4(r16)
        p->next = p_to_free;
   17230:	1c000115 	stw	r16,4(r3)
   17234:	003fd206 	br	17180 <_free_r+0x3c>
   17238:	f800283a 	ret

0001723c <_malloc_r>:
{
   1723c:	defffc04 	addi	sp,sp,-16
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   17240:	00bfff04 	movi	r2,-4
{
   17244:	dc400115 	stw	r17,4(sp)
    alloc_size = ALIGN_TO(s, CHUNK_ALIGN); /* size of aligned data load */
   17248:	2c4000c4 	addi	r17,r5,3
   1724c:	88a2703a 	and	r17,r17,r2
    alloc_size += CHUNK_OFFSET; /* size of chunk head */
   17250:	8c400204 	addi	r17,r17,8
{
   17254:	dc800215 	stw	r18,8(sp)
   17258:	dfc00315 	stw	ra,12(sp)
   1725c:	dc000015 	stw	r16,0(sp)
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   17260:	88800328 	cmpgeui	r2,r17,12
{
   17264:	2025883a 	mov	r18,r4
    alloc_size = MAX(alloc_size, MALLOC_MINCHUNK);
   17268:	1000171e 	bne	r2,zero,172c8 <_malloc_r+0x8c>
   1726c:	04400304 	movi	r17,12
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   17270:	89401636 	bltu	r17,r5,172cc <_malloc_r+0x90>
    MALLOC_LOCK;
   17274:	9009883a 	mov	r4,r18
   17278:	00179980 	call	17998 <__malloc_lock>
    p = free_list;
   1727c:	d0e21917 	ldw	r3,-30620(gp)
    r = p;
   17280:	1821883a 	mov	r16,r3
    while (r)
   17284:	80001a1e 	bne	r16,zero,172f0 <_malloc_r+0xb4>
    if (sbrk_start == NULL) sbrk_start = _SBRK_R(RCALL 0);
   17288:	d0a21817 	ldw	r2,-30624(gp)
   1728c:	1000041e 	bne	r2,zero,172a0 <_malloc_r+0x64>
   17290:	000b883a 	mov	r5,zero
   17294:	9009883a 	mov	r4,r18
   17298:	001738c0 	call	1738c <_sbrk_r>
   1729c:	d0a21815 	stw	r2,-30624(gp)
    p = _SBRK_R(RCALL s);
   172a0:	880b883a 	mov	r5,r17
   172a4:	9009883a 	mov	r4,r18
   172a8:	001738c0 	call	1738c <_sbrk_r>
    if (p == (void *)-1)
   172ac:	10ffffd8 	cmpnei	r3,r2,-1
   172b0:	18002c1e 	bne	r3,zero,17364 <_malloc_r+0x128>
            RERRNO = ENOMEM;
   172b4:	00800304 	movi	r2,12
   172b8:	90800015 	stw	r2,0(r18)
            MALLOC_UNLOCK;
   172bc:	9009883a 	mov	r4,r18
   172c0:	001799c0 	call	1799c <__malloc_unlock>
   172c4:	00000306 	br	172d4 <_malloc_r+0x98>
    if (alloc_size >= MAX_ALLOC_SIZE || alloc_size < s)
   172c8:	883fe90e 	bge	r17,zero,17270 <_malloc_r+0x34>
        RERRNO = ENOMEM;
   172cc:	00800304 	movi	r2,12
   172d0:	90800015 	stw	r2,0(r18)
            return NULL;
   172d4:	0005883a 	mov	r2,zero
}
   172d8:	dfc00317 	ldw	ra,12(sp)
   172dc:	dc800217 	ldw	r18,8(sp)
   172e0:	dc400117 	ldw	r17,4(sp)
   172e4:	dc000017 	ldw	r16,0(sp)
   172e8:	dec00404 	addi	sp,sp,16
   172ec:	f800283a 	ret
        int rem = r->size - alloc_size;
   172f0:	80800017 	ldw	r2,0(r16)
   172f4:	1445c83a 	sub	r2,r2,r17
        if (rem >= 0)
   172f8:	10001716 	blt	r2,zero,17358 <_malloc_r+0x11c>
            if (rem >= MALLOC_MINCHUNK)
   172fc:	11000330 	cmpltui	r4,r2,12
   17300:	2000041e 	bne	r4,zero,17314 <_malloc_r+0xd8>
                r->size = rem;
   17304:	80800015 	stw	r2,0(r16)
                r = (chunk *)((char *)r + rem);
   17308:	80a1883a 	add	r16,r16,r2
        r->size = alloc_size;
   1730c:	84400015 	stw	r17,0(r16)
   17310:	00000306 	br	17320 <_malloc_r+0xe4>
                free_list = r->next;
   17314:	80800117 	ldw	r2,4(r16)
            else if (p == r)
   17318:	1c000d1e 	bne	r3,r16,17350 <_malloc_r+0x114>
                free_list = r->next;
   1731c:	d0a21915 	stw	r2,-30620(gp)
    MALLOC_UNLOCK;
   17320:	9009883a 	mov	r4,r18
   17324:	001799c0 	call	1799c <__malloc_unlock>
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   17328:	013ffe04 	movi	r4,-8
   1732c:	808002c4 	addi	r2,r16,11
    ptr = (char *)r + CHUNK_OFFSET;
   17330:	80c00104 	addi	r3,r16,4
    align_ptr = (char *)ALIGN_TO((unsigned long)ptr, MALLOC_ALIGN);
   17334:	1104703a 	and	r2,r2,r4
    offset = align_ptr - ptr;
   17338:	10c9c83a 	sub	r4,r2,r3
    if (offset)
   1733c:	10ffe626 	beq	r2,r3,172d8 <_malloc_r+0x9c>
        *(long *)((char *)r + offset) = -offset;
   17340:	8121883a 	add	r16,r16,r4
   17344:	1887c83a 	sub	r3,r3,r2
   17348:	80c00015 	stw	r3,0(r16)
   1734c:	003fe206 	br	172d8 <_malloc_r+0x9c>
                p->next = r->next;
   17350:	18800115 	stw	r2,4(r3)
   17354:	003ff206 	br	17320 <_malloc_r+0xe4>
        r=r->next;
   17358:	8007883a 	mov	r3,r16
   1735c:	84000117 	ldw	r16,4(r16)
   17360:	003fc806 	br	17284 <_malloc_r+0x48>
    align_p = (char*)ALIGN_TO((unsigned long)p, CHUNK_ALIGN);
   17364:	140000c4 	addi	r16,r2,3
   17368:	00ffff04 	movi	r3,-4
   1736c:	80e0703a 	and	r16,r16,r3
    if (align_p != p)
   17370:	143fe626 	beq	r2,r16,1730c <_malloc_r+0xd0>
        p = _SBRK_R(RCALL align_p - p);
   17374:	808bc83a 	sub	r5,r16,r2
   17378:	9009883a 	mov	r4,r18
   1737c:	001738c0 	call	1738c <_sbrk_r>
        if (p == (void *)-1)
   17380:	10bfffe0 	cmpeqi	r2,r2,-1
   17384:	103fe126 	beq	r2,zero,1730c <_malloc_r+0xd0>
   17388:	003fca06 	br	172b4 <_malloc_r+0x78>

0001738c <_sbrk_r>:
*/

void *
_sbrk_r (struct _reent *ptr,
     ptrdiff_t incr)
{
   1738c:	defffe04 	addi	sp,sp,-8
   17390:	dc000015 	stw	r16,0(sp)
   17394:	2021883a 	mov	r16,r4
   17398:	2809883a 	mov	r4,r5
   1739c:	dfc00115 	stw	ra,4(sp)
  char *ret;
  void *_sbrk(ptrdiff_t);

  errno = 0;
   173a0:	d0221a15 	stw	zero,-30616(gp)
  if ((ret = (char *)(_sbrk (incr))) == (void *) -1 && errno != 0)
   173a4:	00179a00 	call	179a0 <sbrk>
   173a8:	10ffffd8 	cmpnei	r3,r2,-1
   173ac:	1800031e 	bne	r3,zero,173bc <_sbrk_r+0x30>
   173b0:	d0e21a17 	ldw	r3,-30616(gp)
   173b4:	18000126 	beq	r3,zero,173bc <_sbrk_r+0x30>
    ptr->_errno = errno;
   173b8:	80c00015 	stw	r3,0(r16)
  return ret;
}
   173bc:	dfc00117 	ldw	ra,4(sp)
   173c0:	dc000017 	ldw	r16,0(sp)
   173c4:	dec00204 	addi	sp,sp,8
   173c8:	f800283a 	ret

000173cc <_init_signal_r>:
int
_init_signal_r (struct _reent *ptr)
{
  int i;

  if (ptr->_sig_func == NULL)
   173cc:	20800c17 	ldw	r2,48(r4)
   173d0:	1000131e 	bne	r2,zero,17420 <_init_signal_r+0x54>
{
   173d4:	defffe04 	addi	sp,sp,-8
    {
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   173d8:	01402004 	movi	r5,128
{
   173dc:	dc000015 	stw	r16,0(sp)
   173e0:	dfc00115 	stw	ra,4(sp)
   173e4:	2021883a 	mov	r16,r4
      ptr->_sig_func = (_sig_func_ptr *)_malloc_r (ptr, sizeof (_sig_func_ptr) * NSIG);
   173e8:	001723c0 	call	1723c <_malloc_r>
   173ec:	80800c15 	stw	r2,48(r16)
   173f0:	1009883a 	mov	r4,r2
      if (ptr->_sig_func == NULL)
   173f4:	10000826 	beq	r2,zero,17418 <_init_signal_r+0x4c>
	return -1;

      for (i = 0; i < NSIG; i++)
	ptr->_sig_func[i] = SIG_DFL;
   173f8:	01802004 	movi	r6,128
   173fc:	000b883a 	mov	r5,zero
   17400:	00171240 	call	17124 <memset>
    }

  return 0;
   17404:	0005883a 	mov	r2,zero
}
   17408:	dfc00117 	ldw	ra,4(sp)
   1740c:	dc000017 	ldw	r16,0(sp)
   17410:	dec00204 	addi	sp,sp,8
   17414:	f800283a 	ret
	return -1;
   17418:	00bfffc4 	movi	r2,-1
   1741c:	003ffa06 	br	17408 <_init_signal_r+0x3c>
  return 0;
   17420:	0005883a 	mov	r2,zero
}
   17424:	f800283a 	ret

00017428 <_signal_r>:

_sig_func_ptr
_signal_r (struct _reent *ptr,
	int sig,
	_sig_func_ptr func)
{
   17428:	defffc04 	addi	sp,sp,-16
   1742c:	dc400115 	stw	r17,4(sp)
   17430:	dfc00315 	stw	ra,12(sp)
   17434:	dc800215 	stw	r18,8(sp)
   17438:	dc000015 	stw	r16,0(sp)
  _sig_func_ptr old_func;

  if (sig < 0 || sig >= NSIG)
   1743c:	28800830 	cmpltui	r2,r5,32
{
   17440:	2023883a 	mov	r17,r4
  if (sig < 0 || sig >= NSIG)
   17444:	1000041e 	bne	r2,zero,17458 <_signal_r+0x30>
    {
      ptr->_errno = EINVAL;
   17448:	00800584 	movi	r2,22
   1744c:	20800015 	stw	r2,0(r4)
      return SIG_ERR;
    }

  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
    return SIG_ERR;
   17450:	00bfffc4 	movi	r2,-1
   17454:	00000906 	br	1747c <_signal_r+0x54>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17458:	20800c17 	ldw	r2,48(r4)
   1745c:	2821883a 	mov	r16,r5
   17460:	3025883a 	mov	r18,r6
   17464:	10000b26 	beq	r2,zero,17494 <_signal_r+0x6c>
  
  old_func = ptr->_sig_func[sig];
   17468:	89400c17 	ldw	r5,48(r17)
   1746c:	802090ba 	slli	r16,r16,2
   17470:	2c21883a 	add	r16,r5,r16
   17474:	80800017 	ldw	r2,0(r16)
  ptr->_sig_func[sig] = func;
   17478:	84800015 	stw	r18,0(r16)

  return old_func;
}
   1747c:	dfc00317 	ldw	ra,12(sp)
   17480:	dc800217 	ldw	r18,8(sp)
   17484:	dc400117 	ldw	r17,4(sp)
   17488:	dc000017 	ldw	r16,0(sp)
   1748c:	dec00404 	addi	sp,sp,16
   17490:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17494:	00173cc0 	call	173cc <_init_signal_r>
   17498:	103ff326 	beq	r2,zero,17468 <_signal_r+0x40>
   1749c:	003fec06 	br	17450 <_signal_r+0x28>

000174a0 <_raise_r>:

int 
_raise_r (struct _reent *ptr,
     int sig)
{
   174a0:	defffd04 	addi	sp,sp,-12
   174a4:	dc000015 	stw	r16,0(sp)
   174a8:	dfc00215 	stw	ra,8(sp)
   174ac:	dc400115 	stw	r17,4(sp)
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   174b0:	28800830 	cmpltui	r2,r5,32
{
   174b4:	2021883a 	mov	r16,r4
  if (sig < 0 || sig >= NSIG)
   174b8:	1000081e 	bne	r2,zero,174dc <_raise_r+0x3c>
    {
      ptr->_errno = EINVAL;
   174bc:	00800584 	movi	r2,22
   174c0:	20800015 	stw	r2,0(r4)
      return -1;
   174c4:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   174c8:	dfc00217 	ldw	ra,8(sp)
   174cc:	dc400117 	ldw	r17,4(sp)
   174d0:	dc000017 	ldw	r16,0(sp)
   174d4:	dec00304 	addi	sp,sp,12
   174d8:	f800283a 	ret
  if (ptr->_sig_func == NULL)
   174dc:	20800c17 	ldw	r2,48(r4)
   174e0:	2823883a 	mov	r17,r5
   174e4:	10000426 	beq	r2,zero,174f8 <_raise_r+0x58>
    func = ptr->_sig_func[sig];
   174e8:	280690ba 	slli	r3,r5,2
   174ec:	10c5883a 	add	r2,r2,r3
   174f0:	10c00017 	ldw	r3,0(r2)
  if (func == SIG_DFL)
   174f4:	18000a1e 	bne	r3,zero,17520 <_raise_r+0x80>
    return _kill_r (ptr, _getpid_r (ptr), sig);
   174f8:	8009883a 	mov	r4,r16
   174fc:	00176680 	call	17668 <_getpid_r>
   17500:	880d883a 	mov	r6,r17
   17504:	100b883a 	mov	r5,r2
   17508:	8009883a 	mov	r4,r16
}
   1750c:	dfc00217 	ldw	ra,8(sp)
   17510:	dc400117 	ldw	r17,4(sp)
   17514:	dc000017 	ldw	r16,0(sp)
   17518:	dec00304 	addi	sp,sp,12
    return _kill_r (ptr, _getpid_r (ptr), sig);
   1751c:	00176241 	jmpi	17624 <_kill_r>
  else if (func == SIG_IGN)
   17520:	19000060 	cmpeqi	r4,r3,1
   17524:	2000091e 	bne	r4,zero,1754c <_raise_r+0xac>
  else if (func == SIG_ERR)
   17528:	193fffd8 	cmpnei	r4,r3,-1
   1752c:	2000041e 	bne	r4,zero,17540 <_raise_r+0xa0>
      ptr->_errno = EINVAL;
   17530:	00800584 	movi	r2,22
   17534:	80800015 	stw	r2,0(r16)
      return 1;
   17538:	00800044 	movi	r2,1
   1753c:	003fe206 	br	174c8 <_raise_r+0x28>
      ptr->_sig_func[sig] = SIG_DFL;
   17540:	10000015 	stw	zero,0(r2)
      func (sig);
   17544:	2809883a 	mov	r4,r5
   17548:	183ee83a 	callr	r3
    return 0;
   1754c:	0005883a 	mov	r2,zero
   17550:	003fdd06 	br	174c8 <_raise_r+0x28>

00017554 <__sigtramp_r>:
__sigtramp_r (struct _reent *ptr,
     int sig)
{
  _sig_func_ptr func;

  if (sig < 0 || sig >= NSIG)
   17554:	28800830 	cmpltui	r2,r5,32
   17558:	1000021e 	bne	r2,zero,17564 <__sigtramp_r+0x10>
    {
      return -1;
   1755c:	00bfffc4 	movi	r2,-1
    {
      ptr->_sig_func[sig] = SIG_DFL;
      func (sig);
      return 0;
    }
}
   17560:	f800283a 	ret
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17564:	20800c17 	ldw	r2,48(r4)
{
   17568:	defffd04 	addi	sp,sp,-12
   1756c:	dc400115 	stw	r17,4(sp)
   17570:	dc000015 	stw	r16,0(sp)
   17574:	dfc00215 	stw	ra,8(sp)
   17578:	2023883a 	mov	r17,r4
   1757c:	2821883a 	mov	r16,r5
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   17580:	10000726 	beq	r2,zero,175a0 <__sigtramp_r+0x4c>
  func = ptr->_sig_func[sig];
   17584:	88800c17 	ldw	r2,48(r17)
   17588:	800690ba 	slli	r3,r16,2
   1758c:	10c7883a 	add	r3,r2,r3
   17590:	18800017 	ldw	r2,0(r3)
  if (func == SIG_DFL)
   17594:	10000a1e 	bne	r2,zero,175c0 <__sigtramp_r+0x6c>
    return 1;
   17598:	00800044 	movi	r2,1
   1759c:	00000306 	br	175ac <__sigtramp_r+0x58>
  if (ptr->_sig_func == NULL && _init_signal_r (ptr) != 0)
   175a0:	00173cc0 	call	173cc <_init_signal_r>
   175a4:	103ff726 	beq	r2,zero,17584 <__sigtramp_r+0x30>
      return -1;
   175a8:	00bfffc4 	movi	r2,-1
}
   175ac:	dfc00217 	ldw	ra,8(sp)
   175b0:	dc400117 	ldw	r17,4(sp)
   175b4:	dc000017 	ldw	r16,0(sp)
   175b8:	dec00304 	addi	sp,sp,12
   175bc:	f800283a 	ret
  else if (func == SIG_ERR)
   175c0:	113fffe0 	cmpeqi	r4,r2,-1
   175c4:	2000071e 	bne	r4,zero,175e4 <__sigtramp_r+0x90>
  else if (func == SIG_IGN)
   175c8:	11000060 	cmpeqi	r4,r2,1
   175cc:	2000071e 	bne	r4,zero,175ec <__sigtramp_r+0x98>
      ptr->_sig_func[sig] = SIG_DFL;
   175d0:	18000015 	stw	zero,0(r3)
      func (sig);
   175d4:	8009883a 	mov	r4,r16
   175d8:	103ee83a 	callr	r2
      return 0;
   175dc:	0005883a 	mov	r2,zero
   175e0:	003ff206 	br	175ac <__sigtramp_r+0x58>
    return 2;
   175e4:	00800084 	movi	r2,2
   175e8:	003ff006 	br	175ac <__sigtramp_r+0x58>
    return 3;
   175ec:	008000c4 	movi	r2,3
   175f0:	003fee06 	br	175ac <__sigtramp_r+0x58>

000175f4 <raise>:
#ifndef _REENT_ONLY

int 
raise (int sig)
{
  return _raise_r (_REENT, sig);
   175f4:	200b883a 	mov	r5,r4
   175f8:	d1209e17 	ldw	r4,-32136(gp)
   175fc:	00174a01 	jmpi	174a0 <_raise_r>

00017600 <signal>:

_sig_func_ptr
signal (int sig,
	_sig_func_ptr func)
{
  return _signal_r (_REENT, sig, func);
   17600:	280d883a 	mov	r6,r5
   17604:	200b883a 	mov	r5,r4
   17608:	d1209e17 	ldw	r4,-32136(gp)
   1760c:	00174281 	jmpi	17428 <_signal_r>

00017610 <_init_signal>:
}

int 
_init_signal (void)
{
  return _init_signal_r (_REENT);
   17610:	d1209e17 	ldw	r4,-32136(gp)
   17614:	00173cc1 	jmpi	173cc <_init_signal_r>

00017618 <__sigtramp>:
}

int
__sigtramp (int sig)
{
  return __sigtramp_r (_REENT, sig);
   17618:	200b883a 	mov	r5,r4
   1761c:	d1209e17 	ldw	r4,-32136(gp)
   17620:	00175541 	jmpi	17554 <__sigtramp_r>

00017624 <_kill_r>:

int
_kill_r (struct _reent *ptr,
     int pid,
     int sig)
{
   17624:	defffe04 	addi	sp,sp,-8
   17628:	dc000015 	stw	r16,0(sp)
   1762c:	2021883a 	mov	r16,r4
   17630:	2809883a 	mov	r4,r5
   17634:	300b883a 	mov	r5,r6
   17638:	dfc00115 	stw	ra,4(sp)
  int ret;

  errno = 0;
   1763c:	d0221a15 	stw	zero,-30616(gp)
  if ((ret = _kill (pid, sig)) == -1 && errno != 0)
   17640:	00177c00 	call	177c0 <kill>
   17644:	10ffffd8 	cmpnei	r3,r2,-1
   17648:	1800031e 	bne	r3,zero,17658 <_kill_r+0x34>
   1764c:	d0e21a17 	ldw	r3,-30616(gp)
   17650:	18000126 	beq	r3,zero,17658 <_kill_r+0x34>
    ptr->_errno = errno;
   17654:	80c00015 	stw	r3,0(r16)
  return ret;
}
   17658:	dfc00117 	ldw	ra,4(sp)
   1765c:	dc000017 	ldw	r16,0(sp)
   17660:	dec00204 	addi	sp,sp,8
   17664:	f800283a 	ret

00017668 <_getpid_r>:

int
_getpid_r (struct _reent *ptr)
{
  int ret;
  ret = _getpid ();
   17668:	00176c41 	jmpi	176c4 <getpid>

0001766c <strcmp>:
int
strcmp (const char *s1,
	const char *s2)
{ 
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  while (*s1 != '\0' && *s1 == *s2)
   1766c:	20800003 	ldbu	r2,0(r4)
   17670:	28c00003 	ldbu	r3,0(r5)
   17674:	11803fcc 	andi	r6,r2,255
   17678:	3180201c 	xori	r6,r6,128
   1767c:	31bfe004 	addi	r6,r6,-128
   17680:	30000426 	beq	r6,zero,17694 <strcmp+0x28>
   17684:	19c03fcc 	andi	r7,r3,255
   17688:	39c0201c 	xori	r7,r7,128
   1768c:	39ffe004 	addi	r7,r7,-128
   17690:	31c00426 	beq	r6,r7,176a4 <strcmp+0x38>
    {
      s1++;
      s2++;
    }

  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
   17694:	18c03fcc 	andi	r3,r3,255
   17698:	10803fcc 	andi	r2,r2,255
      s1++;
      s2++;
    }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   1769c:	10c5c83a 	sub	r2,r2,r3
   176a0:	f800283a 	ret
      s1++;
   176a4:	21000044 	addi	r4,r4,1
      s2++;
   176a8:	29400044 	addi	r5,r5,1
   176ac:	003fef06 	br	1766c <strcmp>

000176b0 <_exit>:
   176b0:	20000226 	beq	r4,zero,176bc <_exit+0xc>
   176b4:	002af070 	cmpltui	zero,zero,43969
   176b8:	003fff06 	br	176b8 <_exit+0x8>
   176bc:	002af0b0 	cmpltui	zero,zero,43970
   176c0:	003ffd06 	br	176b8 <_exit+0x8>

000176c4 <getpid>:
   176c4:	0005883a 	mov	r2,zero
   176c8:	f800283a 	ret

000176cc <alt_ic_isr_register>:
   176cc:	00177581 	jmpi	17758 <alt_iic_isr_register>

000176d0 <alt_ic_irq_enable>:
   176d0:	0007303a 	rdctl	r3,status
   176d4:	00bfff84 	movi	r2,-2
   176d8:	1884703a 	and	r2,r3,r2
   176dc:	1001703a 	wrctl	status,r2
   176e0:	00800044 	movi	r2,1
   176e4:	d1221b17 	ldw	r4,-30612(gp)
   176e8:	114a983a 	sll	r5,r2,r5
   176ec:	290ab03a 	or	r5,r5,r4
   176f0:	d1621b15 	stw	r5,-30612(gp)
   176f4:	d0a21b17 	ldw	r2,-30612(gp)
   176f8:	100170fa 	wrctl	ienable,r2
   176fc:	1801703a 	wrctl	status,r3
   17700:	0005883a 	mov	r2,zero
   17704:	f800283a 	ret

00017708 <alt_ic_irq_disable>:
   17708:	0007303a 	rdctl	r3,status
   1770c:	00bfff84 	movi	r2,-2
   17710:	1884703a 	and	r2,r3,r2
   17714:	1001703a 	wrctl	status,r2
   17718:	00bfff84 	movi	r2,-2
   1771c:	d1221b17 	ldw	r4,-30612(gp)
   17720:	114a183a 	rol	r5,r2,r5
   17724:	290a703a 	and	r5,r5,r4
   17728:	d1621b15 	stw	r5,-30612(gp)
   1772c:	d0a21b17 	ldw	r2,-30612(gp)
   17730:	100170fa 	wrctl	ienable,r2
   17734:	1801703a 	wrctl	status,r3
   17738:	0005883a 	mov	r2,zero
   1773c:	f800283a 	ret

00017740 <alt_ic_irq_enabled>:
   17740:	000730fa 	rdctl	r3,ienable
   17744:	00800044 	movi	r2,1
   17748:	1144983a 	sll	r2,r2,r5
   1774c:	10c4703a 	and	r2,r2,r3
   17750:	1004c03a 	cmpne	r2,r2,zero
   17754:	f800283a 	ret

00017758 <alt_iic_isr_register>:
   17758:	28800808 	cmpgei	r2,r5,32
   1775c:	1000161e 	bne	r2,zero,177b8 <alt_iic_isr_register+0x60>
   17760:	defffe04 	addi	sp,sp,-8
   17764:	dfc00115 	stw	ra,4(sp)
   17768:	dc000015 	stw	r16,0(sp)
   1776c:	0021303a 	rdctl	r16,status
   17770:	00bfff84 	movi	r2,-2
   17774:	8084703a 	and	r2,r16,r2
   17778:	1001703a 	wrctl	status,r2
   1777c:	280690fa 	slli	r3,r5,3
   17780:	008000b4 	movhi	r2,2
   17784:	10a7d604 	addi	r2,r2,-24744
   17788:	10c5883a 	add	r2,r2,r3
   1778c:	11800015 	stw	r6,0(r2)
   17790:	11c00115 	stw	r7,4(r2)
   17794:	30000626 	beq	r6,zero,177b0 <alt_iic_isr_register+0x58>
   17798:	00176d00 	call	176d0 <alt_ic_irq_enable>
   1779c:	8001703a 	wrctl	status,r16
   177a0:	dfc00117 	ldw	ra,4(sp)
   177a4:	dc000017 	ldw	r16,0(sp)
   177a8:	dec00204 	addi	sp,sp,8
   177ac:	f800283a 	ret
   177b0:	00177080 	call	17708 <alt_ic_irq_disable>
   177b4:	003ff906 	br	1779c <alt_iic_isr_register+0x44>
   177b8:	00bffa84 	movi	r2,-22
   177bc:	f800283a 	ret

000177c0 <kill>:
   177c0:	defffe04 	addi	sp,sp,-8
   177c4:	dfc00115 	stw	ra,4(sp)
   177c8:	dc000015 	stw	r16,0(sp)
   177cc:	01002916 	blt	zero,r4,17874 <kill+0xb4>
   177d0:	28800828 	cmpgeui	r2,r5,32
   177d4:	1000311e 	bne	r2,zero,1789c <kill+0xdc>
   177d8:	280a90ba 	slli	r5,r5,2
   177dc:	00800074 	movhi	r2,1
   177e0:	2885883a 	add	r2,r5,r2
   177e4:	109dfb17 	ldw	r2,30700(r2)
   177e8:	1000683a 	jmp	r2
   177ec:	000178ac 	andhi	zero,zero,1506
   177f0:	0001789c 	xori	zero,zero,1506
   177f4:	0001789c 	xori	zero,zero,1506
   177f8:	0001786c 	andhi	zero,zero,1505
   177fc:	0001786c 	andhi	zero,zero,1505
   17800:	0001786c 	andhi	zero,zero,1505
   17804:	0001786c 	andhi	zero,zero,1505
   17808:	0001789c 	xori	zero,zero,1506
   1780c:	0001786c 	andhi	zero,zero,1505
   17810:	0001786c 	andhi	zero,zero,1505
   17814:	0001786c 	andhi	zero,zero,1505
   17818:	0001786c 	andhi	zero,zero,1505
   1781c:	0001786c 	andhi	zero,zero,1505
   17820:	0001786c 	andhi	zero,zero,1505
   17824:	0001786c 	andhi	zero,zero,1505
   17828:	0001786c 	andhi	zero,zero,1505
   1782c:	000178ac 	andhi	zero,zero,1506
   17830:	0001789c 	xori	zero,zero,1506
   17834:	0001789c 	xori	zero,zero,1506
   17838:	0001789c 	xori	zero,zero,1506
   1783c:	000178ac 	andhi	zero,zero,1506
   17840:	0001789c 	xori	zero,zero,1506
   17844:	0001789c 	xori	zero,zero,1506
   17848:	0001786c 	andhi	zero,zero,1505
   1784c:	0001786c 	andhi	zero,zero,1505
   17850:	0001786c 	andhi	zero,zero,1505
   17854:	0001786c 	andhi	zero,zero,1505
   17858:	0001786c 	andhi	zero,zero,1505
   1785c:	0001789c 	xori	zero,zero,1506
   17860:	0001789c 	xori	zero,zero,1506
   17864:	0001786c 	andhi	zero,zero,1505
   17868:	0001786c 	andhi	zero,zero,1505
   1786c:	0009883a 	mov	r4,zero
   17870:	00176b00 	call	176b0 <_exit>
   17874:	040000c4 	movi	r16,3
   17878:	d0a0a617 	ldw	r2,-32104(gp)
   1787c:	10000926 	beq	r2,zero,178a4 <kill+0xe4>
   17880:	103ee83a 	callr	r2
   17884:	14000015 	stw	r16,0(r2)
   17888:	00bfffc4 	movi	r2,-1
   1788c:	dfc00117 	ldw	ra,4(sp)
   17890:	dc000017 	ldw	r16,0(sp)
   17894:	dec00204 	addi	sp,sp,8
   17898:	f800283a 	ret
   1789c:	04000584 	movi	r16,22
   178a0:	003ff506 	br	17878 <kill+0xb8>
   178a4:	d0a21a04 	addi	r2,gp,-30616
   178a8:	003ff606 	br	17884 <kill+0xc4>
   178ac:	0005883a 	mov	r2,zero
   178b0:	003ff606 	br	1788c <kill+0xcc>

000178b4 <alt_load>:
   178b4:	deffff04 	addi	sp,sp,-4
   178b8:	010000b4 	movhi	r4,2
   178bc:	014000b4 	movhi	r5,2
   178c0:	dfc00015 	stw	ra,0(sp)
   178c4:	21249d04 	addi	r4,r4,-28044
   178c8:	2965ff04 	addi	r5,r5,-26628
   178cc:	21400426 	beq	r4,r5,178e0 <alt_load+0x2c>
   178d0:	018000b4 	movhi	r6,2
   178d4:	31a5ff04 	addi	r6,r6,-26628
   178d8:	310dc83a 	sub	r6,r6,r4
   178dc:	00184940 	call	18494 <memcpy>
   178e0:	01000074 	movhi	r4,1
   178e4:	01400074 	movhi	r5,1
   178e8:	21000804 	addi	r4,r4,32
   178ec:	29400804 	addi	r5,r5,32
   178f0:	21400426 	beq	r4,r5,17904 <alt_load+0x50>
   178f4:	01800074 	movhi	r6,1
   178f8:	31806004 	addi	r6,r6,384
   178fc:	310dc83a 	sub	r6,r6,r4
   17900:	00184940 	call	18494 <memcpy>
   17904:	010000b4 	movhi	r4,2
   17908:	014000b4 	movhi	r5,2
   1790c:	2121e504 	addi	r4,r4,-30828
   17910:	2961e504 	addi	r5,r5,-30828
   17914:	21400426 	beq	r4,r5,17928 <alt_load+0x74>
   17918:	018000b4 	movhi	r6,2
   1791c:	31a49d04 	addi	r6,r6,-28044
   17920:	310dc83a 	sub	r6,r6,r4
   17924:	00184940 	call	18494 <memcpy>
   17928:	0017e000 	call	17e00 <alt_dcache_flush_all>
   1792c:	dfc00017 	ldw	ra,0(sp)
   17930:	dec00104 	addi	sp,sp,4
   17934:	0017f081 	jmpi	17f08 <alt_icache_flush_all>

00017938 <alt_main>:
   17938:	defffe04 	addi	sp,sp,-8
   1793c:	0009883a 	mov	r4,zero
   17940:	dfc00115 	stw	ra,4(sp)
   17944:	dc000015 	stw	r16,0(sp)
   17948:	00179f00 	call	179f0 <alt_irq_init>
   1794c:	0017a100 	call	17a10 <alt_sys_init>
   17950:	018000b4 	movhi	r6,2
   17954:	31a49304 	addi	r6,r6,-28084
   17958:	300b883a 	mov	r5,r6
   1795c:	3009883a 	mov	r4,r6
   17960:	0017ff40 	call	17ff4 <alt_io_redirect>
   17964:	0017e780 	call	17e78 <_do_ctors>
   17968:	01000074 	movhi	r4,1
   1796c:	211fb004 	addi	r4,r4,32448
   17970:	00184300 	call	18430 <atexit>
   17974:	d1a21c17 	ldw	r6,-30608(gp)
   17978:	d1621d17 	ldw	r5,-30604(gp)
   1797c:	d1221e17 	ldw	r4,-30600(gp)
   17980:	0011d6c0 	call	11d6c <main>
   17984:	01000044 	movi	r4,1
   17988:	1021883a 	mov	r16,r2
   1798c:	0017d4c0 	call	17d4c <close>
   17990:	8009883a 	mov	r4,r16
   17994:	00184440 	call	18444 <exit>

00017998 <__malloc_lock>:
   17998:	f800283a 	ret

0001799c <__malloc_unlock>:
   1799c:	f800283a 	ret

000179a0 <sbrk>:
   179a0:	0007303a 	rdctl	r3,status
   179a4:	00bfff84 	movi	r2,-2
   179a8:	1884703a 	and	r2,r3,r2
   179ac:	1001703a 	wrctl	status,r2
   179b0:	d0a0a017 	ldw	r2,-32128(gp)
   179b4:	017fff04 	movi	r5,-4
   179b8:	108000c4 	addi	r2,r2,3
   179bc:	1144703a 	and	r2,r2,r5
   179c0:	014000b4 	movhi	r5,2
   179c4:	d0a0a015 	stw	r2,-32128(gp)
   179c8:	1109883a 	add	r4,r2,r4
   179cc:	296d0004 	addi	r5,r5,-19456
   179d0:	2900032e 	bgeu	r5,r4,179e0 <sbrk+0x40>
   179d4:	1801703a 	wrctl	status,r3
   179d8:	00bfffc4 	movi	r2,-1
   179dc:	f800283a 	ret
   179e0:	d120a015 	stw	r4,-32128(gp)
   179e4:	1801703a 	wrctl	status,r3
   179e8:	f800283a 	ret

000179ec <usleep>:
   179ec:	0017ca01 	jmpi	17ca0 <alt_busy_sleep>

000179f0 <alt_irq_init>:
   179f0:	deffff04 	addi	sp,sp,-4
   179f4:	dfc00015 	stw	ra,0(sp)
   179f8:	00182c80 	call	182c8 <altera_nios2_gen2_irq_init>
   179fc:	00800044 	movi	r2,1
   17a00:	1001703a 	wrctl	status,r2
   17a04:	dfc00017 	ldw	ra,0(sp)
   17a08:	dec00104 	addi	sp,sp,4
   17a0c:	f800283a 	ret

00017a10 <alt_sys_init>:
   17a10:	010000b4 	movhi	r4,2
   17a14:	deffff04 	addi	sp,sp,-4
   17a18:	01c0fa04 	movi	r7,1000
   17a1c:	01800044 	movi	r6,1
   17a20:	000b883a 	mov	r5,zero
   17a24:	210a1004 	addi	r4,r4,10304
   17a28:	dfc00015 	stw	ra,0(sp)
   17a2c:	0017b3c0 	call	17b3c <alt_avalon_timer_sc_init>
   17a30:	010000b4 	movhi	r4,2
   17a34:	d160a204 	addi	r5,gp,-32120
   17a38:	2124e104 	addi	r4,r4,-27772
   17a3c:	0017e0c0 	call	17e0c <alt_dev_llist_insert>
   17a40:	010000b4 	movhi	r4,2
   17a44:	d160a204 	addi	r5,gp,-32120
   17a48:	2124d604 	addi	r4,r4,-27816
   17a4c:	dfc00017 	ldw	ra,0(sp)
   17a50:	dec00104 	addi	sp,sp,4
   17a54:	0017e0c1 	jmpi	17e0c <alt_dev_llist_insert>

00017a58 <altera_avalon_jtag_uart_read_fd>:
   17a58:	20800017 	ldw	r2,0(r4)
   17a5c:	21c00217 	ldw	r7,8(r4)
   17a60:	11000a04 	addi	r4,r2,40
   17a64:	0017a781 	jmpi	17a78 <altera_avalon_jtag_uart_read>

00017a68 <altera_avalon_jtag_uart_write_fd>:
   17a68:	20800017 	ldw	r2,0(r4)
   17a6c:	21c00217 	ldw	r7,8(r4)
   17a70:	11000a04 	addi	r4,r2,40
   17a74:	0017ad01 	jmpi	17ad0 <altera_avalon_jtag_uart_write>

00017a78 <altera_avalon_jtag_uart_read>:
   17a78:	21000017 	ldw	r4,0(r4)
   17a7c:	298d883a 	add	r6,r5,r6
   17a80:	2805883a 	mov	r2,r5
   17a84:	3a10000c 	andi	r8,r7,16384
   17a88:	11800536 	bltu	r2,r6,17aa0 <altera_avalon_jtag_uart_read+0x28>
   17a8c:	11400b1e 	bne	r2,r5,17abc <altera_avalon_jtag_uart_read+0x44>
   17a90:	39d0000c 	andi	r7,r7,16384
   17a94:	38000c1e 	bne	r7,zero,17ac8 <altera_avalon_jtag_uart_read+0x50>
   17a98:	00bffec4 	movi	r2,-5
   17a9c:	f800283a 	ret
   17aa0:	20c00037 	ldwio	r3,0(r4)
   17aa4:	1a60000c 	andi	r9,r3,32768
   17aa8:	48000326 	beq	r9,zero,17ab8 <altera_avalon_jtag_uart_read+0x40>
   17aac:	10c00005 	stb	r3,0(r2)
   17ab0:	10800044 	addi	r2,r2,1
   17ab4:	003ff406 	br	17a88 <altera_avalon_jtag_uart_read+0x10>
   17ab8:	11400226 	beq	r2,r5,17ac4 <altera_avalon_jtag_uart_read+0x4c>
   17abc:	1145c83a 	sub	r2,r2,r5
   17ac0:	f800283a 	ret
   17ac4:	403ff026 	beq	r8,zero,17a88 <altera_avalon_jtag_uart_read+0x10>
   17ac8:	00bffd44 	movi	r2,-11
   17acc:	f800283a 	ret

00017ad0 <altera_avalon_jtag_uart_write>:
   17ad0:	21000017 	ldw	r4,0(r4)
   17ad4:	3005883a 	mov	r2,r6
   17ad8:	298d883a 	add	r6,r5,r6
   17adc:	29800136 	bltu	r5,r6,17ae4 <altera_avalon_jtag_uart_write+0x14>
   17ae0:	f800283a 	ret
   17ae4:	20c00137 	ldwio	r3,4(r4)
   17ae8:	18ffffec 	andhi	r3,r3,65535
   17aec:	183ffb26 	beq	r3,zero,17adc <altera_avalon_jtag_uart_write+0xc>
   17af0:	28c00007 	ldb	r3,0(r5)
   17af4:	29400044 	addi	r5,r5,1
   17af8:	20c00035 	stwio	r3,0(r4)
   17afc:	003ff706 	br	17adc <altera_avalon_jtag_uart_write+0xc>

00017b00 <alt_avalon_timer_sc_irq>:
   17b00:	defffe04 	addi	sp,sp,-8
   17b04:	dfc00115 	stw	ra,4(sp)
   17b08:	dc000015 	stw	r16,0(sp)
   17b0c:	20000035 	stwio	zero,0(r4)
   17b10:	20800137 	ldwio	r2,4(r4)
   17b14:	0021303a 	rdctl	r16,status
   17b18:	00bfff84 	movi	r2,-2
   17b1c:	8084703a 	and	r2,r16,r2
   17b20:	1001703a 	wrctl	status,r2
   17b24:	00182100 	call	18210 <alt_tick>
   17b28:	8001703a 	wrctl	status,r16
   17b2c:	dfc00117 	ldw	ra,4(sp)
   17b30:	dc000017 	ldw	r16,0(sp)
   17b34:	dec00204 	addi	sp,sp,8
   17b38:	f800283a 	ret

00017b3c <alt_avalon_timer_sc_init>:
   17b3c:	d0e22117 	ldw	r3,-30588(gp)
   17b40:	defffe04 	addi	sp,sp,-8
   17b44:	dfc00115 	stw	ra,4(sp)
   17b48:	2005883a 	mov	r2,r4
   17b4c:	2809883a 	mov	r4,r5
   17b50:	300b883a 	mov	r5,r6
   17b54:	1800011e 	bne	r3,zero,17b5c <alt_avalon_timer_sc_init+0x20>
   17b58:	d1e22115 	stw	r7,-30588(gp)
   17b5c:	00c001c4 	movi	r3,7
   17b60:	10c00135 	stwio	r3,4(r2)
   17b64:	01800074 	movhi	r6,1
   17b68:	d8000015 	stw	zero,0(sp)
   17b6c:	100f883a 	mov	r7,r2
   17b70:	319ec004 	addi	r6,r6,31488
   17b74:	00176cc0 	call	176cc <alt_ic_isr_register>
   17b78:	dfc00117 	ldw	ra,4(sp)
   17b7c:	dec00204 	addi	sp,sp,8
   17b80:	f800283a 	ret

00017b84 <altera_avalon_uart_read_fd>:
   17b84:	20800017 	ldw	r2,0(r4)
   17b88:	21c00217 	ldw	r7,8(r4)
   17b8c:	11000a04 	addi	r4,r2,40
   17b90:	0017ba41 	jmpi	17ba4 <altera_avalon_uart_read>

00017b94 <altera_avalon_uart_write_fd>:
   17b94:	20800017 	ldw	r2,0(r4)
   17b98:	21c00217 	ldw	r7,8(r4)
   17b9c:	11000a04 	addi	r4,r2,40
   17ba0:	0017c1c1 	jmpi	17c1c <altera_avalon_uart_write>

00017ba4 <altera_avalon_uart_read>:
   17ba4:	39d0000c 	andi	r7,r7,16384
   17ba8:	20c00017 	ldw	r3,0(r4)
   17bac:	18800237 	ldwio	r2,8(r3)
   17bb0:	18000235 	stwio	zero,8(r3)
   17bb4:	10c0200c 	andi	r3,r2,128
   17bb8:	18000c1e 	bne	r3,zero,17bec <altera_avalon_uart_read+0x48>
   17bbc:	383ffa26 	beq	r7,zero,17ba8 <altera_avalon_uart_read+0x4>
   17bc0:	d0a0a617 	ldw	r2,-32104(gp)
   17bc4:	10001026 	beq	r2,zero,17c08 <altera_avalon_uart_read+0x64>
   17bc8:	deffff04 	addi	sp,sp,-4
   17bcc:	dfc00015 	stw	ra,0(sp)
   17bd0:	103ee83a 	callr	r2
   17bd4:	00c002c4 	movi	r3,11
   17bd8:	10c00015 	stw	r3,0(r2)
   17bdc:	0005883a 	mov	r2,zero
   17be0:	dfc00017 	ldw	ra,0(sp)
   17be4:	dec00104 	addi	sp,sp,4
   17be8:	f800283a 	ret
   17bec:	20c00017 	ldw	r3,0(r4)
   17bf0:	18c00037 	ldwio	r3,0(r3)
   17bf4:	28c00005 	stb	r3,0(r5)
   17bf8:	108000cc 	andi	r2,r2,3
   17bfc:	103fef1e 	bne	r2,zero,17bbc <altera_avalon_uart_read+0x18>
   17c00:	00800044 	movi	r2,1
   17c04:	f800283a 	ret
   17c08:	d0a21a04 	addi	r2,gp,-30616
   17c0c:	00c002c4 	movi	r3,11
   17c10:	10c00015 	stw	r3,0(r2)
   17c14:	0005883a 	mov	r2,zero
   17c18:	f800283a 	ret

00017c1c <altera_avalon_uart_write>:
   17c1c:	defffd04 	addi	sp,sp,-12
   17c20:	dc400115 	stw	r17,4(sp)
   17c24:	dc000015 	stw	r16,0(sp)
   17c28:	dfc00215 	stw	ra,8(sp)
   17c2c:	3023883a 	mov	r17,r6
   17c30:	39d0000c 	andi	r7,r7,16384
   17c34:	3021883a 	mov	r16,r6
   17c38:	20c00017 	ldw	r3,0(r4)
   17c3c:	18800237 	ldwio	r2,8(r3)
   17c40:	1080100c 	andi	r2,r2,64
   17c44:	10000526 	beq	r2,zero,17c5c <altera_avalon_uart_write+0x40>
   17c48:	28800044 	addi	r2,r5,1
   17c4c:	29400007 	ldb	r5,0(r5)
   17c50:	19400135 	stwio	r5,4(r3)
   17c54:	843fffc4 	addi	r16,r16,-1
   17c58:	100b883a 	mov	r5,r2
   17c5c:	3800071e 	bne	r7,zero,17c7c <altera_avalon_uart_write+0x60>
   17c60:	803ff51e 	bne	r16,zero,17c38 <altera_avalon_uart_write+0x1c>
   17c64:	8c05c83a 	sub	r2,r17,r16
   17c68:	dfc00217 	ldw	ra,8(sp)
   17c6c:	dc400117 	ldw	r17,4(sp)
   17c70:	dc000017 	ldw	r16,0(sp)
   17c74:	dec00304 	addi	sp,sp,12
   17c78:	f800283a 	ret
   17c7c:	803ff926 	beq	r16,zero,17c64 <altera_avalon_uart_write+0x48>
   17c80:	d0a0a617 	ldw	r2,-32104(gp)
   17c84:	10000426 	beq	r2,zero,17c98 <altera_avalon_uart_write+0x7c>
   17c88:	103ee83a 	callr	r2
   17c8c:	00c002c4 	movi	r3,11
   17c90:	10c00015 	stw	r3,0(r2)
   17c94:	003ff306 	br	17c64 <altera_avalon_uart_write+0x48>
   17c98:	d0a21a04 	addi	r2,gp,-30616
   17c9c:	003ffb06 	br	17c8c <altera_avalon_uart_write+0x70>

00017ca0 <alt_busy_sleep>:
   17ca0:	defffe04 	addi	sp,sp,-8
   17ca4:	008666b4 	movhi	r2,6554
   17ca8:	dc000015 	stw	r16,0(sp)
   17cac:	dfc00115 	stw	ra,4(sp)
   17cb0:	10a66604 	addi	r2,r2,-26216
   17cb4:	2021883a 	mov	r16,r4
   17cb8:	11001f2e 	bgeu	r2,r4,17d38 <alt_busy_sleep+0x98>
   17cbc:	014666b4 	movhi	r5,6554
   17cc0:	29666644 	addi	r5,r5,-26215
   17cc4:	001700c0 	call	1700c <__udivsi3>
   17cc8:	00e00034 	movhi	r3,32768
   17ccc:	1009883a 	mov	r4,r2
   17cd0:	18ffffc4 	addi	r3,r3,-1
   17cd4:	0005883a 	mov	r2,zero
   17cd8:	18ffffc4 	addi	r3,r3,-1
   17cdc:	183ffe1e 	bne	r3,zero,17cd8 <alt_busy_sleep+0x38>
   17ce0:	10800044 	addi	r2,r2,1
   17ce4:	113ffc16 	blt	r2,r4,17cd8 <alt_busy_sleep+0x38>
   17ce8:	017999b4 	movhi	r5,58982
   17cec:	295999c4 	addi	r5,r5,26215
   17cf0:	8161883a 	add	r16,r16,r5
   17cf4:	01000e0e 	bge	zero,r4,17d30 <alt_busy_sleep+0x90>
   17cf8:	00170cc0 	call	170cc <__mulsi3>
   17cfc:	00c666b4 	movhi	r3,6554
   17d00:	18e66644 	addi	r3,r3,-26215
   17d04:	10c5883a 	add	r2,r2,r3
   17d08:	1421883a 	add	r16,r2,r16
   17d0c:	800490ba 	slli	r2,r16,2
   17d10:	1421883a 	add	r16,r2,r16
   17d14:	843fffc4 	addi	r16,r16,-1
   17d18:	803ffe1e 	bne	r16,zero,17d14 <alt_busy_sleep+0x74>
   17d1c:	0005883a 	mov	r2,zero
   17d20:	dfc00117 	ldw	ra,4(sp)
   17d24:	dc000017 	ldw	r16,0(sp)
   17d28:	dec00204 	addi	sp,sp,8
   17d2c:	f800283a 	ret
   17d30:	0005883a 	mov	r2,zero
   17d34:	003ff406 	br	17d08 <alt_busy_sleep+0x68>
   17d38:	200890ba 	slli	r4,r4,2
   17d3c:	2421883a 	add	r16,r4,r16
   17d40:	843fffc4 	addi	r16,r16,-1
   17d44:	043ffe16 	blt	zero,r16,17d40 <alt_busy_sleep+0xa0>
   17d48:	003ff406 	br	17d1c <alt_busy_sleep+0x7c>

00017d4c <close>:
   17d4c:	defffd04 	addi	sp,sp,-12
   17d50:	dfc00215 	stw	ra,8(sp)
   17d54:	dc400115 	stw	r17,4(sp)
   17d58:	dc000015 	stw	r16,0(sp)
   17d5c:	20002016 	blt	r4,zero,17de0 <close+0x94>
   17d60:	2004907a 	slli	r2,r4,1
   17d64:	2023883a 	mov	r17,r4
   17d68:	1105883a 	add	r2,r2,r4
   17d6c:	100490ba 	slli	r2,r2,2
   17d70:	010000b4 	movhi	r4,2
   17d74:	2124ec04 	addi	r4,r4,-27728
   17d78:	1109883a 	add	r4,r2,r4
   17d7c:	20001826 	beq	r4,zero,17de0 <close+0x94>
   17d80:	20800017 	ldw	r2,0(r4)
   17d84:	10800417 	ldw	r2,16(r2)
   17d88:	10001126 	beq	r2,zero,17dd0 <close+0x84>
   17d8c:	103ee83a 	callr	r2
   17d90:	1021883a 	mov	r16,r2
   17d94:	8809883a 	mov	r4,r17
   17d98:	00181b40 	call	181b4 <alt_release_fd>
   17d9c:	0005883a 	mov	r2,zero
   17da0:	8000060e 	bge	r16,zero,17dbc <close+0x70>
   17da4:	d0a0a617 	ldw	r2,-32104(gp)
   17da8:	10000b26 	beq	r2,zero,17dd8 <close+0x8c>
   17dac:	103ee83a 	callr	r2
   17db0:	0421c83a 	sub	r16,zero,r16
   17db4:	14000015 	stw	r16,0(r2)
   17db8:	00bfffc4 	movi	r2,-1
   17dbc:	dfc00217 	ldw	ra,8(sp)
   17dc0:	dc400117 	ldw	r17,4(sp)
   17dc4:	dc000017 	ldw	r16,0(sp)
   17dc8:	dec00304 	addi	sp,sp,12
   17dcc:	f800283a 	ret
   17dd0:	0021883a 	mov	r16,zero
   17dd4:	003fef06 	br	17d94 <close+0x48>
   17dd8:	d0a21a04 	addi	r2,gp,-30616
   17ddc:	003ff406 	br	17db0 <close+0x64>
   17de0:	d0a0a617 	ldw	r2,-32104(gp)
   17de4:	10000426 	beq	r2,zero,17df8 <close+0xac>
   17de8:	103ee83a 	callr	r2
   17dec:	00c01444 	movi	r3,81
   17df0:	10c00015 	stw	r3,0(r2)
   17df4:	003ff006 	br	17db8 <close+0x6c>
   17df8:	d0a21a04 	addi	r2,gp,-30616
   17dfc:	003ffb06 	br	17dec <close+0xa0>

00017e00 <alt_dcache_flush_all>:
   17e00:	f800283a 	ret

00017e04 <alt_dev_null_write>:
   17e04:	3005883a 	mov	r2,r6
   17e08:	f800283a 	ret

00017e0c <alt_dev_llist_insert>:
   17e0c:	20000226 	beq	r4,zero,17e18 <alt_dev_llist_insert+0xc>
   17e10:	20800217 	ldw	r2,8(r4)
   17e14:	10000b1e 	bne	r2,zero,17e44 <alt_dev_llist_insert+0x38>
   17e18:	d0a0a617 	ldw	r2,-32104(gp)
   17e1c:	10001126 	beq	r2,zero,17e64 <alt_dev_llist_insert+0x58>
   17e20:	deffff04 	addi	sp,sp,-4
   17e24:	dfc00015 	stw	ra,0(sp)
   17e28:	103ee83a 	callr	r2
   17e2c:	00c00584 	movi	r3,22
   17e30:	10c00015 	stw	r3,0(r2)
   17e34:	00bffa84 	movi	r2,-22
   17e38:	dfc00017 	ldw	ra,0(sp)
   17e3c:	dec00104 	addi	sp,sp,4
   17e40:	f800283a 	ret
   17e44:	28800017 	ldw	r2,0(r5)
   17e48:	21400115 	stw	r5,4(r4)
   17e4c:	20800015 	stw	r2,0(r4)
   17e50:	28800017 	ldw	r2,0(r5)
   17e54:	11000115 	stw	r4,4(r2)
   17e58:	29000015 	stw	r4,0(r5)
   17e5c:	0005883a 	mov	r2,zero
   17e60:	f800283a 	ret
   17e64:	d0a21a04 	addi	r2,gp,-30616
   17e68:	00c00584 	movi	r3,22
   17e6c:	10c00015 	stw	r3,0(r2)
   17e70:	00bffa84 	movi	r2,-22
   17e74:	f800283a 	ret

00017e78 <_do_ctors>:
   17e78:	defffd04 	addi	sp,sp,-12
   17e7c:	dc400115 	stw	r17,4(sp)
   17e80:	dc000015 	stw	r16,0(sp)
   17e84:	044000b4 	movhi	r17,2
   17e88:	040000b4 	movhi	r16,2
   17e8c:	dfc00215 	stw	ra,8(sp)
   17e90:	8421e204 	addi	r16,r16,-30840
   17e94:	8c61dd44 	addi	r17,r17,-30859
   17e98:	843fff04 	addi	r16,r16,-4
   17e9c:	8440052e 	bgeu	r16,r17,17eb4 <_do_ctors+0x3c>
   17ea0:	dfc00217 	ldw	ra,8(sp)
   17ea4:	dc400117 	ldw	r17,4(sp)
   17ea8:	dc000017 	ldw	r16,0(sp)
   17eac:	dec00304 	addi	sp,sp,12
   17eb0:	f800283a 	ret
   17eb4:	80800017 	ldw	r2,0(r16)
   17eb8:	103ee83a 	callr	r2
   17ebc:	003ff606 	br	17e98 <_do_ctors+0x20>

00017ec0 <_do_dtors>:
   17ec0:	defffd04 	addi	sp,sp,-12
   17ec4:	dc400115 	stw	r17,4(sp)
   17ec8:	dc000015 	stw	r16,0(sp)
   17ecc:	044000b4 	movhi	r17,2
   17ed0:	040000b4 	movhi	r16,2
   17ed4:	dfc00215 	stw	ra,8(sp)
   17ed8:	8421e504 	addi	r16,r16,-30828
   17edc:	8c61e204 	addi	r17,r17,-30840
   17ee0:	843fff04 	addi	r16,r16,-4
   17ee4:	8440052e 	bgeu	r16,r17,17efc <_do_dtors+0x3c>
   17ee8:	dfc00217 	ldw	ra,8(sp)
   17eec:	dc400117 	ldw	r17,4(sp)
   17ef0:	dc000017 	ldw	r16,0(sp)
   17ef4:	dec00304 	addi	sp,sp,12
   17ef8:	f800283a 	ret
   17efc:	80800017 	ldw	r2,0(r16)
   17f00:	103ee83a 	callr	r2
   17f04:	003ff606 	br	17ee0 <_do_dtors+0x20>

00017f08 <alt_icache_flush_all>:
   17f08:	f800283a 	ret

00017f0c <alt_exception_cause_generated_bad_addr>:
   17f0c:	213ffe84 	addi	r4,r4,-6
   17f10:	20800428 	cmpgeui	r2,r4,16
   17f14:	1000151e 	bne	r2,zero,17f6c <alt_exception_cause_generated_bad_addr+0x60>
   17f18:	200890ba 	slli	r4,r4,2
   17f1c:	00800074 	movhi	r2,1
   17f20:	2085883a 	add	r2,r4,r2
   17f24:	109fcb17 	ldw	r2,32556(r2)
   17f28:	1000683a 	jmp	r2
   17f2c:	00017f74 	movhi	zero,1533
   17f30:	00017f74 	movhi	zero,1533
   17f34:	00017f6c 	andhi	zero,zero,1533
   17f38:	00017f6c 	andhi	zero,zero,1533
   17f3c:	00017f6c 	andhi	zero,zero,1533
   17f40:	00017f74 	movhi	zero,1533
   17f44:	00017f6c 	andhi	zero,zero,1533
   17f48:	00017f6c 	andhi	zero,zero,1533
   17f4c:	00017f74 	movhi	zero,1533
   17f50:	00017f74 	movhi	zero,1533
   17f54:	00017f6c 	andhi	zero,zero,1533
   17f58:	00017f74 	movhi	zero,1533
   17f5c:	00017f6c 	andhi	zero,zero,1533
   17f60:	00017f6c 	andhi	zero,zero,1533
   17f64:	00017f6c 	andhi	zero,zero,1533
   17f68:	00017f74 	movhi	zero,1533
   17f6c:	0005883a 	mov	r2,zero
   17f70:	f800283a 	ret
   17f74:	00800044 	movi	r2,1
   17f78:	f800283a 	ret

00017f7c <alt_open_fd.constprop.0>:
   17f7c:	defffe04 	addi	sp,sp,-8
   17f80:	dc000015 	stw	r16,0(sp)
   17f84:	2021883a 	mov	r16,r4
   17f88:	2809883a 	mov	r4,r5
   17f8c:	300b883a 	mov	r5,r6
   17f90:	01807fc4 	movi	r6,511
   17f94:	dfc00115 	stw	ra,4(sp)
   17f98:	00180580 	call	18058 <open>
   17f9c:	10001116 	blt	r2,zero,17fe4 <alt_open_fd.constprop.0+0x68>
   17fa0:	1009883a 	mov	r4,r2
   17fa4:	1004907a 	slli	r2,r2,1
   17fa8:	00c000b4 	movhi	r3,2
   17fac:	18e4ec04 	addi	r3,r3,-27728
   17fb0:	1105883a 	add	r2,r2,r4
   17fb4:	100490ba 	slli	r2,r2,2
   17fb8:	1887883a 	add	r3,r3,r2
   17fbc:	18800017 	ldw	r2,0(r3)
   17fc0:	80800015 	stw	r2,0(r16)
   17fc4:	18800117 	ldw	r2,4(r3)
   17fc8:	80800115 	stw	r2,4(r16)
   17fcc:	18800217 	ldw	r2,8(r3)
   17fd0:	80800215 	stw	r2,8(r16)
   17fd4:	dfc00117 	ldw	ra,4(sp)
   17fd8:	dc000017 	ldw	r16,0(sp)
   17fdc:	dec00204 	addi	sp,sp,8
   17fe0:	00181b41 	jmpi	181b4 <alt_release_fd>
   17fe4:	dfc00117 	ldw	ra,4(sp)
   17fe8:	dc000017 	ldw	r16,0(sp)
   17fec:	dec00204 	addi	sp,sp,8
   17ff0:	f800283a 	ret

00017ff4 <alt_io_redirect>:
   17ff4:	defffd04 	addi	sp,sp,-12
   17ff8:	dc400115 	stw	r17,4(sp)
   17ffc:	2823883a 	mov	r17,r5
   18000:	200b883a 	mov	r5,r4
   18004:	010000b4 	movhi	r4,2
   18008:	dc000015 	stw	r16,0(sp)
   1800c:	2124ef04 	addi	r4,r4,-27716
   18010:	3021883a 	mov	r16,r6
   18014:	01800044 	movi	r6,1
   18018:	dfc00215 	stw	ra,8(sp)
   1801c:	0017f7c0 	call	17f7c <alt_open_fd.constprop.0>
   18020:	010000b4 	movhi	r4,2
   18024:	880b883a 	mov	r5,r17
   18028:	000d883a 	mov	r6,zero
   1802c:	2124ec04 	addi	r4,r4,-27728
   18030:	0017f7c0 	call	17f7c <alt_open_fd.constprop.0>
   18034:	010000b4 	movhi	r4,2
   18038:	01800044 	movi	r6,1
   1803c:	800b883a 	mov	r5,r16
   18040:	2124f204 	addi	r4,r4,-27704
   18044:	dfc00217 	ldw	ra,8(sp)
   18048:	dc400117 	ldw	r17,4(sp)
   1804c:	dc000017 	ldw	r16,0(sp)
   18050:	dec00304 	addi	sp,sp,12
   18054:	0017f7c1 	jmpi	17f7c <alt_open_fd.constprop.0>

00018058 <open>:
   18058:	defff904 	addi	sp,sp,-28
   1805c:	dc800215 	stw	r18,8(sp)
   18060:	2825883a 	mov	r18,r5
   18064:	d160a204 	addi	r5,gp,-32120
   18068:	dcc00315 	stw	r19,12(sp)
   1806c:	dc400115 	stw	r17,4(sp)
   18070:	dfc00615 	stw	ra,24(sp)
   18074:	dd400515 	stw	r21,20(sp)
   18078:	dd000415 	stw	r20,16(sp)
   1807c:	dc000015 	stw	r16,0(sp)
   18080:	2023883a 	mov	r17,r4
   18084:	3027883a 	mov	r19,r6
   18088:	00182d00 	call	182d0 <alt_find_dev>
   1808c:	10003b1e 	bne	r2,zero,1817c <open+0x124>
   18090:	8809883a 	mov	r4,r17
   18094:	00183400 	call	18340 <alt_find_file>
   18098:	1029883a 	mov	r20,r2
   1809c:	10003c26 	beq	r2,zero,18190 <open+0x138>
   180a0:	05400044 	movi	r21,1
   180a4:	a009883a 	mov	r4,r20
   180a8:	00183dc0 	call	183dc <alt_get_fd>
   180ac:	1021883a 	mov	r16,r2
   180b0:	10003a16 	blt	r2,zero,1819c <open+0x144>
   180b4:	1006907a 	slli	r3,r2,1
   180b8:	014000b4 	movhi	r5,2
   180bc:	2964ec04 	addi	r5,r5,-27728
   180c0:	1887883a 	add	r3,r3,r2
   180c4:	180690ba 	slli	r3,r3,2
   180c8:	00900034 	movhi	r2,16384
   180cc:	10bfffc4 	addi	r2,r2,-1
   180d0:	1949883a 	add	r4,r3,r5
   180d4:	9084703a 	and	r2,r18,r2
   180d8:	a8002b1e 	bne	r21,zero,18188 <open+0x130>
   180dc:	21c00017 	ldw	r7,0(r4)
   180e0:	d1a0a117 	ldw	r6,-32124(gp)
   180e4:	10900034 	orhi	r2,r2,16384
   180e8:	20800215 	stw	r2,8(r4)
   180ec:	2807883a 	mov	r3,r5
   180f0:	0005883a 	mov	r2,zero
   180f4:	19400017 	ldw	r5,0(r3)
   180f8:	29c0031e 	bne	r5,r7,18108 <open+0xb0>
   180fc:	19400217 	ldw	r5,8(r3)
   18100:	2800010e 	bge	r5,zero,18108 <open+0xb0>
   18104:	20c0271e 	bne	r4,r3,181a4 <open+0x14c>
   18108:	10800044 	addi	r2,r2,1
   1810c:	18c00304 	addi	r3,r3,12
   18110:	30bff82e 	bgeu	r6,r2,180f4 <open+0x9c>
   18114:	a0800317 	ldw	r2,12(r20)
   18118:	10000e26 	beq	r2,zero,18154 <open+0xfc>
   1811c:	880b883a 	mov	r5,r17
   18120:	980f883a 	mov	r7,r19
   18124:	900d883a 	mov	r6,r18
   18128:	103ee83a 	callr	r2
   1812c:	1023883a 	mov	r17,r2
   18130:	1000080e 	bge	r2,zero,18154 <open+0xfc>
   18134:	8009883a 	mov	r4,r16
   18138:	00181b40 	call	181b4 <alt_release_fd>
   1813c:	d0a0a617 	ldw	r2,-32104(gp)
   18140:	10001a26 	beq	r2,zero,181ac <open+0x154>
   18144:	103ee83a 	callr	r2
   18148:	0463c83a 	sub	r17,zero,r17
   1814c:	14400015 	stw	r17,0(r2)
   18150:	043fffc4 	movi	r16,-1
   18154:	8005883a 	mov	r2,r16
   18158:	dfc00617 	ldw	ra,24(sp)
   1815c:	dd400517 	ldw	r21,20(sp)
   18160:	dd000417 	ldw	r20,16(sp)
   18164:	dcc00317 	ldw	r19,12(sp)
   18168:	dc800217 	ldw	r18,8(sp)
   1816c:	dc400117 	ldw	r17,4(sp)
   18170:	dc000017 	ldw	r16,0(sp)
   18174:	dec00704 	addi	sp,sp,28
   18178:	f800283a 	ret
   1817c:	1029883a 	mov	r20,r2
   18180:	002b883a 	mov	r21,zero
   18184:	003fc706 	br	180a4 <open+0x4c>
   18188:	20800215 	stw	r2,8(r4)
   1818c:	003fe106 	br	18114 <open+0xbc>
   18190:	047ffb44 	movi	r17,-19
   18194:	043fffc4 	movi	r16,-1
   18198:	003fe606 	br	18134 <open+0xdc>
   1819c:	1023883a 	mov	r17,r2
   181a0:	003fe406 	br	18134 <open+0xdc>
   181a4:	047ffcc4 	movi	r17,-13
   181a8:	003fe206 	br	18134 <open+0xdc>
   181ac:	d0a21a04 	addi	r2,gp,-30616
   181b0:	003fe506 	br	18148 <open+0xf0>

000181b4 <alt_release_fd>:
   181b4:	208000d0 	cmplti	r2,r4,3
   181b8:	1000081e 	bne	r2,zero,181dc <alt_release_fd+0x28>
   181bc:	2006907a 	slli	r3,r4,1
   181c0:	008000b4 	movhi	r2,2
   181c4:	10a4ec04 	addi	r2,r2,-27728
   181c8:	1909883a 	add	r4,r3,r4
   181cc:	200890ba 	slli	r4,r4,2
   181d0:	1105883a 	add	r2,r2,r4
   181d4:	10000215 	stw	zero,8(r2)
   181d8:	10000015 	stw	zero,0(r2)
   181dc:	f800283a 	ret

000181e0 <alt_alarm_stop>:
   181e0:	0007303a 	rdctl	r3,status
   181e4:	00bfff84 	movi	r2,-2
   181e8:	1884703a 	and	r2,r3,r2
   181ec:	1001703a 	wrctl	status,r2
   181f0:	21400017 	ldw	r5,0(r4)
   181f4:	20800117 	ldw	r2,4(r4)
   181f8:	28800115 	stw	r2,4(r5)
   181fc:	11400015 	stw	r5,0(r2)
   18200:	21000115 	stw	r4,4(r4)
   18204:	21000015 	stw	r4,0(r4)
   18208:	1801703a 	wrctl	status,r3
   1820c:	f800283a 	ret

00018210 <alt_tick>:
   18210:	d0a22017 	ldw	r2,-30592(gp)
   18214:	defffb04 	addi	sp,sp,-20
   18218:	dc000015 	stw	r16,0(sp)
   1821c:	d420a717 	ldw	r16,-32100(gp)
   18220:	10800044 	addi	r2,r2,1
   18224:	dc800215 	stw	r18,8(sp)
   18228:	dc400115 	stw	r17,4(sp)
   1822c:	dfc00415 	stw	ra,16(sp)
   18230:	dcc00315 	stw	r19,12(sp)
   18234:	d0a22015 	stw	r2,-30592(gp)
   18238:	d460a704 	addi	r17,gp,-32100
   1823c:	04800044 	movi	r18,1
   18240:	8440071e 	bne	r16,r17,18260 <alt_tick+0x50>
   18244:	dfc00417 	ldw	ra,16(sp)
   18248:	dcc00317 	ldw	r19,12(sp)
   1824c:	dc800217 	ldw	r18,8(sp)
   18250:	dc400117 	ldw	r17,4(sp)
   18254:	dc000017 	ldw	r16,0(sp)
   18258:	dec00504 	addi	sp,sp,20
   1825c:	f800283a 	ret
   18260:	80800403 	ldbu	r2,16(r16)
   18264:	84c00017 	ldw	r19,0(r16)
   18268:	10000326 	beq	r2,zero,18278 <alt_tick+0x68>
   1826c:	d0a22017 	ldw	r2,-30592(gp)
   18270:	1000011e 	bne	r2,zero,18278 <alt_tick+0x68>
   18274:	80000405 	stb	zero,16(r16)
   18278:	d0e22017 	ldw	r3,-30592(gp)
   1827c:	80800217 	ldw	r2,8(r16)
   18280:	18800836 	bltu	r3,r2,182a4 <alt_tick+0x94>
   18284:	80800403 	ldbu	r2,16(r16)
   18288:	1000061e 	bne	r2,zero,182a4 <alt_tick+0x94>
   1828c:	80800317 	ldw	r2,12(r16)
   18290:	81000517 	ldw	r4,20(r16)
   18294:	103ee83a 	callr	r2
   18298:	1000041e 	bne	r2,zero,182ac <alt_tick+0x9c>
   1829c:	8009883a 	mov	r4,r16
   182a0:	00181e00 	call	181e0 <alt_alarm_stop>
   182a4:	9821883a 	mov	r16,r19
   182a8:	003fe506 	br	18240 <alt_tick+0x30>
   182ac:	80c00217 	ldw	r3,8(r16)
   182b0:	10c5883a 	add	r2,r2,r3
   182b4:	d0e22017 	ldw	r3,-30592(gp)
   182b8:	80800215 	stw	r2,8(r16)
   182bc:	10fff92e 	bgeu	r2,r3,182a4 <alt_tick+0x94>
   182c0:	84800405 	stb	r18,16(r16)
   182c4:	003ff706 	br	182a4 <alt_tick+0x94>

000182c8 <altera_nios2_gen2_irq_init>:
   182c8:	000170fa 	wrctl	ienable,zero
   182cc:	f800283a 	ret

000182d0 <alt_find_dev>:
   182d0:	defffb04 	addi	sp,sp,-20
   182d4:	dcc00315 	stw	r19,12(sp)
   182d8:	dc800215 	stw	r18,8(sp)
   182dc:	dc400115 	stw	r17,4(sp)
   182e0:	dc000015 	stw	r16,0(sp)
   182e4:	dfc00415 	stw	ra,16(sp)
   182e8:	2c000017 	ldw	r16,0(r5)
   182ec:	2027883a 	mov	r19,r4
   182f0:	2823883a 	mov	r17,r5
   182f4:	00184bc0 	call	184bc <strlen>
   182f8:	14800044 	addi	r18,r2,1
   182fc:	8440091e 	bne	r16,r17,18324 <alt_find_dev+0x54>
   18300:	0021883a 	mov	r16,zero
   18304:	8005883a 	mov	r2,r16
   18308:	dfc00417 	ldw	ra,16(sp)
   1830c:	dcc00317 	ldw	r19,12(sp)
   18310:	dc800217 	ldw	r18,8(sp)
   18314:	dc400117 	ldw	r17,4(sp)
   18318:	dc000017 	ldw	r16,0(sp)
   1831c:	dec00504 	addi	sp,sp,20
   18320:	f800283a 	ret
   18324:	81000217 	ldw	r4,8(r16)
   18328:	900d883a 	mov	r6,r18
   1832c:	980b883a 	mov	r5,r19
   18330:	00184640 	call	18464 <memcmp>
   18334:	103ff326 	beq	r2,zero,18304 <alt_find_dev+0x34>
   18338:	84000017 	ldw	r16,0(r16)
   1833c:	003fef06 	br	182fc <alt_find_dev+0x2c>

00018340 <alt_find_file>:
   18340:	defffb04 	addi	sp,sp,-20
   18344:	dc000015 	stw	r16,0(sp)
   18348:	d420a417 	ldw	r16,-32112(gp)
   1834c:	dcc00315 	stw	r19,12(sp)
   18350:	dc400115 	stw	r17,4(sp)
   18354:	dfc00415 	stw	ra,16(sp)
   18358:	dc800215 	stw	r18,8(sp)
   1835c:	2023883a 	mov	r17,r4
   18360:	d4e0a404 	addi	r19,gp,-32112
   18364:	84c0091e 	bne	r16,r19,1838c <alt_find_file+0x4c>
   18368:	0021883a 	mov	r16,zero
   1836c:	8005883a 	mov	r2,r16
   18370:	dfc00417 	ldw	ra,16(sp)
   18374:	dcc00317 	ldw	r19,12(sp)
   18378:	dc800217 	ldw	r18,8(sp)
   1837c:	dc400117 	ldw	r17,4(sp)
   18380:	dc000017 	ldw	r16,0(sp)
   18384:	dec00504 	addi	sp,sp,20
   18388:	f800283a 	ret
   1838c:	84800217 	ldw	r18,8(r16)
   18390:	9009883a 	mov	r4,r18
   18394:	00184bc0 	call	184bc <strlen>
   18398:	100d883a 	mov	r6,r2
   1839c:	9085883a 	add	r2,r18,r2
   183a0:	10bfffc7 	ldb	r2,-1(r2)
   183a4:	10800bd8 	cmpnei	r2,r2,47
   183a8:	1000011e 	bne	r2,zero,183b0 <alt_find_file+0x70>
   183ac:	31bfffc4 	addi	r6,r6,-1
   183b0:	8985883a 	add	r2,r17,r6
   183b4:	10800007 	ldb	r2,0(r2)
   183b8:	10c00be0 	cmpeqi	r3,r2,47
   183bc:	1800011e 	bne	r3,zero,183c4 <alt_find_file+0x84>
   183c0:	1000041e 	bne	r2,zero,183d4 <alt_find_file+0x94>
   183c4:	880b883a 	mov	r5,r17
   183c8:	9009883a 	mov	r4,r18
   183cc:	00184640 	call	18464 <memcmp>
   183d0:	103fe626 	beq	r2,zero,1836c <alt_find_file+0x2c>
   183d4:	84000017 	ldw	r16,0(r16)
   183d8:	003fe206 	br	18364 <alt_find_file+0x24>

000183dc <alt_get_fd>:
   183dc:	00c000b4 	movhi	r3,2
   183e0:	18e4ec04 	addi	r3,r3,-27728
   183e4:	0005883a 	mov	r2,zero
   183e8:	19400017 	ldw	r5,0(r3)
   183ec:	28000a1e 	bne	r5,zero,18418 <alt_get_fd+0x3c>
   183f0:	1006907a 	slli	r3,r2,1
   183f4:	014000b4 	movhi	r5,2
   183f8:	1887883a 	add	r3,r3,r2
   183fc:	180690ba 	slli	r3,r3,2
   18400:	194b883a 	add	r5,r3,r5
   18404:	d0e0a117 	ldw	r3,-32124(gp)
   18408:	2924ec15 	stw	r4,-27728(r5)
   1840c:	1880070e 	bge	r3,r2,1842c <alt_get_fd+0x50>
   18410:	d0a0a115 	stw	r2,-32124(gp)
   18414:	f800283a 	ret
   18418:	10800044 	addi	r2,r2,1
   1841c:	11400818 	cmpnei	r5,r2,32
   18420:	18c00304 	addi	r3,r3,12
   18424:	283ff01e 	bne	r5,zero,183e8 <alt_get_fd+0xc>
   18428:	00bffa04 	movi	r2,-24
   1842c:	f800283a 	ret

00018430 <atexit>:
 */

int
atexit (void (*fn) (void))
{
  return __register_exitproc (__et_atexit, fn, NULL, NULL);
   18430:	200b883a 	mov	r5,r4
   18434:	000f883a 	mov	r7,zero
   18438:	000d883a 	mov	r6,zero
   1843c:	0009883a 	mov	r4,zero
   18440:	00184d81 	jmpi	184d8 <__register_exitproc>

00018444 <exit>:
 * Exit, flushing stdio buffers if necessary.
 */

void
exit (int code)
{
   18444:	defffe04 	addi	sp,sp,-8
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs (int, void *) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
   18448:	000b883a 	mov	r5,zero
{
   1844c:	dc000015 	stw	r16,0(sp)
   18450:	dfc00115 	stw	ra,4(sp)
   18454:	2021883a 	mov	r16,r4
    __call_exitprocs (code, NULL);
   18458:	00185e80 	call	185e8 <__call_exitprocs>
#ifndef WANT_SMALL_STDIO        /* IntelSpecific */
  if (_GLOBAL_REENT->__cleanup)
    (*_GLOBAL_REENT->__cleanup) (_GLOBAL_REENT);
#endif                          /* IntelSpecific */
  _exit (code);
   1845c:	8009883a 	mov	r4,r16
   18460:	00176b00 	call	176b0 <_exit>

00018464 <memcmp>:
{
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  unsigned char *s1 = (unsigned char *) m1;
  unsigned char *s2 = (unsigned char *) m2;

  while (n--)
   18464:	0007883a 	mov	r3,zero
   18468:	30c0021e 	bne	r6,r3,18474 <memcmp+0x10>
	  return *s1 - *s2;
	}
      s1++;
      s2++;
    }
  return 0;
   1846c:	0005883a 	mov	r2,zero
      s2++;
    }

  return 0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   18470:	f800283a 	ret
      if (*s1 != *s2)
   18474:	20c5883a 	add	r2,r4,r3
   18478:	18c00044 	addi	r3,r3,1
   1847c:	28cf883a 	add	r7,r5,r3
   18480:	10800003 	ldbu	r2,0(r2)
   18484:	39ffffc3 	ldbu	r7,-1(r7)
   18488:	11fff726 	beq	r2,r7,18468 <memcmp+0x4>
	  return *s1 - *s2;
   1848c:	11c5c83a 	sub	r2,r2,r7
   18490:	f800283a 	ret

00018494 <memcpy>:
void *
__inhibit_loop_to_libcall
memcpy (void *__restrict dst0,
	const void *__restrict src0,
	size_t len0)
{
   18494:	2005883a 	mov	r2,r4
  char *dst = (char *) dst0;
  char *src = (char *) src0;

  void *save = dst0;

  while (len0--)
   18498:	0007883a 	mov	r3,zero
   1849c:	30c0011e 	bne	r6,r3,184a4 <memcpy+0x10>
  while (len0--)
    *dst++ = *src++;

  return dst0;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   184a0:	f800283a 	ret
      *dst++ = *src++;
   184a4:	28cf883a 	add	r7,r5,r3
   184a8:	39c00003 	ldbu	r7,0(r7)
   184ac:	10c9883a 	add	r4,r2,r3
   184b0:	18c00044 	addi	r3,r3,1
   184b4:	21c00005 	stb	r7,0(r4)
   184b8:	003ff806 	br	1849c <memcpy+0x8>

000184bc <strlen>:
     precise position of the null.  */
  str = (char *) aligned_addr;

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (*str)
   184bc:	2005883a 	mov	r2,r4
   184c0:	10c00007 	ldb	r3,0(r2)
   184c4:	1800021e 	bne	r3,zero,184d0 <strlen+0x14>
    str++;
  return str - start;
}
   184c8:	1105c83a 	sub	r2,r2,r4
   184cc:	f800283a 	ret
    str++;
   184d0:	10800044 	addi	r2,r2,1
   184d4:	003ffa06 	br	184c0 <strlen+0x4>

000184d8 <__register_exitproc>:

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

  p = _GLOBAL_ATEXIT;
   184d8:	d0a09d17 	ldw	r2,-32140(gp)
{
   184dc:	defff904 	addi	sp,sp,-28
   184e0:	dc000015 	stw	r16,0(sp)
  p = _GLOBAL_ATEXIT;
   184e4:	14000d17 	ldw	r16,52(r2)
{
   184e8:	dd400515 	stw	r21,20(sp)
   184ec:	dd000415 	stw	r20,16(sp)
   184f0:	dcc00315 	stw	r19,12(sp)
   184f4:	dc800215 	stw	r18,8(sp)
   184f8:	dfc00615 	stw	ra,24(sp)
   184fc:	dc400115 	stw	r17,4(sp)
   18500:	2025883a 	mov	r18,r4
   18504:	2827883a 	mov	r19,r5
   18508:	302b883a 	mov	r21,r6
   1850c:	3829883a 	mov	r20,r7
  if (p == NULL)
   18510:	8000061e 	bne	r16,zero,1852c <__register_exitproc+0x54>
    {
      _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
   18514:	14000e04 	addi	r16,r2,56
   18518:	14000d15 	stw	r16,52(r2)
#ifdef _REENT_SMALL
      extern struct _on_exit_args * const __on_exit_args _ATTRIBUTE ((weak));
      if (&__on_exit_args != NULL)
   1851c:	d0faaa04 	addi	r3,gp,-5464
   18520:	18000226 	beq	r3,zero,1852c <__register_exitproc+0x54>
	p->_on_exit_args_ptr = __on_exit_args;
   18524:	d0faaa17 	ldw	r3,-5464(gp)
   18528:	10c03015 	stw	r3,192(r2)
#endif	/* def _REENT_SMALL */
    }
  if (p->_ind >= _ATEXIT_SIZE)
   1852c:	84400117 	ldw	r17,4(r16)
   18530:	88800810 	cmplti	r2,r17,32
   18534:	10000a1e 	bne	r2,zero,18560 <__register_exitproc+0x88>
    {
#if !defined (_ATEXIT_DYNAMIC_ALLOC) || !defined (MALLOC_PROVIDED)
#ifndef __SINGLE_THREAD__
      __lock_release_recursive(__atexit_recursive_mutex);
#endif
      return -1;
   18538:	00bfffc4 	movi	r2,-1
  p->_fns[p->_ind++] = fn;
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif
  return 0;
}
   1853c:	dfc00617 	ldw	ra,24(sp)
   18540:	dd400517 	ldw	r21,20(sp)
   18544:	dd000417 	ldw	r20,16(sp)
   18548:	dcc00317 	ldw	r19,12(sp)
   1854c:	dc800217 	ldw	r18,8(sp)
   18550:	dc400117 	ldw	r17,4(sp)
   18554:	dc000017 	ldw	r16,0(sp)
   18558:	dec00704 	addi	sp,sp,28
   1855c:	f800283a 	ret
  if (type != __et_atexit)
   18560:	90001926 	beq	r18,zero,185c8 <__register_exitproc+0xf0>
      args = p->_on_exit_args_ptr;
   18564:	80802217 	ldw	r2,136(r16)
      if (args == NULL)
   18568:	1000091e 	bne	r2,zero,18590 <__register_exitproc+0xb8>
	  if (malloc)
   1856c:	00800074 	movhi	r2,1
   18570:	109c4304 	addi	r2,r2,28940
   18574:	103ff026 	beq	r2,zero,18538 <__register_exitproc+0x60>
	    args = malloc (sizeof * p->_on_exit_args_ptr);
   18578:	01004204 	movi	r4,264
   1857c:	001710c0 	call	1710c <malloc>
	  if (args == NULL)
   18580:	103fed26 	beq	r2,zero,18538 <__register_exitproc+0x60>
	  args->_fntypes = 0;
   18584:	10004015 	stw	zero,256(r2)
	  args->_is_cxa = 0;
   18588:	10004115 	stw	zero,260(r2)
	  p->_on_exit_args_ptr = args;
   1858c:	80802215 	stw	r2,136(r16)
      args->_fnargs[p->_ind] = arg;
   18590:	880890ba 	slli	r4,r17,2
      args->_fntypes |= (1 << p->_ind);
   18594:	00c00044 	movi	r3,1
   18598:	1c46983a 	sll	r3,r3,r17
   1859c:	1109883a 	add	r4,r2,r4
      args->_fnargs[p->_ind] = arg;
   185a0:	25400015 	stw	r21,0(r4)
      args->_fntypes |= (1 << p->_ind);
   185a4:	11404017 	ldw	r5,256(r2)
      if (type == __et_cxa)
   185a8:	94800098 	cmpnei	r18,r18,2
      args->_fntypes |= (1 << p->_ind);
   185ac:	28cab03a 	or	r5,r5,r3
   185b0:	11404015 	stw	r5,256(r2)
      args->_dso_handle[p->_ind] = d;
   185b4:	25002015 	stw	r20,128(r4)
      if (type == __et_cxa)
   185b8:	9000031e 	bne	r18,zero,185c8 <__register_exitproc+0xf0>
	args->_is_cxa |= (1 << p->_ind);
   185bc:	11004117 	ldw	r4,260(r2)
   185c0:	20c6b03a 	or	r3,r4,r3
   185c4:	10c04115 	stw	r3,260(r2)
  p->_fns[p->_ind++] = fn;
   185c8:	88800044 	addi	r2,r17,1
   185cc:	8c400084 	addi	r17,r17,2
   185d0:	882290ba 	slli	r17,r17,2
   185d4:	80800115 	stw	r2,4(r16)
  return 0;
   185d8:	0005883a 	mov	r2,zero
  p->_fns[p->_ind++] = fn;
   185dc:	8461883a 	add	r16,r16,r17
   185e0:	84c00015 	stw	r19,0(r16)
  return 0;
   185e4:	003fd506 	br	1853c <__register_exitproc+0x64>

000185e8 <__call_exitprocs>:
 * otherwise only the handlers from that DSO are called.
 */

void 
__call_exitprocs (int code, void *d)
{
   185e8:	defff604 	addi	sp,sp,-40
   185ec:	dd800615 	stw	r22,24(sp)
  __lock_acquire_recursive(__atexit_recursive_mutex);
#endif

 restart:

  p = _GLOBAL_ATEXIT;
   185f0:	d5a09d17 	ldw	r22,-32140(gp)
{
   185f4:	dd400515 	stw	r21,20(sp)
   185f8:	dd000415 	stw	r20,16(sp)
   185fc:	dfc00915 	stw	ra,36(sp)
   18600:	df000815 	stw	fp,32(sp)
   18604:	ddc00715 	stw	r23,28(sp)
   18608:	dcc00315 	stw	r19,12(sp)
   1860c:	dc800215 	stw	r18,8(sp)
   18610:	dc400115 	stw	r17,4(sp)
   18614:	dc000015 	stw	r16,0(sp)
   18618:	202b883a 	mov	r21,r4
   1861c:	2829883a 	mov	r20,r5
  p = _GLOBAL_ATEXIT;
   18620:	b4400d17 	ldw	r17,52(r22)
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   18624:	88000726 	beq	r17,zero,18644 <__call_exitprocs+0x5c>
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   18628:	8c000117 	ldw	r16,4(r17)
      args = p->_on_exit_args_ptr;
   1862c:	8cc02217 	ldw	r19,136(r17)
      for (n = p->_ind - 1; n >= 0; n--)
   18630:	84bfffc4 	addi	r18,r16,-1
   18634:	802090ba 	slli	r16,r16,2
   18638:	9c2f883a 	add	r23,r19,r16
   1863c:	8c21883a 	add	r16,r17,r16
   18640:	90000c0e 	bge	r18,zero,18674 <__call_exitprocs+0x8c>
    }
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_recursive_mutex);
#endif

}
   18644:	dfc00917 	ldw	ra,36(sp)
   18648:	df000817 	ldw	fp,32(sp)
   1864c:	ddc00717 	ldw	r23,28(sp)
   18650:	dd800617 	ldw	r22,24(sp)
   18654:	dd400517 	ldw	r21,20(sp)
   18658:	dd000417 	ldw	r20,16(sp)
   1865c:	dcc00317 	ldw	r19,12(sp)
   18660:	dc800217 	ldw	r18,8(sp)
   18664:	dc400117 	ldw	r17,4(sp)
   18668:	dc000017 	ldw	r16,0(sp)
   1866c:	dec00a04 	addi	sp,sp,40
   18670:	f800283a 	ret
	  if (d && (!args || args->_dso_handle[n] != d))
   18674:	a0000726 	beq	r20,zero,18694 <__call_exitprocs+0xac>
   18678:	9800041e 	bne	r19,zero,1868c <__call_exitprocs+0xa4>
      for (n = p->_ind - 1; n >= 0; n--)
   1867c:	94bfffc4 	addi	r18,r18,-1
   18680:	bdffff04 	addi	r23,r23,-4
   18684:	843fff04 	addi	r16,r16,-4
   18688:	003fed06 	br	18640 <__call_exitprocs+0x58>
	  if (d && (!args || args->_dso_handle[n] != d))
   1868c:	b8c01f17 	ldw	r3,124(r23)
   18690:	1d3ffa1e 	bne	r3,r20,1867c <__call_exitprocs+0x94>
	  if (n == p->_ind - 1)
   18694:	89000117 	ldw	r4,4(r17)
	  fn = p->_fns[n];
   18698:	80c00117 	ldw	r3,4(r16)
	  if (n == p->_ind - 1)
   1869c:	213fffc4 	addi	r4,r4,-1
   186a0:	24800f1e 	bne	r4,r18,186e0 <__call_exitprocs+0xf8>
	    p->_ind--;
   186a4:	8c800115 	stw	r18,4(r17)
	  if (!fn)
   186a8:	183ff426 	beq	r3,zero,1867c <__call_exitprocs+0x94>
	  ind = p->_ind;
   186ac:	8f000117 	ldw	fp,4(r17)
	  if (!args || (args->_fntypes & i) == 0)
   186b0:	98000526 	beq	r19,zero,186c8 <__call_exitprocs+0xe0>
	  i = 1 << n;
   186b4:	00800044 	movi	r2,1
   186b8:	148c983a 	sll	r6,r2,r18
	  if (!args || (args->_fntypes & i) == 0)
   186bc:	99004017 	ldw	r4,256(r19)
   186c0:	3108703a 	and	r4,r6,r4
   186c4:	2000081e 	bne	r4,zero,186e8 <__call_exitprocs+0x100>
	    fn ();
   186c8:	183ee83a 	callr	r3
	  if (ind != p->_ind || *lastp != p)
   186cc:	89000117 	ldw	r4,4(r17)
   186d0:	b0c00d17 	ldw	r3,52(r22)
   186d4:	273fd21e 	bne	r4,fp,18620 <__call_exitprocs+0x38>
   186d8:	88ffe826 	beq	r17,r3,1867c <__call_exitprocs+0x94>
   186dc:	003fd006 	br	18620 <__call_exitprocs+0x38>
	    p->_fns[n] = NULL;
   186e0:	80000115 	stw	zero,4(r16)
   186e4:	003ff006 	br	186a8 <__call_exitprocs+0xc0>
	  else if ((args->_is_cxa & i) == 0)
   186e8:	99404117 	ldw	r5,260(r19)
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   186ec:	b93fff17 	ldw	r4,-4(r23)
	  else if ((args->_is_cxa & i) == 0)
   186f0:	314c703a 	and	r6,r6,r5
   186f4:	3000041e 	bne	r6,zero,18708 <__call_exitprocs+0x120>
	    (*((void (*)(int, void *)) fn))(code, args->_fnargs[n]);
   186f8:	200b883a 	mov	r5,r4
   186fc:	a809883a 	mov	r4,r21
   18700:	183ee83a 	callr	r3
   18704:	003ff106 	br	186cc <__call_exitprocs+0xe4>
	    (*((void (*)(void *)) fn))(args->_fnargs[n]);
   18708:	183ee83a 	callr	r3
   1870c:	003fef06 	br	186cc <__call_exitprocs+0xe4>
   18710:	0201ffff 	0x201ffff
   18714:	ffff0000 	call	ffff000 <_gp+0xffddaa8>
   18718:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   1871c:	0201ffff 	0x201ffff
   18720:	ffff0000 	call	ffff000 <_gp+0xffddaa8>
   18724:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   18728:	0001ffff 	0x1ffff
   1872c:	0401ffff 	0x401ffff
   18730:	00010000 	call	1000 <__alt_mem_onchip_mem-0xf000>
   18734:	0201ffff 	0x201ffff
   18738:	ffff0000 	call	ffff000 <_gp+0xffddaa8>
   1873c:	00000201 	jmpi	20 <__alt_mem_onchip_mem-0xffe0>
   18740:	010d00ff 	0x10d00ff
   18744:	01010002 	0x1010002
	...
   18750:	010d00ff 	0x10d00ff
   18754:	01010004 	movi	r4,1024
   18758:	00000100 	call	10 <__alt_mem_onchip_mem-0xfff0>
   1875c:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   18760:	011100ff 	0x11100ff
   18764:	01010004 	movi	r4,1024
   18768:	7f000105 	stb	fp,4(r15)
   1876c:	007d0000 	call	7d000 <_gp+0x5baa8>
   18770:	00000000 	call	0 <__alt_mem_onchip_mem-0x10000>
   18774:	01883a00 	call	1883a0 <_gp+0x166e48>
   18778:	00011edc 	xori	zero,zero,1147
   1877c:	000126fc 	xorhi	zero,zero,1179
   18780:	0001289c 	xori	zero,zero,1186
   18784:	00014d0c 	andi	zero,zero,1332
   18788:	00012078 	rdprs	zero,zero,1153
   1878c:	00012708 	cmpgei	zero,zero,1180
   18790:	000128a8 	cmpgeui	zero,zero,1186
